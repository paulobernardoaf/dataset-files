<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\mips\hevcdsp_msa.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mips/generic_macros_msa.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/mips/hevcdsp_mips.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/mips/hevc_macros_msa.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name> <name><name>ff_hevc_mask_arr</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">2</literal></expr>]</index></name></type> <name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><call><name>aligned</name><argument_list>(<argument><expr><literal type="number">0x40</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">20</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_copy_4w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">2</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_ilvr_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src1</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in0</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D2</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_W2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in0</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>in1</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>height</name> <operator>%</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>, <decl><type ref="prev"/><name>in2</name></decl>, <decl><type ref="prev"/><name>in3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>,

<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_W4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>,

<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_copy_6w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>, <decl><type ref="prev"/><name>in2</name></decl>, <decl><type ref="prev"/><name>in3</name></decl>, <decl><type ref="prev"/><name>in4</name></decl>, <decl><type ref="prev"/><name>in5</name></decl>, <decl><type ref="prev"/><name>in6</name></decl>, <decl><type ref="prev"/><name>in7</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>,

<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST12x8_UB</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_copy_8w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">2</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in0</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>in1</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>, <decl><type ref="prev"/><name>in2</name></decl>, <decl><type ref="prev"/><name>in3</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">6</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>, <decl><type ref="prev"/><name>in2</name></decl>, <decl><type ref="prev"/><name>in3</name></decl>, <decl><type ref="prev"/><name>in4</name></decl>, <decl><type ref="prev"/><name>in5</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB6</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in4</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>in5</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH6</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>height</name> <operator>%</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>, <decl><type ref="prev"/><name>in2</name></decl>, <decl><type ref="prev"/><name>in3</name></decl>, <decl><type ref="prev"/><name>in4</name></decl>, <decl><type ref="prev"/><name>in5</name></decl>, <decl><type ref="prev"/><name>in6</name></decl>, <decl><type ref="prev"/><name>in7</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>,

<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>,

<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH8</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_copy_12w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>, <decl><type ref="prev"/><name>in0_r</name></decl>, <decl><type ref="prev"/><name>in1_r</name></decl>, <decl><type ref="prev"/><name>in2_r</name></decl>, <decl><type ref="prev"/><name>in3_r</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_W2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in0</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>in1</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>,

<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_W2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>in0</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>in1</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_copy_16w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0_r</name></decl>, <decl><type ref="prev"/><name>in1_r</name></decl>, <decl><type ref="prev"/><name>in2_r</name></decl>, <decl><type ref="prev"/><name>in3_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0_l</name></decl>, <decl><type ref="prev"/><name>in1_l</name></decl>, <decl><type ref="prev"/><name>in2_l</name></decl>, <decl><type ref="prev"/><name>in3_l</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">12</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>, <decl><type ref="prev"/><name>src11</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0_r</name></decl>, <decl><type ref="prev"/><name>in1_r</name></decl>, <decl><type ref="prev"/><name>in2_r</name></decl>, <decl><type ref="prev"/><name>in3_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0_l</name></decl>, <decl><type ref="prev"/><name>in1_l</name></decl>, <decl><type ref="prev"/><name>in2_l</name></decl>, <decl><type ref="prev"/><name>in3_l</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>,

<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>,

<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>,

<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>,

<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <operator>(</operator><name>height</name> <operator>%</operator> <literal type="number">8</literal><operator>)</operator></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0_r</name></decl>, <decl><type ref="prev"/><name>in1_r</name></decl>, <decl><type ref="prev"/><name>in2_r</name></decl>, <decl><type ref="prev"/><name>in3_r</name></decl>, <decl><type ref="prev"/><name>in0_l</name></decl>, <decl><type ref="prev"/><name>in1_l</name></decl>, <decl><type ref="prev"/><name>in2_l</name></decl>, <decl><type ref="prev"/><name>in3_l</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>,

<argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>in0_r</name></expr></argument>,

<argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>in0_l</name></expr></argument>,

<argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>in0_r</name></expr></argument>,

<argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>in0_l</name></expr></argument>,

<argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_copy_24w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0_r</name></decl>, <decl><type ref="prev"/><name>in1_r</name></decl>, <decl><type ref="prev"/><name>in2_r</name></decl>, <decl><type ref="prev"/><name>in3_r</name></decl>, <decl><type ref="prev"/><name>in0_l</name></decl>, <decl><type ref="prev"/><name>in1_l</name></decl>, <decl><type ref="prev"/><name>in2_l</name></decl>, <decl><type ref="prev"/><name>in3_l</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><operator>(</operator><name>src</name> <operator>+</operator> <literal type="number">16</literal><operator>)</operator></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>,

<argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>,

<argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>,

<argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">16</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_copy_32w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0_r</name></decl>, <decl><type ref="prev"/><name>in1_r</name></decl>, <decl><type ref="prev"/><name>in2_r</name></decl>, <decl><type ref="prev"/><name>in3_r</name></decl>, <decl><type ref="prev"/><name>in0_l</name></decl>, <decl><type ref="prev"/><name>in1_l</name></decl>, <decl><type ref="prev"/><name>in2_l</name></decl>, <decl><type ref="prev"/><name>in3_l</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><operator>(</operator><name>src</name> <operator>+</operator> <literal type="number">16</literal><operator>)</operator></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>,

<argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>,

<argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>,

<argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>,

<argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_copy_48w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>, <decl><type ref="prev"/><name>src11</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0_r</name></decl>, <decl><type ref="prev"/><name>in1_r</name></decl>, <decl><type ref="prev"/><name>in2_r</name></decl>, <decl><type ref="prev"/><name>in3_r</name></decl>, <decl><type ref="prev"/><name>in4_r</name></decl>, <decl><type ref="prev"/><name>in5_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0_l</name></decl>, <decl><type ref="prev"/><name>in1_l</name></decl>, <decl><type ref="prev"/><name>in2_l</name></decl>, <decl><type ref="prev"/><name>in3_l</name></decl>, <decl><type ref="prev"/><name>in4_l</name></decl>, <decl><type ref="prev"/><name>in5_l</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>in4_r</name></expr></argument>, <argument><expr><name>in5_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>in4_l</name></expr></argument>, <argument><expr><name>in5_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in4_r</name></expr></argument>, <argument><expr><name>in5_r</name></expr></argument>, <argument><expr><name>in4_l</name></expr></argument>, <argument><expr><name>in5_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH6</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH6</name><argument_list>(<argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><name>in4_r</name></expr></argument>, <argument><expr><name>in4_l</name></expr></argument>, <argument><expr><name>in5_r</name></expr></argument>, <argument><expr><name>in5_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>,

<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>,

<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>in4_r</name></expr></argument>, <argument><expr><name>in5_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>in4_l</name></expr></argument>, <argument><expr><name>in5_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in4_r</name></expr></argument>, <argument><expr><name>in5_r</name></expr></argument>, <argument><expr><name>in4_l</name></expr></argument>, <argument><expr><name>in5_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH6</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH6</name><argument_list>(<argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><name>in4_r</name></expr></argument>, <argument><expr><name>in4_l</name></expr></argument>, <argument><expr><name>in5_r</name></expr></argument>, <argument><expr><name>in5_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_copy_64w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>in0_r</name></decl>, <decl><type ref="prev"/><name>in1_r</name></decl>, <decl><type ref="prev"/><name>in2_r</name></decl>, <decl><type ref="prev"/><name>in3_r</name></decl>, <decl><type ref="prev"/><name>in0_l</name></decl>, <decl><type ref="prev"/><name>in1_l</name></decl>, <decl><type ref="prev"/><name>in2_l</name></decl>, <decl><type ref="prev"/><name>in3_l</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">32</literal><operator>)</operator></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>,

<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>,

<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SLLI_4V</name><argument_list>(<argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in0_r</name></expr></argument>, <argument><expr><name>in0_l</name></expr></argument>, <argument><expr><name>in1_r</name></expr></argument>, <argument><expr><name>in1_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>in2_r</name></expr></argument>, <argument><expr><name>in2_l</name></expr></argument>, <argument><expr><name>in3_r</name></expr></argument>, <argument><expr><name>in3_l</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">32</literal><operator>)</operator></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_8t_4w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_8t_8w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_8t_12w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>, <decl><type ref="prev"/><name>mask6</name></decl>, <decl><type ref="prev"/><name>mask7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask4</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask4</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask6</name> <operator>=</operator> <name>mask4</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask7</name> <operator>=</operator> <name>mask4</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res0</name> <operator>=</operator> <call><name>__msa_copy_s_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst4</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res1</name> <operator>=</operator> <call><name>__msa_copy_s_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst4</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res2</name> <operator>=</operator> <call><name>__msa_copy_s_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res3</name> <operator>=</operator> <call><name>__msa_copy_s_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst5</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD4</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_8t_16w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_8t_24w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>, <decl><type ref="prev"/><name>mask6</name></decl>, <decl><type ref="prev"/><name>mask7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">10</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask6</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">12</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask7</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">14</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_8t_32w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>, <decl><type ref="prev"/><name>mask6</name></decl>, <decl><type ref="prev"/><name>mask7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">10</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask6</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">12</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask7</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">14</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src2</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_8t_48w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>, <decl><type ref="prev"/><name>mask6</name></decl>, <decl><type ref="prev"/><name>mask7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">10</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask6</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">12</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask7</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">14</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src3</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">32</literal><operator>)</operator></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_8t_64w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>, <decl><type ref="prev"/><name>mask6</name></decl>, <decl><type ref="prev"/><name>mask7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">10</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask6</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">12</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask7</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">14</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src4</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">56</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst6</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst7</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">56</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_8t_4w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>, <decl><type ref="prev"/><name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>, <decl><type ref="prev"/><name>src13</name></decl>, <decl><type ref="prev"/><name>src14</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src1110_r</name></decl>, <decl><type ref="prev"/><name>src1211_r</name></decl>, <decl><type ref="prev"/><name>src1312_r</name></decl>, <decl><type ref="prev"/><name>src1413_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>, <decl><type ref="prev"/><name>src10998</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src12111110</name></decl>, <decl><type ref="prev"/><name>src14131312</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10</name></decl>, <decl><type ref="prev"/><name>dst32</name></decl>, <decl><type ref="prev"/><name>dst54</name></decl>, <decl><type ref="prev"/><name>dst76</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>,

<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_D3_SB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>,

<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>,

<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>,

<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>,

<argument><expr><name>src1110_r</name></expr></argument>, <argument><expr><name>src1211_r</name></expr></argument>, <argument><expr><name>src1312_r</name></expr></argument>, <argument><expr><name>src1413_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_D4_SB</name><argument_list>(<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>,

<argument><expr><name>src1211_r</name></expr></argument>, <argument><expr><name>src1110_r</name></expr></argument>, <argument><expr><name>src1413_r</name></expr></argument>, <argument><expr><name>src1312_r</name></expr></argument>,

<argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>, <argument><expr><name>src12111110</name></expr></argument>, <argument><expr><name>src14131312</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>, <argument><expr><name>src12111110</name></expr></argument>, <argument><expr><name>src14131312</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst32</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst54</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>, <argument><expr><name>src12111110</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst76</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>, <argument><expr><name>src12111110</name></expr></argument>, <argument><expr><name>src14131312</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src2110</name> <operator>=</operator> <name>src10998</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src4332</name> <operator>=</operator> <name>src12111110</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src6554</name> <operator>=</operator> <name>src14131312</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src6</name> <operator>=</operator> <name>src14</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_8t_8w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>,

<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>,

<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src54_r</name> <operator>=</operator> <name>src98_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src65_r</name> <operator>=</operator> <name>src109_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src6</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_8t_12w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src76_l</name></decl>, <decl><type ref="prev"/><name>src98_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>, <decl><type ref="prev"/><name>src65_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>src109_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>, <decl><type ref="prev"/><name>src10998</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_l</name></decl>, <decl><type ref="prev"/><name>dst1_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>,

<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>,

<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_D3_SB</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>,

<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>,

<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>,

<argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>src98_l</name></expr></argument>, <argument><expr><name>src109_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src109_l</name></expr></argument>, <argument><expr><name>src98_l</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src54_r</name> <operator>=</operator> <name>src98_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src65_r</name> <operator>=</operator> <name>src109_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src2110</name> <operator>=</operator> <name>src6554</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src4332</name> <operator>=</operator> <name>src8776</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src6554</name> <operator>=</operator> <name>src10998</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src6</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_8t_16multx4mult_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>width</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src_tmp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst_tmp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>, <decl><type ref="prev"/><name>cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src76_l</name></decl>, <decl><type ref="prev"/><name>src98_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>, <decl><type ref="prev"/><name>src65_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>src109_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_l</name></decl>, <decl><type ref="prev"/><name>dst1_l</name></decl>, <decl><type ref="prev"/><name>dst2_l</name></decl>, <decl><type ref="prev"/><name>dst3_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <name>width</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><name>src_tmp</name> <operator>=</operator> <name>src</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_tmp</name> <operator>=</operator> <name>dst</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>,

<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>,

<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>,

<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>,

<argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>src98_l</name></expr></argument>, <argument><expr><name>src109_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src98_l</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>src109_l</name></expr></argument>,

<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst_tmp</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><name>dst_tmp</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src54_r</name> <operator>=</operator> <name>src98_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src65_r</name> <operator>=</operator> <name>src109_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_l</name> <operator>=</operator> <name>src54_l</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src32_l</name> <operator>=</operator> <name>src76_l</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src54_l</name> <operator>=</operator> <name>src98_l</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src21_l</name> <operator>=</operator> <name>src65_l</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src43_l</name> <operator>=</operator> <name>src87_l</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src65_l</name> <operator>=</operator> <name>src109_l</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src6</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_8t_16w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hevc_vt_8t_16multx4mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_8t_24w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hevc_vt_8t_16multx4mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>hevc_vt_8t_8w_msa</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_8t_32w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hevc_vt_8t_16multx4mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_8t_48w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hevc_vt_8t_16multx4mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_8t_64w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hevc_vt_8t_16multx4mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_8t_4w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt_h0</name></decl>, <decl><type ref="prev"/><name>filt_h1</name></decl>, <decl><type ref="prev"/><name>filt_h2</name></decl>, <decl><type ref="prev"/><name>filt_h3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>, <decl><type ref="prev"/><name>vec12</name></decl>, <decl><type ref="prev"/><name>vec13</name></decl>, <decl><type ref="prev"/><name>vec14</name></decl>, <decl><type ref="prev"/><name>vec15</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst30</name></decl>, <decl><type ref="prev"/><name>dst41</name></decl>, <decl><type ref="prev"/><name>dst52</name></decl>, <decl><type ref="prev"/><name>dst63</name></decl>, <decl><type ref="prev"/><name>dst66</name></decl>, <decl><type ref="prev"/><name>dst97</name></decl>, <decl><type ref="prev"/><name>dst108</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_r</name></decl>, <decl><type ref="prev"/><name>dst32_r</name></decl>, <decl><type ref="prev"/><name>dst54_r</name></decl>, <decl><type ref="prev"/><name>dst76_r</name></decl>, <decl><type ref="prev"/><name>dst98_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst21_r</name></decl>, <decl><type ref="prev"/><name>dst43_r</name></decl>, <decl><type ref="prev"/><name>dst65_r</name></decl>, <decl><type ref="prev"/><name>dst87_r</name></decl>, <decl><type ref="prev"/><name>dst109_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator> <operator>+</operator> <literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNPCK_R_SB_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filter_vec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_W4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec12</name></expr></argument>, <argument><expr><name>vec13</name></expr></argument>, <argument><expr><name>vec14</name></expr></argument>, <argument><expr><name>vec15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst30</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst30</name></expr></argument>, <argument><expr><name>dst30</name></expr></argument>, <argument><expr><name>dst30</name></expr></argument>, <argument><expr><name>dst30</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst41</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst41</name></expr></argument>, <argument><expr><name>dst41</name></expr></argument>, <argument><expr><name>dst41</name></expr></argument>, <argument><expr><name>dst41</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst52</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst52</name></expr></argument>, <argument><expr><name>dst52</name></expr></argument>, <argument><expr><name>dst52</name></expr></argument>, <argument><expr><name>dst52</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst63</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec12</name></expr></argument>, <argument><expr><name>vec13</name></expr></argument>, <argument><expr><name>vec14</name></expr></argument>, <argument><expr><name>vec15</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst63</name></expr></argument>, <argument><expr><name>dst63</name></expr></argument>, <argument><expr><name>dst63</name></expr></argument>, <argument><expr><name>dst63</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst41</name></expr></argument>, <argument><expr><name>dst30</name></expr></argument>, <argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst52</name></expr></argument>, <argument><expr><name>dst41</name></expr></argument>, <argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst63</name></expr></argument>, <argument><expr><name>dst52</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst66</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_splati_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst63</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst97</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst108</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst97</name></expr></argument>, <argument><expr><name>dst97</name></expr></argument>, <argument><expr><name>dst97</name></expr></argument>, <argument><expr><name>dst97</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst108</name></expr></argument>, <argument><expr><name>dst108</name></expr></argument>, <argument><expr><name>dst108</name></expr></argument>, <argument><expr><name>dst108</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst76_r</name> <operator>=</operator> <call><name>__msa_ilvr_h</name><argument_list>(<argument><expr><name>dst97</name></expr></argument>, <argument><expr><name>dst66</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst108</name></expr></argument>, <argument><expr><name>dst97</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>dst109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst66</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_splati_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst97</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst98_r</name> <operator>=</operator> <call><name>__msa_ilvr_h</name><argument_list>(<argument><expr><name>dst66</name></expr></argument>, <argument><expr><name>dst108</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <call><name>HEVC_FILT_8TAP</name><argument_list>(<argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>,

<argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <call><name>HEVC_FILT_8TAP</name><argument_list>(<argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>,

<argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <call><name>HEVC_FILT_8TAP</name><argument_list>(<argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>dst98_r</name></expr></argument>,

<argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <call><name>HEVC_FILT_8TAP</name><argument_list>(<argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>dst109_r</name></expr></argument>,

<argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H2_SW</name><argument_list>(<argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10_r</name> <operator>=</operator> <name>dst54_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst32_r</name> <operator>=</operator> <name>dst76_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst54_r</name> <operator>=</operator> <name>dst98_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst21_r</name> <operator>=</operator> <name>dst65_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst43_r</name> <operator>=</operator> <name>dst87_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst65_r</name> <operator>=</operator> <name>dst109_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst66</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_splati_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst108</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_8t_8multx1mult_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>width</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>, <decl><type ref="prev"/><name>cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src_tmp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst_tmp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt_h0</name></decl>, <decl><type ref="prev"/><name>filt_h1</name></decl>, <decl><type ref="prev"/><name>filt_h2</name></decl>, <decl><type ref="prev"/><name>filt_h3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>, <decl><type ref="prev"/><name>vec12</name></decl>, <decl><type ref="prev"/><name>vec13</name></decl>, <decl><type ref="prev"/><name>vec14</name></decl>, <decl><type ref="prev"/><name>vec15</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst0_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_r</name></decl>, <decl><type ref="prev"/><name>dst32_r</name></decl>, <decl><type ref="prev"/><name>dst54_r</name></decl>, <decl><type ref="prev"/><name>dst76_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_l</name></decl>, <decl><type ref="prev"/><name>dst32_l</name></decl>, <decl><type ref="prev"/><name>dst54_l</name></decl>, <decl><type ref="prev"/><name>dst76_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator> <operator>+</operator> <literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNPCK_R_SB_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filter_vec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_W4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <name>width</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><name>src_tmp</name> <operator>=</operator> <name>src</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_tmp</name> <operator>=</operator> <name>dst</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec12</name></expr></argument>, <argument><expr><name>vec13</name></expr></argument>, <argument><expr><name>vec14</name></expr></argument>, <argument><expr><name>vec15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec12</name></expr></argument>, <argument><expr><name>vec13</name></expr></argument>, <argument><expr><name>vec14</name></expr></argument>, <argument><expr><name>vec15</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst6</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><name>src7</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src7</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_xori_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>src7</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,

<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst7</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,

<argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst10_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>dst76_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <call><name>HEVC_FILT_8TAP</name><argument_list>(<argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>,

<argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <call><name>HEVC_FILT_8TAP</name><argument_list>(<argument><expr><name>dst10_l</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>, <argument><expr><name>dst76_l</name></expr></argument>,

<argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>&gt;&gt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>&gt;&gt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <operator>(</operator><name>v4i32</name><operator>)</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>dst0_l</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SW</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>dst1</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>dst2</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>dst3</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>dst4</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>dst5</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>dst6</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst6</name> <operator>=</operator> <name>dst7</name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_8t_8w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_8t_8multx1mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_8t_12w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src_tmp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst_tmp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>, <decl><type ref="prev"/><name>mask6</name></decl>, <decl><type ref="prev"/><name>mask7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>, <decl><type ref="prev"/><name>vec12</name></decl>, <decl><type ref="prev"/><name>vec13</name></decl>, <decl><type ref="prev"/><name>vec14</name></decl>, <decl><type ref="prev"/><name>vec15</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>, <decl><type ref="prev"/><name>filt_h0</name></decl>, <decl><type ref="prev"/><name>filt_h1</name></decl>, <decl><type ref="prev"/><name>filt_h2</name></decl>, <decl><type ref="prev"/><name>filt_h3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst30</name></decl>, <decl><type ref="prev"/><name>dst41</name></decl>, <decl><type ref="prev"/><name>dst52</name></decl>, <decl><type ref="prev"/><name>dst63</name></decl>, <decl><type ref="prev"/><name>dst66</name></decl>, <decl><type ref="prev"/><name>dst97</name></decl>, <decl><type ref="prev"/><name>dst108</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_r</name></decl>, <decl><type ref="prev"/><name>dst32_r</name></decl>, <decl><type ref="prev"/><name>dst54_r</name></decl>, <decl><type ref="prev"/><name>dst76_r</name></decl>, <decl><type ref="prev"/><name>dst98_r</name></decl>, <decl><type ref="prev"/><name>dst21_r</name></decl>, <decl><type ref="prev"/><name>dst43_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst65_r</name></decl>, <decl><type ref="prev"/><name>dst87_r</name></decl>, <decl><type ref="prev"/><name>dst109_r</name></decl>, <decl><type ref="prev"/><name>dst10_l</name></decl>, <decl><type ref="prev"/><name>dst32_l</name></decl>, <decl><type ref="prev"/><name>dst54_l</name></decl>, <decl><type ref="prev"/><name>dst76_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst0_l</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator> <operator>+</operator> <literal type="number">3</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNPCK_R_SB_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filter_vec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_W4_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>src_tmp</name> <operator>=</operator> <name>src</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_tmp</name> <operator>=</operator> <name>dst</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>,

<argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec12</name></expr></argument>, <argument><expr><name>vec13</name></expr></argument>, <argument><expr><name>vec14</name></expr></argument>,

<argument><expr><name>vec15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>,

<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec12</name></expr></argument>, <argument><expr><name>vec13</name></expr></argument>, <argument><expr><name>vec14</name></expr></argument>, <argument><expr><name>vec15</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>,

<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>,

<argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>,

<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>,

<argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst6</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>,

<argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><name>src7</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src7</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_xori_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>src7</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>,

<argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst7</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>,

<argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst10_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>dst76_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <call><name>HEVC_FILT_8TAP</name><argument_list>(<argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>,

<argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <call><name>HEVC_FILT_8TAP</name><argument_list>(<argument><expr><name>dst10_l</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>, <argument><expr><name>dst76_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>,

<argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>&gt;&gt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>&gt;&gt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <operator>(</operator><name>v4i32</name><operator>)</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>dst0_l</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SW</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>dst1</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>dst2</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>dst3</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>dst4</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>dst5</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>dst6</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst6</name> <operator>=</operator> <name>dst7</name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask4</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask4</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask6</name> <operator>=</operator> <name>mask4</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask7</name> <operator>=</operator> <name>mask4</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>,

<argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>, <argument><expr><name>vec12</name></expr></argument>, <argument><expr><name>vec13</name></expr></argument>, <argument><expr><name>vec14</name></expr></argument>,

<argument><expr><name>vec15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst30</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst30</name></expr></argument>,

<argument><expr><name>dst30</name></expr></argument>, <argument><expr><name>dst30</name></expr></argument>, <argument><expr><name>dst30</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst41</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst41</name></expr></argument>,

<argument><expr><name>dst41</name></expr></argument>, <argument><expr><name>dst41</name></expr></argument>, <argument><expr><name>dst41</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst52</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst52</name></expr></argument>,

<argument><expr><name>dst52</name></expr></argument>, <argument><expr><name>dst52</name></expr></argument>, <argument><expr><name>dst52</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst63</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec12</name></expr></argument>, <argument><expr><name>vec13</name></expr></argument>, <argument><expr><name>vec14</name></expr></argument>, <argument><expr><name>vec15</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst63</name></expr></argument>,

<argument><expr><name>dst63</name></expr></argument>, <argument><expr><name>dst63</name></expr></argument>, <argument><expr><name>dst63</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst41</name></expr></argument>, <argument><expr><name>dst30</name></expr></argument>, <argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst52</name></expr></argument>, <argument><expr><name>dst41</name></expr></argument>, <argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst63</name></expr></argument>, <argument><expr><name>dst52</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst66</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_splati_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst63</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>,

<argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B4_SB</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>mask6</name></expr></argument>, <argument><expr><name>mask7</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>,

<argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst97</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst108</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst97</name></expr></argument>,

<argument><expr><name>dst97</name></expr></argument>, <argument><expr><name>dst97</name></expr></argument>, <argument><expr><name>dst97</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>dst108</name></expr></argument>,

<argument><expr><name>dst108</name></expr></argument>, <argument><expr><name>dst108</name></expr></argument>, <argument><expr><name>dst108</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst76_r</name> <operator>=</operator> <call><name>__msa_ilvr_h</name><argument_list>(<argument><expr><name>dst97</name></expr></argument>, <argument><expr><name>dst66</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst108</name></expr></argument>, <argument><expr><name>dst97</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>dst109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst66</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_splati_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst97</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst98_r</name> <operator>=</operator> <call><name>__msa_ilvr_h</name><argument_list>(<argument><expr><name>dst66</name></expr></argument>, <argument><expr><name>dst108</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <call><name>HEVC_FILT_8TAP</name><argument_list>(<argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>,

<argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <call><name>HEVC_FILT_8TAP</name><argument_list>(<argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>,

<argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <call><name>HEVC_FILT_8TAP</name><argument_list>(<argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>dst98_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>,

<argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <call><name>HEVC_FILT_8TAP</name><argument_list>(<argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>dst109_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>,

<argument><expr><name>filt_h1</name></expr></argument>, <argument><expr><name>filt_h2</name></expr></argument>, <argument><expr><name>filt_h3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H2_SW</name><argument_list>(<argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10_r</name> <operator>=</operator> <name>dst54_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst32_r</name> <operator>=</operator> <name>dst76_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst54_r</name> <operator>=</operator> <name>dst98_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst21_r</name> <operator>=</operator> <name>dst65_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst43_r</name> <operator>=</operator> <name>dst87_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst65_r</name> <operator>=</operator> <name>dst109_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst66</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_splati_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst108</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_8t_16w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_8t_8multx1mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_8t_24w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_8t_8multx1mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_8t_32w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_8t_8multx1mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_8t_48w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_8t_8multx1mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_8t_64w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_8t_8multx1mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_4t_4x2_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D2</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_4t_4x4_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_4t_4x8multiple_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_4t_4w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><literal type="number">2</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hz_4t_4x2_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hz_4t_4x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>height</name> <operator>%</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hz_4t_4x8multiple_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_4t_6w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>dst_val0</name></decl>, <decl><type ref="prev"/><name>dst_val1</name></decl>, <decl><type ref="prev"/><name>dst_val2</name></decl>, <decl><type ref="prev"/><name>dst_val3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>dst_val_int0</name></decl>, <decl><type ref="prev"/><name>dst_val_int1</name></decl>, <decl><type ref="prev"/><name>dst_val_int2</name></decl>, <decl><type ref="prev"/><name>dst_val_int3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val0</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val1</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val2</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val3</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val_int0</name> <operator>=</operator> <call><name>__msa_copy_u_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst0</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val_int1</name> <operator>=</operator> <call><name>__msa_copy_u_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst1</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val_int2</name> <operator>=</operator> <call><name>__msa_copy_u_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst2</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val_int3</name> <operator>=</operator> <call><name>__msa_copy_u_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst3</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dst_val0</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SW</name><argument_list>(<argument><expr><name>dst_val_int0</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dst_val1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SW</name><argument_list>(<argument><expr><name>dst_val_int1</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dst_val2</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SW</name><argument_list>(<argument><expr><name>dst_val_int2</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dst_val3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SW</name><argument_list>(<argument><expr><name>dst_val_int3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_4t_8x2multiple_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_4t_8x4multiple_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_4t_8w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><literal type="number">2</literal> <operator>==</operator> <name>height</name> <operator>||</operator> <literal type="number">6</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hz_4t_8x2multiple_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hz_4t_8x4multiple_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_4t_12w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask2</name> <init>= <expr><block>{

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">28</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_4t_16w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst6</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst7</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_4t_24w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst_tmp</name> <init>= <expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>mask00</name></decl>, <decl><type ref="prev"/><name>mask11</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask00</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask11</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">10</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask00</name></expr></argument>, <argument><expr><name>mask11</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask00</name></expr></argument>, <argument><expr><name>mask11</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask00</name></expr></argument>, <argument><expr><name>mask11</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask00</name></expr></argument>, <argument><expr><name>mask11</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst_tmp</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hz_4t_32w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">10</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src2</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,

<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_4x2_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D2</name><argument_list>(<argument><expr><name>dst10</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_4x4_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10</name></decl>, <decl><type ref="prev"/><name>dst32</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,

<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_D3_SB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>,

<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst32</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_4x8_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>, <decl><type ref="prev"/><name>src10998</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10</name></decl>, <decl><type ref="prev"/><name>dst32</name></decl>, <decl><type ref="prev"/><name>dst54</name></decl>, <decl><type ref="prev"/><name>dst76</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src2110</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src21_r</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src10_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src2110</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_xori_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>src2110</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>,

<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>,

<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_D4_SB</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>,

<argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst32</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst54</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst76</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_4x16_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>, <decl><type ref="prev"/><name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10998</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10</name></decl>, <decl><type ref="prev"/><name>dst32</name></decl>, <decl><type ref="prev"/><name>dst54</name></decl>, <decl><type ref="prev"/><name>dst76</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src2110</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src21_r</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src10_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src2110</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_xori_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>src2110</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>,

<argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,

<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_D4_SB</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>,

<argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst32</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst54</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst76</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src2</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src2110</name> <operator>=</operator> <name>src10998</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>,

<argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,

<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_D4_SB</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>,

<argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst32</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst54</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst76</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>, <argument><expr><name>dst76</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_4w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><literal type="number">2</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_vt_4t_4x2_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_vt_4t_4x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">8</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_vt_4t_4x8_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">16</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_vt_4t_4x16_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_6w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>dst_val_int0</name></decl>, <decl><type ref="prev"/><name>dst_val_int1</name></decl>, <decl><type ref="prev"/><name>dst_val_int2</name></decl>, <decl><type ref="prev"/><name>dst_val_int3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>dst_val0</name></decl>, <decl><type ref="prev"/><name>dst_val1</name></decl>, <decl><type ref="prev"/><name>dst_val2</name></decl>, <decl><type ref="prev"/><name>dst_val3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val0</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst0_r</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val1</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst1_r</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val2</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst2_r</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val3</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst3_r</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val_int0</name> <operator>=</operator> <call><name>__msa_copy_u_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst0_r</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val_int1</name> <operator>=</operator> <call><name>__msa_copy_u_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst1_r</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val_int2</name> <operator>=</operator> <call><name>__msa_copy_u_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst2_r</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_val_int3</name> <operator>=</operator> <call><name>__msa_copy_u_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst3_r</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dst_val0</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SW</name><argument_list>(<argument><expr><name>dst_val_int0</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dst_val1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SW</name><argument_list>(<argument><expr><name>dst_val_int1</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dst_val2</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SW</name><argument_list>(<argument><expr><name>dst_val_int2</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dst_val3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SW</name><argument_list>(<argument><expr><name>dst_val_int3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_8x2_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_8x6_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_8x4multiple_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src2</name> <operator>=</operator> <name>src6</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_8w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><literal type="number">2</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_vt_4t_8x2_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">6</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_vt_4t_8x6_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>hevc_vt_4t_8x4multiple_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_12w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>, <decl><type ref="prev"/><name>src65_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src54_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_l</name></decl>, <decl><type ref="prev"/><name>dst1_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">1</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src2110</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src21_l</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src10_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src4332</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src43_l</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src32_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src6554</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src65_l</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src54_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src2</name> <operator>=</operator> <name>src6</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src2110</name> <operator>=</operator> <name>src6554</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_16w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst0_l</name></decl>, <decl><type ref="prev"/><name>dst1_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_24w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>, <decl><type ref="prev"/><name>src11</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_l</name></decl>, <decl><type ref="prev"/><name>dst1_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH2</name><argument_list>(<argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH</name><argument_list>(<argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_vt_4t_32w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>, <decl><type ref="prev"/><name>src11</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src76_l</name></decl>, <decl><type ref="prev"/><name>src98_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>src109_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0_l</name></decl>, <decl><type ref="prev"/><name>dst1_l</name></decl>, <decl><type ref="prev"/><name>dst2_l</name></decl>, <decl><type ref="prev"/><name>dst3_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src98_l</name></expr></argument>, <argument><expr><name>src109_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src98_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>src109_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src98_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_l</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>src109_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SH4</name><argument_list>(<argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_4x2_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt_h0</name></decl>, <decl><type ref="prev"/><name>filt_h1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst20</name></decl>, <decl><type ref="prev"/><name>dst31</name></decl>, <decl><type ref="prev"/><name>dst42</name></decl>, <decl><type ref="prev"/><name>dst10</name></decl>, <decl><type ref="prev"/><name>dst32</name></decl>, <decl><type ref="prev"/><name>dst21</name></decl>, <decl><type ref="prev"/><name>dst43</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>src_stride</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNPCK_R_SB_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filter_vec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_W2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst20</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst31</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst42</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst20</name></expr></argument>, <argument><expr><name>dst20</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst31</name></expr></argument>, <argument><expr><name>dst31</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst42</name></expr></argument>, <argument><expr><name>dst42</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst31</name></expr></argument>, <argument><expr><name>dst20</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst42</name></expr></argument>, <argument><expr><name>dst31</name></expr></argument>, <argument><expr><name>dst21</name></expr></argument>, <argument><expr><name>dst43</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21</name></expr></argument>, <argument><expr><name>dst43</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>&gt;&gt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>&gt;&gt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <operator>(</operator><name>v4i32</name><operator>)</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>dst1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D2</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_4x4_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt_h0</name></decl>, <decl><type ref="prev"/><name>filt_h1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst30</name></decl>, <decl><type ref="prev"/><name>dst41</name></decl>, <decl><type ref="prev"/><name>dst52</name></decl>, <decl><type ref="prev"/><name>dst63</name></decl>, <decl><type ref="prev"/><name>dst10</name></decl>, <decl><type ref="prev"/><name>dst32</name></decl>, <decl><type ref="prev"/><name>dst54</name></decl>, <decl><type ref="prev"/><name>dst21</name></decl>, <decl><type ref="prev"/><name>dst43</name></decl>, <decl><type ref="prev"/><name>dst65</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>src_stride</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNPCK_R_SB_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filter_vec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_W2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst30</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst41</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst52</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst63</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst30</name></expr></argument>, <argument><expr><name>dst30</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst41</name></expr></argument>, <argument><expr><name>dst41</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst52</name></expr></argument>, <argument><expr><name>dst52</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst63</name></expr></argument>, <argument><expr><name>dst63</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst41</name></expr></argument>, <argument><expr><name>dst30</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst43</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst52</name></expr></argument>, <argument><expr><name>dst41</name></expr></argument>, <argument><expr><name>dst21</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst63</name></expr></argument>, <argument><expr><name>dst52</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>dst65</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21</name></expr></argument>, <argument><expr><name>dst43</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst32</name></expr></argument>, <argument><expr><name>dst54</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst43</name></expr></argument>, <argument><expr><name>dst65</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H2_SW</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_4multx8mult_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt_h0</name></decl>, <decl><type ref="prev"/><name>filt_h1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10</name></decl>, <decl><type ref="prev"/><name>dst21</name></decl>, <decl><type ref="prev"/><name>dst22</name></decl>, <decl><type ref="prev"/><name>dst73</name></decl>, <decl><type ref="prev"/><name>dst84</name></decl>, <decl><type ref="prev"/><name>dst95</name></decl>, <decl><type ref="prev"/><name>dst106</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_r</name></decl>, <decl><type ref="prev"/><name>dst32_r</name></decl>, <decl><type ref="prev"/><name>dst54_r</name></decl>, <decl><type ref="prev"/><name>dst76_r</name></decl>, <decl><type ref="prev"/><name>dst98_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst21_r</name></decl>, <decl><type ref="prev"/><name>dst43_r</name></decl>, <decl><type ref="prev"/><name>dst65_r</name></decl>, <decl><type ref="prev"/><name>dst87_r</name></decl>, <decl><type ref="prev"/><name>dst109_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>src_stride</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNPCK_R_SB_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filter_vec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_W2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst21</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst21</name></expr></argument>, <argument><expr><name>dst21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst21</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst22</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_splati_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst21</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>,

<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst73</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst84</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst95</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst106</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst73</name></expr></argument>, <argument><expr><name>dst73</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst84</name></expr></argument>, <argument><expr><name>dst84</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst95</name></expr></argument>, <argument><expr><name>dst95</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst106</name></expr></argument>, <argument><expr><name>dst106</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst32_r</name> <operator>=</operator> <call><name>__msa_ilvr_h</name><argument_list>(<argument><expr><name>dst73</name></expr></argument>, <argument><expr><name>dst22</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst84</name></expr></argument>, <argument><expr><name>dst73</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst95</name></expr></argument>, <argument><expr><name>dst84</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst98_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst106</name></expr></argument>, <argument><expr><name>dst95</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst22</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_splati_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst73</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst76_r</name> <operator>=</operator> <call><name>__msa_ilvr_h</name><argument_list>(<argument><expr><name>dst22</name></expr></argument>, <argument><expr><name>dst106</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst6</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>dst98_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst7</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>dst109_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H4_SW</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>,

<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10_r</name> <operator>=</operator> <name>dst98_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst21_r</name> <operator>=</operator> <name>dst109_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst22</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_splati_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst106</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_4w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><literal type="number">2</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_4t_4x2_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_4t_4x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <operator>(</operator><name>height</name> <operator>%</operator> <literal type="number">8</literal><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_4t_4multx8mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_6w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt_h0</name></decl>, <decl><type ref="prev"/><name>filt_h1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dsth0</name></decl>, <decl><type ref="prev"/><name>dsth1</name></decl>, <decl><type ref="prev"/><name>dsth2</name></decl>, <decl><type ref="prev"/><name>dsth3</name></decl>, <decl><type ref="prev"/><name>dsth4</name></decl>, <decl><type ref="prev"/><name>dsth5</name></decl>, <decl><type ref="prev"/><name>dsth6</name></decl>, <decl><type ref="prev"/><name>dsth7</name></decl>, <decl><type ref="prev"/><name>dsth8</name></decl>, <decl><type ref="prev"/><name>dsth9</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dsth10</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>tmp4</name></decl>, <decl><type ref="prev"/><name>tmp5</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_r</name></decl>, <decl><type ref="prev"/><name>dst32_r</name></decl>, <decl><type ref="prev"/><name>dst54_r</name></decl>, <decl><type ref="prev"/><name>dst76_r</name></decl>, <decl><type ref="prev"/><name>dst98_r</name></decl>, <decl><type ref="prev"/><name>dst21_r</name></decl>, <decl><type ref="prev"/><name>dst43_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst65_r</name></decl>, <decl><type ref="prev"/><name>dst87_r</name></decl>, <decl><type ref="prev"/><name>dst109_r</name></decl>, <decl><type ref="prev"/><name>dst10_l</name></decl>, <decl><type ref="prev"/><name>dst32_l</name></decl>, <decl><type ref="prev"/><name>dst54_l</name></decl>, <decl><type ref="prev"/><name>dst76_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst98_l</name></decl>, <decl><type ref="prev"/><name>dst21_l</name></decl>, <decl><type ref="prev"/><name>dst43_l</name></decl>, <decl><type ref="prev"/><name>dst65_l</name></decl>, <decl><type ref="prev"/><name>dst87_l</name></decl>, <decl><type ref="prev"/><name>dst109_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst1021_l</name></decl>, <decl><type ref="prev"/><name>dst3243_l</name></decl>, <decl><type ref="prev"/><name>dst5465_l</name></decl>, <decl><type ref="prev"/><name>dst7687_l</name></decl>, <decl><type ref="prev"/><name>dst98109_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>, <decl><type ref="prev"/><name>dst4_r</name></decl>, <decl><type ref="prev"/><name>dst5_r</name></decl>, <decl><type ref="prev"/><name>dst6_r</name></decl>, <decl><type ref="prev"/><name>dst7_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0_l</name></decl>, <decl><type ref="prev"/><name>dst1_l</name></decl>, <decl><type ref="prev"/><name>dst2_l</name></decl>, <decl><type ref="prev"/><name>dst3_l</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>src_stride</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNPCK_R_SB_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filter_vec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_W2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dsth0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dsth1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dsth2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dsth0</name></expr></argument>, <argument><expr><name>dsth0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dsth1</name></expr></argument>, <argument><expr><name>dsth1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dsth2</name></expr></argument>, <argument><expr><name>dsth2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dsth1</name></expr></argument>, <argument><expr><name>dsth0</name></expr></argument>, <argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst10_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dsth2</name></expr></argument>, <argument><expr><name>dsth1</name></expr></argument>, <argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dsth3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dsth4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dsth5</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dsth6</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dsth3</name></expr></argument>, <argument><expr><name>dsth3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dsth4</name></expr></argument>, <argument><expr><name>dsth4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dsth5</name></expr></argument>, <argument><expr><name>dsth5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dsth6</name></expr></argument>, <argument><expr><name>dsth6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dsth7</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dsth8</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dsth9</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dsth10</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dsth7</name></expr></argument>, <argument><expr><name>dsth7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dsth8</name></expr></argument>, <argument><expr><name>dsth8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dsth9</name></expr></argument>, <argument><expr><name>dsth9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dsth10</name></expr></argument>, <argument><expr><name>dsth10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dsth3</name></expr></argument>, <argument><expr><name>dsth2</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dsth4</name></expr></argument>, <argument><expr><name>dsth3</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dsth5</name></expr></argument>, <argument><expr><name>dsth4</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dsth6</name></expr></argument>, <argument><expr><name>dsth5</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst65_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dsth7</name></expr></argument>, <argument><expr><name>dsth6</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>dst76_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dsth8</name></expr></argument>, <argument><expr><name>dsth7</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>dst87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dsth9</name></expr></argument>, <argument><expr><name>dsth8</name></expr></argument>, <argument><expr><name>dst98_r</name></expr></argument>, <argument><expr><name>dst98_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dsth10</name></expr></argument>, <argument><expr><name>dsth9</name></expr></argument>, <argument><expr><name>dst109_r</name></expr></argument>, <argument><expr><name>dst109_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_D2_SH</name><argument_list>(<argument><expr><name>dst21_l</name></expr></argument>, <argument><expr><name>dst10_l</name></expr></argument>, <argument><expr><name>dst43_l</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>, <argument><expr><name>dst1021_l</name></expr></argument>, <argument><expr><name>dst3243_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_D2_SH</name><argument_list>(<argument><expr><name>dst65_l</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>, <argument><expr><name>dst87_l</name></expr></argument>, <argument><expr><name>dst76_l</name></expr></argument>, <argument><expr><name>dst5465_l</name></expr></argument>, <argument><expr><name>dst7687_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst98109_l</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst109_l</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst98_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst6_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>dst98_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst7_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>dst109_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst1021_l</name></expr></argument>, <argument><expr><name>dst3243_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst3243_l</name></expr></argument>, <argument><expr><name>dst5465_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst5465_l</name></expr></argument>, <argument><expr><name>dst7687_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst7687_l</name></expr></argument>, <argument><expr><name>dst98109_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst4_r</name></expr></argument>, <argument><expr><name>dst5_r</name></expr></argument>, <argument><expr><name>dst6_r</name></expr></argument>, <argument><expr><name>dst7_r</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>dst5_r</name></expr></argument>, <argument><expr><name>dst4_r</name></expr></argument>, <argument><expr><name>dst7_r</name></expr></argument>, <argument><expr><name>dst6_r</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>tmp5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_8x2_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt_h0</name></decl>, <decl><type ref="prev"/><name>filt_h1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst0_l</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst1_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_r</name></decl>, <decl><type ref="prev"/><name>dst32_r</name></decl>, <decl><type ref="prev"/><name>dst21_r</name></decl>, <decl><type ref="prev"/><name>dst43_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_l</name></decl>, <decl><type ref="prev"/><name>dst32_l</name></decl>, <decl><type ref="prev"/><name>dst21_l</name></decl>, <decl><type ref="prev"/><name>dst43_l</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>src_stride</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNPCK_R_SB_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filter_vec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_W2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst10_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10_l</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21_l</name></expr></argument>, <argument><expr><name>dst43_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H2_SW</name><argument_list>(<argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SW2</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_8multx4_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>width8mult</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt_h0</name></decl>, <decl><type ref="prev"/><name>filt_h1</name></decl>, <decl><type ref="prev"/><name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_r</name></decl>, <decl><type ref="prev"/><name>dst32_r</name></decl>, <decl><type ref="prev"/><name>dst54_r</name></decl>, <decl><type ref="prev"/><name>dst21_r</name></decl>, <decl><type ref="prev"/><name>dst43_r</name></decl>, <decl><type ref="prev"/><name>dst65_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_l</name></decl>, <decl><type ref="prev"/><name>dst32_l</name></decl>, <decl><type ref="prev"/><name>dst54_l</name></decl>, <decl><type ref="prev"/><name>dst21_l</name></decl>, <decl><type ref="prev"/><name>dst43_l</name></decl>, <decl><type ref="prev"/><name>dst65_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst0_l</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst1_l</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst2_l</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>, <decl><type ref="prev"/><name>dst3_l</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>src_stride</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNPCK_R_SB_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filter_vec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_W2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <name>width8mult</name></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst10_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst6</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst65_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10_l</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21_l</name></expr></argument>, <argument><expr><name>dst43_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst32_l</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst43_l</name></expr></argument>, <argument><expr><name>dst65_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H2_SW</name><argument_list>(<argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H2_SW</name><argument_list>(<argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SW4</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_8x6_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt_h0</name></decl>, <decl><type ref="prev"/><name>filt_h1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec10</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>, <decl><type ref="prev"/><name>vec12</name></decl>, <decl><type ref="prev"/><name>vec13</name></decl>, <decl><type ref="prev"/><name>vec14</name></decl>, <decl><type ref="prev"/><name>vec15</name></decl>, <decl><type ref="prev"/><name>vec16</name></decl>, <decl><type ref="prev"/><name>vec17</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>, <decl><type ref="prev"/><name>dst8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst0_l</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst1_l</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst2_l</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>, <decl><type ref="prev"/><name>dst3_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst4_r</name></decl>, <decl><type ref="prev"/><name>dst4_l</name></decl>, <decl><type ref="prev"/><name>dst5_r</name></decl>, <decl><type ref="prev"/><name>dst5_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_r</name></decl>, <decl><type ref="prev"/><name>dst32_r</name></decl>, <decl><type ref="prev"/><name>dst10_l</name></decl>, <decl><type ref="prev"/><name>dst32_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst21_r</name></decl>, <decl><type ref="prev"/><name>dst43_r</name></decl>, <decl><type ref="prev"/><name>dst21_l</name></decl>, <decl><type ref="prev"/><name>dst43_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst54_r</name></decl>, <decl><type ref="prev"/><name>dst54_l</name></decl>, <decl><type ref="prev"/><name>dst65_r</name></decl>, <decl><type ref="prev"/><name>dst65_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst76_r</name></decl>, <decl><type ref="prev"/><name>dst76_l</name></decl>, <decl><type ref="prev"/><name>dst87_r</name></decl>, <decl><type ref="prev"/><name>dst87_l</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>src_stride</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNPCK_R_SB_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filter_vec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_W2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec12</name></expr></argument>, <argument><expr><name>vec13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec14</name></expr></argument>, <argument><expr><name>vec15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec16</name></expr></argument>, <argument><expr><name>vec17</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst6</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec12</name></expr></argument>, <argument><expr><name>vec13</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst7</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec14</name></expr></argument>, <argument><expr><name>vec15</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst8</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec16</name></expr></argument>, <argument><expr><name>vec17</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst8</name></expr></argument>, <argument><expr><name>dst8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst10_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst65_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>dst76_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst8</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>dst87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10_l</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21_l</name></expr></argument>, <argument><expr><name>dst43_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst32_l</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst43_l</name></expr></argument>, <argument><expr><name>dst65_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst54_l</name></expr></argument>, <argument><expr><name>dst76_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst65_l</name></expr></argument>, <argument><expr><name>dst87_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst4_r</name></expr></argument>, <argument><expr><name>dst4_l</name></expr></argument>, <argument><expr><name>dst5_r</name></expr></argument>, <argument><expr><name>dst5_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H4_SW</name><argument_list>(<argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>,

<argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H2_SW</name><argument_list>(<argument><expr><name>dst4_l</name></expr></argument>, <argument><expr><name>dst4_r</name></expr></argument>, <argument><expr><name>dst5_l</name></expr></argument>, <argument><expr><name>dst5_r</name></expr></argument>, <argument><expr><name>dst4_r</name></expr></argument>, <argument><expr><name>dst5_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SW2</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SW2</name><argument_list>(<argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SW2</name><argument_list>(<argument><expr><name>dst4_r</name></expr></argument>, <argument><expr><name>dst5_r</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_8multx4mult_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>width8mult</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>, <decl><type ref="prev"/><name>cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src_tmp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst_tmp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt_h0</name></decl>, <decl><type ref="prev"/><name>filt_h1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name> <init>= <expr><call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst0_l</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst1_l</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst2_l</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>, <decl><type ref="prev"/><name>dst3_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_r</name></decl>, <decl><type ref="prev"/><name>dst32_r</name></decl>, <decl><type ref="prev"/><name>dst54_r</name></decl>, <decl><type ref="prev"/><name>dst21_r</name></decl>, <decl><type ref="prev"/><name>dst43_r</name></decl>, <decl><type ref="prev"/><name>dst65_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_l</name></decl>, <decl><type ref="prev"/><name>dst32_l</name></decl>, <decl><type ref="prev"/><name>dst54_l</name></decl>, <decl><type ref="prev"/><name>dst21_l</name></decl>, <decl><type ref="prev"/><name>dst43_l</name></decl>, <decl><type ref="prev"/><name>dst65_l</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>src_stride</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNPCK_R_SB_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filter_vec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_W2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <name>width8mult</name></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><name>src_tmp</name> <operator>=</operator> <name>src</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_tmp</name> <operator>=</operator> <name>dst</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst10_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst6</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst65_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10_l</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21_l</name></expr></argument>, <argument><expr><name>dst43_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst32_l</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst43_l</name></expr></argument>, <argument><expr><name>dst65_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H4_SW</name><argument_list>(<argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>,

<argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>,

<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SW4</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst_tmp</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10_r</name> <operator>=</operator> <name>dst54_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10_l</name> <operator>=</operator> <name>dst54_l</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst21_r</name> <operator>=</operator> <name>dst65_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst21_l</name> <operator>=</operator> <name>dst65_l</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>dst6</name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_8w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><literal type="number">2</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_4t_8x2_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_4t_8multx4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">6</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_4t_8x6_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <operator>(</operator><name>height</name> <operator>%</operator> <literal type="number">4</literal><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_4t_8multx4mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_12w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src_tmp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst_tmp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt_h0</name></decl>, <decl><type ref="prev"/><name>filt_h1</name></decl>, <decl><type ref="prev"/><name>filter_vec</name></decl>, <decl><type ref="prev"/><name>const_vec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst10</name></decl>, <decl><type ref="prev"/><name>dst21</name></decl>, <decl><type ref="prev"/><name>dst22</name></decl>, <decl><type ref="prev"/><name>dst73</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst84</name></decl>, <decl><type ref="prev"/><name>dst95</name></decl>, <decl><type ref="prev"/><name>dst106</name></decl>, <decl><type ref="prev"/><name>dst76_r</name></decl>, <decl><type ref="prev"/><name>dst98_r</name></decl>, <decl><type ref="prev"/><name>dst87_r</name></decl>, <decl><type ref="prev"/><name>dst109_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_r</name></decl>, <decl><type ref="prev"/><name>dst32_r</name></decl>, <decl><type ref="prev"/><name>dst54_r</name></decl>, <decl><type ref="prev"/><name>dst21_r</name></decl>, <decl><type ref="prev"/><name>dst43_r</name></decl>, <decl><type ref="prev"/><name>dst65_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v8i16</name></type> <name>dst10_l</name></decl>, <decl><type ref="prev"/><name>dst32_l</name></decl>, <decl><type ref="prev"/><name>dst54_l</name></decl>, <decl><type ref="prev"/><name>dst21_l</name></decl>, <decl><type ref="prev"/><name>dst43_l</name></decl>, <decl><type ref="prev"/><name>dst65_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0_r</name></decl>, <decl><type ref="prev"/><name>dst0_l</name></decl>, <decl><type ref="prev"/><name>dst1_r</name></decl>, <decl><type ref="prev"/><name>dst1_l</name></decl>, <decl><type ref="prev"/><name>dst2_r</name></decl>, <decl><type ref="prev"/><name>dst2_l</name></decl>, <decl><type ref="prev"/><name>dst3_r</name></decl>, <decl><type ref="prev"/><name>dst3_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>tmp4</name></decl>, <decl><type ref="prev"/><name>tmp5</name></decl>, <decl><type ref="prev"/><name>tmp6</name></decl>, <decl><type ref="prev"/><name>tmp7</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>src_stride</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_H2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filter_vec</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UNPCK_R_SB_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><name>filter_vec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SPLATI_W2_SH</name><argument_list>(<argument><expr><name>filter_vec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>=</operator> <call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>const_vec</name> <operator>&lt;&lt;=</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>src_tmp</name> <operator>=</operator> <name>src</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_tmp</name> <operator>=</operator> <name>dst</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst10_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst4</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst5</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst6</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst65_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10_l</name></expr></argument>, <argument><expr><name>dst32_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21_l</name></expr></argument>, <argument><expr><name>dst43_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst32_l</name></expr></argument>, <argument><expr><name>dst54_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_r</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst3_l</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst43_l</name></expr></argument>, <argument><expr><name>dst65_l</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H4_SW</name><argument_list>(<argument><expr><name>dst0_l</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_l</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_l</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_l</name></expr></argument>,

<argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_SW4</name><argument_list>(<argument><expr><name>dst0_r</name></expr></argument>, <argument><expr><name>dst1_r</name></expr></argument>, <argument><expr><name>dst2_r</name></expr></argument>, <argument><expr><name>dst3_r</name></expr></argument>, <argument><expr><name>dst_tmp</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10_r</name> <operator>=</operator> <name>dst54_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10_l</name> <operator>=</operator> <name>dst54_l</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst21_r</name> <operator>=</operator> <name>dst65_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst21_l</name> <operator>=</operator> <name>dst65_l</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst2</name> <operator>=</operator> <name>dst6</name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>mask2</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>ff_hevc_mask_arr</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst21</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst21</name></expr></argument>, <argument><expr><name>dst21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst21</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst22</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_splati_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst21</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>,

<argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst73</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst84</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst95</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst106</name> <operator>=</operator> <name>const_vec</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst73</name></expr></argument>, <argument><expr><name>dst73</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst84</name></expr></argument>, <argument><expr><name>dst84</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst95</name></expr></argument>, <argument><expr><name>dst95</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>dst106</name></expr></argument>, <argument><expr><name>dst106</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst32_r</name> <operator>=</operator> <call><name>__msa_ilvr_h</name><argument_list>(<argument><expr><name>dst73</name></expr></argument>, <argument><expr><name>dst22</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst84</name></expr></argument>, <argument><expr><name>dst73</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst95</name></expr></argument>, <argument><expr><name>dst84</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst98_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>dst106</name></expr></argument>, <argument><expr><name>dst95</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst22</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_splati_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst73</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst76_r</name> <operator>=</operator> <call><name>__msa_ilvr_h</name><argument_list>(<argument><expr><name>dst22</name></expr></argument>, <argument><expr><name>dst106</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst10_r</name></expr></argument>, <argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst21_r</name></expr></argument>, <argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst32_r</name></expr></argument>, <argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst43_r</name></expr></argument>, <argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp4</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst54_r</name></expr></argument>, <argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp5</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst65_r</name></expr></argument>, <argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp6</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst76_r</name></expr></argument>, <argument><expr><name>dst98_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp7</name> <operator>=</operator> <call><name>HEVC_FILT_4TAP</name><argument_list>(<argument><expr><name>dst87_r</name></expr></argument>, <argument><expr><name>dst109_r</name></expr></argument>, <argument><expr><name>filt_h0</name></expr></argument>, <argument><expr><name>filt_h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRA_4V</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H4_SW</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>,

<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>dst10_r</name> <operator>=</operator> <name>dst98_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst21_r</name> <operator>=</operator> <name>dst109_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>dst22</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_splati_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>dst106</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_16w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_4t_8multx4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_4t_8multx4mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_24w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_4t_8multx4mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>hevc_hv_4t_32w_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>hevc_hv_4t_8multx4mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,

<argument><expr><name>filter_x</name></expr></argument>, <argument><expr><name>filter_y</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC_COPY</name><parameter_list>(<parameter><type><name>WIDTH</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_pel_pixels##WIDTH##_8_msa(int16_t *dst, uint8_t *src, ptrdiff_t src_stride, int height, intptr_t mx, intptr_t my, int width) { hevc_copy_##WIDTH##w_msa(src, src_stride, dst, MAX_PB_SIZE, height); }</cpp:value></cpp:define>

<expr_stmt><expr><call><name>MC_COPY</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_COPY</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_COPY</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_COPY</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_COPY</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_COPY</name><argument_list>(<argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_COPY</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_COPY</name><argument_list>(<argument><expr><literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_COPY</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>MC_COPY</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC</name><parameter_list>(<parameter><type><name>PEL</name></type></parameter>, <parameter><type><name>DIR</name></type></parameter>, <parameter><type><name>WIDTH</name></type></parameter>, <parameter><type><name>TAP</name></type></parameter>, <parameter><type><name>DIR1</name></type></parameter>, <parameter><type><name>FILT_DIR</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_##PEL##_##DIR##WIDTH##_8_msa(int16_t *dst, uint8_t *src, ptrdiff_t src_stride, int height, intptr_t mx, intptr_t my, int width) { const int8_t *filter = ff_hevc_##PEL##_filters[FILT_DIR - 1]; hevc_##DIR1##_##TAP##t_##WIDTH##w_msa(src, src_stride, dst, MAX_PB_SIZE, filter, height); }</cpp:value></cpp:define>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">48</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">48</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>hz</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>vt</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>MC</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MC_HV</name><parameter_list>(<parameter><type><name>PEL</name></type></parameter>, <parameter><type><name>WIDTH</name></type></parameter>, <parameter><type><name>TAP</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_##PEL##_hv##WIDTH##_8_msa(int16_t *dst, uint8_t *src, ptrdiff_t src_stride, int height, intptr_t mx, intptr_t my, int width) { const int8_t *filter_x = ff_hevc_##PEL##_filters[mx - 1]; const int8_t *filter_y = ff_hevc_##PEL##_filters[my - 1]; hevc_hv_##TAP##t_##WIDTH##w_msa(src, src_stride, dst, MAX_PB_SIZE, filter_x, filter_y, height); }</cpp:value></cpp:define>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><literal type="number">48</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>qpel</name></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>MC_HV</name><argument_list>(<argument><expr><name>epel</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>MC_HV</name></cpp:undef>

</unit>
