<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\atrac3data.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffcode1</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0</literal></expr>, <expr><literal type="number">0x4</literal></expr>, <expr><literal type="number">0x5</literal></expr>, <expr><literal type="number">0xC</literal></expr>, <expr><literal type="number">0xD</literal></expr>, <expr><literal type="number">0x1C</literal></expr>, <expr><literal type="number">0x1D</literal></expr>, <expr><literal type="number">0x1E</literal></expr>, <expr><literal type="number">0x1F</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffbits1</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffcode2</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0x0</literal></expr>, <expr><literal type="number">0x4</literal></expr>, <expr><literal type="number">0x5</literal></expr>, <expr><literal type="number">0x6</literal></expr>, <expr><literal type="number">0x7</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffbits2</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffcode3</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0x0</literal></expr>, <expr><literal type="number">0x4</literal></expr>, <expr><literal type="number">0x5</literal></expr>, <expr><literal type="number">0xC</literal></expr>, <expr><literal type="number">0xD</literal></expr>, <expr><literal type="number">0xE</literal></expr>, <expr><literal type="number">0xF</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffbits3</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffcode4</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x0</literal></expr>, <expr><literal type="number">0x4</literal></expr>, <expr><literal type="number">0x5</literal></expr>, <expr><literal type="number">0xC</literal></expr>, <expr><literal type="number">0xD</literal></expr>, <expr><literal type="number">0x1C</literal></expr>, <expr><literal type="number">0x1D</literal></expr>, <expr><literal type="number">0x1E</literal></expr>, <expr><literal type="number">0x1F</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffbits4</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffcode5</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0x0A</literal></expr>, <expr><literal type="number">0x0B</literal></expr>, <expr><literal type="number">0x1C</literal></expr>,

<expr><literal type="number">0x1D</literal></expr>, <expr><literal type="number">0x3C</literal></expr>, <expr><literal type="number">0x3D</literal></expr>, <expr><literal type="number">0x3E</literal></expr>, <expr><literal type="number">0x3F</literal></expr>, <expr><literal type="number">0x0C</literal></expr>, <expr><literal type="number">0x0D</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffbits5</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffcode6</name><index>[<expr><literal type="number">31</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x14</literal></expr>,

<expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">0x19</literal></expr>, <expr><literal type="number">0x34</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0x36</literal></expr>,

<expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x3A</literal></expr>, <expr><literal type="number">0x3B</literal></expr>, <expr><literal type="number">0x78</literal></expr>, <expr><literal type="number">0x79</literal></expr>, <expr><literal type="number">0x7A</literal></expr>,

<expr><literal type="number">0x7B</literal></expr>, <expr><literal type="number">0x7C</literal></expr>, <expr><literal type="number">0x7D</literal></expr>, <expr><literal type="number">0x7E</literal></expr>, <expr><literal type="number">0x7F</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x09</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffbits6</name><index>[<expr><literal type="number">31</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffcode7</name><index>[<expr><literal type="number">63</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0x0A</literal></expr>, <expr><literal type="number">0x0B</literal></expr>, <expr><literal type="number">0x0C</literal></expr>, <expr><literal type="number">0x0D</literal></expr>, <expr><literal type="number">0x0E</literal></expr>,

<expr><literal type="number">0x0F</literal></expr>, <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0x25</literal></expr>, <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">0x28</literal></expr>,

<expr><literal type="number">0x29</literal></expr>, <expr><literal type="number">0x2A</literal></expr>, <expr><literal type="number">0x2B</literal></expr>, <expr><literal type="number">0x2C</literal></expr>, <expr><literal type="number">0x2D</literal></expr>, <expr><literal type="number">0x2E</literal></expr>, <expr><literal type="number">0x2F</literal></expr>, <expr><literal type="number">0x30</literal></expr>,

<expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x32</literal></expr>, <expr><literal type="number">0x33</literal></expr>, <expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x6A</literal></expr>, <expr><literal type="number">0x6B</literal></expr>, <expr><literal type="number">0x6C</literal></expr>,

<expr><literal type="number">0x6D</literal></expr>, <expr><literal type="number">0x6E</literal></expr>, <expr><literal type="number">0x6F</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0x71</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x74</literal></expr>,

<expr><literal type="number">0x75</literal></expr>, <expr><literal type="number">0xEC</literal></expr>, <expr><literal type="number">0xED</literal></expr>, <expr><literal type="number">0xEE</literal></expr>, <expr><literal type="number">0xEF</literal></expr>, <expr><literal type="number">0xF0</literal></expr>, <expr><literal type="number">0xF1</literal></expr>, <expr><literal type="number">0xF2</literal></expr>,

<expr><literal type="number">0xF3</literal></expr>, <expr><literal type="number">0xF4</literal></expr>, <expr><literal type="number">0xF5</literal></expr>, <expr><literal type="number">0xF6</literal></expr>, <expr><literal type="number">0xF7</literal></expr>, <expr><literal type="number">0xF8</literal></expr>, <expr><literal type="number">0xF9</literal></expr>, <expr><literal type="number">0xFA</literal></expr>,

<expr><literal type="number">0xFB</literal></expr>, <expr><literal type="number">0xFC</literal></expr>, <expr><literal type="number">0xFD</literal></expr>, <expr><literal type="number">0xFE</literal></expr>, <expr><literal type="number">0xFF</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x03</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huffbits7</name><index>[<expr><literal type="number">63</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>huff_tab_sizes</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">9</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">63</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name><modifier>*</modifier> <specifier>const</specifier></type> <name><name>huff_codes</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{

<expr><name>huffcode1</name></expr>, <expr><name>huffcode2</name></expr>, <expr><name>huffcode3</name></expr>, <expr><name>huffcode4</name></expr>, <expr><name>huffcode5</name></expr>, <expr><name>huffcode6</name></expr>, <expr><name>huffcode7</name></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name><modifier>*</modifier> <specifier>const</specifier></type> <name><name>huff_bits</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{

<expr><name>huffbits1</name></expr>, <expr><name>huffbits2</name></expr>, <expr><name>huffbits3</name></expr>, <expr><name>huffbits4</name></expr>, <expr><name>huffbits5</name></expr>, <expr><name>huffbits6</name></expr>, <expr><name>huffbits7</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>atrac3_vlc_offs</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">1024</literal></expr>, <expr><literal type="number">1536</literal></expr>, <expr><literal type="number">2048</literal></expr>, <expr><literal type="number">2560</literal></expr>, <expr><literal type="number">3072</literal></expr>, <expr><literal type="number">3584</literal></expr>, <expr><literal type="number">4096</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>clc_length_tab</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int8_t</name></type> <name><name>mantissa_clc_tab</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int8_t</name></type> <name><name>mantissa_vlc_tab</name><index>[<expr><literal type="number">18</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>float</name></type> <name><name>inv_max_quant</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">1.0</literal> <operator>/</operator> <literal type="number">1.5</literal></expr>, <expr><literal type="number">1.0</literal> <operator>/</operator> <literal type="number">2.5</literal></expr>, <expr><literal type="number">1.0</literal> <operator>/</operator> <literal type="number">3.5</literal></expr>,

<expr><literal type="number">1.0</literal> <operator>/</operator> <literal type="number">4.5</literal></expr>, <expr><literal type="number">1.0</literal> <operator>/</operator> <literal type="number">7.5</literal></expr>, <expr><literal type="number">1.0</literal> <operator>/</operator> <literal type="number">15.5</literal></expr>, <expr><literal type="number">1.0</literal> <operator>/</operator> <literal type="number">31.5</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>subband_tab</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">56</literal></expr>,

<expr><literal type="number">64</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><literal type="number">96</literal></expr>, <expr><literal type="number">112</literal></expr>, <expr><literal type="number">128</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">160</literal></expr>, <expr><literal type="number">176</literal></expr>,

<expr><literal type="number">192</literal></expr>, <expr><literal type="number">224</literal></expr>, <expr><literal type="number">256</literal></expr>, <expr><literal type="number">288</literal></expr>, <expr><literal type="number">320</literal></expr>, <expr><literal type="number">352</literal></expr>, <expr><literal type="number">384</literal></expr>, <expr><literal type="number">416</literal></expr>,

<expr><literal type="number">448</literal></expr>, <expr><literal type="number">480</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">576</literal></expr>, <expr><literal type="number">640</literal></expr>, <expr><literal type="number">704</literal></expr>, <expr><literal type="number">768</literal></expr>, <expr><literal type="number">896</literal></expr>,

<expr><literal type="number">1024</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>float</name></type> <name><name>matrix_coeffs</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">2.0</literal></expr>, <expr><literal type="number">2.0</literal></expr>, <expr><literal type="number">2.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">1.0</literal></expr>, <expr><literal type="number">1.0</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

</unit>
