<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\arm\hevcdsp_init_neon.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/arm/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/hevcdsp.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hevcdsp_arm.h"</cpp:file></cpp:include>

<function_decl><type><name>void</name></type> <name>ff_hevc_sao_band_filter_neon_8_wrapper</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride_src</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>sao_offset_val</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sao_left_class</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_sao_edge_filter_neon_8_wrapper</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride_dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>sao_offset_val</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>eo</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_v_loop_filter_luma_neon</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_pix</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_stride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>_beta</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>_tc</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_no_p</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_no_q</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_h_loop_filter_luma_neon</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_pix</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_stride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>_beta</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>_tc</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_no_p</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_no_q</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_v_loop_filter_chroma_neon</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_pix</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_stride</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>_tc</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_no_p</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_no_q</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_h_loop_filter_chroma_neon</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_pix</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_stride</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>_tc</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_no_p</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_no_q</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_4x4_8_neon</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_4x4_10_neon</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_8x8_8_neon</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_8x8_10_neon</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_16x16_8_neon</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_16x16_10_neon</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_32x32_8_neon</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_32x32_10_neon</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_4x4_dc_8_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_8x8_dc_8_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_16x16_dc_8_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_32x32_dc_8_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_4x4_dc_10_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_8x8_dc_10_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_16x16_dc_10_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_32x32_dc_10_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_4x4_8_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>col_limit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_8x8_8_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>col_limit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_16x16_8_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>col_limit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_32x32_8_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>col_limit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_4x4_10_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>col_limit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_8x8_10_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>col_limit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_16x16_10_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>col_limit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_idct_32x32_10_neon</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>col_limit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_transform_luma_4x4_neon_8</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PUT_PIXELS</name><parameter_list>(<parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void name(int16_t *dst, uint8_t *src, ptrdiff_t srcstride, int height, intptr_t mx, intptr_t my, int width)</cpp:value></cpp:define>

<expr_stmt><expr><call><name>PUT_PIXELS</name><argument_list>(<argument><expr><name>ff_hevc_put_pixels_w2_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PUT_PIXELS</name><argument_list>(<argument><expr><name>ff_hevc_put_pixels_w4_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PUT_PIXELS</name><argument_list>(<argument><expr><name>ff_hevc_put_pixels_w6_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PUT_PIXELS</name><argument_list>(<argument><expr><name>ff_hevc_put_pixels_w8_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PUT_PIXELS</name><argument_list>(<argument><expr><name>ff_hevc_put_pixels_w12_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PUT_PIXELS</name><argument_list>(<argument><expr><name>ff_hevc_put_pixels_w16_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PUT_PIXELS</name><argument_list>(<argument><expr><name>ff_hevc_put_pixels_w24_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PUT_PIXELS</name><argument_list>(<argument><expr><name>ff_hevc_put_pixels_w32_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PUT_PIXELS</name><argument_list>(<argument><expr><name>ff_hevc_put_pixels_w48_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PUT_PIXELS</name><argument_list>(<argument><expr><name>ff_hevc_put_pixels_w64_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PUT_PIXELS</name></cpp:undef>

<function_decl><type><specifier>static</specifier> <name>void</name></type> (<modifier>*</modifier><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index>)<parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>srcstride</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> (<modifier>*</modifier><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int16_t</name><modifier>*</modifier></type> <name>src2</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src2stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_put_qpel_neon_wrapper</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>srcstride</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_put_qpel_uni_neon_wrapper</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>srcstride</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_put_qpel_bi_neon_wrapper</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>srcstride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QPEL_FUNC</name><parameter_list>(<parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void name(int16_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int height, int width)</cpp:value></cpp:define>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_v1_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_v2_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_v3_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_h1_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_h2_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_h3_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_h1v1_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_h1v2_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_h1v3_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_h2v1_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_h2v2_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_h2v3_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_h3v1_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_h3v2_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_h3v3_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>QPEL_FUNC</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QPEL_FUNC_UW_PIX</name><parameter_list>(<parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void name(uint8_t *dst, ptrdiff_t dststride, uint8_t *_src, ptrdiff_t _srcstride, int height, intptr_t mx, intptr_t my, int width);</cpp:value></cpp:define>

<expr_stmt><expr><call><name>QPEL_FUNC_UW_PIX</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_pixels_w4_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW_PIX</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_pixels_w8_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW_PIX</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_pixels_w16_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW_PIX</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_pixels_w24_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW_PIX</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_pixels_w32_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW_PIX</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_pixels_w48_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW_PIX</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_pixels_w64_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>QPEL_FUNC_UW_PIX</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QPEL_FUNC_UW</name><parameter_list>(<parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void name(uint8_t *dst, ptrdiff_t dststride, uint8_t *_src, ptrdiff_t _srcstride, int width, int height, int16_t* src2, ptrdiff_t src2stride);</cpp:value></cpp:define>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_pixels_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_v1_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_v2_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_v3_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_h1_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_h2_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_h3_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_h1v1_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_h1v2_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_h1v3_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_h2v1_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_h2v2_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_h2v3_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_h3v1_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_h3v2_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_FUNC_UW</name><argument_list>(<argument><expr><name>ff_hevc_put_qpel_uw_h3v3_neon_8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>QPEL_FUNC_UW</name></cpp:undef>

<function_decl><type><name>void</name></type> <name>ff_hevc_sao_band_filter_neon_8</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride_src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>offset_table</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>void</name></type> <name>ff_hevc_sao_band_filter_neon_8_wrapper</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>,

<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride_src</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>sao_offset_val</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sao_left_class</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name> <init>= <expr><name>_dst</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name> <init>= <expr><name>_src</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name></type> <name><name>offset_table</name><index>[<expr><literal type="number">32</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>k</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>k</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>offset_table</name><index>[<expr><operator>(</operator><name>k</name> <operator>+</operator> <name>sao_left_class</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">31</literal></expr>]</index></name> <operator>=</operator> <name><name>sao_offset_val</name><index>[<expr><name>k</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>ff_hevc_sao_band_filter_neon_8</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride_dst</name></expr></argument>, <argument><expr><name>stride_src</name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><name>offset_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function_decl><type><name>void</name></type> <name>ff_hevc_sao_edge_filter_neon_8</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride_src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>a_stride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>b_stride</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>sao_offset_val</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>edge_idx</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>void</name></type> <name>ff_hevc_sao_edge_filter_neon_8_wrapper</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride_dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>sao_offset_val</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>eo</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><specifier>static</specifier> <name>uint8_t</name></type> <name><name>edge_idx</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int8_t</name></type> <name><name>pos</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr> }</block></expr>, 

<expr><block>{ <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr> }</block></expr>, 

<expr><block>{ <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr> }</block></expr>, 

<expr><block>{ <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr> }</block></expr>, 

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name> <init>= <expr><name>_dst</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name> <init>= <expr><name>_src</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>a_stride</name></decl>, <decl><type ref="prev"/><name>b_stride</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ptrdiff_t</name></type> <name>stride_src</name> <init>= <expr><operator>(</operator><literal type="number">2</literal><operator>*</operator><name>MAX_PB_SIZE</name> <operator>+</operator> <name>AV_INPUT_BUFFER_PADDING_SIZE</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>a_stride</name> <operator>=</operator> <name><name>pos</name><index>[<expr><name>eo</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name><name>pos</name><index>[<expr><name>eo</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>*</operator> <name>stride_src</name></expr>;</expr_stmt>

<expr_stmt><expr><name>b_stride</name> <operator>=</operator> <name><name>pos</name><index>[<expr><name>eo</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name><name>pos</name><index>[<expr><name>eo</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>*</operator> <name>stride_src</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ff_hevc_sao_edge_filter_neon_8</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride_dst</name></expr></argument>, <argument><expr><name>stride_src</name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><name>a_stride</name></expr></argument>, <argument><expr><name>b_stride</name></expr></argument>, <argument><expr><name>sao_offset_val</name></expr></argument>, <argument><expr><name>edge_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_hevc_put_qpel_neon_wrapper</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>srcstride</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list> <block>{<block_content>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><name>my</name></expr>]</index><index>[<expr><name>mx</name></expr>]</index></name><operator>(</operator><name>dst</name><operator>,</operator> <name>MAX_PB_SIZE</name><operator>,</operator> <name>src</name><operator>,</operator> <name>srcstride</name><operator>,</operator> <name>height</name><operator>,</operator> <name>width</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_hevc_put_qpel_uni_neon_wrapper</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>srcstride</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list> <block>{<block_content>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><name>my</name></expr>]</index><index>[<expr><name>mx</name></expr>]</index></name><operator>(</operator><name>dst</name><operator>,</operator> <name>dststride</name><operator>,</operator> <name>src</name><operator>,</operator> <name>srcstride</name><operator>,</operator> <name>width</name><operator>,</operator> <name>height</name><operator>,</operator> <name>NULL</name><operator>,</operator> <literal type="number">0</literal><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_hevc_put_qpel_bi_neon_wrapper</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>srcstride</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list> <block>{<block_content>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><name>my</name></expr>]</index><index>[<expr><name>mx</name></expr>]</index></name><operator>(</operator><name>dst</name><operator>,</operator> <name>dststride</name><operator>,</operator> <name>src</name><operator>,</operator> <name>srcstride</name><operator>,</operator> <name>width</name><operator>,</operator> <name>height</name><operator>,</operator> <name>src2</name><operator>,</operator> <name>MAX_PB_SIZE</name><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_hevc_dsp_init_neon</name><parameter_list>(<parameter><decl><type><name>HEVCDSPContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name>bit_depth</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>bit_depth</name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_luma_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_luma_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_chroma_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_chroma_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_band_filter</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_band_filter_neon_8_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_band_filter</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_band_filter_neon_8_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_band_filter</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_band_filter_neon_8_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_band_filter</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_band_filter_neon_8_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_band_filter</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_band_filter_neon_8_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_edge_filter</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_edge_filter_neon_8_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_edge_filter</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_edge_filter_neon_8_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_edge_filter</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_edge_filter_neon_8_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_edge_filter</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_edge_filter_neon_8_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_edge_filter</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_edge_filter_neon_8_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_4x4_8_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_8x8_8_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_16x16_8_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_32x32_8_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_4x4_dc_8_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_dc_8_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_dc_8_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_dc_8_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_4x4_8_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_8_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_8_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_8_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>transform_4x4_luma</name></name> <operator>=</operator> <name>ff_hevc_transform_luma_4x4_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_v1_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_v2_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_v3_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_h1_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_h2_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_h3_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_h1v1_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_h2v1_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_h3v1_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_h1v2_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_h2v2_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_h3v2_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_h1v3_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_h2v3_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_neon</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_h3v3_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_v1_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_v2_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_v3_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_h1_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_h2_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_h3_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_h1v1_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_h2v1_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_h3v1_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_h1v2_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_h2v2_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_h3v2_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_h1v3_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_h2v3_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>put_hevc_qpel_uw_neon</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_h3v3_neon_8</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_neon_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_neon_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_neon_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uni_neon_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uni_neon_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uni_neon_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_bi_neon_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_bi_neon_wrapper</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><name>x</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_bi_neon_wrapper</name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_pixels_w2_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_pixels_w4_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_pixels_w6_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_pixels_w8_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_pixels_w12_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_pixels_w16_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_pixels_w24_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_pixels_w32_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_pixels_w48_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_pixels_w64_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_pixels_w4_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_pixels_w8_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_pixels_w16_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_pixels_w24_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_pixels_w32_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_pixels_w48_neon_8</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_qpel_uw_pixels_w64_neon_8</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>bit_depth</name> <operator>==</operator> <literal type="number">10</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_4x4_10_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_8x8_10_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_16x16_10_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_32x32_10_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_4x4_dc_10_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_dc_10_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_dc_10_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_dc_10_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_4x4_10_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_10_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_10_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_10_neon</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

</unit>
