<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\arm\aac.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_NEON_INLINE</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VMUL2</name></cpp:macro> <cpp:value>VMUL2</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>float</name> <modifier>*</modifier></type><name>VMUL2</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>idx</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>scale</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name></type> <name>v0</name></decl>, <decl><type ref="prev"/><name>v1</name></decl>;</decl_stmt>

<asm>__asm__ ("ubfx %0, %6, #0, #4 \n\t"

"ubfx %1, %6, #4, #4 \n\t"

"ldr %0, [%5, %0, lsl #2] \n\t"

"ldr %1, [%5, %1, lsl #2] \n\t"

"vld1.32 {d1[]}, [%7,:32] \n\t"

"vmov d0, %0, %1 \n\t"

"vmul.f32 d0, d0, d1 \n\t"

"vst1.32 {d0}, [%2,:64]! \n\t"

: "=&amp;r"(v0), "=&amp;r"(v1), "+r"(dst), "=m"(dst[0]), "=m"(dst[1])

: "r"(v), "r"(idx), "r"(scale)

: "d0", "d1");</asm>

<return>return <expr><name>dst</name></expr>;</return>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VMUL4</name></cpp:macro> <cpp:value>VMUL4</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>float</name> <modifier>*</modifier></type><name>VMUL4</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>idx</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>scale</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name></type> <name>v0</name></decl>, <decl><type ref="prev"/><name>v1</name></decl>, <decl><type ref="prev"/><name>v2</name></decl>, <decl><type ref="prev"/><name>v3</name></decl>;</decl_stmt>

<asm>__asm__ ("ubfx %0, %10, #0, #2 \n\t"

"ubfx %1, %10, #2, #2 \n\t"

"ldr %0, [%9, %0, lsl #2] \n\t"

"ubfx %2, %10, #4, #2 \n\t"

"ldr %1, [%9, %1, lsl #2] \n\t"

"ubfx %3, %10, #6, #2 \n\t"

"ldr %2, [%9, %2, lsl #2] \n\t"

"vmov d0, %0, %1 \n\t"

"ldr %3, [%9, %3, lsl #2] \n\t"

"vld1.32 {d2[],d3[]},[%11,:32] \n\t"

"vmov d1, %2, %3 \n\t"

"vmul.f32 q0, q0, q1 \n\t"

"vst1.32 {q0}, [%4,:128]! \n\t"

: "=&amp;r"(v0), "=&amp;r"(v1), "=&amp;r"(v2), "=&amp;r"(v3), "+r"(dst),

"=m"(dst[0]), "=m"(dst[1]), "=m"(dst[2]), "=m"(dst[3])

: "r"(v), "r"(idx), "r"(scale)

: "d0", "d1", "d2", "d3");</asm>

<return>return <expr><name>dst</name></expr>;</return>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VMUL2S</name></cpp:macro> <cpp:value>VMUL2S</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>float</name> <modifier>*</modifier></type><name>VMUL2S</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>idx</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>sign</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>scale</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name></type> <name>v0</name></decl>, <decl><type ref="prev"/><name>v1</name></decl>, <decl><type ref="prev"/><name>v2</name></decl>, <decl><type ref="prev"/><name>v3</name></decl>;</decl_stmt>

<asm>__asm__ ("ubfx %0, %8, #0, #4 \n\t"

"ubfx %1, %8, #4, #4 \n\t"

"ldr %0, [%7, %0, lsl #2] \n\t"

"lsl %2, %10, #30 \n\t"

"ldr %1, [%7, %1, lsl #2] \n\t"

"lsl %3, %10, #31 \n\t"

"vmov d0, %0, %1 \n\t"

"bic %2, %2, #1&lt;&lt;30 \n\t"

"vld1.32 {d1[]}, [%9,:32] \n\t"

"vmov d2, %2, %3 \n\t"

"veor d0, d0, d2 \n\t"

"vmul.f32 d0, d0, d1 \n\t"

"vst1.32 {d0}, [%4,:64]! \n\t"

: "=&amp;r"(v0), "=&amp;r"(v1), "=&amp;r"(v2), "=&amp;r"(v3), "+r"(dst),

"=m"(dst[0]), "=m"(dst[1])

: "r"(v), "r"(idx), "r"(scale), "r"(sign)

: "d0", "d1", "d2");</asm>

<return>return <expr><name>dst</name></expr>;</return>

</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VMUL4S</name></cpp:macro> <cpp:value>VMUL4S</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>float</name> <modifier>*</modifier></type><name>VMUL4S</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>idx</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name></type> <name>sign</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>scale</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name></type> <name>v0</name></decl>, <decl><type ref="prev"/><name>v1</name></decl>, <decl><type ref="prev"/><name>v2</name></decl>, <decl><type ref="prev"/><name>v3</name></decl>, <decl><type ref="prev"/><name>nz</name></decl>;</decl_stmt>

<asm>__asm__ ("vld1.32 {d2[],d3[]},[%13,:32] \n\t"

"ubfx %0, %12, #0, #2 \n\t"

"ubfx %1, %12, #2, #2 \n\t"

"ldr %0, [%11,%0, lsl #2] \n\t"

"ubfx %2, %12, #4, #2 \n\t"

"ldr %1, [%11,%1, lsl #2] \n\t"

"ubfx %3, %12, #6, #2 \n\t"

"ldr %2, [%11,%2, lsl #2] \n\t"

"vmov d0, %0, %1 \n\t"

"ldr %3, [%11,%3, lsl #2] \n\t"

"lsr %6, %12, #12 \n\t"

"rbit %6, %6 \n\t"

"vmov d1, %2, %3 \n\t"

"lsls %6, %6, #1 \n\t"

"and %0, %5, #1&lt;&lt;31 \n\t"

"it cs \n\t"

"lslcs %5, %5, #1 \n\t"

"lsls %6, %6, #1 \n\t"

"and %1, %5, #1&lt;&lt;31 \n\t"

"it cs \n\t"

"lslcs %5, %5, #1 \n\t"

"lsls %6, %6, #1 \n\t"

"and %2, %5, #1&lt;&lt;31 \n\t"

"it cs \n\t"

"lslcs %5, %5, #1 \n\t"

"vmov d4, %0, %1 \n\t"

"and %3, %5, #1&lt;&lt;31 \n\t"

"vmov d5, %2, %3 \n\t"

"veor q0, q0, q2 \n\t"

"vmul.f32 q0, q0, q1 \n\t"

"vst1.32 {q0}, [%4,:128]! \n\t"

: "=&amp;r"(v0), "=&amp;r"(v1), "=&amp;r"(v2), "=&amp;r"(v3), "+r"(dst),

"+r"(sign), "=r"(nz),

"=m"(dst[0]), "=m"(dst[1]), "=m"(dst[2]), "=m"(dst[3])

: "r"(v), "r"(idx), "r"(scale)

: "cc", "d0", "d1", "d2", "d3", "d4", "d5");</asm>

<return>return <expr><name>dst</name></expr>;</return>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
