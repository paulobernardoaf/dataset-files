<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\neon\mpegvideo.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;arm_neon.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/cpu.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>ARCH_AARCH64</name></expr></cpp:if>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/aarch64/cpu.h"</cpp:file></cpp:include>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>ARCH_ARM</name></expr></cpp:elif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/arm/cpu.h"</cpp:file></cpp:include>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/mpegvideo.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>void</name> <specifier>inline</specifier></type> <name>ff_dct_unquantize_h263_neon</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>qscale</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>qadd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nCoeffs</name></decl></parameter>,

<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>block</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int16x8_t</name></type> <name>q0s16</name></decl>, <decl><type ref="prev"/><name>q2s16</name></decl>, <decl><type ref="prev"/><name>q3s16</name></decl>, <decl><type ref="prev"/><name>q8s16</name></decl>, <decl><type ref="prev"/><name>q10s16</name></decl>, <decl><type ref="prev"/><name>q11s16</name></decl>, <decl><type ref="prev"/><name>q13s16</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16x8_t</name></type> <name>q14s16</name></decl>, <decl><type ref="prev"/><name>q15s16</name></decl>, <decl><type ref="prev"/><name>qzs16</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16x4_t</name></type> <name>d0s16</name></decl>, <decl><type ref="prev"/><name>d2s16</name></decl>, <decl><type ref="prev"/><name>d3s16</name></decl>, <decl><type ref="prev"/><name>dzs16</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16x8_t</name></type> <name>q1u16</name></decl>, <decl><type ref="prev"/><name>q9u16</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16x4_t</name></type> <name>d1u16</name></decl>;</decl_stmt>

<expr_stmt><expr><name>dzs16</name> <operator>=</operator> <call><name>vdup_n_s16</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>qzs16</name> <operator>=</operator> <call><name>vdupq_n_s16</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q15s16</name> <operator>=</operator> <call><name>vdupq_n_s16</name><argument_list>(<argument><expr><name>qscale</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q14s16</name> <operator>=</operator> <call><name>vdupq_n_s16</name><argument_list>(<argument><expr><name>qadd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q13s16</name> <operator>=</operator> <call><name>vnegq_s16</name><argument_list>(<argument><expr><name>q14s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>nCoeffs</name> <operator>&gt;</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>

<for>for <control>(<init>;</init> <condition><expr><name>nCoeffs</name> <operator>&gt;</operator> <literal type="number">8</literal></expr>;</condition> <incr><expr><name>nCoeffs</name> <operator>-=</operator> <literal type="number">16</literal></expr><operator>,</operator> <expr><name>block</name> <operator>+=</operator> <literal type="number">16</literal></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>q0s16</name> <operator>=</operator> <call><name>vld1q_s16</name><argument_list>(<argument><expr><name>block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q3s16</name> <operator>=</operator> <call><name>vreinterpretq_s16_u16</name><argument_list>(<argument><expr><call><name>vcltq_s16</name><argument_list>(<argument><expr><name>q0s16</name></expr></argument>, <argument><expr><name>qzs16</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q8s16</name> <operator>=</operator> <call><name>vld1q_s16</name><argument_list>(<argument><expr><name>block</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q1u16</name> <operator>=</operator> <call><name>vceqq_s16</name><argument_list>(<argument><expr><name>q0s16</name></expr></argument>, <argument><expr><name>qzs16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q2s16</name> <operator>=</operator> <call><name>vmulq_s16</name><argument_list>(<argument><expr><name>q0s16</name></expr></argument>, <argument><expr><name>q15s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q11s16</name> <operator>=</operator> <call><name>vreinterpretq_s16_u16</name><argument_list>(<argument><expr><call><name>vcltq_s16</name><argument_list>(<argument><expr><name>q8s16</name></expr></argument>, <argument><expr><name>qzs16</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q10s16</name> <operator>=</operator> <call><name>vmulq_s16</name><argument_list>(<argument><expr><name>q8s16</name></expr></argument>, <argument><expr><name>q15s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q3s16</name> <operator>=</operator> <call><name>vbslq_s16</name><argument_list>(<argument><expr><call><name>vreinterpretq_u16_s16</name><argument_list>(<argument><expr><name>q3s16</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>q13s16</name></expr></argument>, <argument><expr><name>q14s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q11s16</name> <operator>=</operator> <call><name>vbslq_s16</name><argument_list>(<argument><expr><call><name>vreinterpretq_u16_s16</name><argument_list>(<argument><expr><name>q11s16</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>q13s16</name></expr></argument>, <argument><expr><name>q14s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q2s16</name> <operator>=</operator> <call><name>vaddq_s16</name><argument_list>(<argument><expr><name>q2s16</name></expr></argument>, <argument><expr><name>q3s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q9u16</name> <operator>=</operator> <call><name>vceqq_s16</name><argument_list>(<argument><expr><name>q8s16</name></expr></argument>, <argument><expr><name>qzs16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q10s16</name> <operator>=</operator> <call><name>vaddq_s16</name><argument_list>(<argument><expr><name>q10s16</name></expr></argument>, <argument><expr><name>q11s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q0s16</name> <operator>=</operator> <call><name>vbslq_s16</name><argument_list>(<argument><expr><name>q1u16</name></expr></argument>, <argument><expr><name>q0s16</name></expr></argument>, <argument><expr><name>q2s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q8s16</name> <operator>=</operator> <call><name>vbslq_s16</name><argument_list>(<argument><expr><name>q9u16</name></expr></argument>, <argument><expr><name>q8s16</name></expr></argument>, <argument><expr><name>q10s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vst1q_s16</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><name>q0s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vst1q_s16</name><argument_list>(<argument><expr><name>block</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>q8s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>nCoeffs</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>d0s16</name> <operator>=</operator> <call><name>vld1_s16</name><argument_list>(<argument><expr><name>block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>d3s16</name> <operator>=</operator> <call><name>vreinterpret_s16_u16</name><argument_list>(<argument><expr><call><name>vclt_s16</name><argument_list>(<argument><expr><name>d0s16</name></expr></argument>, <argument><expr><name>dzs16</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>d1u16</name> <operator>=</operator> <call><name>vceq_s16</name><argument_list>(<argument><expr><name>d0s16</name></expr></argument>, <argument><expr><name>dzs16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>d2s16</name> <operator>=</operator> <call><name>vmul_s16</name><argument_list>(<argument><expr><name>d0s16</name></expr></argument>, <argument><expr><call><name>vget_high_s16</name><argument_list>(<argument><expr><name>q15s16</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>d3s16</name> <operator>=</operator> <call><name>vbsl_s16</name><argument_list>(<argument><expr><call><name>vreinterpret_u16_s16</name><argument_list>(<argument><expr><name>d3s16</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><call><name>vget_high_s16</name><argument_list>(<argument><expr><name>q13s16</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>vget_high_s16</name><argument_list>(<argument><expr><name>q14s16</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>d2s16</name> <operator>=</operator> <call><name>vadd_s16</name><argument_list>(<argument><expr><name>d2s16</name></expr></argument>, <argument><expr><name>d3s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>d0s16</name> <operator>=</operator> <call><name>vbsl_s16</name><argument_list>(<argument><expr><name>d1u16</name></expr></argument>, <argument><expr><name>d0s16</name></expr></argument>, <argument><expr><name>d2s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vst1_s16</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><name>d0s16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dct_unquantize_h263_inter_neon</name><parameter_list>(<parameter><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>block</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>qscale</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>nCoeffs</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>inter_scantable</name><operator>.</operator><name>raster_end</name><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_last_index</name><index>[<expr><name>n</name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>qadd</name> <init>= <expr><operator>(</operator><name>qscale</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>|</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ff_dct_unquantize_h263_neon</name><argument_list>(<argument><expr><name>qscale</name></expr></argument>, <argument><expr><name>qadd</name></expr></argument>, <argument><expr><name>nCoeffs</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dct_unquantize_h263_intra_neon</name><parameter_list>(<parameter><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>block</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>qscale</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>qadd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nCoeffs</name></decl>, <decl><type ref="prev"/><name>blk0</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>s</name><operator>-&gt;</operator><name>h263_aic</name></name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>n</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>block</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>*=</operator> <name><name>s</name><operator>-&gt;</operator><name>y_dc_scale</name></name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>block</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>*=</operator> <name><name>s</name><operator>-&gt;</operator><name>c_dc_scale</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name>qadd</name> <operator>=</operator> <operator>(</operator><name>qscale</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>|</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>qadd</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>ac_pred</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>nCoeffs</name> <operator>=</operator> <literal type="number">63</literal></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>nCoeffs</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>inter_scantable</name><operator>.</operator><name>raster_end</name><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>block_last_index</name><index>[<expr><name>n</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>nCoeffs</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return;</return></block_content></block></if></if_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>blk0</name> <operator>=</operator> <name><name>block</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ff_dct_unquantize_h263_neon</name><argument_list>(<argument><expr><name>qscale</name></expr></argument>, <argument><expr><name>qadd</name></expr></argument>, <argument><expr><name>nCoeffs</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>block</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>blk0</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_mpv_common_init_neon</name><parameter_list>(<parameter><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>cpu_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>have_neon</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>dct_unquantize_h263_intra</name></name> <operator>=</operator> <name>dct_unquantize_h263_intra_neon</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>dct_unquantize_h263_inter</name></name> <operator>=</operator> <name>dct_unquantize_h263_inter_neon</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

</unit>
