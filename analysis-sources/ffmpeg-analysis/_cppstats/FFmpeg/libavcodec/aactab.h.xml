<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\aactab.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mem.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"aac.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>extern</specifier> <name>float</name></type> <name><name>ff_aac_pow2sf_tab</name><index>[<expr><literal type="number">428</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>float</name></type> <name><name>ff_aac_pow34sf_tab</name><index>[<expr><literal type="number">428</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>ff_aac_tableinit</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>float</name></type> <name><name>exp2_lut</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="number">1.00000000000000000000</literal></expr>,

<expr><literal type="number">1.04427378242741384032</literal></expr>,

<expr><literal type="number">1.09050773266525765921</literal></expr>,

<expr><literal type="number">1.13878863475669165370</literal></expr>,

<expr><literal type="number">1.18920711500272106672</literal></expr>,

<expr><literal type="number">1.24185781207348404859</literal></expr>,

<expr><literal type="number">1.29683955465100966593</literal></expr>,

<expr><literal type="number">1.35425554693689272830</literal></expr>,

<expr><literal type="number">1.41421356237309504880</literal></expr>,

<expr><literal type="number">1.47682614593949931139</literal></expr>,

<expr><literal type="number">1.54221082540794082361</literal></expr>,

<expr><literal type="number">1.61049033194925430818</literal></expr>,

<expr><literal type="number">1.68179283050742908606</literal></expr>,

<expr><literal type="number">1.75625216037329948311</literal></expr>,

<expr><literal type="number">1.83400808640934246349</literal></expr>,

<expr><literal type="number">1.91520656139714729387</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>t1</name> <init>= <expr><literal type="number">8.8817841970012523233890533447265625e-16</literal></expr></init></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>float</name></type> <name>t2</name> <init>= <expr><literal type="number">3.63797880709171295166015625e-12</literal></expr></init></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>t1_inc_cur</name></decl>, <decl><type ref="prev"/><name>t2_inc_cur</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>t1_inc_prev</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>t2_inc_prev</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">428</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>t1_inc_cur</name> <operator>=</operator> <literal type="number">4</literal> <operator>*</operator> <operator>(</operator><name>i</name> <operator>%</operator> <literal type="number">4</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>t2_inc_cur</name> <operator>=</operator> <operator>(</operator><literal type="number">8</literal> <operator>+</operator> <literal type="number">3</literal><operator>*</operator><name>i</name><operator>)</operator> <operator>%</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>t1_inc_cur</name> <operator>&lt;</operator> <name>t1_inc_prev</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>t1</name> <operator>*=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>t2_inc_cur</name> <operator>&lt;</operator> <name>t2_inc_prev</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>t2</name> <operator>*=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>ff_aac_pow2sf_tab</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>t1</name> <operator>*</operator> <name><name>exp2_lut</name><index>[<expr><name>t1_inc_cur</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>ff_aac_pow34sf_tab</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>t2</name> <operator>*</operator> <name><name>exp2_lut</name><index>[<expr><name>t2_inc_cur</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>t1_inc_prev</name> <operator>=</operator> <name>t1_inc_cur</name></expr>;</expr_stmt>

<expr_stmt><expr><name>t2_inc_prev</name> <operator>=</operator> <name>t2_inc_cur</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>INTFLOAT</name></type> <name><name>ltp_coef</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{

<expr><call><name>Q30</name><argument_list>(<argument><expr><literal type="number">0.570829</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q30</name><argument_list>(<argument><expr><literal type="number">0.696616</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q30</name><argument_list>(<argument><expr><literal type="number">0.813004</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q30</name><argument_list>(<argument><expr><literal type="number">0.911304</literal></expr></argument>)</argument_list></call></expr>,

<expr><call><name>Q30</name><argument_list>(<argument><expr><literal type="number">0.984900</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q30</name><argument_list>(<argument><expr><literal type="number">1.067894</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q30</name><argument_list>(<argument><expr><literal type="number">1.194601</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q30</name><argument_list>(<argument><expr><literal type="number">1.369533</literal></expr></argument>)</argument_list></call></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>INTFLOAT</name></type> <name><name>tns_tmp2_map_1_3</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{

<expr><call><name>Q31</name><argument_list>(<argument><expr><literal type="number">0.00000000</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.43388373</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><literal type="number">0.64278758</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><literal type="number">0.34202015</literal></expr></argument>)</argument_list></call></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>INTFLOAT</name></type> <name><name>tns_tmp2_map_0_3</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{

<expr><call><name>Q31</name><argument_list>(<argument><expr><literal type="number">0.00000000</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.43388373</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.78183150</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.97492790</literal></expr></argument>)</argument_list></call></expr>,

<expr><call><name>Q31</name><argument_list>(<argument><expr><literal type="number">0.98480773</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.86602539</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.64278758</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.34202015</literal></expr></argument>)</argument_list></call></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>INTFLOAT</name></type> <name><name>tns_tmp2_map_1_4</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{

<expr><call><name>Q31</name><argument_list>(<argument><expr><literal type="number">0.00000000</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.20791170</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.40673664</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.58778524</literal></expr></argument>)</argument_list></call></expr>,

<expr><call><name>Q31</name><argument_list>(<argument><expr><literal type="number">0.67369562</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.52643216</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.36124167</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.18374951</literal></expr></argument>)</argument_list></call></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>INTFLOAT</name></type> <name><name>tns_tmp2_map_0_4</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <init>= <expr><block>{

<expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.00000000</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.20791170</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.40673664</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.58778524</literal></expr></argument>)</argument_list></call></expr>,

<expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.74314481</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.86602539</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.95105654</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.99452192</literal></expr></argument>)</argument_list></call></expr>,

<expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.99573416</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.96182561</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.89516330</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.79801720</literal></expr></argument>)</argument_list></call></expr>,

<expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.67369562</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.52643216</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.36124167</literal></expr></argument>)</argument_list></call></expr>, <expr><call><name>Q31</name><argument_list>( <argument><expr><literal type="number">0.18374951</literal></expr></argument>)</argument_list></call></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>INTFLOAT</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>tns_tmp2_map</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{

<expr><name>tns_tmp2_map_0_3</name></expr>,

<expr><name>tns_tmp2_map_0_4</name></expr>,

<expr><name>tns_tmp2_map_1_3</name></expr>,

<expr><name>tns_tmp2_map_1_4</name></expr>

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><specifier>extern</specifier> <name>float</name></expr></argument>, <argument><expr><name>ff_aac_kbd_long_1024</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">1024</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><specifier>extern</specifier> <name>float</name></expr></argument>, <argument><expr><name>ff_aac_kbd_short_128</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">128</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><specifier>extern</specifier> <name>float</name></expr></argument>, <argument><expr><name>ff_aac_kbd_long_960</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">960</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><specifier>extern</specifier> <name>float</name></expr></argument>, <argument><expr><name>ff_aac_kbd_short_120</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">120</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><specifier>extern</specifier> <name>int</name></expr></argument>, <argument><expr><name>ff_aac_kbd_long_1024_fixed</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">1024</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><specifier>extern</specifier> <name>int</name></expr></argument>, <argument><expr><name>ff_aac_kbd_long_512_fixed</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">512</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><specifier>extern</specifier> <name>int</name></expr></argument>, <argument><expr><name>ff_aac_kbd_short_128_fixed</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">128</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><specifier>extern</specifier> <specifier>const</specifier> <name>float</name></expr></argument>, <argument><expr><name>ff_aac_eld_window_512</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">1920</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><specifier>extern</specifier> <specifier>const</specifier> <name>int</name></expr></argument>, <argument><expr><name>ff_aac_eld_window_512_fixed</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">1920</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><specifier>extern</specifier> <specifier>const</specifier> <name>float</name></expr></argument>, <argument><expr><name>ff_aac_eld_window_480</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">1800</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><specifier>extern</specifier> <specifier>const</specifier> <name>int</name></expr></argument>, <argument><expr><name>ff_aac_eld_window_480_fixed</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">1800</literal></expr>]</index></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_aac_num_swb_1024</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_aac_num_swb_960</name> <index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_aac_num_swb_512</name> <index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_aac_num_swb_480</name> <index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_aac_num_swb_128</name> <index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_aac_num_swb_120</name> <index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_aac_pred_sfb_max</name> <index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint32_t</name></type> <name><name>ff_aac_scalefactor_code</name><index>[<expr><literal type="number">121</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_aac_scalefactor_bits</name><index>[<expr><literal type="number">121</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ff_aac_spectral_codes</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ff_aac_spectral_bits</name> <index>[<expr><literal type="number">11</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>ff_aac_spectral_sizes</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name><name>ff_aac_codebook_vectors</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name><name>ff_aac_codebook_vector_vals</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier></type><name><name>ff_aac_codebook_vector_idx</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ff_swb_offset_1024</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ff_swb_offset_960</name> <index>[<expr><literal type="number">13</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ff_swb_offset_512</name> <index>[<expr><literal type="number">13</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ff_swb_offset_480</name> <index>[<expr><literal type="number">13</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ff_swb_offset_128</name> <index>[<expr><literal type="number">13</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ff_swb_offset_120</name> <index>[<expr><literal type="number">13</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_tns_max_bands_1024</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_tns_max_bands_512</name> <index>[<expr><literal type="number">13</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_tns_max_bands_480</name> <index>[<expr><literal type="number">13</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_tns_max_bands_128</name> <index>[<expr><literal type="number">13</literal></expr>]</index></name></decl>;</decl_stmt>

</unit>
