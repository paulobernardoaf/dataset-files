<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\mdct_fixed.c"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FFT_FLOAT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FFT_FIXED_32</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mdct_template.c"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>ff_mdct_calcw_c</name><parameter_list>(<parameter><decl><type><name>FFTContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>FFTDouble</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>FFTSample</name> <modifier>*</modifier></type><name>input</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>, <decl><type ref="prev"/><name>n</name></decl>, <decl><type ref="prev"/><name>n8</name></decl>, <decl><type ref="prev"/><name>n4</name></decl>, <decl><type ref="prev"/><name>n2</name></decl>, <decl><type ref="prev"/><name>n3</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FFTDouble</name></type> <name>re</name></decl>, <decl><type ref="prev"/><name>im</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier></type><name>revtab</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>revtab</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>FFTSample</name> <modifier>*</modifier></type><name>tcos</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>tcos</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>FFTSample</name> <modifier>*</modifier></type><name>tsin</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>tsin</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>x</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>tmp_buf</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FFTDComplex</name> <modifier>*</modifier></type><name>o</name> <init>= <expr><operator>(</operator><name>FFTDComplex</name> <operator>*</operator><operator>)</operator><name>out</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>n</name> <operator>=</operator> <literal type="number">1</literal> <operator>&lt;&lt;</operator> <name><name>s</name><operator>-&gt;</operator><name>mdct_bits</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>n2</name> <operator>=</operator> <name>n</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>n4</name> <operator>=</operator> <name>n</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>n8</name> <operator>=</operator> <name>n</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>n3</name> <operator>=</operator> <literal type="number">3</literal> <operator>*</operator> <name>n4</name></expr>;</expr_stmt>

<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n8</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>re</name> <operator>=</operator> <call><name>RSCALE</name><argument_list>(<argument><expr><operator>-</operator><name><name>input</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>i</name><operator>+</operator><name>n3</name></expr>]</index></name></expr></argument>, <argument><expr><operator>-</operator> <name><name>input</name><index>[<expr><name>n3</name><operator>-</operator><literal type="number">1</literal><operator>-</operator><literal type="number">2</literal><operator>*</operator><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>im</name> <operator>=</operator> <call><name>RSCALE</name><argument_list>(<argument><expr><operator>-</operator><name><name>input</name><index>[<expr><name>n4</name><operator>+</operator><literal type="number">2</literal><operator>*</operator><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><operator>+</operator> <name><name>input</name><index>[<expr><name>n4</name><operator>-</operator><literal type="number">1</literal><operator>-</operator><literal type="number">2</literal><operator>*</operator><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>j</name> <operator>=</operator> <name><name>revtab</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>CMUL</name><argument_list>(<argument><expr><name><name>x</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>re</name></expr></argument>, <argument><expr><name><name>x</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>im</name></expr></argument>, <argument><expr><name>re</name></expr></argument>, <argument><expr><name>im</name></expr></argument>, <argument><expr><operator>-</operator><name><name>tcos</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>tsin</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>re</name> <operator>=</operator> <call><name>RSCALE</name><argument_list>( <argument><expr><name><name>input</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>i</name></expr>]</index></name></expr></argument> , <argument><expr><operator>-</operator> <name><name>input</name><index>[<expr><name>n2</name><operator>-</operator><literal type="number">1</literal><operator>-</operator><literal type="number">2</literal><operator>*</operator><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>im</name> <operator>=</operator> <call><name>RSCALE</name><argument_list>(<argument><expr><operator>-</operator><name><name>input</name><index>[<expr><name>n2</name><operator>+</operator><literal type="number">2</literal><operator>*</operator><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><operator>-</operator> <name><name>input</name><index>[ <expr><name>n</name><operator>-</operator><literal type="number">1</literal><operator>-</operator><literal type="number">2</literal><operator>*</operator><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>j</name> <operator>=</operator> <name><name>revtab</name><index>[<expr><name>n8</name> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>CMUL</name><argument_list>(<argument><expr><name><name>x</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>re</name></expr></argument>, <argument><expr><name><name>x</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>im</name></expr></argument>, <argument><expr><name>re</name></expr></argument>, <argument><expr><name>im</name></expr></argument>, <argument><expr><operator>-</operator><name><name>tcos</name><index>[<expr><name>n8</name> <operator>+</operator> <name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>tsin</name><index>[<expr><name>n8</name> <operator>+</operator> <name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>fft_calc</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init><condition><expr><name>i</name><operator>&lt;</operator><name>n8</name></expr>;</condition><incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>FFTDouble</name></type> <name>r0</name></decl>, <decl><type ref="prev"/><name>i0</name></decl>, <decl><type ref="prev"/><name>r1</name></decl>, <decl><type ref="prev"/><name>i1</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>CMULL</name><argument_list>(<argument><expr><name>i1</name></expr></argument>, <argument><expr><name>r0</name></expr></argument>, <argument><expr><name><name>x</name><index>[<expr><name>n8</name><operator>-</operator><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>re</name></expr></argument>, <argument><expr><name><name>x</name><index>[<expr><name>n8</name><operator>-</operator><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>im</name></expr></argument>, <argument><expr><operator>-</operator><name><name>tsin</name><index>[<expr><name>n8</name><operator>-</operator><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>-</operator><name><name>tcos</name><index>[<expr><name>n8</name><operator>-</operator><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>CMULL</name><argument_list>(<argument><expr><name>i0</name></expr></argument>, <argument><expr><name>r1</name></expr></argument>, <argument><expr><name><name>x</name><index>[<expr><name>n8</name><operator>+</operator><name>i</name></expr> ]</index></name><operator>.</operator><name>re</name></expr></argument>, <argument><expr><name><name>x</name><index>[<expr><name>n8</name><operator>+</operator><name>i</name></expr> ]</index></name><operator>.</operator><name>im</name></expr></argument>, <argument><expr><operator>-</operator><name><name>tsin</name><index>[<expr><name>n8</name><operator>+</operator><name>i</name></expr> ]</index></name></expr></argument>, <argument><expr><operator>-</operator><name><name>tcos</name><index>[<expr><name>n8</name><operator>+</operator><name>i</name></expr> ]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>o</name><index>[<expr><name>n8</name><operator>-</operator><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>re</name> <operator>=</operator> <name>r0</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>o</name><index>[<expr><name>n8</name><operator>-</operator><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>im</name> <operator>=</operator> <name>i0</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>o</name><index>[<expr><name>n8</name><operator>+</operator><name>i</name></expr> ]</index></name><operator>.</operator><name>re</name> <operator>=</operator> <name>r1</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>o</name><index>[<expr><name>n8</name><operator>+</operator><name>i</name></expr> ]</index></name><operator>.</operator><name>im</name> <operator>=</operator> <name>i1</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

</unit>
