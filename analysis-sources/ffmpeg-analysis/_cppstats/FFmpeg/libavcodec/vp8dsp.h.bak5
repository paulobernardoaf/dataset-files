




























#include <stddef.h>
#include <stdint.h>

typedef void (*vp8_mc_func)(uint8_t *dst , ptrdiff_t dstStride,
uint8_t *src , ptrdiff_t srcStride,
int h, int x, int y);

typedef struct VP8DSPContext {
void (*vp8_luma_dc_wht)(int16_t block[4][4][16], int16_t dc[16]);
void (*vp8_luma_dc_wht_dc)(int16_t block[4][4][16], int16_t dc[16]);
void (*vp8_idct_add)(uint8_t *dst, int16_t block[16], ptrdiff_t stride);
void (*vp8_idct_dc_add)(uint8_t *dst, int16_t block[16], ptrdiff_t stride);
void (*vp8_idct_dc_add4y)(uint8_t *dst, int16_t block[4][16],
ptrdiff_t stride);
void (*vp8_idct_dc_add4uv)(uint8_t *dst, int16_t block[4][16],
ptrdiff_t stride);


void (*vp8_v_loop_filter16y)(uint8_t *dst, ptrdiff_t stride,
int flim_E, int flim_I, int hev_thresh);
void (*vp8_h_loop_filter16y)(uint8_t *dst, ptrdiff_t stride,
int flim_E, int flim_I, int hev_thresh);
void (*vp8_v_loop_filter8uv)(uint8_t *dstU, uint8_t *dstV, ptrdiff_t stride,
int flim_E, int flim_I, int hev_thresh);
void (*vp8_h_loop_filter8uv)(uint8_t *dstU, uint8_t *dstV, ptrdiff_t stride,
int flim_E, int flim_I, int hev_thresh);


void (*vp8_v_loop_filter16y_inner)(uint8_t *dst, ptrdiff_t stride,
int flim_E, int flim_I, int hev_thresh);
void (*vp8_h_loop_filter16y_inner)(uint8_t *dst, ptrdiff_t stride,
int flim_E, int flim_I, int hev_thresh);
void (*vp8_v_loop_filter8uv_inner)(uint8_t *dstU, uint8_t *dstV,
ptrdiff_t stride,
int flim_E, int flim_I, int hev_thresh);
void (*vp8_h_loop_filter8uv_inner)(uint8_t *dstU, uint8_t *dstV,
ptrdiff_t stride,
int flim_E, int flim_I, int hev_thresh);

void (*vp8_v_loop_filter_simple)(uint8_t *dst, ptrdiff_t stride, int flim);
void (*vp8_h_loop_filter_simple)(uint8_t *dst, ptrdiff_t stride, int flim);









vp8_mc_func put_vp8_epel_pixels_tab[3][3][3];
vp8_mc_func put_vp8_bilinear_pixels_tab[3][3][3];
} VP8DSPContext;

void ff_put_vp8_pixels16_c(uint8_t *dst, uint8_t *src, ptrdiff_t stride,
int h, int x, int y);
void ff_put_vp8_pixels8_c(uint8_t *dst, uint8_t *src, ptrdiff_t stride,
int h, int x, int y);
void ff_put_vp8_pixels4_c(uint8_t *dst, uint8_t *src, ptrdiff_t stride,
int h, int x, int y);

void ff_vp7dsp_init(VP8DSPContext *c);

void ff_vp78dsp_init(VP8DSPContext *c);
void ff_vp78dsp_init_aarch64(VP8DSPContext *c);
void ff_vp78dsp_init_arm(VP8DSPContext *c);
void ff_vp78dsp_init_ppc(VP8DSPContext *c);
void ff_vp78dsp_init_x86(VP8DSPContext *c);

void ff_vp8dsp_init(VP8DSPContext *c);
void ff_vp8dsp_init_aarch64(VP8DSPContext *c);
void ff_vp8dsp_init_arm(VP8DSPContext *c);
void ff_vp8dsp_init_x86(VP8DSPContext *c);
void ff_vp8dsp_init_mips(VP8DSPContext *c);

#define IS_VP7 1
#define IS_VP8 0


