<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\ratecontrol.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/eval.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>Predictor</name><block>{

<decl_stmt><decl><type><name>double</name></type> <name>coeff</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>decay</name></decl>;</decl_stmt>

}</block></struct></type> <name>Predictor</name>;</typedef>

<typedef>typedef <type><struct>struct <name>RateControlEntry</name><block>{

<decl_stmt><decl><type><name>int</name></type> <name>pict_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>qscale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>mv_bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_tex_bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>p_tex_bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>misc_bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>header_bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>expected_bits</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>new_pict_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>new_qscale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>mc_mb_var_sum</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>mb_var_sum</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>skip_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>f_code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>b_code</name></decl>;</decl_stmt>

}</block></struct></type><name>RateControlEntry</name>;</typedef>

<typedef>typedef <type><struct>struct <name>RateControlContext</name><block>{

<decl_stmt><decl><type><name>int</name></type> <name>num_entries</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>RateControlEntry</name> <modifier>*</modifier></type><name>entry</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>buffer_index</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>Predictor</name></type> <name><name>pred</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>short_term_qsum</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>double</name></type> <name>short_term_qcount</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>double</name></type> <name>pass1_rc_eq_output_sum</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name>pass1_wanted_bits</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>double</name></type> <name>last_qscale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>double</name></type> <name><name>last_qscale_for</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>last_mc_mb_var_sum</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>last_mb_var_sum</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>i_cplx_sum</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>p_cplx_sum</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>mv_bits_sum</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>qscale_sum</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>frame_count</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>last_non_b_pict_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>non_lavc_opaque</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>float</name></type> <name>dry_run_qscale</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>last_picture_number</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AVExpr</name> <modifier>*</modifier></type> <name>rc_eq_eval</name></decl>;</decl_stmt>

}</block></struct></type><name>RateControlContext</name>;</typedef>

<struct_decl>struct <name>MpegEncContext</name>;</struct_decl>

<function_decl><type><name>int</name></type> <name>ff_rate_control_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>MpegEncContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>float</name></type> <name>ff_rate_estimate_qscale</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>MpegEncContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dry_run</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_write_pass1_stats</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>MpegEncContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_rate_control_uninit</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>MpegEncContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_vbv_update</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>MpegEncContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>frame_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_get_2pass_fcode</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>MpegEncContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
