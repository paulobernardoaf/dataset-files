<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\aptx.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"aptx.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>quantize_intervals_LF</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><operator>-</operator><literal type="number">9948</literal></expr>, <expr><literal type="number">9948</literal></expr>, <expr><literal type="number">29860</literal></expr>, <expr><literal type="number">49808</literal></expr>, <expr><literal type="number">69822</literal></expr>, <expr><literal type="number">89926</literal></expr>, <expr><literal type="number">110144</literal></expr>, <expr><literal type="number">130502</literal></expr>,

<expr><literal type="number">151026</literal></expr>, <expr><literal type="number">171738</literal></expr>, <expr><literal type="number">192666</literal></expr>, <expr><literal type="number">213832</literal></expr>, <expr><literal type="number">235264</literal></expr>, <expr><literal type="number">256982</literal></expr>, <expr><literal type="number">279014</literal></expr>, <expr><literal type="number">301384</literal></expr>,

<expr><literal type="number">324118</literal></expr>, <expr><literal type="number">347244</literal></expr>, <expr><literal type="number">370790</literal></expr>, <expr><literal type="number">394782</literal></expr>, <expr><literal type="number">419250</literal></expr>, <expr><literal type="number">444226</literal></expr>, <expr><literal type="number">469742</literal></expr>, <expr><literal type="number">495832</literal></expr>,

<expr><literal type="number">522536</literal></expr>, <expr><literal type="number">549890</literal></expr>, <expr><literal type="number">577936</literal></expr>, <expr><literal type="number">606720</literal></expr>, <expr><literal type="number">636290</literal></expr>, <expr><literal type="number">666700</literal></expr>, <expr><literal type="number">698006</literal></expr>, <expr><literal type="number">730270</literal></expr>,

<expr><literal type="number">763562</literal></expr>, <expr><literal type="number">797958</literal></expr>, <expr><literal type="number">833538</literal></expr>, <expr><literal type="number">870398</literal></expr>, <expr><literal type="number">908640</literal></expr>, <expr><literal type="number">948376</literal></expr>, <expr><literal type="number">989740</literal></expr>, <expr><literal type="number">1032874</literal></expr>,

<expr><literal type="number">1077948</literal></expr>, <expr><literal type="number">1125150</literal></expr>, <expr><literal type="number">1174700</literal></expr>, <expr><literal type="number">1226850</literal></expr>, <expr><literal type="number">1281900</literal></expr>, <expr><literal type="number">1340196</literal></expr>, <expr><literal type="number">1402156</literal></expr>, <expr><literal type="number">1468282</literal></expr>,

<expr><literal type="number">1539182</literal></expr>, <expr><literal type="number">1615610</literal></expr>, <expr><literal type="number">1698514</literal></expr>, <expr><literal type="number">1789098</literal></expr>, <expr><literal type="number">1888944</literal></expr>, <expr><literal type="number">2000168</literal></expr>, <expr><literal type="number">2125700</literal></expr>, <expr><literal type="number">2269750</literal></expr>,

<expr><literal type="number">2438670</literal></expr>, <expr><literal type="number">2642660</literal></expr>, <expr><literal type="number">2899462</literal></expr>, <expr><literal type="number">3243240</literal></expr>, <expr><literal type="number">3746078</literal></expr>, <expr><literal type="number">4535138</literal></expr>, <expr><literal type="number">5664098</literal></expr>, <expr><literal type="number">7102424</literal></expr>,

<expr><literal type="number">8897462</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>invert_quantize_dither_factors_LF</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">9948</literal></expr>, <expr><literal type="number">9948</literal></expr>, <expr><literal type="number">9962</literal></expr>, <expr><literal type="number">9988</literal></expr>, <expr><literal type="number">10026</literal></expr>, <expr><literal type="number">10078</literal></expr>, <expr><literal type="number">10142</literal></expr>, <expr><literal type="number">10218</literal></expr>,

<expr><literal type="number">10306</literal></expr>, <expr><literal type="number">10408</literal></expr>, <expr><literal type="number">10520</literal></expr>, <expr><literal type="number">10646</literal></expr>, <expr><literal type="number">10784</literal></expr>, <expr><literal type="number">10934</literal></expr>, <expr><literal type="number">11098</literal></expr>, <expr><literal type="number">11274</literal></expr>,

<expr><literal type="number">11462</literal></expr>, <expr><literal type="number">11664</literal></expr>, <expr><literal type="number">11880</literal></expr>, <expr><literal type="number">12112</literal></expr>, <expr><literal type="number">12358</literal></expr>, <expr><literal type="number">12618</literal></expr>, <expr><literal type="number">12898</literal></expr>, <expr><literal type="number">13194</literal></expr>,

<expr><literal type="number">13510</literal></expr>, <expr><literal type="number">13844</literal></expr>, <expr><literal type="number">14202</literal></expr>, <expr><literal type="number">14582</literal></expr>, <expr><literal type="number">14988</literal></expr>, <expr><literal type="number">15422</literal></expr>, <expr><literal type="number">15884</literal></expr>, <expr><literal type="number">16380</literal></expr>,

<expr><literal type="number">16912</literal></expr>, <expr><literal type="number">17484</literal></expr>, <expr><literal type="number">18098</literal></expr>, <expr><literal type="number">18762</literal></expr>, <expr><literal type="number">19480</literal></expr>, <expr><literal type="number">20258</literal></expr>, <expr><literal type="number">21106</literal></expr>, <expr><literal type="number">22030</literal></expr>,

<expr><literal type="number">23044</literal></expr>, <expr><literal type="number">24158</literal></expr>, <expr><literal type="number">25390</literal></expr>, <expr><literal type="number">26760</literal></expr>, <expr><literal type="number">28290</literal></expr>, <expr><literal type="number">30008</literal></expr>, <expr><literal type="number">31954</literal></expr>, <expr><literal type="number">34172</literal></expr>,

<expr><literal type="number">36728</literal></expr>, <expr><literal type="number">39700</literal></expr>, <expr><literal type="number">43202</literal></expr>, <expr><literal type="number">47382</literal></expr>, <expr><literal type="number">52462</literal></expr>, <expr><literal type="number">58762</literal></expr>, <expr><literal type="number">66770</literal></expr>, <expr><literal type="number">77280</literal></expr>,

<expr><literal type="number">91642</literal></expr>, <expr><literal type="number">112348</literal></expr>, <expr><literal type="number">144452</literal></expr>, <expr><literal type="number">199326</literal></expr>, <expr><literal type="number">303512</literal></expr>, <expr><literal type="number">485546</literal></expr>, <expr><literal type="number">643414</literal></expr>, <expr><literal type="number">794914</literal></expr>,

<expr><literal type="number">1000124</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>quantize_dither_factors_LF</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">22</literal></expr>,

<expr><literal type="number">26</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">47</literal></expr>,

<expr><literal type="number">51</literal></expr>, <expr><literal type="number">54</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">65</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">74</literal></expr>, <expr><literal type="number">79</literal></expr>,

<expr><literal type="number">84</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">95</literal></expr>, <expr><literal type="number">102</literal></expr>, <expr><literal type="number">109</literal></expr>, <expr><literal type="number">116</literal></expr>, <expr><literal type="number">124</literal></expr>, <expr><literal type="number">133</literal></expr>,

<expr><literal type="number">143</literal></expr>, <expr><literal type="number">154</literal></expr>, <expr><literal type="number">166</literal></expr>, <expr><literal type="number">180</literal></expr>, <expr><literal type="number">195</literal></expr>, <expr><literal type="number">212</literal></expr>, <expr><literal type="number">231</literal></expr>, <expr><literal type="number">254</literal></expr>,

<expr><literal type="number">279</literal></expr>, <expr><literal type="number">308</literal></expr>, <expr><literal type="number">343</literal></expr>, <expr><literal type="number">383</literal></expr>, <expr><literal type="number">430</literal></expr>, <expr><literal type="number">487</literal></expr>, <expr><literal type="number">555</literal></expr>, <expr><literal type="number">639</literal></expr>,

<expr><literal type="number">743</literal></expr>, <expr><literal type="number">876</literal></expr>, <expr><literal type="number">1045</literal></expr>, <expr><literal type="number">1270</literal></expr>, <expr><literal type="number">1575</literal></expr>, <expr><literal type="number">2002</literal></expr>, <expr><literal type="number">2628</literal></expr>, <expr><literal type="number">3591</literal></expr>,

<expr><literal type="number">5177</literal></expr>, <expr><literal type="number">8026</literal></expr>, <expr><literal type="number">13719</literal></expr>, <expr><literal type="number">26047</literal></expr>, <expr><literal type="number">45509</literal></expr>, <expr><literal type="number">39467</literal></expr>, <expr><literal type="number">37875</literal></expr>, <expr><literal type="number">51303</literal></expr>,

<expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>quantize_factor_select_offset_LF</name><index>[<expr><literal type="number">65</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">21</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><operator>-</operator><literal type="number">17</literal></expr>, <expr><operator>-</operator><literal type="number">15</literal></expr>, <expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">8</literal></expr>,

<expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">10</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">31</literal></expr>,

<expr><literal type="number">34</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">47</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">57</literal></expr>,

<expr><literal type="number">60</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">68</literal></expr>, <expr><literal type="number">72</literal></expr>, <expr><literal type="number">76</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><literal type="number">85</literal></expr>, <expr><literal type="number">89</literal></expr>,

<expr><literal type="number">94</literal></expr>, <expr><literal type="number">99</literal></expr>, <expr><literal type="number">105</literal></expr>, <expr><literal type="number">110</literal></expr>, <expr><literal type="number">116</literal></expr>, <expr><literal type="number">123</literal></expr>, <expr><literal type="number">129</literal></expr>, <expr><literal type="number">136</literal></expr>,

<expr><literal type="number">144</literal></expr>, <expr><literal type="number">152</literal></expr>, <expr><literal type="number">161</literal></expr>, <expr><literal type="number">171</literal></expr>, <expr><literal type="number">182</literal></expr>, <expr><literal type="number">194</literal></expr>, <expr><literal type="number">207</literal></expr>, <expr><literal type="number">223</literal></expr>,

<expr><literal type="number">241</literal></expr>, <expr><literal type="number">263</literal></expr>, <expr><literal type="number">291</literal></expr>, <expr><literal type="number">328</literal></expr>, <expr><literal type="number">382</literal></expr>, <expr><literal type="number">467</literal></expr>, <expr><literal type="number">522</literal></expr>, <expr><literal type="number">522</literal></expr>,

<expr><literal type="number">522</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>quantize_intervals_MLF</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><operator>-</operator><literal type="number">89806</literal></expr>, <expr><literal type="number">89806</literal></expr>, <expr><literal type="number">278502</literal></expr>, <expr><literal type="number">494338</literal></expr>, <expr><literal type="number">759442</literal></expr>, <expr><literal type="number">1113112</literal></expr>, <expr><literal type="number">1652322</literal></expr>, <expr><literal type="number">2720256</literal></expr>, <expr><literal type="number">5190186</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>invert_quantize_dither_factors_MLF</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">89806</literal></expr>, <expr><literal type="number">89806</literal></expr>, <expr><literal type="number">98890</literal></expr>, <expr><literal type="number">116946</literal></expr>, <expr><literal type="number">148158</literal></expr>, <expr><literal type="number">205512</literal></expr>, <expr><literal type="number">333698</literal></expr>, <expr><literal type="number">734236</literal></expr>, <expr><literal type="number">1735696</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>quantize_dither_factors_MLF</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">2271</literal></expr>, <expr><literal type="number">4514</literal></expr>, <expr><literal type="number">7803</literal></expr>, <expr><literal type="number">14339</literal></expr>, <expr><literal type="number">32047</literal></expr>, <expr><literal type="number">100135</literal></expr>, <expr><literal type="number">250365</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>quantize_factor_select_offset_MLF</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">14</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">96</literal></expr>, <expr><literal type="number">154</literal></expr>, <expr><literal type="number">270</literal></expr>, <expr><literal type="number">521</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>quantize_intervals_MHF</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{

<expr><operator>-</operator><literal type="number">194080</literal></expr>, <expr><literal type="number">194080</literal></expr>, <expr><literal type="number">890562</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>invert_quantize_dither_factors_MHF</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">194080</literal></expr>, <expr><literal type="number">194080</literal></expr>, <expr><literal type="number">502402</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>quantize_dither_factors_MHF</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">77081</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>quantize_factor_select_offset_MHF</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">33</literal></expr>, <expr><literal type="number">136</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>quantize_intervals_HF</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{

<expr><operator>-</operator><literal type="number">163006</literal></expr>, <expr><literal type="number">163006</literal></expr>, <expr><literal type="number">542708</literal></expr>, <expr><literal type="number">1120554</literal></expr>, <expr><literal type="number">2669238</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>invert_quantize_dither_factors_HF</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">163006</literal></expr>, <expr><literal type="number">163006</literal></expr>, <expr><literal type="number">216698</literal></expr>, <expr><literal type="number">361148</literal></expr>, <expr><literal type="number">1187538</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>quantize_dither_factors_HF</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">13423</literal></expr>, <expr><literal type="number">36113</literal></expr>, <expr><literal type="number">206598</literal></expr>, <expr><literal type="number">0</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>quantize_factor_select_offset_HF</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">95</literal></expr>, <expr><literal type="number">262</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>hd_quantize_intervals_LF</name><index>[<expr><literal type="number">257</literal></expr>]</index></name> <init>= <expr><block>{

<expr><operator>-</operator><literal type="number">2436</literal></expr>, <expr><literal type="number">2436</literal></expr>, <expr><literal type="number">7308</literal></expr>, <expr><literal type="number">12180</literal></expr>, <expr><literal type="number">17054</literal></expr>, <expr><literal type="number">21930</literal></expr>, <expr><literal type="number">26806</literal></expr>, <expr><literal type="number">31686</literal></expr>,

<expr><literal type="number">36566</literal></expr>, <expr><literal type="number">41450</literal></expr>, <expr><literal type="number">46338</literal></expr>, <expr><literal type="number">51230</literal></expr>, <expr><literal type="number">56124</literal></expr>, <expr><literal type="number">61024</literal></expr>, <expr><literal type="number">65928</literal></expr>, <expr><literal type="number">70836</literal></expr>,

<expr><literal type="number">75750</literal></expr>, <expr><literal type="number">80670</literal></expr>, <expr><literal type="number">85598</literal></expr>, <expr><literal type="number">90530</literal></expr>, <expr><literal type="number">95470</literal></expr>, <expr><literal type="number">100418</literal></expr>, <expr><literal type="number">105372</literal></expr>, <expr><literal type="number">110336</literal></expr>,

<expr><literal type="number">115308</literal></expr>, <expr><literal type="number">120288</literal></expr>, <expr><literal type="number">125278</literal></expr>, <expr><literal type="number">130276</literal></expr>, <expr><literal type="number">135286</literal></expr>, <expr><literal type="number">140304</literal></expr>, <expr><literal type="number">145334</literal></expr>, <expr><literal type="number">150374</literal></expr>,

<expr><literal type="number">155426</literal></expr>, <expr><literal type="number">160490</literal></expr>, <expr><literal type="number">165566</literal></expr>, <expr><literal type="number">170654</literal></expr>, <expr><literal type="number">175756</literal></expr>, <expr><literal type="number">180870</literal></expr>, <expr><literal type="number">185998</literal></expr>, <expr><literal type="number">191138</literal></expr>,

<expr><literal type="number">196294</literal></expr>, <expr><literal type="number">201466</literal></expr>, <expr><literal type="number">206650</literal></expr>, <expr><literal type="number">211850</literal></expr>, <expr><literal type="number">217068</literal></expr>, <expr><literal type="number">222300</literal></expr>, <expr><literal type="number">227548</literal></expr>, <expr><literal type="number">232814</literal></expr>,

<expr><literal type="number">238096</literal></expr>, <expr><literal type="number">243396</literal></expr>, <expr><literal type="number">248714</literal></expr>, <expr><literal type="number">254050</literal></expr>, <expr><literal type="number">259406</literal></expr>, <expr><literal type="number">264778</literal></expr>, <expr><literal type="number">270172</literal></expr>, <expr><literal type="number">275584</literal></expr>,

<expr><literal type="number">281018</literal></expr>, <expr><literal type="number">286470</literal></expr>, <expr><literal type="number">291944</literal></expr>, <expr><literal type="number">297440</literal></expr>, <expr><literal type="number">302956</literal></expr>, <expr><literal type="number">308496</literal></expr>, <expr><literal type="number">314056</literal></expr>, <expr><literal type="number">319640</literal></expr>,

<expr><literal type="number">325248</literal></expr>, <expr><literal type="number">330878</literal></expr>, <expr><literal type="number">336532</literal></expr>, <expr><literal type="number">342212</literal></expr>, <expr><literal type="number">347916</literal></expr>, <expr><literal type="number">353644</literal></expr>, <expr><literal type="number">359398</literal></expr>, <expr><literal type="number">365178</literal></expr>,

<expr><literal type="number">370986</literal></expr>, <expr><literal type="number">376820</literal></expr>, <expr><literal type="number">382680</literal></expr>, <expr><literal type="number">388568</literal></expr>, <expr><literal type="number">394486</literal></expr>, <expr><literal type="number">400430</literal></expr>, <expr><literal type="number">406404</literal></expr>, <expr><literal type="number">412408</literal></expr>,

<expr><literal type="number">418442</literal></expr>, <expr><literal type="number">424506</literal></expr>, <expr><literal type="number">430600</literal></expr>, <expr><literal type="number">436726</literal></expr>, <expr><literal type="number">442884</literal></expr>, <expr><literal type="number">449074</literal></expr>, <expr><literal type="number">455298</literal></expr>, <expr><literal type="number">461554</literal></expr>,

<expr><literal type="number">467844</literal></expr>, <expr><literal type="number">474168</literal></expr>, <expr><literal type="number">480528</literal></expr>, <expr><literal type="number">486922</literal></expr>, <expr><literal type="number">493354</literal></expr>, <expr><literal type="number">499820</literal></expr>, <expr><literal type="number">506324</literal></expr>, <expr><literal type="number">512866</literal></expr>,

<expr><literal type="number">519446</literal></expr>, <expr><literal type="number">526064</literal></expr>, <expr><literal type="number">532722</literal></expr>, <expr><literal type="number">539420</literal></expr>, <expr><literal type="number">546160</literal></expr>, <expr><literal type="number">552940</literal></expr>, <expr><literal type="number">559760</literal></expr>, <expr><literal type="number">566624</literal></expr>,

<expr><literal type="number">573532</literal></expr>, <expr><literal type="number">580482</literal></expr>, <expr><literal type="number">587478</literal></expr>, <expr><literal type="number">594520</literal></expr>, <expr><literal type="number">601606</literal></expr>, <expr><literal type="number">608740</literal></expr>, <expr><literal type="number">615920</literal></expr>, <expr><literal type="number">623148</literal></expr>,

<expr><literal type="number">630426</literal></expr>, <expr><literal type="number">637754</literal></expr>, <expr><literal type="number">645132</literal></expr>, <expr><literal type="number">652560</literal></expr>, <expr><literal type="number">660042</literal></expr>, <expr><literal type="number">667576</literal></expr>, <expr><literal type="number">675164</literal></expr>, <expr><literal type="number">682808</literal></expr>,

<expr><literal type="number">690506</literal></expr>, <expr><literal type="number">698262</literal></expr>, <expr><literal type="number">706074</literal></expr>, <expr><literal type="number">713946</literal></expr>, <expr><literal type="number">721876</literal></expr>, <expr><literal type="number">729868</literal></expr>, <expr><literal type="number">737920</literal></expr>, <expr><literal type="number">746036</literal></expr>,

<expr><literal type="number">754216</literal></expr>, <expr><literal type="number">762460</literal></expr>, <expr><literal type="number">770770</literal></expr>, <expr><literal type="number">779148</literal></expr>, <expr><literal type="number">787594</literal></expr>, <expr><literal type="number">796108</literal></expr>, <expr><literal type="number">804694</literal></expr>, <expr><literal type="number">813354</literal></expr>,

<expr><literal type="number">822086</literal></expr>, <expr><literal type="number">830892</literal></expr>, <expr><literal type="number">839774</literal></expr>, <expr><literal type="number">848736</literal></expr>, <expr><literal type="number">857776</literal></expr>, <expr><literal type="number">866896</literal></expr>, <expr><literal type="number">876100</literal></expr>, <expr><literal type="number">885386</literal></expr>,

<expr><literal type="number">894758</literal></expr>, <expr><literal type="number">904218</literal></expr>, <expr><literal type="number">913766</literal></expr>, <expr><literal type="number">923406</literal></expr>, <expr><literal type="number">933138</literal></expr>, <expr><literal type="number">942964</literal></expr>, <expr><literal type="number">952886</literal></expr>, <expr><literal type="number">962908</literal></expr>,

<expr><literal type="number">973030</literal></expr>, <expr><literal type="number">983254</literal></expr>, <expr><literal type="number">993582</literal></expr>, <expr><literal type="number">1004020</literal></expr>, <expr><literal type="number">1014566</literal></expr>, <expr><literal type="number">1025224</literal></expr>, <expr><literal type="number">1035996</literal></expr>, <expr><literal type="number">1046886</literal></expr>,

<expr><literal type="number">1057894</literal></expr>, <expr><literal type="number">1069026</literal></expr>, <expr><literal type="number">1080284</literal></expr>, <expr><literal type="number">1091670</literal></expr>, <expr><literal type="number">1103186</literal></expr>, <expr><literal type="number">1114838</literal></expr>, <expr><literal type="number">1126628</literal></expr>, <expr><literal type="number">1138558</literal></expr>,

<expr><literal type="number">1150634</literal></expr>, <expr><literal type="number">1162858</literal></expr>, <expr><literal type="number">1175236</literal></expr>, <expr><literal type="number">1187768</literal></expr>, <expr><literal type="number">1200462</literal></expr>, <expr><literal type="number">1213320</literal></expr>, <expr><literal type="number">1226346</literal></expr>, <expr><literal type="number">1239548</literal></expr>,

<expr><literal type="number">1252928</literal></expr>, <expr><literal type="number">1266490</literal></expr>, <expr><literal type="number">1280242</literal></expr>, <expr><literal type="number">1294188</literal></expr>, <expr><literal type="number">1308334</literal></expr>, <expr><literal type="number">1322688</literal></expr>, <expr><literal type="number">1337252</literal></expr>, <expr><literal type="number">1352034</literal></expr>,

<expr><literal type="number">1367044</literal></expr>, <expr><literal type="number">1382284</literal></expr>, <expr><literal type="number">1397766</literal></expr>, <expr><literal type="number">1413494</literal></expr>, <expr><literal type="number">1429478</literal></expr>, <expr><literal type="number">1445728</literal></expr>, <expr><literal type="number">1462252</literal></expr>, <expr><literal type="number">1479058</literal></expr>,

<expr><literal type="number">1496158</literal></expr>, <expr><literal type="number">1513562</literal></expr>, <expr><literal type="number">1531280</literal></expr>, <expr><literal type="number">1549326</literal></expr>, <expr><literal type="number">1567710</literal></expr>, <expr><literal type="number">1586446</literal></expr>, <expr><literal type="number">1605550</literal></expr>, <expr><literal type="number">1625034</literal></expr>,

<expr><literal type="number">1644914</literal></expr>, <expr><literal type="number">1665208</literal></expr>, <expr><literal type="number">1685932</literal></expr>, <expr><literal type="number">1707108</literal></expr>, <expr><literal type="number">1728754</literal></expr>, <expr><literal type="number">1750890</literal></expr>, <expr><literal type="number">1773542</literal></expr>, <expr><literal type="number">1796732</literal></expr>,

<expr><literal type="number">1820488</literal></expr>, <expr><literal type="number">1844840</literal></expr>, <expr><literal type="number">1869816</literal></expr>, <expr><literal type="number">1895452</literal></expr>, <expr><literal type="number">1921780</literal></expr>, <expr><literal type="number">1948842</literal></expr>, <expr><literal type="number">1976680</literal></expr>, <expr><literal type="number">2005338</literal></expr>,

<expr><literal type="number">2034868</literal></expr>, <expr><literal type="number">2065322</literal></expr>, <expr><literal type="number">2096766</literal></expr>, <expr><literal type="number">2129260</literal></expr>, <expr><literal type="number">2162880</literal></expr>, <expr><literal type="number">2197708</literal></expr>, <expr><literal type="number">2233832</literal></expr>, <expr><literal type="number">2271352</literal></expr>,

<expr><literal type="number">2310384</literal></expr>, <expr><literal type="number">2351050</literal></expr>, <expr><literal type="number">2393498</literal></expr>, <expr><literal type="number">2437886</literal></expr>, <expr><literal type="number">2484404</literal></expr>, <expr><literal type="number">2533262</literal></expr>, <expr><literal type="number">2584710</literal></expr>, <expr><literal type="number">2639036</literal></expr>,

<expr><literal type="number">2696578</literal></expr>, <expr><literal type="number">2757738</literal></expr>, <expr><literal type="number">2822998</literal></expr>, <expr><literal type="number">2892940</literal></expr>, <expr><literal type="number">2968278</literal></expr>, <expr><literal type="number">3049896</literal></expr>, <expr><literal type="number">3138912</literal></expr>, <expr><literal type="number">3236760</literal></expr>,

<expr><literal type="number">3345312</literal></expr>, <expr><literal type="number">3467068</literal></expr>, <expr><literal type="number">3605434</literal></expr>, <expr><literal type="number">3765154</literal></expr>, <expr><literal type="number">3952904</literal></expr>, <expr><literal type="number">4177962</literal></expr>, <expr><literal type="number">4452178</literal></expr>, <expr><literal type="number">4787134</literal></expr>,

<expr><literal type="number">5187290</literal></expr>, <expr><literal type="number">5647128</literal></expr>, <expr><literal type="number">6159120</literal></expr>, <expr><literal type="number">6720518</literal></expr>, <expr><literal type="number">7332904</literal></expr>, <expr><literal type="number">8000032</literal></expr>, <expr><literal type="number">8726664</literal></expr>, <expr><literal type="number">9518152</literal></expr>,

<expr><literal type="number">10380372</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>hd_invert_quantize_dither_factors_LF</name><index>[<expr><literal type="number">257</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">2436</literal></expr>, <expr><literal type="number">2436</literal></expr>, <expr><literal type="number">2436</literal></expr>, <expr><literal type="number">2436</literal></expr>, <expr><literal type="number">2438</literal></expr>, <expr><literal type="number">2438</literal></expr>, <expr><literal type="number">2438</literal></expr>, <expr><literal type="number">2440</literal></expr>,

<expr><literal type="number">2442</literal></expr>, <expr><literal type="number">2442</literal></expr>, <expr><literal type="number">2444</literal></expr>, <expr><literal type="number">2446</literal></expr>, <expr><literal type="number">2448</literal></expr>, <expr><literal type="number">2450</literal></expr>, <expr><literal type="number">2454</literal></expr>, <expr><literal type="number">2456</literal></expr>,

<expr><literal type="number">2458</literal></expr>, <expr><literal type="number">2462</literal></expr>, <expr><literal type="number">2464</literal></expr>, <expr><literal type="number">2468</literal></expr>, <expr><literal type="number">2472</literal></expr>, <expr><literal type="number">2476</literal></expr>, <expr><literal type="number">2480</literal></expr>, <expr><literal type="number">2484</literal></expr>,

<expr><literal type="number">2488</literal></expr>, <expr><literal type="number">2492</literal></expr>, <expr><literal type="number">2498</literal></expr>, <expr><literal type="number">2502</literal></expr>, <expr><literal type="number">2506</literal></expr>, <expr><literal type="number">2512</literal></expr>, <expr><literal type="number">2518</literal></expr>, <expr><literal type="number">2524</literal></expr>,

<expr><literal type="number">2528</literal></expr>, <expr><literal type="number">2534</literal></expr>, <expr><literal type="number">2540</literal></expr>, <expr><literal type="number">2548</literal></expr>, <expr><literal type="number">2554</literal></expr>, <expr><literal type="number">2560</literal></expr>, <expr><literal type="number">2568</literal></expr>, <expr><literal type="number">2574</literal></expr>,

<expr><literal type="number">2582</literal></expr>, <expr><literal type="number">2588</literal></expr>, <expr><literal type="number">2596</literal></expr>, <expr><literal type="number">2604</literal></expr>, <expr><literal type="number">2612</literal></expr>, <expr><literal type="number">2620</literal></expr>, <expr><literal type="number">2628</literal></expr>, <expr><literal type="number">2636</literal></expr>,

<expr><literal type="number">2646</literal></expr>, <expr><literal type="number">2654</literal></expr>, <expr><literal type="number">2664</literal></expr>, <expr><literal type="number">2672</literal></expr>, <expr><literal type="number">2682</literal></expr>, <expr><literal type="number">2692</literal></expr>, <expr><literal type="number">2702</literal></expr>, <expr><literal type="number">2712</literal></expr>,

<expr><literal type="number">2722</literal></expr>, <expr><literal type="number">2732</literal></expr>, <expr><literal type="number">2742</literal></expr>, <expr><literal type="number">2752</literal></expr>, <expr><literal type="number">2764</literal></expr>, <expr><literal type="number">2774</literal></expr>, <expr><literal type="number">2786</literal></expr>, <expr><literal type="number">2798</literal></expr>,

<expr><literal type="number">2810</literal></expr>, <expr><literal type="number">2822</literal></expr>, <expr><literal type="number">2834</literal></expr>, <expr><literal type="number">2846</literal></expr>, <expr><literal type="number">2858</literal></expr>, <expr><literal type="number">2870</literal></expr>, <expr><literal type="number">2884</literal></expr>, <expr><literal type="number">2896</literal></expr>,

<expr><literal type="number">2910</literal></expr>, <expr><literal type="number">2924</literal></expr>, <expr><literal type="number">2938</literal></expr>, <expr><literal type="number">2952</literal></expr>, <expr><literal type="number">2966</literal></expr>, <expr><literal type="number">2980</literal></expr>, <expr><literal type="number">2994</literal></expr>, <expr><literal type="number">3010</literal></expr>,

<expr><literal type="number">3024</literal></expr>, <expr><literal type="number">3040</literal></expr>, <expr><literal type="number">3056</literal></expr>, <expr><literal type="number">3070</literal></expr>, <expr><literal type="number">3086</literal></expr>, <expr><literal type="number">3104</literal></expr>, <expr><literal type="number">3120</literal></expr>, <expr><literal type="number">3136</literal></expr>,

<expr><literal type="number">3154</literal></expr>, <expr><literal type="number">3170</literal></expr>, <expr><literal type="number">3188</literal></expr>, <expr><literal type="number">3206</literal></expr>, <expr><literal type="number">3224</literal></expr>, <expr><literal type="number">3242</literal></expr>, <expr><literal type="number">3262</literal></expr>, <expr><literal type="number">3280</literal></expr>,

<expr><literal type="number">3300</literal></expr>, <expr><literal type="number">3320</literal></expr>, <expr><literal type="number">3338</literal></expr>, <expr><literal type="number">3360</literal></expr>, <expr><literal type="number">3380</literal></expr>, <expr><literal type="number">3400</literal></expr>, <expr><literal type="number">3422</literal></expr>, <expr><literal type="number">3442</literal></expr>,

<expr><literal type="number">3464</literal></expr>, <expr><literal type="number">3486</literal></expr>, <expr><literal type="number">3508</literal></expr>, <expr><literal type="number">3532</literal></expr>, <expr><literal type="number">3554</literal></expr>, <expr><literal type="number">3578</literal></expr>, <expr><literal type="number">3602</literal></expr>, <expr><literal type="number">3626</literal></expr>,

<expr><literal type="number">3652</literal></expr>, <expr><literal type="number">3676</literal></expr>, <expr><literal type="number">3702</literal></expr>, <expr><literal type="number">3728</literal></expr>, <expr><literal type="number">3754</literal></expr>, <expr><literal type="number">3780</literal></expr>, <expr><literal type="number">3808</literal></expr>, <expr><literal type="number">3836</literal></expr>,

<expr><literal type="number">3864</literal></expr>, <expr><literal type="number">3892</literal></expr>, <expr><literal type="number">3920</literal></expr>, <expr><literal type="number">3950</literal></expr>, <expr><literal type="number">3980</literal></expr>, <expr><literal type="number">4010</literal></expr>, <expr><literal type="number">4042</literal></expr>, <expr><literal type="number">4074</literal></expr>,

<expr><literal type="number">4106</literal></expr>, <expr><literal type="number">4138</literal></expr>, <expr><literal type="number">4172</literal></expr>, <expr><literal type="number">4206</literal></expr>, <expr><literal type="number">4240</literal></expr>, <expr><literal type="number">4276</literal></expr>, <expr><literal type="number">4312</literal></expr>, <expr><literal type="number">4348</literal></expr>,

<expr><literal type="number">4384</literal></expr>, <expr><literal type="number">4422</literal></expr>, <expr><literal type="number">4460</literal></expr>, <expr><literal type="number">4500</literal></expr>, <expr><literal type="number">4540</literal></expr>, <expr><literal type="number">4580</literal></expr>, <expr><literal type="number">4622</literal></expr>, <expr><literal type="number">4664</literal></expr>,

<expr><literal type="number">4708</literal></expr>, <expr><literal type="number">4752</literal></expr>, <expr><literal type="number">4796</literal></expr>, <expr><literal type="number">4842</literal></expr>, <expr><literal type="number">4890</literal></expr>, <expr><literal type="number">4938</literal></expr>, <expr><literal type="number">4986</literal></expr>, <expr><literal type="number">5036</literal></expr>,

<expr><literal type="number">5086</literal></expr>, <expr><literal type="number">5138</literal></expr>, <expr><literal type="number">5192</literal></expr>, <expr><literal type="number">5246</literal></expr>, <expr><literal type="number">5300</literal></expr>, <expr><literal type="number">5358</literal></expr>, <expr><literal type="number">5416</literal></expr>, <expr><literal type="number">5474</literal></expr>,

<expr><literal type="number">5534</literal></expr>, <expr><literal type="number">5596</literal></expr>, <expr><literal type="number">5660</literal></expr>, <expr><literal type="number">5726</literal></expr>, <expr><literal type="number">5792</literal></expr>, <expr><literal type="number">5860</literal></expr>, <expr><literal type="number">5930</literal></expr>, <expr><literal type="number">6002</literal></expr>,

<expr><literal type="number">6074</literal></expr>, <expr><literal type="number">6150</literal></expr>, <expr><literal type="number">6226</literal></expr>, <expr><literal type="number">6306</literal></expr>, <expr><literal type="number">6388</literal></expr>, <expr><literal type="number">6470</literal></expr>, <expr><literal type="number">6556</literal></expr>, <expr><literal type="number">6644</literal></expr>,

<expr><literal type="number">6736</literal></expr>, <expr><literal type="number">6828</literal></expr>, <expr><literal type="number">6924</literal></expr>, <expr><literal type="number">7022</literal></expr>, <expr><literal type="number">7124</literal></expr>, <expr><literal type="number">7228</literal></expr>, <expr><literal type="number">7336</literal></expr>, <expr><literal type="number">7448</literal></expr>,

<expr><literal type="number">7562</literal></expr>, <expr><literal type="number">7680</literal></expr>, <expr><literal type="number">7802</literal></expr>, <expr><literal type="number">7928</literal></expr>, <expr><literal type="number">8058</literal></expr>, <expr><literal type="number">8192</literal></expr>, <expr><literal type="number">8332</literal></expr>, <expr><literal type="number">8476</literal></expr>,

<expr><literal type="number">8624</literal></expr>, <expr><literal type="number">8780</literal></expr>, <expr><literal type="number">8940</literal></expr>, <expr><literal type="number">9106</literal></expr>, <expr><literal type="number">9278</literal></expr>, <expr><literal type="number">9458</literal></expr>, <expr><literal type="number">9644</literal></expr>, <expr><literal type="number">9840</literal></expr>,

<expr><literal type="number">10042</literal></expr>, <expr><literal type="number">10252</literal></expr>, <expr><literal type="number">10472</literal></expr>, <expr><literal type="number">10702</literal></expr>, <expr><literal type="number">10942</literal></expr>, <expr><literal type="number">11194</literal></expr>, <expr><literal type="number">11458</literal></expr>, <expr><literal type="number">11734</literal></expr>,

<expr><literal type="number">12024</literal></expr>, <expr><literal type="number">12328</literal></expr>, <expr><literal type="number">12648</literal></expr>, <expr><literal type="number">12986</literal></expr>, <expr><literal type="number">13342</literal></expr>, <expr><literal type="number">13720</literal></expr>, <expr><literal type="number">14118</literal></expr>, <expr><literal type="number">14540</literal></expr>,

<expr><literal type="number">14990</literal></expr>, <expr><literal type="number">15466</literal></expr>, <expr><literal type="number">15976</literal></expr>, <expr><literal type="number">16520</literal></expr>, <expr><literal type="number">17102</literal></expr>, <expr><literal type="number">17726</literal></expr>, <expr><literal type="number">18398</literal></expr>, <expr><literal type="number">19124</literal></expr>,

<expr><literal type="number">19908</literal></expr>, <expr><literal type="number">20760</literal></expr>, <expr><literal type="number">21688</literal></expr>, <expr><literal type="number">22702</literal></expr>, <expr><literal type="number">23816</literal></expr>, <expr><literal type="number">25044</literal></expr>, <expr><literal type="number">26404</literal></expr>, <expr><literal type="number">27922</literal></expr>,

<expr><literal type="number">29622</literal></expr>, <expr><literal type="number">31540</literal></expr>, <expr><literal type="number">33720</literal></expr>, <expr><literal type="number">36222</literal></expr>, <expr><literal type="number">39116</literal></expr>, <expr><literal type="number">42502</literal></expr>, <expr><literal type="number">46514</literal></expr>, <expr><literal type="number">51334</literal></expr>,

<expr><literal type="number">57218</literal></expr>, <expr><literal type="number">64536</literal></expr>, <expr><literal type="number">73830</literal></expr>, <expr><literal type="number">85890</literal></expr>, <expr><literal type="number">101860</literal></expr>, <expr><literal type="number">123198</literal></expr>, <expr><literal type="number">151020</literal></expr>, <expr><literal type="number">183936</literal></expr>,

<expr><literal type="number">216220</literal></expr>, <expr><literal type="number">243618</literal></expr>, <expr><literal type="number">268374</literal></expr>, <expr><literal type="number">293022</literal></expr>, <expr><literal type="number">319362</literal></expr>, <expr><literal type="number">347768</literal></expr>, <expr><literal type="number">378864</literal></expr>, <expr><literal type="number">412626</literal></expr>, <expr><literal type="number">449596</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>hd_quantize_dither_factors_LF</name><index>[<expr><literal type="number">256</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>,

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>,

<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>,

<expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>,

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>,

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>,

<expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>,

<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>,

<expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>,

<expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>,

<expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">18</literal></expr>,

<expr><literal type="number">19</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">23</literal></expr>,

<expr><literal type="number">23</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">29</literal></expr>,

<expr><literal type="number">30</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">37</literal></expr>,

<expr><literal type="number">39</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">42</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">47</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">51</literal></expr>,

<expr><literal type="number">53</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">66</literal></expr>, <expr><literal type="number">69</literal></expr>, <expr><literal type="number">73</literal></expr>,

<expr><literal type="number">76</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><literal type="number">85</literal></expr>, <expr><literal type="number">89</literal></expr>, <expr><literal type="number">95</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">106</literal></expr>, <expr><literal type="number">113</literal></expr>,

<expr><literal type="number">119</literal></expr>, <expr><literal type="number">128</literal></expr>, <expr><literal type="number">136</literal></expr>, <expr><literal type="number">146</literal></expr>, <expr><literal type="number">156</literal></expr>, <expr><literal type="number">168</literal></expr>, <expr><literal type="number">182</literal></expr>, <expr><literal type="number">196</literal></expr>,

<expr><literal type="number">213</literal></expr>, <expr><literal type="number">232</literal></expr>, <expr><literal type="number">254</literal></expr>, <expr><literal type="number">279</literal></expr>, <expr><literal type="number">307</literal></expr>, <expr><literal type="number">340</literal></expr>, <expr><literal type="number">380</literal></expr>, <expr><literal type="number">425</literal></expr>,

<expr><literal type="number">480</literal></expr>, <expr><literal type="number">545</literal></expr>, <expr><literal type="number">626</literal></expr>, <expr><literal type="number">724</literal></expr>, <expr><literal type="number">847</literal></expr>, <expr><literal type="number">1003</literal></expr>, <expr><literal type="number">1205</literal></expr>, <expr><literal type="number">1471</literal></expr>,

<expr><literal type="number">1830</literal></expr>, <expr><literal type="number">2324</literal></expr>, <expr><literal type="number">3015</literal></expr>, <expr><literal type="number">3993</literal></expr>, <expr><literal type="number">5335</literal></expr>, <expr><literal type="number">6956</literal></expr>, <expr><literal type="number">8229</literal></expr>, <expr><literal type="number">8071</literal></expr>,

<expr><literal type="number">6850</literal></expr>, <expr><literal type="number">6189</literal></expr>, <expr><literal type="number">6162</literal></expr>, <expr><literal type="number">6585</literal></expr>, <expr><literal type="number">7102</literal></expr>, <expr><literal type="number">7774</literal></expr>, <expr><literal type="number">8441</literal></expr>, <expr><literal type="number">9243</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>hd_quantize_factor_select_offset_LF</name><index>[<expr><literal type="number">257</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">22</literal></expr>, <expr><operator>-</operator><literal type="number">21</literal></expr>, <expr><operator>-</operator><literal type="number">21</literal></expr>, <expr><operator>-</operator><literal type="number">20</literal></expr>, <expr><operator>-</operator><literal type="number">20</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>,

<expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><operator>-</operator><literal type="number">17</literal></expr>, <expr><operator>-</operator><literal type="number">17</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><operator>-</operator><literal type="number">15</literal></expr>, <expr><operator>-</operator><literal type="number">14</literal></expr>,

<expr><operator>-</operator><literal type="number">14</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><operator>-</operator><literal type="number">10</literal></expr>,

<expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">6</literal></expr>,

<expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>,

<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>,

<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">17</literal></expr>,

<expr><literal type="number">18</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">22</literal></expr>,

<expr><literal type="number">23</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">28</literal></expr>,

<expr><literal type="number">28</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">33</literal></expr>,

<expr><literal type="number">34</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">39</literal></expr>,

<expr><literal type="number">40</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">42</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">45</literal></expr>,

<expr><literal type="number">46</literal></expr>, <expr><literal type="number">47</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">52</literal></expr>,

<expr><literal type="number">52</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">54</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">56</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">58</literal></expr>,

<expr><literal type="number">59</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">61</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">65</literal></expr>, <expr><literal type="number">66</literal></expr>,

<expr><literal type="number">67</literal></expr>, <expr><literal type="number">68</literal></expr>, <expr><literal type="number">69</literal></expr>, <expr><literal type="number">69</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">72</literal></expr>, <expr><literal type="number">73</literal></expr>,

<expr><literal type="number">74</literal></expr>, <expr><literal type="number">75</literal></expr>, <expr><literal type="number">77</literal></expr>, <expr><literal type="number">78</literal></expr>, <expr><literal type="number">79</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><literal type="number">81</literal></expr>, <expr><literal type="number">82</literal></expr>,

<expr><literal type="number">83</literal></expr>, <expr><literal type="number">84</literal></expr>, <expr><literal type="number">85</literal></expr>, <expr><literal type="number">86</literal></expr>, <expr><literal type="number">87</literal></expr>, <expr><literal type="number">89</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">91</literal></expr>,

<expr><literal type="number">92</literal></expr>, <expr><literal type="number">93</literal></expr>, <expr><literal type="number">94</literal></expr>, <expr><literal type="number">96</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><literal type="number">98</literal></expr>, <expr><literal type="number">99</literal></expr>, <expr><literal type="number">101</literal></expr>,

<expr><literal type="number">102</literal></expr>, <expr><literal type="number">103</literal></expr>, <expr><literal type="number">105</literal></expr>, <expr><literal type="number">106</literal></expr>, <expr><literal type="number">107</literal></expr>, <expr><literal type="number">109</literal></expr>, <expr><literal type="number">110</literal></expr>, <expr><literal type="number">112</literal></expr>,

<expr><literal type="number">113</literal></expr>, <expr><literal type="number">115</literal></expr>, <expr><literal type="number">116</literal></expr>, <expr><literal type="number">118</literal></expr>, <expr><literal type="number">119</literal></expr>, <expr><literal type="number">121</literal></expr>, <expr><literal type="number">122</literal></expr>, <expr><literal type="number">124</literal></expr>,

<expr><literal type="number">125</literal></expr>, <expr><literal type="number">127</literal></expr>, <expr><literal type="number">129</literal></expr>, <expr><literal type="number">130</literal></expr>, <expr><literal type="number">132</literal></expr>, <expr><literal type="number">134</literal></expr>, <expr><literal type="number">136</literal></expr>, <expr><literal type="number">137</literal></expr>,

<expr><literal type="number">139</literal></expr>, <expr><literal type="number">141</literal></expr>, <expr><literal type="number">143</literal></expr>, <expr><literal type="number">145</literal></expr>, <expr><literal type="number">147</literal></expr>, <expr><literal type="number">149</literal></expr>, <expr><literal type="number">151</literal></expr>, <expr><literal type="number">153</literal></expr>,

<expr><literal type="number">155</literal></expr>, <expr><literal type="number">158</literal></expr>, <expr><literal type="number">160</literal></expr>, <expr><literal type="number">162</literal></expr>, <expr><literal type="number">164</literal></expr>, <expr><literal type="number">167</literal></expr>, <expr><literal type="number">169</literal></expr>, <expr><literal type="number">172</literal></expr>,

<expr><literal type="number">174</literal></expr>, <expr><literal type="number">177</literal></expr>, <expr><literal type="number">180</literal></expr>, <expr><literal type="number">182</literal></expr>, <expr><literal type="number">185</literal></expr>, <expr><literal type="number">188</literal></expr>, <expr><literal type="number">191</literal></expr>, <expr><literal type="number">194</literal></expr>,

<expr><literal type="number">197</literal></expr>, <expr><literal type="number">201</literal></expr>, <expr><literal type="number">204</literal></expr>, <expr><literal type="number">208</literal></expr>, <expr><literal type="number">211</literal></expr>, <expr><literal type="number">215</literal></expr>, <expr><literal type="number">219</literal></expr>, <expr><literal type="number">223</literal></expr>,

<expr><literal type="number">227</literal></expr>, <expr><literal type="number">232</literal></expr>, <expr><literal type="number">236</literal></expr>, <expr><literal type="number">241</literal></expr>, <expr><literal type="number">246</literal></expr>, <expr><literal type="number">251</literal></expr>, <expr><literal type="number">257</literal></expr>, <expr><literal type="number">263</literal></expr>,

<expr><literal type="number">269</literal></expr>, <expr><literal type="number">275</literal></expr>, <expr><literal type="number">283</literal></expr>, <expr><literal type="number">290</literal></expr>, <expr><literal type="number">298</literal></expr>, <expr><literal type="number">307</literal></expr>, <expr><literal type="number">317</literal></expr>, <expr><literal type="number">327</literal></expr>,

<expr><literal type="number">339</literal></expr>, <expr><literal type="number">352</literal></expr>, <expr><literal type="number">367</literal></expr>, <expr><literal type="number">384</literal></expr>, <expr><literal type="number">404</literal></expr>, <expr><literal type="number">429</literal></expr>, <expr><literal type="number">458</literal></expr>, <expr><literal type="number">494</literal></expr>,

<expr><literal type="number">522</literal></expr>, <expr><literal type="number">522</literal></expr>, <expr><literal type="number">522</literal></expr>, <expr><literal type="number">522</literal></expr>, <expr><literal type="number">522</literal></expr>, <expr><literal type="number">522</literal></expr>, <expr><literal type="number">522</literal></expr>, <expr><literal type="number">522</literal></expr>, <expr><literal type="number">522</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>hd_quantize_intervals_MLF</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><operator>-</operator><literal type="number">21236</literal></expr>, <expr><literal type="number">21236</literal></expr>, <expr><literal type="number">63830</literal></expr>, <expr><literal type="number">106798</literal></expr>, <expr><literal type="number">150386</literal></expr>, <expr><literal type="number">194832</literal></expr>, <expr><literal type="number">240376</literal></expr>, <expr><literal type="number">287258</literal></expr>,

<expr><literal type="number">335726</literal></expr>, <expr><literal type="number">386034</literal></expr>, <expr><literal type="number">438460</literal></expr>, <expr><literal type="number">493308</literal></expr>, <expr><literal type="number">550924</literal></expr>, <expr><literal type="number">611696</literal></expr>, <expr><literal type="number">676082</literal></expr>, <expr><literal type="number">744626</literal></expr>,

<expr><literal type="number">817986</literal></expr>, <expr><literal type="number">896968</literal></expr>, <expr><literal type="number">982580</literal></expr>, <expr><literal type="number">1076118</literal></expr>, <expr><literal type="number">1179278</literal></expr>, <expr><literal type="number">1294344</literal></expr>, <expr><literal type="number">1424504</literal></expr>, <expr><literal type="number">1574386</literal></expr>,

<expr><literal type="number">1751090</literal></expr>, <expr><literal type="number">1966260</literal></expr>, <expr><literal type="number">2240868</literal></expr>, <expr><literal type="number">2617662</literal></expr>, <expr><literal type="number">3196432</literal></expr>, <expr><literal type="number">4176450</literal></expr>, <expr><literal type="number">5658260</literal></expr>, <expr><literal type="number">7671068</literal></expr>,

<expr><literal type="number">10380372</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>hd_invert_quantize_dither_factors_MLF</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">21236</literal></expr>, <expr><literal type="number">21236</literal></expr>, <expr><literal type="number">21360</literal></expr>, <expr><literal type="number">21608</literal></expr>, <expr><literal type="number">21978</literal></expr>, <expr><literal type="number">22468</literal></expr>, <expr><literal type="number">23076</literal></expr>, <expr><literal type="number">23806</literal></expr>,

<expr><literal type="number">24660</literal></expr>, <expr><literal type="number">25648</literal></expr>, <expr><literal type="number">26778</literal></expr>, <expr><literal type="number">28070</literal></expr>, <expr><literal type="number">29544</literal></expr>, <expr><literal type="number">31228</literal></expr>, <expr><literal type="number">33158</literal></expr>, <expr><literal type="number">35386</literal></expr>,

<expr><literal type="number">37974</literal></expr>, <expr><literal type="number">41008</literal></expr>, <expr><literal type="number">44606</literal></expr>, <expr><literal type="number">48934</literal></expr>, <expr><literal type="number">54226</literal></expr>, <expr><literal type="number">60840</literal></expr>, <expr><literal type="number">69320</literal></expr>, <expr><literal type="number">80564</literal></expr>,

<expr><literal type="number">96140</literal></expr>, <expr><literal type="number">119032</literal></expr>, <expr><literal type="number">155576</literal></expr>, <expr><literal type="number">221218</literal></expr>, <expr><literal type="number">357552</literal></expr>, <expr><literal type="number">622468</literal></expr>, <expr><literal type="number">859344</literal></expr>, <expr><literal type="number">1153464</literal></expr>, <expr><literal type="number">1555840</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>hd_quantize_dither_factors_MLF</name><index>[<expr><literal type="number">32</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">93</literal></expr>, <expr><literal type="number">123</literal></expr>, <expr><literal type="number">152</literal></expr>, <expr><literal type="number">183</literal></expr>, <expr><literal type="number">214</literal></expr>,

<expr><literal type="number">247</literal></expr>, <expr><literal type="number">283</literal></expr>, <expr><literal type="number">323</literal></expr>, <expr><literal type="number">369</literal></expr>, <expr><literal type="number">421</literal></expr>, <expr><literal type="number">483</literal></expr>, <expr><literal type="number">557</literal></expr>, <expr><literal type="number">647</literal></expr>,

<expr><literal type="number">759</literal></expr>, <expr><literal type="number">900</literal></expr>, <expr><literal type="number">1082</literal></expr>, <expr><literal type="number">1323</literal></expr>, <expr><literal type="number">1654</literal></expr>, <expr><literal type="number">2120</literal></expr>, <expr><literal type="number">2811</literal></expr>, <expr><literal type="number">3894</literal></expr>,

<expr><literal type="number">5723</literal></expr>, <expr><literal type="number">9136</literal></expr>, <expr><literal type="number">16411</literal></expr>, <expr><literal type="number">34084</literal></expr>, <expr><literal type="number">66229</literal></expr>, <expr><literal type="number">59219</literal></expr>, <expr><literal type="number">73530</literal></expr>, <expr><literal type="number">100594</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>hd_quantize_factor_select_offset_MLF</name><index>[<expr><literal type="number">33</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">21</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">13</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">57</literal></expr>,

<expr><literal type="number">65</literal></expr>, <expr><literal type="number">74</literal></expr>, <expr><literal type="number">83</literal></expr>, <expr><literal type="number">93</literal></expr>, <expr><literal type="number">104</literal></expr>, <expr><literal type="number">117</literal></expr>, <expr><literal type="number">131</literal></expr>, <expr><literal type="number">147</literal></expr>,

<expr><literal type="number">166</literal></expr>, <expr><literal type="number">189</literal></expr>, <expr><literal type="number">219</literal></expr>, <expr><literal type="number">259</literal></expr>, <expr><literal type="number">322</literal></expr>, <expr><literal type="number">427</literal></expr>, <expr><literal type="number">521</literal></expr>, <expr><literal type="number">521</literal></expr>, <expr><literal type="number">521</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>hd_quantize_intervals_MHF</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><operator>-</operator><literal type="number">95044</literal></expr>, <expr><literal type="number">95044</literal></expr>, <expr><literal type="number">295844</literal></expr>, <expr><literal type="number">528780</literal></expr>, <expr><literal type="number">821332</literal></expr>, <expr><literal type="number">1226438</literal></expr>, <expr><literal type="number">1890540</literal></expr>, <expr><literal type="number">3344850</literal></expr>, <expr><literal type="number">6450664</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>hd_invert_quantize_dither_factors_MHF</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">95044</literal></expr>, <expr><literal type="number">95044</literal></expr>, <expr><literal type="number">105754</literal></expr>, <expr><literal type="number">127180</literal></expr>, <expr><literal type="number">165372</literal></expr>, <expr><literal type="number">39736</literal></expr>, <expr><literal type="number">424366</literal></expr>, <expr><literal type="number">1029946</literal></expr>, <expr><literal type="number">2075866</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>hd_quantize_dither_factors_MHF</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">2678</literal></expr>, <expr><literal type="number">5357</literal></expr>, <expr><literal type="number">9548</literal></expr>, <expr><operator>-</operator><literal type="number">31409</literal></expr>, <expr><literal type="number">96158</literal></expr>, <expr><literal type="number">151395</literal></expr>, <expr><literal type="number">261480</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>hd_quantize_factor_select_offset_MHF</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">17</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">105</literal></expr>, <expr><literal type="number">177</literal></expr>, <expr><literal type="number">334</literal></expr>, <expr><literal type="number">518</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>hd_quantize_intervals_HF</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><operator>-</operator><literal type="number">45754</literal></expr>, <expr><literal type="number">45754</literal></expr>, <expr><literal type="number">138496</literal></expr>, <expr><literal type="number">234896</literal></expr>, <expr><literal type="number">337336</literal></expr>, <expr><literal type="number">448310</literal></expr>, <expr><literal type="number">570738</literal></expr>, <expr><literal type="number">708380</literal></expr>,

<expr><literal type="number">866534</literal></expr>, <expr><literal type="number">1053262</literal></expr>, <expr><literal type="number">1281958</literal></expr>, <expr><literal type="number">1577438</literal></expr>, <expr><literal type="number">1993050</literal></expr>, <expr><literal type="number">2665984</literal></expr>, <expr><literal type="number">3900982</literal></expr>, <expr><literal type="number">5902844</literal></expr>,

<expr><literal type="number">8897462</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>hd_invert_quantize_dither_factors_HF</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">45754</literal></expr>, <expr><literal type="number">45754</literal></expr>, <expr><literal type="number">46988</literal></expr>, <expr><literal type="number">49412</literal></expr>, <expr><literal type="number">53026</literal></expr>, <expr><literal type="number">57950</literal></expr>, <expr><literal type="number">64478</literal></expr>, <expr><literal type="number">73164</literal></expr>,

<expr><literal type="number">84988</literal></expr>, <expr><literal type="number">101740</literal></expr>, <expr><literal type="number">126958</literal></expr>, <expr><literal type="number">168522</literal></expr>, <expr><literal type="number">247092</literal></expr>, <expr><literal type="number">425842</literal></expr>, <expr><literal type="number">809154</literal></expr>, <expr><literal type="number">1192708</literal></expr>, <expr><literal type="number">1801910</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>hd_quantize_dither_factors_HF</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">309</literal></expr>, <expr><literal type="number">606</literal></expr>, <expr><literal type="number">904</literal></expr>, <expr><literal type="number">1231</literal></expr>, <expr><literal type="number">1632</literal></expr>, <expr><literal type="number">2172</literal></expr>, <expr><literal type="number">2956</literal></expr>,

<expr><literal type="number">4188</literal></expr>, <expr><literal type="number">6305</literal></expr>, <expr><literal type="number">10391</literal></expr>, <expr><literal type="number">19643</literal></expr>, <expr><literal type="number">44688</literal></expr>, <expr><literal type="number">95828</literal></expr>, <expr><literal type="number">95889</literal></expr>, <expr><literal type="number">152301</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>hd_quantize_factor_select_offset_HF</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">53</literal></expr>,

<expr><literal type="number">70</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">115</literal></expr>, <expr><literal type="number">147</literal></expr>, <expr><literal type="number">192</literal></expr>, <expr><literal type="number">264</literal></expr>, <expr><literal type="number">398</literal></expr>, <expr><literal type="number">521</literal></expr>, <expr><literal type="number">521</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ConstTables</name></type> <name><name>ff_aptx_quant_tables</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>NB_SUBBANDS</name></expr>]</index></name> <init>= <expr><block>{

<expr><block>{

<expr><index>[<expr><name>LF</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>quantize_intervals_LF</name></expr>,

<expr><name>invert_quantize_dither_factors_LF</name></expr>,

<expr><name>quantize_dither_factors_LF</name></expr>,

<expr><name>quantize_factor_select_offset_LF</name></expr>,

<expr><call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>quantize_intervals_LF</name></expr></argument>)</argument_list></call></expr>,

<expr><literal type="number">0x11FF</literal></expr>, <expr><literal type="number">24</literal></expr> }</block></expr>,

<expr><index>[<expr><name>MLF</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>quantize_intervals_MLF</name></expr>,

<expr><name>invert_quantize_dither_factors_MLF</name></expr>,

<expr><name>quantize_dither_factors_MLF</name></expr>,

<expr><name>quantize_factor_select_offset_MLF</name></expr>,

<expr><call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>quantize_intervals_MLF</name></expr></argument>)</argument_list></call></expr>,

<expr><literal type="number">0x14FF</literal></expr>, <expr><literal type="number">12</literal></expr> }</block></expr>,

<expr><index>[<expr><name>MHF</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>quantize_intervals_MHF</name></expr>,

<expr><name>invert_quantize_dither_factors_MHF</name></expr>,

<expr><name>quantize_dither_factors_MHF</name></expr>,

<expr><name>quantize_factor_select_offset_MHF</name></expr>,

<expr><call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>quantize_intervals_MHF</name></expr></argument>)</argument_list></call></expr>,

<expr><literal type="number">0x16FF</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>,

<expr><index>[<expr><name>HF</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>quantize_intervals_HF</name></expr>,

<expr><name>invert_quantize_dither_factors_HF</name></expr>,

<expr><name>quantize_dither_factors_HF</name></expr>,

<expr><name>quantize_factor_select_offset_HF</name></expr>,

<expr><call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>quantize_intervals_HF</name></expr></argument>)</argument_list></call></expr>,

<expr><literal type="number">0x15FF</literal></expr>, <expr><literal type="number">12</literal></expr> }</block></expr>,

}</block></expr>,

<expr><block>{

<expr><index>[<expr><name>LF</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>hd_quantize_intervals_LF</name></expr>,

<expr><name>hd_invert_quantize_dither_factors_LF</name></expr>,

<expr><name>hd_quantize_dither_factors_LF</name></expr>,

<expr><name>hd_quantize_factor_select_offset_LF</name></expr>,

<expr><call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>hd_quantize_intervals_LF</name></expr></argument>)</argument_list></call></expr>,

<expr><literal type="number">0x11FF</literal></expr>, <expr><literal type="number">24</literal></expr> }</block></expr>,

<expr><index>[<expr><name>MLF</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>hd_quantize_intervals_MLF</name></expr>,

<expr><name>hd_invert_quantize_dither_factors_MLF</name></expr>,

<expr><name>hd_quantize_dither_factors_MLF</name></expr>,

<expr><name>hd_quantize_factor_select_offset_MLF</name></expr>,

<expr><call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>hd_quantize_intervals_MLF</name></expr></argument>)</argument_list></call></expr>,

<expr><literal type="number">0x14FF</literal></expr>, <expr><literal type="number">12</literal></expr> }</block></expr>,

<expr><index>[<expr><name>MHF</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>hd_quantize_intervals_MHF</name></expr>,

<expr><name>hd_invert_quantize_dither_factors_MHF</name></expr>,

<expr><name>hd_quantize_dither_factors_MHF</name></expr>,

<expr><name>hd_quantize_factor_select_offset_MHF</name></expr>,

<expr><call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>hd_quantize_intervals_MHF</name></expr></argument>)</argument_list></call></expr>,

<expr><literal type="number">0x16FF</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>,

<expr><index>[<expr><name>HF</name></expr>]</index> <operator>=</operator> <block>{ <expr><name>hd_quantize_intervals_HF</name></expr>,

<expr><name>hd_invert_quantize_dither_factors_HF</name></expr>,

<expr><name>hd_quantize_dither_factors_HF</name></expr>,

<expr><name>hd_quantize_factor_select_offset_HF</name></expr>,

<expr><call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>hd_quantize_intervals_HF</name></expr></argument>)</argument_list></call></expr>,

<expr><literal type="number">0x15FF</literal></expr>, <expr><literal type="number">12</literal></expr> }</block></expr>,

}</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>quantization_factors</name><index>[<expr><literal type="number">32</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">2048</literal></expr>, <expr><literal type="number">2093</literal></expr>, <expr><literal type="number">2139</literal></expr>, <expr><literal type="number">2186</literal></expr>, <expr><literal type="number">2233</literal></expr>, <expr><literal type="number">2282</literal></expr>, <expr><literal type="number">2332</literal></expr>, <expr><literal type="number">2383</literal></expr>,

<expr><literal type="number">2435</literal></expr>, <expr><literal type="number">2489</literal></expr>, <expr><literal type="number">2543</literal></expr>, <expr><literal type="number">2599</literal></expr>, <expr><literal type="number">2656</literal></expr>, <expr><literal type="number">2714</literal></expr>, <expr><literal type="number">2774</literal></expr>, <expr><literal type="number">2834</literal></expr>,

<expr><literal type="number">2896</literal></expr>, <expr><literal type="number">2960</literal></expr>, <expr><literal type="number">3025</literal></expr>, <expr><literal type="number">3091</literal></expr>, <expr><literal type="number">3158</literal></expr>, <expr><literal type="number">3228</literal></expr>, <expr><literal type="number">3298</literal></expr>, <expr><literal type="number">3371</literal></expr>,

<expr><literal type="number">3444</literal></expr>, <expr><literal type="number">3520</literal></expr>, <expr><literal type="number">3597</literal></expr>, <expr><literal type="number">3676</literal></expr>, <expr><literal type="number">3756</literal></expr>, <expr><literal type="number">3838</literal></expr>, <expr><literal type="number">3922</literal></expr>, <expr><literal type="number">4008</literal></expr>,

}</block></expr></init></decl>;</decl_stmt>

<function><type><name>av_always_inline</name>

<specifier>static</specifier> <name>void</name></type> <name>aptx_update_codeword_history</name><parameter_list>(<parameter><decl><type><name>Channel</name> <modifier>*</modifier></type><name>channel</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>cw</name> <init>= <expr><operator>(</operator><operator>(</operator><name><name>channel</name><operator>-&gt;</operator><name>quantize</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>quantized_sample</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">0</literal><operator>)</operator> <operator>+</operator>

<operator>(</operator><operator>(</operator><name><name>channel</name><operator>-&gt;</operator><name>quantize</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>quantized_sample</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator>

<operator>(</operator><operator>(</operator><name><name>channel</name><operator>-&gt;</operator><name>quantize</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>quantized_sample</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>channel</name><operator>-&gt;</operator><name>codeword_history</name></name> <operator>=</operator> <operator>(</operator><name>cw</name> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><operator>(</operator><name>unsigned</name><operator>)</operator><name><name>channel</name><operator>-&gt;</operator><name>codeword_history</name></name> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_aptx_generate_dither</name><parameter_list>(<parameter><decl><type><name>Channel</name> <modifier>*</modifier></type><name>channel</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>subband</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>m</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name></type> <name>d</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>aptx_update_codeword_history</name><argument_list>(<argument><expr><name>channel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>m</name> <operator>=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><literal type="number">5184443</literal> <operator>*</operator> <operator>(</operator><name><name>channel</name><operator>-&gt;</operator><name>codeword_history</name></name> <operator>&gt;&gt;</operator> <literal type="number">7</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>d</name> <operator>=</operator> <operator>(</operator><name>m</name> <operator>*</operator> <literal type="number">4</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>m</name> <operator>&gt;&gt;</operator> <literal type="number">22</literal><operator>)</operator></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>subband</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>subband</name> <operator>&lt;</operator> <name>NB_SUBBANDS</name></expr>;</condition> <incr><expr><name>subband</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>channel</name><operator>-&gt;</operator><name>dither</name><index>[<expr><name>subband</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><name>d</name> <operator>&lt;&lt;</operator> <operator>(</operator><literal type="number">23</literal> <operator>-</operator> <literal type="number">5</literal><operator>*</operator><name>subband</name><operator>)</operator></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name><name>channel</name><operator>-&gt;</operator><name>dither_parity</name></name> <operator>=</operator> <operator>(</operator><name>d</name> <operator>&gt;&gt;</operator> <literal type="number">25</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>aptx_invert_quantization</name><parameter_list>(<parameter><decl><type><name>InvertQuantize</name> <modifier>*</modifier></type><name>invert_quantize</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>quantized_sample</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dither</name></decl></parameter>,

<parameter><decl><type><name>ConstTables</name> <modifier>*</modifier></type><name>tables</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>qr</name></decl>, <decl><type ref="prev"/><name>idx</name></decl>, <decl><type ref="prev"/><name>shift</name></decl>, <decl><type ref="prev"/><name>factor_select</name></decl>;</decl_stmt>

<expr_stmt><expr><name>idx</name> <operator>=</operator> <operator>(</operator><name>quantized_sample</name> <operator>^</operator> <operator>-</operator><operator>(</operator><name>quantized_sample</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>qr</name> <operator>=</operator> <name><name>tables</name><operator>-&gt;</operator><name>quantize_intervals</name><index>[<expr><name>idx</name></expr>]</index></name> <operator>/</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>quantized_sample</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>qr</name> <operator>=</operator> <operator>-</operator><name>qr</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>qr</name> <operator>=</operator> <call><name>rshift64_clip24</name><argument_list>(<argument><expr><operator>(</operator><name>qr</name> <operator>*</operator> <operator>(</operator><literal type="number">1LL</literal><operator>&lt;&lt;</operator><literal type="number">32</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <call><name>MUL64</name><argument_list>(<argument><expr><name>dither</name></expr></argument>, <argument><expr><name><name>tables</name><operator>-&gt;</operator><name>invert_quantize_dither_factors</name><index>[<expr><name>idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>invert_quantize</name><operator>-&gt;</operator><name>reconstructed_difference</name></name> <operator>=</operator> <call><name>MUL64</name><argument_list>(<argument><expr><name><name>invert_quantize</name><operator>-&gt;</operator><name>quantization_factor</name></name></expr></argument>, <argument><expr><name>qr</name></expr></argument>)</argument_list></call> <operator>&gt;&gt;</operator> <literal type="number">19</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>factor_select</name> <operator>=</operator> <literal type="number">32620</literal> <operator>*</operator> <name><name>invert_quantize</name><operator>-&gt;</operator><name>factor_select</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>factor_select</name> <operator>=</operator> <call><name>rshift32</name><argument_list>(<argument><expr><name>factor_select</name> <operator>+</operator> <operator>(</operator><name><name>tables</name><operator>-&gt;</operator><name>quantize_factor_select_offset</name><index>[<expr><name>idx</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">15</literal><operator>)</operator><operator>)</operator></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>invert_quantize</name><operator>-&gt;</operator><name>factor_select</name></name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><name>factor_select</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>tables</name><operator>-&gt;</operator><name>factor_max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>idx</name> <operator>=</operator> <operator>(</operator><name><name>invert_quantize</name><operator>-&gt;</operator><name>factor_select</name></name> <operator>&amp;</operator> <literal type="number">0xFF</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>shift</name> <operator>=</operator> <operator>(</operator><name><name>tables</name><operator>-&gt;</operator><name>factor_max</name></name> <operator>-</operator> <name><name>invert_quantize</name><operator>-&gt;</operator><name>factor_select</name></name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>invert_quantize</name><operator>-&gt;</operator><name>quantization_factor</name></name> <operator>=</operator> <operator>(</operator><name><name>quantization_factors</name><index>[<expr><name>idx</name></expr>]</index></name> <operator>&lt;&lt;</operator> <literal type="number">11</literal><operator>)</operator> <operator>&gt;&gt;</operator> <name>shift</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name> <modifier>*</modifier></type><name>aptx_reconstructed_differences_update</name><parameter_list>(<parameter><decl><type><name>Prediction</name> <modifier>*</modifier></type><name>prediction</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>reconstructed_difference</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>order</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>rd1</name> <init>= <expr><name><name>prediction</name><operator>-&gt;</operator><name>reconstructed_differences</name></name></expr></init></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>rd2</name> <init>= <expr><name>rd1</name> <operator>+</operator> <name>order</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>p</name> <init>= <expr><name><name>prediction</name><operator>-&gt;</operator><name>pos</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>rd1</name><index>[<expr><name>p</name></expr>]</index></name> <operator>=</operator> <name><name>rd2</name><index>[<expr><name>p</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>prediction</name><operator>-&gt;</operator><name>pos</name></name> <operator>=</operator> <name>p</name> <operator>=</operator> <operator>(</operator><name>p</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>%</operator> <name>order</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rd2</name><index>[<expr><name>p</name></expr>]</index></name> <operator>=</operator> <name>reconstructed_difference</name></expr>;</expr_stmt>

<return>return <expr><operator>&amp;</operator><name><name>rd2</name><index>[<expr><name>p</name></expr>]</index></name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>aptx_prediction_filtering</name><parameter_list>(<parameter><decl><type><name>Prediction</name> <modifier>*</modifier></type><name>prediction</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>reconstructed_difference</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>order</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>reconstructed_sample</name></decl>, <decl><type ref="prev"/><name>predictor</name></decl>, <decl><type ref="prev"/><name>srd0</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>reconstructed_differences</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>predicted_difference</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name>reconstructed_sample</name> <operator>=</operator> <call><name>av_clip_intp2</name><argument_list>(<argument><expr><name>reconstructed_difference</name> <operator>+</operator> <name><name>prediction</name><operator>-&gt;</operator><name>predicted_sample</name></name></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>predictor</name> <operator>=</operator> <call><name>av_clip_intp2</name><argument_list>(<argument><expr><operator>(</operator><call><name>MUL64</name><argument_list>(<argument><expr><name><name>prediction</name><operator>-&gt;</operator><name>s_weight</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>prediction</name><operator>-&gt;</operator><name>previous_reconstructed_sample</name></name></expr></argument>)</argument_list></call>

<operator>+</operator> <call><name>MUL64</name><argument_list>(<argument><expr><name><name>prediction</name><operator>-&gt;</operator><name>s_weight</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name>reconstructed_sample</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">22</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>prediction</name><operator>-&gt;</operator><name>previous_reconstructed_sample</name></name> <operator>=</operator> <name>reconstructed_sample</name></expr>;</expr_stmt>

<expr_stmt><expr><name>reconstructed_differences</name> <operator>=</operator> <call><name>aptx_reconstructed_differences_update</name><argument_list>(<argument><expr><name>prediction</name></expr></argument>, <argument><expr><name>reconstructed_difference</name></expr></argument>, <argument><expr><name>order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>srd0</name> <operator>=</operator> <call><name>FFDIFFSIGN</name><argument_list>(<argument><expr><name>reconstructed_difference</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>*</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">23</literal><operator>)</operator></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>order</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>srd</name> <init>= <expr><call><name>FF_SIGNBIT</name><argument_list>(<argument><expr><name><name>reconstructed_differences</name><index>[<expr><operator>-</operator><name>i</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>|</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>prediction</name><operator>-&gt;</operator><name>d_weight</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-=</operator> <call><name>rshift32</name><argument_list>(<argument><expr><name><name>prediction</name><operator>-&gt;</operator><name>d_weight</name><index>[<expr><name>i</name></expr>]</index></name> <operator>-</operator> <name>srd</name><operator>*</operator><name>srd0</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>predicted_difference</name> <operator>+=</operator> <call><name>MUL64</name><argument_list>(<argument><expr><name><name>reconstructed_differences</name><index>[<expr><operator>-</operator><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>prediction</name><operator>-&gt;</operator><name>d_weight</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name><name>prediction</name><operator>-&gt;</operator><name>predicted_difference</name></name> <operator>=</operator> <call><name>av_clip_intp2</name><argument_list>(<argument><expr><name>predicted_difference</name> <operator>&gt;&gt;</operator> <literal type="number">22</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>prediction</name><operator>-&gt;</operator><name>predicted_sample</name></name> <operator>=</operator> <call><name>av_clip_intp2</name><argument_list>(<argument><expr><name>predictor</name> <operator>+</operator> <name><name>prediction</name><operator>-&gt;</operator><name>predicted_difference</name></name></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>aptx_process_subband</name><parameter_list>(<parameter><decl><type><name>InvertQuantize</name> <modifier>*</modifier></type><name>invert_quantize</name></decl></parameter>,

<parameter><decl><type><name>Prediction</name> <modifier>*</modifier></type><name>prediction</name></decl></parameter>,

<parameter><decl><type><name>int32_t</name></type> <name>quantized_sample</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dither</name></decl></parameter>,

<parameter><decl><type><name>ConstTables</name> <modifier>*</modifier></type><name>tables</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>sign</name></decl>, <decl><type ref="prev"/><name><name>same_sign</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>weight</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name>sw1</name></decl>, <decl><type ref="prev"/><name>range</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>aptx_invert_quantization</name><argument_list>(<argument><expr><name>invert_quantize</name></expr></argument>, <argument><expr><name>quantized_sample</name></expr></argument>, <argument><expr><name>dither</name></expr></argument>, <argument><expr><name>tables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sign</name> <operator>=</operator> <call><name>FFDIFFSIGN</name><argument_list>(<argument><expr><name><name>invert_quantize</name><operator>-&gt;</operator><name>reconstructed_difference</name></name></expr></argument>,

<argument><expr><operator>-</operator><name><name>prediction</name><operator>-&gt;</operator><name>predicted_difference</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>same_sign</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>sign</name> <operator>*</operator> <name><name>prediction</name><operator>-&gt;</operator><name>prev_sign</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>same_sign</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>sign</name> <operator>*</operator> <name><name>prediction</name><operator>-&gt;</operator><name>prev_sign</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>prediction</name><operator>-&gt;</operator><name>prev_sign</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>prediction</name><operator>-&gt;</operator><name>prev_sign</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>prediction</name><operator>-&gt;</operator><name>prev_sign</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>sign</name> <operator>|</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>range</name> <operator>=</operator> <literal type="number">0x100000</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>sw1</name> <operator>=</operator> <call><name>rshift32</name><argument_list>(<argument><expr><operator>-</operator><name><name>same_sign</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>*</operator> <name><name>prediction</name><operator>-&gt;</operator><name>s_weight</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sw1</name> <operator>=</operator> <operator>(</operator><call><name>av_clip</name><argument_list>(<argument><expr><name>sw1</name></expr></argument>, <argument><expr><operator>-</operator><name>range</name></expr></argument>, <argument><expr><name>range</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <operator>~</operator><literal type="number">0xF</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>range</name> <operator>=</operator> <literal type="number">0x300000</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>weight</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">254</literal> <operator>*</operator> <name><name>prediction</name><operator>-&gt;</operator><name>s_weight</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <literal type="number">0x800000</literal><operator>*</operator><name><name>same_sign</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name>sw1</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>prediction</name><operator>-&gt;</operator><name>s_weight</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><call><name>rshift32</name><argument_list>(<argument><expr><name><name>weight</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><name>range</name></expr></argument>, <argument><expr><name>range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>range</name> <operator>=</operator> <literal type="number">0x3C0000</literal> <operator>-</operator> <name><name>prediction</name><operator>-&gt;</operator><name>s_weight</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>weight</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">255</literal> <operator>*</operator> <name><name>prediction</name><operator>-&gt;</operator><name>s_weight</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <literal type="number">0xC00000</literal><operator>*</operator><name><name>same_sign</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>prediction</name><operator>-&gt;</operator><name>s_weight</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>av_clip</name><argument_list>(<argument><expr><call><name>rshift32</name><argument_list>(<argument><expr><name><name>weight</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>-</operator><name>range</name></expr></argument>, <argument><expr><name>range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>aptx_prediction_filtering</name><argument_list>(<argument><expr><name>prediction</name></expr></argument>,

<argument><expr><name><name>invert_quantize</name><operator>-&gt;</operator><name>reconstructed_difference</name></name></expr></argument>,

<argument><expr><name><name>tables</name><operator>-&gt;</operator><name>prediction_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_aptx_invert_quantize_and_prediction</name><parameter_list>(<parameter><decl><type><name>Channel</name> <modifier>*</modifier></type><name>channel</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>hd</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>subband</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>subband</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>subband</name> <operator>&lt;</operator> <name>NB_SUBBANDS</name></expr>;</condition> <incr><expr><name>subband</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>aptx_process_subband</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>channel</name><operator>-&gt;</operator><name>invert_quantize</name><index>[<expr><name>subband</name></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>channel</name><operator>-&gt;</operator><name>prediction</name><index>[<expr><name>subband</name></expr>]</index></name></expr></argument>,

<argument><expr><name><name>channel</name><operator>-&gt;</operator><name>quantize</name><index>[<expr><name>subband</name></expr>]</index></name><operator>.</operator><name>quantized_sample</name></expr></argument>,

<argument><expr><name><name>channel</name><operator>-&gt;</operator><name>dither</name><index>[<expr><name>subband</name></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>ff_aptx_quant_tables</name><index>[<expr><name>hd</name></expr>]</index><index>[<expr><name>subband</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>

<function><type><name>av_cold</name> <name>int</name></type> <name>ff_aptx_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>AptXContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><name><name>avctx</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>chan</name></decl>, <decl><type ref="prev"/><name>subband</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>avctx</name><operator>-&gt;</operator><name>channels</name></name> <operator>!=</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>hd</name></name> <operator>=</operator> <name><name>avctx</name><operator>-&gt;</operator><name>codec</name><operator>-&gt;</operator><name>id</name></name> <operator>==</operator> <name>AV_CODEC_ID_APTX_HD</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>block_size</name></name> <operator>=</operator> <ternary><condition><expr><name><name>s</name><operator>-&gt;</operator><name>hd</name></name></expr> ?</condition><then> <expr><literal type="number">6</literal></expr> </then><else>: <expr><literal type="number">4</literal></expr></else></ternary></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>avctx</name><operator>-&gt;</operator><name>frame_size</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>avctx</name><operator>-&gt;</operator><name>frame_size</name></name> <operator>=</operator> <literal type="number">256</literal> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>block_size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>avctx</name><operator>-&gt;</operator><name>frame_size</name></name> <operator>%</operator> <name><name>s</name><operator>-&gt;</operator><name>block_size</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>,

<argument><expr><literal type="string">"Frame size must be a multiple of %d samples\n"</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>block_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if></if_stmt>

<for>for <control>(<init><expr><name>chan</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>chan</name> <operator>&lt;</operator> <name>NB_CHANNELS</name></expr>;</condition> <incr><expr><name>chan</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>Channel</name> <modifier>*</modifier></type><name>channel</name> <init>= <expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>channels</name><index>[<expr><name>chan</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>subband</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>subband</name> <operator>&lt;</operator> <name>NB_SUBBANDS</name></expr>;</condition> <incr><expr><name>subband</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>Prediction</name> <modifier>*</modifier></type><name>prediction</name> <init>= <expr><operator>&amp;</operator><name><name>channel</name><operator>-&gt;</operator><name>prediction</name><index>[<expr><name>subband</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>prediction</name><operator>-&gt;</operator><name>prev_sign</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>prediction</name><operator>-&gt;</operator><name>prev_sign</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></for>

<expr_stmt><expr><call><name>ff_af_queue_init</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>afq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

</unit>
