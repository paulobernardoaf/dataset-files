<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\x86\sbrdsp_init.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/sbrdsp.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>float</name></type> <name>ff_sbr_sum_square_sse</name><argument_list>(<argument><expr><call><name>float</name> <argument_list>(<argument><expr><operator>*</operator><name>x</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index></expr></argument>, <argument><expr><name>int</name> <name>n</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> <name>ff_sbr_sum64x5_sse</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>void</name></type> <name>ff_sbr_hf_g_filt_sse</name><argument_list>(<argument><expr><call><name>float</name> <argument_list>(<argument><expr><operator>*</operator><name>Y</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index></expr></argument>, <argument><expr><specifier>const</specifier> <call><name>float</name> <argument_list>(<argument><expr><operator>*</operator><name>X_high</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">40</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></expr></argument>,

<argument><expr><specifier>const</specifier> <name>float</name> <operator>*</operator><name>g_filt</name></expr></argument>, <argument><expr><name>int</name> <name>m_max</name></expr></argument>, <argument><expr><name>intptr_t</name> <name>ixh</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name></type> <name>ff_sbr_hf_gen_sse</name><argument_list>(<argument><expr><call><name>float</name> <argument_list>(<argument><expr><operator>*</operator><name>X_high</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index></expr></argument>, <argument><expr><specifier>const</specifier> <call><name>float</name> <argument_list>(<argument><expr><operator>*</operator><name>X_low</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index></expr></argument>,

<argument><expr><specifier>const</specifier> <name>float</name> <name><name>alpha0</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><specifier>const</specifier> <name>float</name> <name><name>alpha1</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>,

<argument><expr><name>float</name> <name>bw</name></expr></argument>, <argument><expr><name>int</name> <name>start</name></expr></argument>, <argument><expr><name>int</name> <name>end</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> <name>ff_sbr_neg_odd_64_sse</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_sbr_qmf_post_shuffle_sse</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name><name>W</name><index>[<expr><literal type="number">32</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_sbr_qmf_deint_bfly_sse</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>src0</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_sbr_qmf_deint_bfly_sse2</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>src0</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_sbr_qmf_pre_shuffle_sse2</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>void</name></type> <name>ff_sbr_hf_apply_noise_0_sse2</name><argument_list>(<argument><expr><call><name>float</name> <argument_list>(<argument><expr><operator>*</operator><name>Y</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index></expr></argument>, <argument><expr><specifier>const</specifier> <name>float</name> <operator>*</operator><name>s_m</name></expr></argument>,

<argument><expr><specifier>const</specifier> <name>float</name> <operator>*</operator><name>q_filt</name></expr></argument>, <argument><expr><name>int</name> <name>noise</name></expr></argument>,

<argument><expr><name>int</name> <name>kx</name></expr></argument>, <argument><expr><name>int</name> <name>m_max</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name></type> <name>ff_sbr_hf_apply_noise_1_sse2</name><argument_list>(<argument><expr><call><name>float</name> <argument_list>(<argument><expr><operator>*</operator><name>Y</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index></expr></argument>, <argument><expr><specifier>const</specifier> <name>float</name> <operator>*</operator><name>s_m</name></expr></argument>,

<argument><expr><specifier>const</specifier> <name>float</name> <operator>*</operator><name>q_filt</name></expr></argument>, <argument><expr><name>int</name> <name>noise</name></expr></argument>,

<argument><expr><name>int</name> <name>kx</name></expr></argument>, <argument><expr><name>int</name> <name>m_max</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name></type> <name>ff_sbr_hf_apply_noise_2_sse2</name><argument_list>(<argument><expr><call><name>float</name> <argument_list>(<argument><expr><operator>*</operator><name>Y</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index></expr></argument>, <argument><expr><specifier>const</specifier> <name>float</name> <operator>*</operator><name>s_m</name></expr></argument>,

<argument><expr><specifier>const</specifier> <name>float</name> <operator>*</operator><name>q_filt</name></expr></argument>, <argument><expr><name>int</name> <name>noise</name></expr></argument>,

<argument><expr><name>int</name> <name>kx</name></expr></argument>, <argument><expr><name>int</name> <name>m_max</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name></type> <name>ff_sbr_hf_apply_noise_3_sse2</name><argument_list>(<argument><expr><call><name>float</name> <argument_list>(<argument><expr><operator>*</operator><name>Y</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index></expr></argument>, <argument><expr><specifier>const</specifier> <name>float</name> <operator>*</operator><name>s_m</name></expr></argument>,

<argument><expr><specifier>const</specifier> <name>float</name> <operator>*</operator><name>q_filt</name></expr></argument>, <argument><expr><name>int</name> <name>noise</name></expr></argument>,

<argument><expr><name>int</name> <name>kx</name></expr></argument>, <argument><expr><name>int</name> <name>m_max</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> <name>ff_sbr_qmf_deint_neg_sse</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_sbr_autocorrelate_sse</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>float</name></type> <name><name>x</name><index>[<expr><literal type="number">40</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name><name>phi</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_sbr_autocorrelate_sse3</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>float</name></type> <name><name>x</name><index>[<expr><literal type="number">40</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name><name>phi</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_sbrdsp_init_x86</name><parameter_list>(<parameter><decl><type><name>SBRDSPContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>cpu_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>neg_odd_64</name></name> <operator>=</operator> <name>ff_sbr_neg_odd_64_sse</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>sum_square</name></name> <operator>=</operator> <name>ff_sbr_sum_square_sse</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>sum64x5</name></name> <operator>=</operator> <name>ff_sbr_sum64x5_sse</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>hf_g_filt</name></name> <operator>=</operator> <name>ff_sbr_hf_g_filt_sse</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>hf_gen</name></name> <operator>=</operator> <name>ff_sbr_hf_gen_sse</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>qmf_post_shuffle</name></name> <operator>=</operator> <name>ff_sbr_qmf_post_shuffle_sse</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>qmf_deint_bfly</name></name> <operator>=</operator> <name>ff_sbr_qmf_deint_bfly_sse</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>qmf_deint_neg</name></name> <operator>=</operator> <name>ff_sbr_qmf_deint_neg_sse</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>autocorrelate</name></name> <operator>=</operator> <name>ff_sbr_autocorrelate_sse</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>qmf_deint_bfly</name></name> <operator>=</operator> <name>ff_sbr_qmf_deint_bfly_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>qmf_pre_shuffle</name></name> <operator>=</operator> <name>ff_sbr_qmf_pre_shuffle_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>hf_apply_noise</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_sbr_hf_apply_noise_0_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>hf_apply_noise</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_sbr_hf_apply_noise_1_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>hf_apply_noise</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_sbr_hf_apply_noise_2_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>hf_apply_noise</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_sbr_hf_apply_noise_3_sse2</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE3</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>autocorrelate</name></name> <operator>=</operator> <name>ff_sbr_autocorrelate_sse3</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

</unit>
