<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\x86\fdct.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/common.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/asm.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fdct.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_MMX_INLINE</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BITS_FRW_ACC</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHIFT_FRW_COL</name></cpp:macro> <cpp:value>BITS_FRW_ACC</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHIFT_FRW_ROW</name></cpp:macro> <cpp:value>(BITS_FRW_ACC + 17 - 3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RND_FRW_ROW</name></cpp:macro> <cpp:value>(1 &lt;&lt; (SHIFT_FRW_ROW-1))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>X8</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>x,x,x,x,x,x,x,x</cpp:value></cpp:define>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></expr></argument>, <argument><expr><name>fdct_tg_all_16</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">24</literal></expr>]</index> <operator>=</operator> <block>{

<expr><call><name>X8</name><argument_list>(<argument><expr><literal type="number">13036</literal></expr></argument>)</argument_list></call></expr>, 

<expr><call><name>X8</name><argument_list>(<argument><expr><literal type="number">27146</literal></expr></argument>)</argument_list></call></expr>, 

<macro><name>X8</name><argument_list>(<argument>-<literal type="number">21746</literal></argument>)</argument_list></macro> 

}</block></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></expr></argument>, <argument><expr><name>ocos_4_16</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">8</literal></expr>]</index> <operator>=</operator> <block>{

<macro><name>X8</name><argument_list>(<argument><literal type="number">23170</literal></argument>)</argument_list></macro> 

}</block></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></expr></argument>, <argument><expr><name>fdct_one_corr</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">8</literal></expr>]</index> <operator>=</operator> <block>{ <macro><name>X8</name><argument_list>(<argument><literal type="number">1</literal></argument>)</argument_list></macro> }</block></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></expr></argument>, <argument><expr><name>fdct_r_row</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index> <operator>=</operator> <block>{<expr><name>RND_FRW_ROW</name></expr>, <expr><name>RND_FRW_ROW</name></expr> }</block></expr>;</expr_stmt>

<struct><specifier>static</specifier> <specifier>const</specifier> struct

<block>{

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><specifier>const</specifier> <name>int32_t</name></expr></argument>, <argument><expr><name>fdct_r_row_sse2</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">4</literal></expr>]</index></expr>;</expr_stmt>

}</block> <decl><name>fdct_r_row_sse2</name> <init>=

<expr><block>{<expr><block>{

<expr><name>RND_FRW_ROW</name></expr>, <expr><name>RND_FRW_ROW</name></expr>, <expr><name>RND_FRW_ROW</name></expr>, <expr><name>RND_FRW_ROW</name></expr>

}</block></expr>}</block></expr></init></decl>;</struct>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></expr></argument>, <argument><expr><name>tab_frw_01234567</name></expr></argument>)</argument_list></call><index>[]</index> <operator>=</operator> <block>{ 

<expr><literal type="number">16384</literal></expr>, <expr><literal type="number">16384</literal></expr>, <expr><literal type="number">22725</literal></expr>, <expr><literal type="number">19266</literal></expr>,

<expr><literal type="number">16384</literal></expr>, <expr><literal type="number">16384</literal></expr>, <expr><literal type="number">12873</literal></expr>, <expr><literal type="number">4520</literal></expr>,

<expr><literal type="number">21407</literal></expr>, <expr><literal type="number">8867</literal></expr>, <expr><literal type="number">19266</literal></expr>, <expr><operator>-</operator><literal type="number">4520</literal></expr>,

<expr><operator>-</operator><literal type="number">8867</literal></expr>, <expr><operator>-</operator><literal type="number">21407</literal></expr>, <expr><operator>-</operator><literal type="number">22725</literal></expr>, <expr><operator>-</operator><literal type="number">12873</literal></expr>,

<expr><literal type="number">16384</literal></expr>, <expr><operator>-</operator><literal type="number">16384</literal></expr>, <expr><literal type="number">12873</literal></expr>, <expr><operator>-</operator><literal type="number">22725</literal></expr>,

<expr><operator>-</operator><literal type="number">16384</literal></expr>, <expr><literal type="number">16384</literal></expr>, <expr><literal type="number">4520</literal></expr>, <expr><literal type="number">19266</literal></expr>,

<expr><literal type="number">8867</literal></expr>, <expr><operator>-</operator><literal type="number">21407</literal></expr>, <expr><literal type="number">4520</literal></expr>, <expr><operator>-</operator><literal type="number">12873</literal></expr>,

<expr><literal type="number">21407</literal></expr>, <expr><operator>-</operator><literal type="number">8867</literal></expr>, <expr><literal type="number">19266</literal></expr>, <expr><operator>-</operator><literal type="number">22725</literal></expr>,

<expr><literal type="number">22725</literal></expr>, <expr><literal type="number">22725</literal></expr>, <expr><literal type="number">31521</literal></expr>, <expr><literal type="number">26722</literal></expr>,

<expr><literal type="number">22725</literal></expr>, <expr><literal type="number">22725</literal></expr>, <expr><literal type="number">17855</literal></expr>, <expr><literal type="number">6270</literal></expr>,

<expr><literal type="number">29692</literal></expr>, <expr><literal type="number">12299</literal></expr>, <expr><literal type="number">26722</literal></expr>, <expr><operator>-</operator><literal type="number">6270</literal></expr>,

<expr><operator>-</operator><literal type="number">12299</literal></expr>, <expr><operator>-</operator><literal type="number">29692</literal></expr>, <expr><operator>-</operator><literal type="number">31521</literal></expr>, <expr><operator>-</operator><literal type="number">17855</literal></expr>,

<expr><literal type="number">22725</literal></expr>, <expr><operator>-</operator><literal type="number">22725</literal></expr>, <expr><literal type="number">17855</literal></expr>, <expr><operator>-</operator><literal type="number">31521</literal></expr>,

<expr><operator>-</operator><literal type="number">22725</literal></expr>, <expr><literal type="number">22725</literal></expr>, <expr><literal type="number">6270</literal></expr>, <expr><literal type="number">26722</literal></expr>,

<expr><literal type="number">12299</literal></expr>, <expr><operator>-</operator><literal type="number">29692</literal></expr>, <expr><literal type="number">6270</literal></expr>, <expr><operator>-</operator><literal type="number">17855</literal></expr>,

<expr><literal type="number">29692</literal></expr>, <expr><operator>-</operator><literal type="number">12299</literal></expr>, <expr><literal type="number">26722</literal></expr>, <expr><operator>-</operator><literal type="number">31521</literal></expr>,

<expr><literal type="number">21407</literal></expr>, <expr><literal type="number">21407</literal></expr>, <expr><literal type="number">29692</literal></expr>, <expr><literal type="number">25172</literal></expr>,

<expr><literal type="number">21407</literal></expr>, <expr><literal type="number">21407</literal></expr>, <expr><literal type="number">16819</literal></expr>, <expr><literal type="number">5906</literal></expr>,

<expr><literal type="number">27969</literal></expr>, <expr><literal type="number">11585</literal></expr>, <expr><literal type="number">25172</literal></expr>, <expr><operator>-</operator><literal type="number">5906</literal></expr>,

<expr><operator>-</operator><literal type="number">11585</literal></expr>, <expr><operator>-</operator><literal type="number">27969</literal></expr>, <expr><operator>-</operator><literal type="number">29692</literal></expr>, <expr><operator>-</operator><literal type="number">16819</literal></expr>,

<expr><literal type="number">21407</literal></expr>, <expr><operator>-</operator><literal type="number">21407</literal></expr>, <expr><literal type="number">16819</literal></expr>, <expr><operator>-</operator><literal type="number">29692</literal></expr>,

<expr><operator>-</operator><literal type="number">21407</literal></expr>, <expr><literal type="number">21407</literal></expr>, <expr><literal type="number">5906</literal></expr>, <expr><literal type="number">25172</literal></expr>,

<expr><literal type="number">11585</literal></expr>, <expr><operator>-</operator><literal type="number">27969</literal></expr>, <expr><literal type="number">5906</literal></expr>, <expr><operator>-</operator><literal type="number">16819</literal></expr>,

<expr><literal type="number">27969</literal></expr>, <expr><operator>-</operator><literal type="number">11585</literal></expr>, <expr><literal type="number">25172</literal></expr>, <expr><operator>-</operator><literal type="number">29692</literal></expr>,

<expr><literal type="number">19266</literal></expr>, <expr><literal type="number">19266</literal></expr>, <expr><literal type="number">26722</literal></expr>, <expr><literal type="number">22654</literal></expr>,

<expr><literal type="number">19266</literal></expr>, <expr><literal type="number">19266</literal></expr>, <expr><literal type="number">15137</literal></expr>, <expr><literal type="number">5315</literal></expr>,

<expr><literal type="number">25172</literal></expr>, <expr><literal type="number">10426</literal></expr>, <expr><literal type="number">22654</literal></expr>, <expr><operator>-</operator><literal type="number">5315</literal></expr>,

<expr><operator>-</operator><literal type="number">10426</literal></expr>, <expr><operator>-</operator><literal type="number">25172</literal></expr>, <expr><operator>-</operator><literal type="number">26722</literal></expr>, <expr><operator>-</operator><literal type="number">15137</literal></expr>,

<expr><literal type="number">19266</literal></expr>, <expr><operator>-</operator><literal type="number">19266</literal></expr>, <expr><literal type="number">15137</literal></expr>, <expr><operator>-</operator><literal type="number">26722</literal></expr>,

<expr><operator>-</operator><literal type="number">19266</literal></expr>, <expr><literal type="number">19266</literal></expr>, <expr><literal type="number">5315</literal></expr>, <expr><literal type="number">22654</literal></expr>,

<expr><literal type="number">10426</literal></expr>, <expr><operator>-</operator><literal type="number">25172</literal></expr>, <expr><literal type="number">5315</literal></expr>, <expr><operator>-</operator><literal type="number">15137</literal></expr>,

<expr><literal type="number">25172</literal></expr>, <expr><operator>-</operator><literal type="number">10426</literal></expr>, <expr><literal type="number">22654</literal></expr>, <expr><operator>-</operator><literal type="number">26722</literal></expr>,

<expr><literal type="number">16384</literal></expr>, <expr><literal type="number">16384</literal></expr>, <expr><literal type="number">22725</literal></expr>, <expr><literal type="number">19266</literal></expr>,

<expr><literal type="number">16384</literal></expr>, <expr><literal type="number">16384</literal></expr>, <expr><literal type="number">12873</literal></expr>, <expr><literal type="number">4520</literal></expr>,

<expr><literal type="number">21407</literal></expr>, <expr><literal type="number">8867</literal></expr>, <expr><literal type="number">19266</literal></expr>, <expr><operator>-</operator><literal type="number">4520</literal></expr>,

<expr><operator>-</operator><literal type="number">8867</literal></expr>, <expr><operator>-</operator><literal type="number">21407</literal></expr>, <expr><operator>-</operator><literal type="number">22725</literal></expr>, <expr><operator>-</operator><literal type="number">12873</literal></expr>,

<expr><literal type="number">16384</literal></expr>, <expr><operator>-</operator><literal type="number">16384</literal></expr>, <expr><literal type="number">12873</literal></expr>, <expr><operator>-</operator><literal type="number">22725</literal></expr>,

<expr><operator>-</operator><literal type="number">16384</literal></expr>, <expr><literal type="number">16384</literal></expr>, <expr><literal type="number">4520</literal></expr>, <expr><literal type="number">19266</literal></expr>,

<expr><literal type="number">8867</literal></expr>, <expr><operator>-</operator><literal type="number">21407</literal></expr>, <expr><literal type="number">4520</literal></expr>, <expr><operator>-</operator><literal type="number">12873</literal></expr>,

<expr><literal type="number">21407</literal></expr>, <expr><operator>-</operator><literal type="number">8867</literal></expr>, <expr><literal type="number">19266</literal></expr>, <expr><operator>-</operator><literal type="number">22725</literal></expr>,

<expr><literal type="number">19266</literal></expr>, <expr><literal type="number">19266</literal></expr>, <expr><literal type="number">26722</literal></expr>, <expr><literal type="number">22654</literal></expr>,

<expr><literal type="number">19266</literal></expr>, <expr><literal type="number">19266</literal></expr>, <expr><literal type="number">15137</literal></expr>, <expr><literal type="number">5315</literal></expr>,

<expr><literal type="number">25172</literal></expr>, <expr><literal type="number">10426</literal></expr>, <expr><literal type="number">22654</literal></expr>, <expr><operator>-</operator><literal type="number">5315</literal></expr>,

<expr><operator>-</operator><literal type="number">10426</literal></expr>, <expr><operator>-</operator><literal type="number">25172</literal></expr>, <expr><operator>-</operator><literal type="number">26722</literal></expr>, <expr><operator>-</operator><literal type="number">15137</literal></expr>,

<expr><literal type="number">19266</literal></expr>, <expr><operator>-</operator><literal type="number">19266</literal></expr>, <expr><literal type="number">15137</literal></expr>, <expr><operator>-</operator><literal type="number">26722</literal></expr>,

<expr><operator>-</operator><literal type="number">19266</literal></expr>, <expr><literal type="number">19266</literal></expr>, <expr><literal type="number">5315</literal></expr>, <expr><literal type="number">22654</literal></expr>,

<expr><literal type="number">10426</literal></expr>, <expr><operator>-</operator><literal type="number">25172</literal></expr>, <expr><literal type="number">5315</literal></expr>, <expr><operator>-</operator><literal type="number">15137</literal></expr>,

<expr><literal type="number">25172</literal></expr>, <expr><operator>-</operator><literal type="number">10426</literal></expr>, <expr><literal type="number">22654</literal></expr>, <expr><operator>-</operator><literal type="number">26722</literal></expr>,

<expr><literal type="number">21407</literal></expr>, <expr><literal type="number">21407</literal></expr>, <expr><literal type="number">29692</literal></expr>, <expr><literal type="number">25172</literal></expr>,

<expr><literal type="number">21407</literal></expr>, <expr><literal type="number">21407</literal></expr>, <expr><literal type="number">16819</literal></expr>, <expr><literal type="number">5906</literal></expr>,

<expr><literal type="number">27969</literal></expr>, <expr><literal type="number">11585</literal></expr>, <expr><literal type="number">25172</literal></expr>, <expr><operator>-</operator><literal type="number">5906</literal></expr>,

<expr><operator>-</operator><literal type="number">11585</literal></expr>, <expr><operator>-</operator><literal type="number">27969</literal></expr>, <expr><operator>-</operator><literal type="number">29692</literal></expr>, <expr><operator>-</operator><literal type="number">16819</literal></expr>,

<expr><literal type="number">21407</literal></expr>, <expr><operator>-</operator><literal type="number">21407</literal></expr>, <expr><literal type="number">16819</literal></expr>, <expr><operator>-</operator><literal type="number">29692</literal></expr>,

<expr><operator>-</operator><literal type="number">21407</literal></expr>, <expr><literal type="number">21407</literal></expr>, <expr><literal type="number">5906</literal></expr>, <expr><literal type="number">25172</literal></expr>,

<expr><literal type="number">11585</literal></expr>, <expr><operator>-</operator><literal type="number">27969</literal></expr>, <expr><literal type="number">5906</literal></expr>, <expr><operator>-</operator><literal type="number">16819</literal></expr>,

<expr><literal type="number">27969</literal></expr>, <expr><operator>-</operator><literal type="number">11585</literal></expr>, <expr><literal type="number">25172</literal></expr>, <expr><operator>-</operator><literal type="number">29692</literal></expr>,

<expr><literal type="number">22725</literal></expr>, <expr><literal type="number">22725</literal></expr>, <expr><literal type="number">31521</literal></expr>, <expr><literal type="number">26722</literal></expr>,

<expr><literal type="number">22725</literal></expr>, <expr><literal type="number">22725</literal></expr>, <expr><literal type="number">17855</literal></expr>, <expr><literal type="number">6270</literal></expr>,

<expr><literal type="number">29692</literal></expr>, <expr><literal type="number">12299</literal></expr>, <expr><literal type="number">26722</literal></expr>, <expr><operator>-</operator><literal type="number">6270</literal></expr>,

<expr><operator>-</operator><literal type="number">12299</literal></expr>, <expr><operator>-</operator><literal type="number">29692</literal></expr>, <expr><operator>-</operator><literal type="number">31521</literal></expr>, <expr><operator>-</operator><literal type="number">17855</literal></expr>,

<expr><literal type="number">22725</literal></expr>, <expr><operator>-</operator><literal type="number">22725</literal></expr>, <expr><literal type="number">17855</literal></expr>, <expr><operator>-</operator><literal type="number">31521</literal></expr>,

<expr><operator>-</operator><literal type="number">22725</literal></expr>, <expr><literal type="number">22725</literal></expr>, <expr><literal type="number">6270</literal></expr>, <expr><literal type="number">26722</literal></expr>,

<expr><literal type="number">12299</literal></expr>, <expr><operator>-</operator><literal type="number">29692</literal></expr>, <expr><literal type="number">6270</literal></expr>, <expr><operator>-</operator><literal type="number">17855</literal></expr>,

<expr><literal type="number">29692</literal></expr>, <expr><operator>-</operator><literal type="number">12299</literal></expr>, <expr><literal type="number">26722</literal></expr>, <expr><operator>-</operator><literal type="number">31521</literal></expr>,

}</block></expr>;</expr_stmt>

<struct><specifier>static</specifier> <specifier>const</specifier> struct

<block>{

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><specifier>const</specifier> <name>int16_t</name></expr></argument>, <argument><expr><name>tab_frw_01234567_sse2</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">256</literal></expr>]</index></expr>;</expr_stmt>

}</block> <decl><name>tab_frw_01234567_sse2</name> <init>=

<expr><block>{<expr><block>{

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TABLE_SSE2</name></cpp:macro> <cpp:value>C4, C4, C1, C3, -C6, -C2, -C1, -C5, C4, C4, C5, C7, C2, C6, C3, -C7, -C4, C4, C7, C3, C6, -C2, C7, -C5, C4, -C4, C5, -C1, C2, -C6, C3, -C1,</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C1</name></cpp:macro> <cpp:value>22725</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C2</name></cpp:macro> <cpp:value>21407</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C3</name></cpp:macro> <cpp:value>19266</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C4</name></cpp:macro> <cpp:value>16384</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C5</name></cpp:macro> <cpp:value>12873</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C6</name></cpp:macro> <cpp:value>8867</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C7</name></cpp:macro> <cpp:value>4520</cpp:value></cpp:define>

<expr><name>TABLE_SSE2</name>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C1</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C2</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C3</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C4</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C5</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C6</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C7</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C1</name></cpp:macro> <cpp:value>31521</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C2</name></cpp:macro> <cpp:value>29692</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C3</name></cpp:macro> <cpp:value>26722</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C4</name></cpp:macro> <cpp:value>22725</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C5</name></cpp:macro> <cpp:value>17855</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C6</name></cpp:macro> <cpp:value>12299</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C7</name></cpp:macro> <cpp:value>6270</cpp:value></cpp:define>

<name>TABLE_SSE2</name>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C1</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C2</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C3</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C4</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C5</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C6</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C7</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C1</name></cpp:macro> <cpp:value>29692</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C2</name></cpp:macro> <cpp:value>27969</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C3</name></cpp:macro> <cpp:value>25172</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C4</name></cpp:macro> <cpp:value>21407</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C5</name></cpp:macro> <cpp:value>16819</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C6</name></cpp:macro> <cpp:value>11585</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C7</name></cpp:macro> <cpp:value>5906</cpp:value></cpp:define>

<name>TABLE_SSE2</name>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C1</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C2</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C3</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C4</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C5</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C6</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C7</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C1</name></cpp:macro> <cpp:value>26722</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C2</name></cpp:macro> <cpp:value>25172</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C3</name></cpp:macro> <cpp:value>22654</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C4</name></cpp:macro> <cpp:value>19266</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C5</name></cpp:macro> <cpp:value>15137</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C6</name></cpp:macro> <cpp:value>10426</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C7</name></cpp:macro> <cpp:value>5315</cpp:value></cpp:define>

<name>TABLE_SSE2</name>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C1</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C2</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C3</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C4</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C5</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C6</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C7</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C1</name></cpp:macro> <cpp:value>22725</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C2</name></cpp:macro> <cpp:value>21407</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C3</name></cpp:macro> <cpp:value>19266</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C4</name></cpp:macro> <cpp:value>16384</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C5</name></cpp:macro> <cpp:value>12873</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C6</name></cpp:macro> <cpp:value>8867</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C7</name></cpp:macro> <cpp:value>4520</cpp:value></cpp:define>

<name>TABLE_SSE2</name>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C1</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C2</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C3</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C4</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C5</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C6</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C7</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C1</name></cpp:macro> <cpp:value>26722</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C2</name></cpp:macro> <cpp:value>25172</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C3</name></cpp:macro> <cpp:value>22654</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C4</name></cpp:macro> <cpp:value>19266</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C5</name></cpp:macro> <cpp:value>15137</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C6</name></cpp:macro> <cpp:value>10426</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C7</name></cpp:macro> <cpp:value>5315</cpp:value></cpp:define>

<name>TABLE_SSE2</name>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C1</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C2</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C3</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C4</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C5</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C6</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C7</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C1</name></cpp:macro> <cpp:value>29692</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C2</name></cpp:macro> <cpp:value>27969</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C3</name></cpp:macro> <cpp:value>25172</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C4</name></cpp:macro> <cpp:value>21407</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C5</name></cpp:macro> <cpp:value>16819</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C6</name></cpp:macro> <cpp:value>11585</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C7</name></cpp:macro> <cpp:value>5906</cpp:value></cpp:define>

<name>TABLE_SSE2</name>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C1</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C2</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C3</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C4</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C5</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C6</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>C7</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C1</name></cpp:macro> <cpp:value>31521</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C2</name></cpp:macro> <cpp:value>29692</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C3</name></cpp:macro> <cpp:value>26722</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C4</name></cpp:macro> <cpp:value>22725</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C5</name></cpp:macro> <cpp:value>17855</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C6</name></cpp:macro> <cpp:value>12299</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C7</name></cpp:macro> <cpp:value>6270</cpp:value></cpp:define>

<name>TABLE_SSE2</name></expr>

}</block></expr>}</block></expr></init></decl>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S</name><parameter_list>(<parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>AV_TOSTRING(s)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FDCT_COL</name><parameter_list>(<parameter><type><name>cpu</name></type></parameter>, <parameter><type><name>mm</name></type></parameter>, <parameter><type><name>mov</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>static av_always_inline void fdct_col_##cpu(const int16_t *in, int16_t *out, int offset){__asm__ volatile (#mov" 16(%0), %%"#mm"0 \n\t" #mov" 96(%0), %%"#mm"1 \n\t" #mov" %%"#mm"0, %%"#mm"2 \n\t" #mov" 32(%0), %%"#mm"3 \n\t" "paddsw %%"#mm"1, %%"#mm"0 \n\t" #mov" 80(%0), %%"#mm"4 \n\t" "psllw $"S(SHIFT_FRW_COL)", %%"#mm"0 \n\t" #mov" (%0), %%"#mm"5 \n\t" "paddsw %%"#mm"3, %%"#mm"4 \n\t" "paddsw 112(%0), %%"#mm"5 \n\t" "psllw $"S(SHIFT_FRW_COL)", %%"#mm"4 \n\t" #mov" %%"#mm"0, %%"#mm"6 \n\t" "psubsw %%"#mm"1, %%"#mm"2 \n\t" #mov" 16(%1), %%"#mm"1 \n\t" "psubsw %%"#mm"4, %%"#mm"0 \n\t" #mov" 48(%0), %%"#mm"7 \n\t" "pmulhw %%"#mm"0, %%"#mm"1 \n\t" "paddsw 64(%0), %%"#mm"7 \n\t" "psllw $"S(SHIFT_FRW_COL)", %%"#mm"5 \n\t" "paddsw %%"#mm"4, %%"#mm"6 \n\t" "psllw $"S(SHIFT_FRW_COL)", %%"#mm"7 \n\t" #mov" %%"#mm"5, %%"#mm"4 \n\t" "psubsw %%"#mm"7, %%"#mm"5 \n\t" "paddsw %%"#mm"5, %%"#mm"1 \n\t" "paddsw %%"#mm"7, %%"#mm"4 \n\t" "por (%2), %%"#mm"1 \n\t" "psllw $"S(SHIFT_FRW_COL)"+1, %%"#mm"2 \n\t" "pmulhw 16(%1), %%"#mm"5 \n\t" #mov" %%"#mm"4, %%"#mm"7 \n\t" "psubsw 80(%0), %%"#mm"3 \n\t" "psubsw %%"#mm"6, %%"#mm"4 \n\t" #mov" %%"#mm"1, 32(%3) \n\t" "paddsw %%"#mm"6, %%"#mm"7 \n\t" #mov" 48(%0), %%"#mm"1 \n\t" "psllw $"S(SHIFT_FRW_COL)"+1, %%"#mm"3 \n\t" "psubsw 64(%0), %%"#mm"1 \n\t" #mov" %%"#mm"2, %%"#mm"6 \n\t" #mov" %%"#mm"4, 64(%3) \n\t" "paddsw %%"#mm"3, %%"#mm"2 \n\t" "pmulhw (%4), %%"#mm"2 \n\t" "psubsw %%"#mm"3, %%"#mm"6 \n\t" "pmulhw (%4), %%"#mm"6 \n\t" "psubsw %%"#mm"0, %%"#mm"5 \n\t" "por (%2), %%"#mm"5 \n\t" "psllw $"S(SHIFT_FRW_COL)", %%"#mm"1 \n\t" "por (%2), %%"#mm"2 \n\t" #mov" %%"#mm"1, %%"#mm"4 \n\t" #mov" (%0), %%"#mm"3 \n\t" "paddsw %%"#mm"6, %%"#mm"1 \n\t" "psubsw 112(%0), %%"#mm"3 \n\t" "psubsw %%"#mm"6, %%"#mm"4 \n\t" #mov" (%1), %%"#mm"0 \n\t" "psllw $"S(SHIFT_FRW_COL)", %%"#mm"3 \n\t" #mov" 32(%1), %%"#mm"6 \n\t" "pmulhw %%"#mm"1, %%"#mm"0 \n\t" #mov" %%"#mm"7, (%3) \n\t" "pmulhw %%"#mm"4, %%"#mm"6 \n\t" #mov" %%"#mm"5, 96(%3) \n\t" #mov" %%"#mm"3, %%"#mm"7 \n\t" #mov" 32(%1), %%"#mm"5 \n\t" "psubsw %%"#mm"2, %%"#mm"7 \n\t" "paddsw %%"#mm"2, %%"#mm"3 \n\t" "pmulhw %%"#mm"7, %%"#mm"5 \n\t" "paddsw %%"#mm"3, %%"#mm"0 \n\t" "paddsw %%"#mm"4, %%"#mm"6 \n\t" "pmulhw (%1), %%"#mm"3 \n\t" "por (%2), %%"#mm"0 \n\t" "paddsw %%"#mm"7, %%"#mm"5 \n\t" "psubsw %%"#mm"6, %%"#mm"7 \n\t" #mov" %%"#mm"0, 16(%3) \n\t" "paddsw %%"#mm"4, %%"#mm"5 \n\t" #mov" %%"#mm"7, 48(%3) \n\t" "psubsw %%"#mm"1, %%"#mm"3 \n\t" #mov" %%"#mm"5, 80(%3) \n\t" #mov" %%"#mm"3, 112(%3) \n\t" : : "r" (in + offset), "r" (fdct_tg_all_16), "r" (fdct_one_corr), "r" (out + offset), "r" (ocos_4_16)); }</cpp:value></cpp:define>

<macro><name>FDCT_COL</name><argument_list>(<argument>mmx</argument>, <argument>mm</argument>, <argument>movq</argument>)</argument_list></macro>

<macro><name>FDCT_COL</name><argument_list>(<argument>sse2</argument>, <argument>xmm</argument>, <argument>movdqa</argument>)</argument_list></macro>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>void</name></type> <name>fdct_row_sse2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>int16_t</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<asm>__asm__ <specifier>volatile</specifier>(

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FDCT_ROW_SSE2_H1</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>"movq " #i "(%0), %%xmm2 \n\t" "movq " #i "+8(%0), %%xmm0 \n\t" "movdqa " #t "+32(%1), %%xmm3 \n\t" "movdqa " #t "+48(%1), %%xmm7 \n\t" "movdqa " #t "(%1), %%xmm4 \n\t" "movdqa " #t "+16(%1), %%xmm5 \n\t"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FDCT_ROW_SSE2_H2</name><parameter_list>(<parameter><type><name>i</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>"movq " #i "(%0), %%xmm2 \n\t" "movq " #i "+8(%0), %%xmm0 \n\t" "movdqa " #t "+32(%1), %%xmm3 \n\t" "movdqa " #t "+48(%1), %%xmm7 \n\t"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FDCT_ROW_SSE2</name><parameter_list>(<parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>"movq %%xmm2, %%xmm1 \n\t" "pshuflw $27, %%xmm0, %%xmm0 \n\t" "paddsw %%xmm0, %%xmm1 \n\t" "psubsw %%xmm0, %%xmm2 \n\t" "punpckldq %%xmm2, %%xmm1 \n\t" "pshufd $78, %%xmm1, %%xmm2 \n\t" "pmaddwd %%xmm2, %%xmm3 \n\t" "pmaddwd %%xmm1, %%xmm7 \n\t" "pmaddwd %%xmm5, %%xmm2 \n\t" "pmaddwd %%xmm4, %%xmm1 \n\t" "paddd %%xmm7, %%xmm3 \n\t" "paddd %%xmm2, %%xmm1 \n\t" "paddd %%xmm6, %%xmm3 \n\t" "paddd %%xmm6, %%xmm1 \n\t" "psrad %3, %%xmm3 \n\t" "psrad %3, %%xmm1 \n\t" "packssdw %%xmm3, %%xmm1 \n\t" "movdqa %%xmm1, " #i "(%4) \n\t"</cpp:value></cpp:define>

"movdqa (%2), %%xmm6 \n\t"

FDCT_ROW_SSE2_H1(0,0)

FDCT_ROW_SSE2(0)

FDCT_ROW_SSE2_H2(64,0)

FDCT_ROW_SSE2(64)

FDCT_ROW_SSE2_H1(16,64)

FDCT_ROW_SSE2(16)

FDCT_ROW_SSE2_H2(112,64)

FDCT_ROW_SSE2(112)

FDCT_ROW_SSE2_H1(32,128)

FDCT_ROW_SSE2(32)

FDCT_ROW_SSE2_H2(96,128)

FDCT_ROW_SSE2(96)

FDCT_ROW_SSE2_H1(48,192)

FDCT_ROW_SSE2(48)

FDCT_ROW_SSE2_H2(80,192)

FDCT_ROW_SSE2(80)

:

: "r" (in), "r" (tab_frw_01234567_sse2.tab_frw_01234567_sse2),

"r" (fdct_r_row_sse2.fdct_r_row_sse2), "i" (SHIFT_FRW_ROW), "r" (out)

XMM_CLOBBERS_ONLY("%xmm0", "%xmm1", "%xmm2", "%xmm3",

"%xmm4", "%xmm5", "%xmm6", "%xmm7")

);</asm>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>void</name></type> <name>fdct_row_mmxext</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>int16_t</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>int16_t</name> <modifier>*</modifier></type><name>table</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<asm>__asm__ <specifier>volatile</specifier> (

"pshufw $0x1B, 8(%0), %%mm5 \n\t"

"movq (%0), %%mm0 \n\t"

"movq %%mm0, %%mm1 \n\t"

"paddsw %%mm5, %%mm0 \n\t"

"psubsw %%mm5, %%mm1 \n\t"

"movq %%mm0, %%mm2 \n\t"

"punpckldq %%mm1, %%mm0 \n\t"

"punpckhdq %%mm1, %%mm2 \n\t"

"movq (%1), %%mm1 \n\t"

"movq 8(%1), %%mm3 \n\t"

"movq 16(%1), %%mm4 \n\t"

"movq 24(%1), %%mm5 \n\t"

"movq 32(%1), %%mm6 \n\t"

"movq 40(%1), %%mm7 \n\t"

"pmaddwd %%mm0, %%mm1 \n\t"

"pmaddwd %%mm2, %%mm3 \n\t"

"pmaddwd %%mm0, %%mm4 \n\t"

"pmaddwd %%mm2, %%mm5 \n\t"

"pmaddwd %%mm0, %%mm6 \n\t"

"pmaddwd %%mm2, %%mm7 \n\t"

"pmaddwd 48(%1), %%mm0 \n\t"

"pmaddwd 56(%1), %%mm2 \n\t"

"paddd %%mm1, %%mm3 \n\t"

"paddd %%mm4, %%mm5 \n\t"

"paddd %%mm6, %%mm7 \n\t"

"paddd %%mm0, %%mm2 \n\t"

"movq (%2), %%mm0 \n\t"

"paddd %%mm0, %%mm3 \n\t"

"paddd %%mm0, %%mm5 \n\t"

"paddd %%mm0, %%mm7 \n\t"

"paddd %%mm0, %%mm2 \n\t"

"psrad $"S(SHIFT_FRW_ROW)", %%mm3 \n\t"

"psrad $"S(SHIFT_FRW_ROW)", %%mm5 \n\t"

"psrad $"S(SHIFT_FRW_ROW)", %%mm7 \n\t"

"psrad $"S(SHIFT_FRW_ROW)", %%mm2 \n\t"

"packssdw %%mm5, %%mm3 \n\t"

"packssdw %%mm2, %%mm7 \n\t"

"movq %%mm3, (%3) \n\t"

"movq %%mm7, 8(%3) \n\t"

:

: "r" (in), "r" (table), "r" (fdct_r_row), "r" (out));</asm>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>void</name></type> <name>fdct_row_mmx</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>int16_t</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int16_t</name> <modifier>*</modifier></type><name>table</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<asm>__asm__ <specifier>volatile</specifier>(

"movd 12(%0), %%mm1 \n\t"

"punpcklwd 8(%0), %%mm1 \n\t"

"movq %%mm1, %%mm2 \n\t"

"psrlq $0x20, %%mm1 \n\t"

"movq 0(%0), %%mm0 \n\t"

"punpcklwd %%mm2, %%mm1 \n\t"

"movq %%mm0, %%mm5 \n\t"

"paddsw %%mm1, %%mm0 \n\t"

"psubsw %%mm1, %%mm5 \n\t"

"movq %%mm0, %%mm2 \n\t"

"punpckldq %%mm5, %%mm0 \n\t"

"punpckhdq %%mm5, %%mm2 \n\t"

"movq 0(%1), %%mm1 \n\t"

"movq 8(%1), %%mm3 \n\t"

"movq 16(%1), %%mm4 \n\t"

"movq 24(%1), %%mm5 \n\t"

"movq 32(%1), %%mm6 \n\t"

"movq 40(%1), %%mm7 \n\t"

"pmaddwd %%mm0, %%mm1 \n\t"

"pmaddwd %%mm2, %%mm3 \n\t"

"pmaddwd %%mm0, %%mm4 \n\t"

"pmaddwd %%mm2, %%mm5 \n\t"

"pmaddwd %%mm0, %%mm6 \n\t"

"pmaddwd %%mm2, %%mm7 \n\t"

"pmaddwd 48(%1), %%mm0 \n\t"

"pmaddwd 56(%1), %%mm2 \n\t"

"paddd %%mm1, %%mm3 \n\t"

"paddd %%mm4, %%mm5 \n\t"

"paddd %%mm6, %%mm7 \n\t"

"paddd %%mm0, %%mm2 \n\t"

"movq (%2), %%mm0 \n\t"

"paddd %%mm0, %%mm3 \n\t"

"paddd %%mm0, %%mm5 \n\t"

"paddd %%mm0, %%mm7 \n\t"

"paddd %%mm0, %%mm2 \n\t"

"psrad $"S(SHIFT_FRW_ROW)", %%mm3 \n\t"

"psrad $"S(SHIFT_FRW_ROW)", %%mm5 \n\t"

"psrad $"S(SHIFT_FRW_ROW)", %%mm7 \n\t"

"psrad $"S(SHIFT_FRW_ROW)", %%mm2 \n\t"

"packssdw %%mm5, %%mm3 \n\t"

"packssdw %%mm2, %%mm7 \n\t"

"movq %%mm3, 0(%3) \n\t"

"movq %%mm7, 8(%3) \n\t"

:

: "r" (in), "r" (table), "r" (fdct_r_row), "r" (out));</asm>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_fdct_mmx</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>block</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>int64_t</name></expr></argument>, <argument><expr><name>align_tmp</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">16</literal></expr>]</index></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type> <name>block1</name><init>= <expr><operator>(</operator><name>int16_t</name><operator>*</operator><operator>)</operator><name>align_tmp</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name> <modifier>*</modifier></type><name>table</name><init>= <expr><name>tab_frw_01234567</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>fdct_col_mmx</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><name>block1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fdct_col_mmx</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><name>block1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">8</literal></expr>;</init><condition><expr><name>i</name><operator>&gt;</operator><literal type="number">0</literal></expr>;</condition><incr><expr><name>i</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>fdct_row_mmx</name><argument_list>(<argument><expr><name>block1</name></expr></argument>, <argument><expr><name>block</name></expr></argument>, <argument><expr><name>table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>block1</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>table</name> <operator>+=</operator> <literal type="number">32</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>block</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_MMXEXT_INLINE</name></expr></cpp:if>

<function><type><name>void</name></type> <name>ff_fdct_mmxext</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>block</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>int64_t</name></expr></argument>, <argument><expr><name>align_tmp</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">16</literal></expr>]</index></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>block1</name><init>= <expr><operator>(</operator><name>int16_t</name><operator>*</operator><operator>)</operator><name>align_tmp</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name> <modifier>*</modifier></type><name>table</name><init>= <expr><name>tab_frw_01234567</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>fdct_col_mmx</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><name>block1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fdct_col_mmx</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><name>block1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for<control>(<init><expr><name>i</name><operator>=</operator><literal type="number">8</literal></expr>;</init><condition><expr><name>i</name><operator>&gt;</operator><literal type="number">0</literal></expr>;</condition><incr><expr><name>i</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>fdct_row_mmxext</name><argument_list>(<argument><expr><name>block1</name></expr></argument>, <argument><expr><name>block</name></expr></argument>, <argument><expr><name>table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>block1</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>table</name> <operator>+=</operator> <literal type="number">32</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>block</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_SSE2_INLINE</name></expr></cpp:if>

<function><type><name>void</name></type> <name>ff_fdct_sse2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>block</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>int64_t</name></expr></argument>, <argument><expr><name>align_tmp</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">16</literal></expr>]</index></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>block1</name><init>= <expr><operator>(</operator><name>int16_t</name><operator>*</operator><operator>)</operator><name>align_tmp</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>fdct_col_sse2</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><name>block1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>fdct_row_sse2</name><argument_list>(<argument><expr><name>block1</name></expr></argument>, <argument><expr><name>block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
