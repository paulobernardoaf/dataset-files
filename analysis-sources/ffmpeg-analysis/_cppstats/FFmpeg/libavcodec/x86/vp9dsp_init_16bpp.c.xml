<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\x86\vp9dsp_init_16bpp.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mem.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/vp9dsp.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/x86/vp9dsp_init.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_X86ASM</name></expr></cpp:if>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>put</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, , <argument><expr><name>mmx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>avg</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>put</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, , <argument><expr><name>sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>put</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, , <argument><expr><name>sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>put</name></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, , <argument><expr><name>sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>put</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, , <argument><expr><name>sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>avg</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>avg</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>avg</name></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>avg</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>put</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, , <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>put</name></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, , <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>put</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, , <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>avg</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>avg</name></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_fpel_func</name><argument_list>(<argument><expr><name>avg</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_fns</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mmx</name></expr></argument>, <argument><expr><name>sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_fns</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mmxext</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_fns</name><argument_list>(<argument><expr><name>dc</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mmxext</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_fns</name><argument_list>(<argument><expr><name>dc_top</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mmxext</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_fns</name><argument_list>(<argument><expr><name>dc_left</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mmxext</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_fn</name><argument_list>(<argument><expr><name>dl</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_fn</name><argument_list>(<argument><expr><name>dl</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_fn</name><argument_list>(<argument><expr><name>dr</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_fn</name><argument_list>(<argument><expr><name>dr</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>decl_ipred_dir_funcs</name><parameter_list>(<parameter><type><name>type</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>decl_ipred_fns(type, 16, sse2, sse2); decl_ipred_fns(type, 16, ssse3, ssse3); decl_ipred_fns(type, 16, avx, avx)</cpp:value></cpp:define>

<expr_stmt><expr><call><name>decl_ipred_dir_funcs</name><argument_list>(<argument><expr><name>dl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_dir_funcs</name><argument_list>(<argument><expr><name>dr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_dir_funcs</name><argument_list>(<argument><expr><name>vl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_dir_funcs</name><argument_list>(<argument><expr><name>vr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_dir_funcs</name><argument_list>(<argument><expr><name>hu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>decl_ipred_dir_funcs</name><argument_list>(<argument><expr><name>hd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_vp9dsp_init_16bpp_x86</name><parameter_list>(<parameter><decl><type><name>VP9DSPContext</name> <modifier>*</modifier></type><name>dsp</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_X86ASM</name></expr></cpp:if>

<decl_stmt><decl><type><name>int</name></type> <name>cpu_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_MMX</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>put</name></expr></argument>, , <argument><expr><name>mmx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_func</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><name>VERT</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mmx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_MMXEXT</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avg</name></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_func</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>HOR</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_func</name><argument_list>(<argument><expr><name>dc</name></expr></argument>, <argument><expr><name>DC</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_func</name><argument_list>(<argument><expr><name>dc_top</name></expr></argument>, <argument><expr><name>TOP_DC</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_func</name><argument_list>(<argument><expr><name>dc_left</name></expr></argument>, <argument><expr><name>LEFT_DC</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>put</name></expr></argument>, , <argument><expr><name>sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>put</name></expr></argument>, , <argument><expr><name>sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>put</name></expr></argument>, , <argument><expr><name>sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><name>put</name></expr></argument>, , <argument><expr><name>sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_8_16_32_ipred_funcs</name><argument_list>(<argument><expr><name>v</name></expr></argument>, <argument><expr><name>VERT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avg</name></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>avg</name></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>avg</name></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><name>avg</name></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_8_16_32_ipred_funcs</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>HOR</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_8_16_32_ipred_funcs</name><argument_list>(<argument><expr><name>dc</name></expr></argument>, <argument><expr><name>DC</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_8_16_32_ipred_funcs</name><argument_list>(<argument><expr><name>dc_top</name></expr></argument>, <argument><expr><name>TOP_DC</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_8_16_32_ipred_funcs</name><argument_list>(<argument><expr><name>dc_left</name></expr></argument>, <argument><expr><name>LEFT_DC</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>dl</name></expr></argument>, <argument><expr><name>DIAG_DOWN_LEFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>dr</name></expr></argument>, <argument><expr><name>DIAG_DOWN_RIGHT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>vl</name></expr></argument>, <argument><expr><name>VERT_LEFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>vr</name></expr></argument>, <argument><expr><name>VERT_RIGHT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>hu</name></expr></argument>, <argument><expr><name>HOR_UP</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>hd</name></expr></argument>, <argument><expr><name>HOR_DOWN</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSSE3</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>dl</name></expr></argument>, <argument><expr><name>DIAG_DOWN_LEFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>ssse3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>dr</name></expr></argument>, <argument><expr><name>DIAG_DOWN_RIGHT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>ssse3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>vl</name></expr></argument>, <argument><expr><name>VERT_LEFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>ssse3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>vr</name></expr></argument>, <argument><expr><name>VERT_RIGHT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>ssse3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>hu</name></expr></argument>, <argument><expr><name>HOR_UP</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>ssse3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>hd</name></expr></argument>, <argument><expr><name>HOR_DOWN</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>ssse3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX_FAST</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>put</name></expr></argument>, , <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>put</name></expr></argument>, , <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><name>put</name></expr></argument>, , <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>dl</name></expr></argument>, <argument><expr><name>DIAG_DOWN_LEFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>dr</name></expr></argument>, <argument><expr><name>DIAG_DOWN_RIGHT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>vl</name></expr></argument>, <argument><expr><name>VERT_LEFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>vr</name></expr></argument>, <argument><expr><name>VERT_RIGHT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>hu</name></expr></argument>, <argument><expr><name>HOR_UP</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_funcs</name><argument_list>(<argument><expr><name>hd</name></expr></argument>, <argument><expr><name>HOR_DOWN</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX2_FAST</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>avg</name></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>avg</name></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_fpel_func</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>, <argument><expr><name>avg</name></expr></argument>, <argument><expr><name>_16</name></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_func</name><argument_list>(<argument><expr><name>dl</name></expr></argument>, <argument><expr><name>DIAG_DOWN_LEFT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_func</name><argument_list>(<argument><expr><name>dl</name></expr></argument>, <argument><expr><name>DIAG_DOWN_LEFT</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>init_ipred_func</name><argument_list>(<argument><expr><name>dr</name></expr></argument>, <argument><expr><name>DIAG_DOWN_RIGHT</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>ARCH_X86_64</name></expr></cpp:if>

<expr_stmt><expr><call><name>init_ipred_func</name><argument_list>(<argument><expr><name>dr</name></expr></argument>, <argument><expr><name>DIAG_DOWN_RIGHT</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</block_content>}</block></function>

</unit>
