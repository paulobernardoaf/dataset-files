<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\x86\flacdsp_init.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/flacdsp.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<function_decl><type><name>void</name></type> <name>ff_flac_lpc_32_sse4</name><parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>samples</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>coeffs</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>order</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>qlevel</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_flac_lpc_32_xop</name><parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>samples</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>coeffs</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>order</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>qlevel</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_flac_enc_lpc_16_sse4</name><parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int32_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int32_t</name> <modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECORRELATE_FUNCS</name><parameter_list>(<parameter><type><name>fmt</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_flac_decorrelate_ls_##fmt##_##opt(uint8_t **out, int32_t **in, int channels, int len, int shift); void ff_flac_decorrelate_rs_##fmt##_##opt(uint8_t **out, int32_t **in, int channels, int len, int shift); void ff_flac_decorrelate_ms_##fmt##_##opt(uint8_t **out, int32_t **in, int channels, int len, int shift); void ff_flac_decorrelate_indep2_##fmt##_##opt(uint8_t **out, int32_t **in, int channels, int len, int shift); void ff_flac_decorrelate_indep4_##fmt##_##opt(uint8_t **out, int32_t **in, int channels, int len, int shift); void ff_flac_decorrelate_indep6_##fmt##_##opt(uint8_t **out, int32_t **in, int channels, int len, int shift); void ff_flac_decorrelate_indep8_##fmt##_##opt(uint8_t **out, int32_t **in, int channels, int len, int shift)</cpp:value></cpp:define>

<expr_stmt><expr><call><name>DECORRELATE_FUNCS</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECORRELATE_FUNCS</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECORRELATE_FUNCS</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECORRELATE_FUNCS</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_flacdsp_init_x86</name><parameter_list>(<parameter><decl><type><name>FLACDSPContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>fmt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>channels</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>bps</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_X86ASM</name></expr></cpp:if>

<decl_stmt><decl><type><name>int</name></type> <name>cpu_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_FLAC_DECODER</name></expr></cpp:if>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>fmt</name> <operator>==</operator> <name>AV_SAMPLE_FMT_S16</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>channels</name> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_indep2_16_sse2</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>channels</name> <operator>==</operator> <literal type="number">4</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_indep4_16_sse2</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>channels</name> <operator>==</operator> <literal type="number">6</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_indep6_16_sse2</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>ARCH_X86_64</name> <operator>&amp;&amp;</operator> <name>channels</name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_indep8_16_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_ls_16_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_rs_16_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_ms_16_sse2</name></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>fmt</name> <operator>==</operator> <name>AV_SAMPLE_FMT_S32</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>channels</name> <operator>==</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_indep2_32_sse2</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>channels</name> <operator>==</operator> <literal type="number">4</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_indep4_32_sse2</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>channels</name> <operator>==</operator> <literal type="number">6</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_indep6_32_sse2</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>ARCH_X86_64</name> <operator>&amp;&amp;</operator> <name>channels</name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_indep8_32_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_ls_32_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_rs_32_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_ms_32_sse2</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE4</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>lpc32</name></name> <operator>=</operator> <name>ff_flac_lpc_32_sse4</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>fmt</name> <operator>==</operator> <name>AV_SAMPLE_FMT_S16</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>ARCH_X86_64</name> <operator>&amp;&amp;</operator> <name>channels</name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_indep8_16_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>fmt</name> <operator>==</operator> <name>AV_SAMPLE_FMT_S32</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>channels</name> <operator>==</operator> <literal type="number">4</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_indep4_32_avx</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>channels</name> <operator>==</operator> <literal type="number">6</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_indep6_32_avx</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>ARCH_X86_64</name> <operator>&amp;&amp;</operator> <name>channels</name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_flac_decorrelate_indep8_32_avx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_XOP</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>lpc32</name></name> <operator>=</operator> <name>ff_flac_lpc_32_xop</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_FLAC_ENCODER</name></expr></cpp:if>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE4</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>CONFIG_GPL</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>lpc16_encode</name></name> <operator>=</operator> <name>ff_flac_enc_lpc_16_sse4</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</block_content>}</block></function>

</unit>
