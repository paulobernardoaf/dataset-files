<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\x86\mdct15_init.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/mdct15.h"</cpp:file></cpp:include>

<function_decl><type><name>void</name></type> <name>ff_mdct15_postreindex_sse3</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>exp</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>lut</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>len8</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_mdct15_postreindex_avx2</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>exp</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>lut</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>len8</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_fft15_avx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>exptab</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>void</name></type> <name>perm_twiddles</name><parameter_list>(<parameter><decl><type><name>MDCT15Context</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>k</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FFTComplex</name></type> <name><name>tmp</name><index>[<expr><literal type="number">30</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">60</literal></expr>]</index></name><operator>.</operator><name>re</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">60</literal></expr>]</index></name><operator>.</operator><name>im</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">19</literal></expr>]</index></name><operator>.</operator><name>re</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">61</literal></expr>]</index></name><operator>.</operator><name>re</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">61</literal></expr>]</index></name><operator>.</operator><name>im</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">19</literal></expr>]</index></name><operator>.</operator><name>im</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">62</literal></expr>]</index></name><operator>.</operator><name>re</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">62</literal></expr>]</index></name><operator>.</operator><name>im</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">20</literal></expr>]</index></name><operator>.</operator><name>re</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">63</literal></expr>]</index></name><operator>.</operator><name>re</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">63</literal></expr>]</index></name><operator>.</operator><name>im</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">20</literal></expr>]</index></name><operator>.</operator><name>im</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>k</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <literal type="number">5</literal></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><name>k</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><name>k</name> <operator>+</operator> <literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><name>k</name> <operator>+</operator> <literal type="number">10</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <operator>(</operator><name>k</name> <operator>+</operator> <literal type="number">0</literal><operator>)</operator></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <operator>(</operator><name>k</name> <operator>+</operator> <literal type="number">5</literal><operator>)</operator></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>exptab</name><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>k</name> <operator>+</operator> <literal type="number">5</literal></expr> ]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>k</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <literal type="number">6</literal></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>FFTComplex</name></type> <name><name>ac_exp</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">1</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>re</name></expr>, <expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">1</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>re</name></expr> }</block></expr>,

<expr><block>{ <expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">2</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>re</name></expr>, <expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">2</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>re</name></expr> }</block></expr>,

<expr><block>{ <expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">3</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>re</name></expr>, <expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">3</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>re</name></expr> }</block></expr>,

<expr><block>{ <expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">4</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>re</name></expr>, <expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">4</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>re</name></expr> }</block></expr>,

<expr><block>{ <expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">1</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>im</name></expr>, <expr><operator>-</operator><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">1</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>im</name></expr> }</block></expr>,

<expr><block>{ <expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">2</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>im</name></expr>, <expr><operator>-</operator><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">2</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>im</name></expr> }</block></expr>,

<expr><block>{ <expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">3</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>im</name></expr>, <expr><operator>-</operator><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">3</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>im</name></expr> }</block></expr>,

<expr><block>{ <expr><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">4</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>im</name></expr>, <expr><operator>-</operator><name><name>tmp</name><index>[<expr><literal type="number">6</literal><operator>*</operator><literal type="number">4</literal> <operator>+</operator> <name>k</name></expr>]</index></name><operator>.</operator><name>im</name></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>exptab</name></name> <operator>+</operator> <literal type="number">8</literal><operator>*</operator><name>k</name></expr></argument>, <argument><expr><name>ac_exp</name></expr></argument>, <argument><expr><literal type="number">8</literal><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>FFTComplex</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>k</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <literal type="number">3</literal></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>FFTComplex</name></type> <name><name>dc_exp</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name><name>tmp</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>re</name></expr>, <expr><operator>-</operator><name><name>tmp</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>im</name></expr> }</block></expr>,

<expr><block>{ <expr><name><name>tmp</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>im</name></expr>, <expr><name><name>tmp</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>re</name></expr> }</block></expr>,

<expr><block>{ <expr><name><name>tmp</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>re</name></expr>, <expr><operator>-</operator><name><name>tmp</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>im</name></expr> }</block></expr>,

<expr><block>{ <expr><name><name>tmp</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>im</name></expr>, <expr><name><name>tmp</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>k</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>re</name></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>exptab</name></name> <operator>+</operator> <literal type="number">8</literal><operator>*</operator><literal type="number">6</literal> <operator>+</operator> <literal type="number">4</literal><operator>*</operator><name>k</name></expr></argument>, <argument><expr><name>dc_exp</name></expr></argument>, <argument><expr><literal type="number">4</literal><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>FFTComplex</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_mdct15_init_x86</name><parameter_list>(<parameter><decl><type><name>MDCT15Context</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>adjust_twiddles</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>cpu_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE3</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>postreindex</name></name> <operator>=</operator> <name>ff_mdct15_postreindex_sse3</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>ARCH_X86_64</name> <operator>&amp;&amp;</operator> <call><name>EXTERNAL_AVX</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>fft15</name></name> <operator>=</operator> <name>ff_fft15_avx</name></expr>;</expr_stmt>

<expr_stmt><expr><name>adjust_twiddles</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>ARCH_X86_64</name> <operator>&amp;&amp;</operator> <call><name>EXTERNAL_AVX2_FAST</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>postreindex</name></name> <operator>=</operator> <name>ff_mdct15_postreindex_avx2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>adjust_twiddles</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>perm_twiddles</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

</unit>
