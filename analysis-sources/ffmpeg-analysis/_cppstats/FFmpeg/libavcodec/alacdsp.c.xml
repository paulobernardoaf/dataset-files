<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\alacdsp.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"alacdsp.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>void</name></type> <name>decorrelate_stereo</name><parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name><name>buffer</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>decorr_shift</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>decorr_left_weight</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>nb_samples</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>int32_t</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>;</decl_stmt>

<expr_stmt><expr><name>a</name> <operator>=</operator> <name><name>buffer</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>b</name> <operator>=</operator> <name><name>buffer</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>a</name> <operator>-=</operator> <operator>(</operator><name>b</name> <operator>*</operator> <name>decorr_left_weight</name><operator>)</operator> <operator>&gt;&gt;</operator> <name>decorr_shift</name></expr>;</expr_stmt>

<expr_stmt><expr><name>b</name> <operator>+=</operator> <name>a</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buffer</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>b</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>buffer</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>a</name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>append_extra_bits</name><parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name><name>buffer</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name><name>extra_bits_buffer</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>extra_bits</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>channels</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>ch</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>ch</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>ch</name> <operator>&lt;</operator> <name>channels</name></expr>;</condition> <incr><expr><name>ch</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>nb_samples</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>buffer</name><index>[<expr><name>ch</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>buffer</name><index>[<expr><name>ch</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <name>extra_bits</name><operator>)</operator> <operator>|</operator> <name><name>extra_bits_buffer</name><index>[<expr><name>ch</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

</block_content>}</block></function>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_alacdsp_init</name><parameter_list>(<parameter><decl><type><name>ALACDSPContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>decorrelate_stereo</name></name> <operator>=</operator> <name>decorrelate_stereo</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>append_extra_bits</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator>

<name><name>c</name><operator>-&gt;</operator><name>append_extra_bits</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>append_extra_bits</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ARCH_X86</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>ff_alacdsp_init_x86</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

</unit>
