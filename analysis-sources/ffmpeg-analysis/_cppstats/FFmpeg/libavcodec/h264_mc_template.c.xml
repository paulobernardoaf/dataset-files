<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\h264_mc_template.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h264dec.h"</cpp:file></cpp:include>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>MCFUNC</name></cpp:undef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CHROMA_IDC</name> <operator>==</operator> <literal type="number">1</literal></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MCFUNC</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>FUNC(n ##_420)</cpp:value></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>CHROMA_IDC</name> <operator>==</operator> <literal type="number">2</literal></expr></cpp:elif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MCFUNC</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>FUNC(n ##_422)</cpp:value></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>CHROMA_IDC</name> <operator>==</operator> <literal type="number">3</literal></expr></cpp:elif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MCFUNC</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>FUNC(n ##_444)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>mc_part</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_part</name></cpp:macro> <cpp:value>MCFUNC(mc_part)</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>void</name></type> <name>mc_part</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>H264Context</name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>H264SliceContext</name> <modifier>*</modifier></type><name>sl</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>square</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>delta</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dest_y</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dest_cb</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dest_cr</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>x_offset</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y_offset</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>qpel_mc_func</name> <modifier>*</modifier></type><name>qpix_put</name></decl></parameter>,

<parameter><decl><type><name>h264_chroma_mc_func</name></type> <name>chroma_put</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>qpel_mc_func</name> <modifier>*</modifier></type><name>qpix_avg</name></decl></parameter>,

<parameter><decl><type><name>h264_chroma_mc_func</name></type> <name>chroma_avg</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>h264_weight_func</name> <modifier>*</modifier></type><name>weight_op</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>h264_biweight_func</name> <modifier>*</modifier></type><name>weight_avg</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>list0</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>list1</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>sl</name><operator>-&gt;</operator><name>pwt</name><operator>.</operator><name>use_weight</name></name> <operator>==</operator> <literal type="number">2</literal> <operator>&amp;&amp;</operator> <name>list0</name> <operator>&amp;&amp;</operator> <name>list1</name> <operator>&amp;&amp;</operator>

<operator>(</operator><name><name>sl</name><operator>-&gt;</operator><name>pwt</name><operator>.</operator><name>implicit_weight</name><index>[<expr><name><name>sl</name><operator>-&gt;</operator><name>ref_cache</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name><name>scan8</name><index>[<expr><name>n</name></expr>]</index></name></expr>]</index></name></expr>]</index><index>[<expr><name><name>sl</name><operator>-&gt;</operator><name>ref_cache</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name><name>scan8</name><index>[<expr><name>n</name></expr>]</index></name></expr>]</index></name></expr>]</index><index>[<expr><name><name>sl</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>&amp;</operator> <literal type="number">1</literal></expr>]</index></name> <operator>!=</operator> <literal type="number">32</literal><operator>)</operator><operator>)</operator> <operator>||</operator>

<name><name>sl</name><operator>-&gt;</operator><name>pwt</name><operator>.</operator><name>use_weight</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mc_part_weighted</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><name>n</name></expr></argument>, <argument><expr><name>square</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><name>delta</name></expr></argument>, <argument><expr><name>dest_y</name></expr></argument>, <argument><expr><name>dest_cb</name></expr></argument>, <argument><expr><name>dest_cr</name></expr></argument>,

<argument><expr><name>x_offset</name></expr></argument>, <argument><expr><name>y_offset</name></expr></argument>, <argument><expr><name>qpix_put</name></expr></argument>, <argument><expr><name>chroma_put</name></expr></argument>,

<argument><expr><name><name>weight_op</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>weight_op</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>weight_avg</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>,

<argument><expr><name><name>weight_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name>list0</name></expr></argument>, <argument><expr><name>list1</name></expr></argument>, <argument><expr><name>PIXEL_SHIFT</name></expr></argument>, <argument><expr><name>CHROMA_IDC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><call><name>mc_part_std</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><name>n</name></expr></argument>, <argument><expr><name>square</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><name>delta</name></expr></argument>, <argument><expr><name>dest_y</name></expr></argument>, <argument><expr><name>dest_cb</name></expr></argument>, <argument><expr><name>dest_cr</name></expr></argument>,

<argument><expr><name>x_offset</name></expr></argument>, <argument><expr><name>y_offset</name></expr></argument>, <argument><expr><name>qpix_put</name></expr></argument>, <argument><expr><name>chroma_put</name></expr></argument>, <argument><expr><name>qpix_avg</name></expr></argument>,

<argument><expr><name>chroma_avg</name></expr></argument>, <argument><expr><name>list0</name></expr></argument>, <argument><expr><name>list1</name></expr></argument>, <argument><expr><name>PIXEL_SHIFT</name></expr></argument>, <argument><expr><name>CHROMA_IDC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <name>void</name> <name>MCFUNC</name></type><argument_list>(<argument><expr><name>hl_motion</name></expr></argument>)</argument_list><argument_list>(<argument><expr><specifier>const</specifier> <name>H264Context</name> <operator>*</operator><name>h</name></expr></argument>, <argument><expr><name>H264SliceContext</name> <operator>*</operator><name>sl</name></expr></argument>,

<argument><expr><name>uint8_t</name> <operator>*</operator><name>dest_y</name></expr></argument>,

<argument><expr><name>uint8_t</name> <operator>*</operator><name>dest_cb</name></expr></argument>, <argument><expr><name>uint8_t</name> <operator>*</operator><name>dest_cr</name></expr></argument>,

<argument><expr><specifier>const</specifier> <call><name>qpel_mc_func</name><argument_list>(<argument><expr><operator>*</operator><name>qpix_put</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">16</literal></expr>]</index></expr></argument>,

<argument><expr><specifier>const</specifier> <call><name>h264_chroma_mc_func</name><argument_list>(<argument><expr><operator>*</operator><name>chroma_put</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><specifier>const</specifier> <call><name>qpel_mc_func</name><argument_list>(<argument><expr><operator>*</operator><name>qpix_avg</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">16</literal></expr>]</index></expr></argument>,

<argument><expr><specifier>const</specifier> <call><name>h264_chroma_mc_func</name><argument_list>(<argument><expr><operator>*</operator><name>chroma_avg</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><specifier>const</specifier> <name>h264_weight_func</name> <operator>*</operator><name>weight_op</name></expr></argument>,

<argument><expr><specifier>const</specifier> <name>h264_biweight_func</name> <operator>*</operator><name>weight_avg</name></expr></argument>)</argument_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>mb_xy</name> <init>= <expr><name><name>sl</name><operator>-&gt;</operator><name>mb_xy</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>mb_type</name> <init>= <expr><name><name>h</name><operator>-&gt;</operator><name>cur_pic</name><operator>.</operator><name>mb_type</name><index>[<expr><name>mb_xy</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>av_assert2</name><argument_list>(<argument><expr><call><name>IS_INTER</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>HAVE_THREADS</name> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>active_thread_type</name></name> <operator>&amp;</operator> <name>FF_THREAD_FRAME</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>await_references</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>USES_LIST</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>prefetch_motion</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>PIXEL_SHIFT</name></expr></argument>, <argument><expr><name>CHROMA_IDC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>IS_16X16</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>mc_part</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>dest_y</name></expr></argument>, <argument><expr><name>dest_cb</name></expr></argument>, <argument><expr><name>dest_cr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,

<argument><expr><name><name>qpix_put</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_put</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>qpix_avg</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_avg</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>,

<argument><expr><name>weight_op</name></expr></argument>, <argument><expr><name>weight_avg</name></expr></argument>,

<argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>IS_16X8</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>mc_part</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">8</literal> <operator>&lt;&lt;</operator> <name>PIXEL_SHIFT</name></expr></argument>, <argument><expr><name>dest_y</name></expr></argument>, <argument><expr><name>dest_cb</name></expr></argument>, <argument><expr><name>dest_cr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,

<argument><expr><name><name>qpix_put</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_put</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>qpix_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_avg</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>,

<argument><expr><name>weight_op</name></expr></argument>, <argument><expr><name>weight_avg</name></expr></argument>,

<argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mc_part</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">8</literal> <operator>&lt;&lt;</operator> <name>PIXEL_SHIFT</name></expr></argument>, <argument><expr><name>dest_y</name></expr></argument>, <argument><expr><name>dest_cb</name></expr></argument>, <argument><expr><name>dest_cr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>,

<argument><expr><name><name>qpix_put</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_put</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>qpix_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_avg</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>,

<argument><expr><name>weight_op</name></expr></argument>, <argument><expr><name>weight_avg</name></expr></argument>,

<argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>IS_8X16</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>mc_part</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">8</literal> <operator>*</operator> <name><name>sl</name><operator>-&gt;</operator><name>mb_linesize</name></name></expr></argument>, <argument><expr><name>dest_y</name></expr></argument>, <argument><expr><name>dest_cb</name></expr></argument>, <argument><expr><name>dest_cr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,

<argument><expr><name><name>qpix_put</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_put</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>qpix_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>weight_op</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>weight_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mc_part</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">8</literal> <operator>*</operator> <name><name>sl</name><operator>-&gt;</operator><name>mb_linesize</name></name></expr></argument>, <argument><expr><name>dest_y</name></expr></argument>, <argument><expr><name>dest_cb</name></expr></argument>, <argument><expr><name>dest_cr</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,

<argument><expr><name><name>qpix_put</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_put</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>qpix_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>weight_op</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>weight_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>av_assert2</name><argument_list>(<argument><expr><call><name>IS_8X8</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>sub_mb_type</name> <init>= <expr><name><name>sl</name><operator>-&gt;</operator><name>sub_mb_type</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>n</name> <init>= <expr><literal type="number">4</literal> <operator>*</operator> <name>i</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>x_offset</name> <init>= <expr><operator>(</operator><name>i</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>y_offset</name> <init>= <expr><operator>(</operator><name>i</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>IS_SUB_8X8</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>mc_part</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><name>n</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>dest_y</name></expr></argument>, <argument><expr><name>dest_cb</name></expr></argument>, <argument><expr><name>dest_cr</name></expr></argument>,

<argument><expr><name>x_offset</name></expr></argument>, <argument><expr><name>y_offset</name></expr></argument>,

<argument><expr><name><name>qpix_put</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_put</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>qpix_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>weight_op</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>weight_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>IS_SUB_8X4</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>mc_part</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><name>n</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">4</literal> <operator>&lt;&lt;</operator> <name>PIXEL_SHIFT</name></expr></argument>, <argument><expr><name>dest_y</name></expr></argument>, <argument><expr><name>dest_cb</name></expr></argument>, <argument><expr><name>dest_cr</name></expr></argument>,

<argument><expr><name>x_offset</name></expr></argument>, <argument><expr><name>y_offset</name></expr></argument>,

<argument><expr><name><name>qpix_put</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_put</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>qpix_avg</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>weight_op</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>weight_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mc_part</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><name>n</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">4</literal> <operator>&lt;&lt;</operator> <name>PIXEL_SHIFT</name></expr></argument>,

<argument><expr><name>dest_y</name></expr></argument>, <argument><expr><name>dest_cb</name></expr></argument>, <argument><expr><name>dest_cr</name></expr></argument>, <argument><expr><name>x_offset</name></expr></argument>, <argument><expr><name>y_offset</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>,

<argument><expr><name><name>qpix_put</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_put</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>qpix_avg</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>weight_op</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>weight_avg</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>,

<argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>IS_SUB_4X8</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>mc_part</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><name>n</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">4</literal> <operator>*</operator> <name><name>sl</name><operator>-&gt;</operator><name>mb_linesize</name></name></expr></argument>,

<argument><expr><name>dest_y</name></expr></argument>, <argument><expr><name>dest_cb</name></expr></argument>, <argument><expr><name>dest_cr</name></expr></argument>, <argument><expr><name>x_offset</name></expr></argument>, <argument><expr><name>y_offset</name></expr></argument>,

<argument><expr><name><name>qpix_put</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_put</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>qpix_avg</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_avg</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>weight_op</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>weight_avg</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>,

<argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>mc_part</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><name>n</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">4</literal> <operator>*</operator> <name><name>sl</name><operator>-&gt;</operator><name>mb_linesize</name></name></expr></argument>,

<argument><expr><name>dest_y</name></expr></argument>, <argument><expr><name>dest_cb</name></expr></argument>, <argument><expr><name>dest_cr</name></expr></argument>, <argument><expr><name>x_offset</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>y_offset</name></expr></argument>,

<argument><expr><name><name>qpix_put</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_put</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>qpix_avg</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_avg</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>weight_op</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>weight_avg</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>,

<argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>j</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>av_assert2</name><argument_list>(<argument><expr><call><name>IS_SUB_4X4</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>sub_x_offset</name> <init>= <expr><name>x_offset</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <operator>(</operator><name>j</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>sub_y_offset</name> <init>= <expr><name>y_offset</name> <operator>+</operator> <operator>(</operator><name>j</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>mc_part</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><name>n</name> <operator>+</operator> <name>j</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,

<argument><expr><name>dest_y</name></expr></argument>, <argument><expr><name>dest_cb</name></expr></argument>, <argument><expr><name>dest_cr</name></expr></argument>, <argument><expr><name>sub_x_offset</name></expr></argument>, <argument><expr><name>sub_y_offset</name></expr></argument>,

<argument><expr><name><name>qpix_put</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_put</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>qpix_avg</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>chroma_avg</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>,

<argument><expr><operator>&amp;</operator><name><name>weight_op</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>weight_avg</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>,

<argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>IS_DIR</name><argument_list>(<argument><expr><name>sub_mb_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></else></if_stmt>

</block_content>}</block></for>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>USES_LIST</name><argument_list>(<argument><expr><name>mb_type</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>prefetch_motion</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>sl</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>PIXEL_SHIFT</name></expr></argument>, <argument><expr><name>CHROMA_IDC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></decl></decl_stmt>

</unit>
