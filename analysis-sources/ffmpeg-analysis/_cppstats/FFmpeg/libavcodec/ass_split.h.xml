<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavcodec\ass_split.h"><typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>script_type</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>collisions</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>play_res_x</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>play_res_y</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>float</name></type> <name>timer</name></decl>;</decl_stmt> 

}</block></struct></type> <name>ASSScriptInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>font_name</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>font_size</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>primary_color</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>secondary_color</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>outline_color</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>back_color</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>bold</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>italic</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>underline</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>strikeout</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>scalex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>scaley</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>spacing</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>angle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>border_style</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>outline</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>shadow</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>alignment</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>margin_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>margin_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>margin_v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>alpha_level</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>encoding</name></decl>;</decl_stmt>

}</block></struct></type> <name>ASSStyle</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>int</name></type> <name>readorder</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>layer</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>start</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>end</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>style</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>margin_l</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>margin_r</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>margin_v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>effect</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>text</name></decl>;</decl_stmt> 

}</block></struct></type> <name>ASSDialog</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>ASSScriptInfo</name></type> <name>script_info</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ASSStyle</name> <modifier>*</modifier></type><name>styles</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>styles_count</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>ASSDialog</name> <modifier>*</modifier></type><name>dialogs</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>dialogs_count</name></decl>;</decl_stmt> 

}</block></struct></type> <name>ASS</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>ASSSplitContext</name></name></type> <name>ASSSplitContext</name>;</typedef>

<function_decl><type><name>ASSSplitContext</name> <modifier>*</modifier></type><name>ff_ass_split</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ASSDialog</name> <modifier>*</modifier></type><name>ff_ass_split_dialog</name><parameter_list>(<parameter><decl><type><name>ASSSplitContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>cache</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>number</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ass_free_dialog</name><parameter_list>(<parameter><decl><type><name>ASSDialog</name> <modifier>*</modifier><modifier>*</modifier></type><name>dialogp</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ASSDialog</name> <modifier>*</modifier></type><name>ff_ass_split_dialog2</name><parameter_list>(<parameter><decl><type><name>ASSSplitContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ass_split_free</name><parameter_list>(<parameter><decl><type><name>ASSSplitContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <block>{

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>text</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>text</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>new_line</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>forced</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>style</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>style</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>close</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>color</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter> , <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>color_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>alpha</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>alpha</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>alpha_id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>font_name</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>font_size</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>alignment</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>alignment</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cancel_overrides</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>style</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>move</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>t1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>t2</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>origin</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>end</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>)</parameter_list>;</function_decl>

}</block></struct></type> <name>ASSCodesCallbacks</name>;</typedef>

<function_decl><type><name>int</name></type> <name>ff_ass_split_override_codes</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ASSCodesCallbacks</name> <modifier>*</modifier></type><name>callbacks</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ASSStyle</name> <modifier>*</modifier></type><name>ff_ass_style_get</name><parameter_list>(<parameter><decl><type><name>ASSSplitContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>style</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
