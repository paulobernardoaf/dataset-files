<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavformat\avformat.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;time.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include> 

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/dict.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/log.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avio.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavformat/version.h"</cpp:file></cpp:include>

<struct_decl>struct <name>AVFormatContext</name>;</struct_decl>

<struct_decl>struct <name>AVDeviceInfoList</name>;</struct_decl>

<struct_decl>struct <name>AVDeviceCapabilitiesQuery</name>;</struct_decl>

<function_decl><type><name>int</name></type> <name>av_get_packet</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_append_packet</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<struct_decl>struct <name>AVCodecTag</name>;</struct_decl>

<typedef>typedef <type><struct>struct <name>AVProbeData</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>buf_size</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mime_type</name></decl>;</decl_stmt> 

}</block></struct></type> <name>AVProbeData</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVPROBE_SCORE_RETRY</name></cpp:macro> <cpp:value>(AVPROBE_SCORE_MAX/4)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVPROBE_SCORE_STREAM_RETRY</name></cpp:macro> <cpp:value>(AVPROBE_SCORE_MAX/4-1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVPROBE_SCORE_EXTENSION</name></cpp:macro> <cpp:value>50</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVPROBE_SCORE_MIME</name></cpp:macro> <cpp:value>75</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVPROBE_SCORE_MAX</name></cpp:macro> <cpp:value>100</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVPROBE_PADDING_SIZE</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_NOFILE</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_NEEDNUMBER</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_SHOW_IDS</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_GLOBALHEADER</name></cpp:macro> <cpp:value>0x0040</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_NOTIMESTAMPS</name></cpp:macro> <cpp:value>0x0080</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_GENERIC_INDEX</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_TS_DISCONT</name></cpp:macro> <cpp:value>0x0200</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_VARIABLE_FPS</name></cpp:macro> <cpp:value>0x0400</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_NODIMENSIONS</name></cpp:macro> <cpp:value>0x0800</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_NOSTREAMS</name></cpp:macro> <cpp:value>0x1000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_NOBINSEARCH</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_NOGENSEARCH</name></cpp:macro> <cpp:value>0x4000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_NO_BYTE_SEEK</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_ALLOW_FLUSH</name></cpp:macro> <cpp:value>0x10000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_TS_NONSTRICT</name></cpp:macro> <cpp:value>0x20000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_TS_NEGATIVE</name></cpp:macro> <cpp:value>0x40000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_SEEK_TO_PTS</name></cpp:macro> <cpp:value>0x4000000</cpp:value></cpp:define> 

<typedef>typedef <type><struct>struct <name>AVOutputFormat</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>long_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mime_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>extensions</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>audio_codec</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>video_codec</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>subtitle_codec</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>AVCodecTag</name></name> <modifier>*</modifier> <specifier>const</specifier> <modifier>*</modifier></type><name>codec_tag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>priv_class</name></decl>;</decl_stmt> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_AVIOFORMAT</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ff_const59</name></cpp:macro></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ff_const59</name></cpp:macro> <cpp:value>const</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>ff_const59</name> <name><name>struct</name> <name>AVOutputFormat</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>priv_data_size</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>write_header</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>write_packet</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>write_trailer</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>interleave_packet</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>out</name></decl></parameter>,

<parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flush</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>query_codec</name>)<parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>std_compliance</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>get_output_timestamp</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream</name></decl></parameter>,

<parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>dts</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>wall</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>control_message</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>data_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>write_uncoded_frame</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>,

<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier><modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>get_device_list</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>AVDeviceInfoList</name></name> <modifier>*</modifier></type><name>device_list</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>create_device_capabilities</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>AVDeviceCapabilitiesQuery</name></name> <modifier>*</modifier></type><name>caps</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>free_device_capabilities</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>AVDeviceCapabilitiesQuery</name></name> <modifier>*</modifier></type><name>caps</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>data_codec</name></decl>;</decl_stmt> 

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>deinit</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>check_bitstream</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>;</function_decl>

}</block></struct></type> <name>AVOutputFormat</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AVInputFormat</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>long_name</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>extensions</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>AVCodecTag</name></name> <modifier>*</modifier> <specifier>const</specifier> <modifier>*</modifier></type><name>codec_tag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>priv_class</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mime_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ff_const59</name> <name><name>struct</name> <name>AVInputFormat</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>raw_codec_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>priv_data_size</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>read_probe</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVProbeData</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>read_header</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>read_packet</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>read_close</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>read_seek</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>timestamp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int64_t</name></type> (<modifier>*</modifier><name>read_timestamp</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>,

<parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>pos</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>pos_limit</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>read_play</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>read_pause</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>read_seek2</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>min_ts</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>ts</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>max_ts</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>get_device_list</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>AVDeviceInfoList</name></name> <modifier>*</modifier></type><name>device_list</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>create_device_capabilities</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>AVDeviceCapabilitiesQuery</name></name> <modifier>*</modifier></type><name>caps</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>free_device_capabilities</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>AVDeviceCapabilitiesQuery</name></name> <modifier>*</modifier></type><name>caps</name></decl></parameter>)</parameter_list>;</function_decl>

}</block></struct></type> <name>AVInputFormat</name>;</typedef>

<enum>enum <name>AVStreamParseType</name> <block>{

<decl><name>AVSTREAM_PARSE_NONE</name></decl>,

<decl><name>AVSTREAM_PARSE_FULL</name></decl>, 

<decl><name>AVSTREAM_PARSE_HEADERS</name></decl>, 

<decl><name>AVSTREAM_PARSE_TIMESTAMPS</name></decl>, 

<decl><name>AVSTREAM_PARSE_FULL_ONCE</name></decl>, 

<decl><name>AVSTREAM_PARSE_FULL_RAW</name></decl>, 

}</block>;</enum>

<typedef>typedef <type><struct>struct <name>AVIndexEntry</name> <block>{

<decl_stmt><decl><type><name>int64_t</name></type> <name>pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>timestamp</name></decl>;</decl_stmt> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVINDEX_KEYFRAME</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVINDEX_DISCARD_FRAME</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define> 

<decl_stmt><decl><type><name>int</name></type> <name>flags</name><range>:<expr><literal type="number">2</literal></expr></range></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>size</name><range>:<expr><literal type="number">30</literal></expr></range></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>min_distance</name></decl>;</decl_stmt> 

}</block></struct></type> <name>AVIndexEntry</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_DEFAULT</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_DUB</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_ORIGINAL</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_COMMENT</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_LYRICS</name></cpp:macro> <cpp:value>0x0010</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_KARAOKE</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_FORCED</name></cpp:macro> <cpp:value>0x0040</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_HEARING_IMPAIRED</name></cpp:macro> <cpp:value>0x0080</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_VISUAL_IMPAIRED</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_CLEAN_EFFECTS</name></cpp:macro> <cpp:value>0x0200</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_ATTACHED_PIC</name></cpp:macro> <cpp:value>0x0400</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_TIMED_THUMBNAILS</name></cpp:macro> <cpp:value>0x0800</cpp:value></cpp:define>

<typedef>typedef <type><name><name>struct</name> <name>AVStreamInternal</name></name></type> <name>AVStreamInternal</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_CAPTIONS</name></cpp:macro> <cpp:value>0x10000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_DESCRIPTIONS</name></cpp:macro> <cpp:value>0x20000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_METADATA</name></cpp:macro> <cpp:value>0x40000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_DEPENDENT</name></cpp:macro> <cpp:value>0x80000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_DISPOSITION_STILL_IMAGE</name></cpp:macro> <cpp:value>0x100000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PTS_WRAP_IGNORE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PTS_WRAP_ADD_OFFSET</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PTS_WRAP_SUB_OFFSET</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define> 

<typedef>typedef <type><struct>struct <name>AVStream</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>id</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_LAVF_AVCTX</name></expr></cpp:if>

<decl_stmt><decl><type><name>attribute_deprecated</name>

<name>AVCodecContext</name> <modifier>*</modifier></type><name>codec</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>priv_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVRational</name></type> <name>time_base</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>start_time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>duration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>nb_frames</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>disposition</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>enum</name> <name>AVDiscard</name></name></type> <name>discard</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AVRational</name></type> <name>sample_aspect_ratio</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>metadata</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVRational</name></type> <name>avg_frame_rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVPacket</name></type> <name>attached_pic</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVPacketSideData</name> <modifier>*</modifier></type><name>side_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_side_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>event_flags</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVSTREAM_EVENT_FLAG_METADATA_UPDATED</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define> 

<decl_stmt><decl><type><name>AVRational</name></type> <name>r_frame_rate</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_LAVF_FFSERVER</name></expr></cpp:if>

<decl_stmt><decl><type><name>attribute_deprecated</name>

<name>char</name> <modifier>*</modifier></type><name>recommended_encoder_configuration</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>codecpar</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_STD_TIMEBASES</name></cpp:macro> <cpp:value>(30*12+30+3+6)</cpp:value></cpp:define>

<struct>struct <block>{

<decl_stmt><decl><type><name>int64_t</name></type> <name>last_dts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>duration_gcd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>duration_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>rfps_duration_sum</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>double</name> <argument_list>(<argument><expr><operator>*</operator><name>duration_error</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><name>MAX_STD_TIMEBASES</name></expr>]</index></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>codec_info_duration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>codec_info_duration_fields</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>frame_delay_evidence</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>found_decoder</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>last_duration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>fps_first_dts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>fps_first_dts_idx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>fps_last_dts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>fps_last_dts_idx</name></decl>;</decl_stmt>

}</block> <decl><modifier>*</modifier><name>info</name></decl>;</struct>

<decl_stmt><decl><type><name>int</name></type> <name>pts_wrap_bits</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>first_dts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>cur_dts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>last_IP_pts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>last_IP_duration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>probe_packets</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>codec_info_nb_frames</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVStreamParseType</name></name></type> <name>need_parsing</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>AVCodecParserContext</name></name> <modifier>*</modifier></type><name>parser</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>AVPacketList</name></name> <modifier>*</modifier></type><name>last_in_packet_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVProbeData</name></type> <name>probe_data</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_REORDER_DELAY</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<decl_stmt><decl><type><name>int64_t</name></type> <name><name>pts_buffer</name><index>[<expr><name>MAX_REORDER_DELAY</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVIndexEntry</name> <modifier>*</modifier></type><name>index_entries</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nb_index_entries</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>index_entries_allocated_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>stream_identifier</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>program_num</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pmt_version</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pmt_stream_idx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>interleaver_chunk_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>interleaver_chunk_duration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>request_probe</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>skip_to_keyframe</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>skip_samples</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>start_skip_samples</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>first_discard_sample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>last_discard_sample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_decoded_frames</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>mux_ts_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>pts_wrap_reference</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pts_wrap_behavior</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>update_initial_durations_done</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name><name>pts_reorder_error</name><index>[<expr><name>MAX_REORDER_DELAY</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>pts_reorder_error_count</name><index>[<expr><name>MAX_REORDER_DELAY</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>last_dts_for_order_check</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>dts_ordered</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>dts_misordered</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>inject_global_side_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVRational</name></type> <name>display_aspect_ratio</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVStreamInternal</name> <modifier>*</modifier></type><name>internal</name></decl>;</decl_stmt>

}</block></struct></type> <name>AVStream</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_FORMAT_GET_SET</name></expr></cpp:if>

<function_decl><type><name>attribute_deprecated</name>

<name>AVRational</name></type> <name>av_stream_get_r_frame_rate</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVStream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>void</name></type> <name>av_stream_set_r_frame_rate</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVRational</name></type> <name>r</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_LAVF_FFSERVER</name></expr></cpp:if>

<function_decl><type><name>attribute_deprecated</name>

<name>char</name><modifier>*</modifier></type> <name>av_stream_get_recommended_encoder_configuration</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVStream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>void</name></type> <name>av_stream_set_recommended_encoder_configuration</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>configuration</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name><name>struct</name> <name>AVCodecParserContext</name></name> <modifier>*</modifier></type><name>av_stream_get_parser</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVStream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int64_t</name></type> <name>av_stream_get_end_pts</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PROGRAM_RUNNING</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>AVProgram</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVDiscard</name></name></type> <name>discard</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>stream_index</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>nb_stream_indexes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>metadata</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>program_num</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pmt_pid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pcr_pid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pmt_version</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>start_time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>end_time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>pts_wrap_reference</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>pts_wrap_behavior</name></decl>;</decl_stmt> 

}</block></struct></type> <name>AVProgram</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMTCTX_NOHEADER</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMTCTX_UNSEEKABLE</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define> 

<typedef>typedef <type><struct>struct <name>AVChapter</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>id</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AVRational</name></type> <name>time_base</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>start</name></decl>, <name>end</name>;</decl_stmt> 

<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>metadata</name></decl>;</decl_stmt>

}</block></struct></type> <name>AVChapter</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>av_format_control_message</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>,

<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>data_size</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>AVOpenCallback</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>AVIOInterruptCB</name> <modifier>*</modifier></type><name>int_cb</name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<enum>enum <name>AVDurationEstimationMethod</name> <block>{

<decl><name>AVFMT_DURATION_FROM_PTS</name></decl>, 

<decl><name>AVFMT_DURATION_FROM_STREAM</name></decl>, 

<decl><name>AVFMT_DURATION_FROM_BITRATE</name></decl> 

}</block>;</enum>

<typedef>typedef <type><name><name>struct</name> <name>AVFormatInternal</name></name></type> <name>AVFormatInternal</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AVFormatContext</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>av_class</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ff_const59</name> <name><name>struct</name> <name>AVInputFormat</name></name> <modifier>*</modifier></type><name>iformat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ff_const59</name> <name><name>struct</name> <name>AVOutputFormat</name></name> <modifier>*</modifier></type><name>oformat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>priv_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ctx_flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>nb_streams</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVStream</name> <modifier>*</modifier><modifier>*</modifier></type><name>streams</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_FORMAT_FILENAME</name></expr></cpp:if>

<decl_stmt><decl><type><name>attribute_deprecated</name>

<name>char</name></type> <name><name>filename</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>url</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>start_time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>duration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>bit_rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>packet_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_delay</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_GENPTS</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_IGNIDX</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_NONBLOCK</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_IGNDTS</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_NOFILLIN</name></cpp:macro> <cpp:value>0x0010</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_NOPARSE</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_NOBUFFER</name></cpp:macro> <cpp:value>0x0040</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_CUSTOM_IO</name></cpp:macro> <cpp:value>0x0080</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_DISCARD_CORRUPT</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_FLUSH_PACKETS</name></cpp:macro> <cpp:value>0x0200</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_BITEXACT</name></cpp:macro> <cpp:value>0x0400</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_LAVF_MP4A_LATM</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_MP4A_LATM</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_SORT_DTS</name></cpp:macro> <cpp:value>0x10000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_PRIV_OPT</name></cpp:macro> <cpp:value>0x20000</cpp:value></cpp:define> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_LAVF_KEEPSIDE_FLAG</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_KEEP_SIDE_DATA</name></cpp:macro> <cpp:value>0x40000</cpp:value></cpp:define> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_FAST_SEEK</name></cpp:macro> <cpp:value>0x80000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_SHORTEST</name></cpp:macro> <cpp:value>0x100000</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_FLAG_AUTO_BSF</name></cpp:macro> <cpp:value>0x200000</cpp:value></cpp:define> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>probesize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>max_analyze_duration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>keylen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>nb_programs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVProgram</name> <modifier>*</modifier><modifier>*</modifier></type><name>programs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>video_codec_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>audio_codec_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>subtitle_codec_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>max_index_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>max_picture_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>nb_chapters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVChapter</name> <modifier>*</modifier><modifier>*</modifier></type><name>chapters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>metadata</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>start_time_realtime</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>fps_probe_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>error_recognition</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVIOInterruptCB</name></type> <name>interrupt_callback</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>debug</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_FDEBUG_TS</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>

<decl_stmt><decl><type><name>int64_t</name></type> <name>max_interleave_delta</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>strict_std_compliance</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>event_flags</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_EVENT_FLAG_METADATA_UPDATED</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define> 

<decl_stmt><decl><type><name>int</name></type> <name>max_ts_probe</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>avoid_negative_ts</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_AVOID_NEG_TS_AUTO</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_AVOID_NEG_TS_MAKE_NON_NEGATIVE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFMT_AVOID_NEG_TS_MAKE_ZERO</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 

<decl_stmt><decl><type><name>int</name></type> <name>ts_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>audio_preload</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_chunk_duration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_chunk_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>use_wallclock_as_timestamps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>avio_flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVDurationEstimationMethod</name></name></type> <name>duration_estimation_method</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>skip_initial_bytes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>correct_ts_overflow</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>seek2any</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>flush_packets</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>probe_score</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>format_probesize</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>codec_whitelist</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>format_whitelist</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFormatInternal</name> <modifier>*</modifier></type><name>internal</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>io_repositioned</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodec</name> <modifier>*</modifier></type><name>video_codec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodec</name> <modifier>*</modifier></type><name>audio_codec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodec</name> <modifier>*</modifier></type><name>subtitle_codec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodec</name> <modifier>*</modifier></type><name>data_codec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>metadata_header_padding</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>av_format_control_message</name></type> <name>control_message_cb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>output_ts_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dump_separator</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>data_codec_id</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_OLD_OPEN_CALLBACKS</name></expr></cpp:if>

<function_decl><type><name>attribute_deprecated</name>

<name>int</name></type> (<modifier>*</modifier><name>open_cb</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVIOInterruptCB</name> <modifier>*</modifier></type><name>int_cb</name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>protocol_whitelist</name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>io_open</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>io_close</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>protocol_blacklist</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_streams</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>skip_estimate_duration_from_pts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_probe_packets</name></decl>;</decl_stmt>

}</block></struct></type> <name>AVFormatContext</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_FORMAT_GET_SET</name></expr></cpp:if>

<function_decl><type><name>attribute_deprecated</name>

<name>int</name></type> <name>av_format_get_probe_score</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>AVCodec</name> <modifier>*</modifier></type> <name>av_format_get_video_codec</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>void</name></type> <name>av_format_set_video_codec</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVCodec</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>AVCodec</name> <modifier>*</modifier></type> <name>av_format_get_audio_codec</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>void</name></type> <name>av_format_set_audio_codec</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVCodec</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>AVCodec</name> <modifier>*</modifier></type> <name>av_format_get_subtitle_codec</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>void</name></type> <name>av_format_set_subtitle_codec</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVCodec</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>AVCodec</name> <modifier>*</modifier></type> <name>av_format_get_data_codec</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>void</name></type> <name>av_format_set_data_codec</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVCodec</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>int</name></type> <name>av_format_get_metadata_header_padding</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>void</name></type> <name>av_format_set_metadata_header_padding</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>void</name> <modifier>*</modifier></type> <name>av_format_get_opaque</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>void</name></type> <name>av_format_set_opaque</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>av_format_control_message</name></type> <name>av_format_get_control_message_cb</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>void</name></type> <name>av_format_set_control_message_cb</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>av_format_control_message</name></type> <name>callback</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_OLD_OPEN_CALLBACKS</name></expr></cpp:if>

<function_decl><type><name>attribute_deprecated</name> <name>AVOpenCallback</name></type> <name>av_format_get_open_cb</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name> <name>void</name></type> <name>av_format_set_open_cb</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVOpenCallback</name></type> <name>callback</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>void</name></type> <name>av_format_inject_global_side_data</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>AVDurationEstimationMethod</name></name></type> <name>av_fmt_ctx_get_duration_estimation_method</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFormatContext</name><modifier>*</modifier></type> <name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>AVPacketList</name> <block>{

<decl_stmt><decl><type><name>AVPacket</name></type> <name>pkt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>AVPacketList</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>

}</block></struct></type> <name>AVPacketList</name>;</typedef>

<function_decl><type><name>unsigned</name></type> <name>avformat_version</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>avformat_configuration</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>avformat_license</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_NEXT</name></expr></cpp:if>

<function_decl><type><name>attribute_deprecated</name>

<name>void</name></type> <name>av_register_all</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>void</name></type> <name>av_register_input_format</name><parameter_list>(<parameter><decl><type><name>AVInputFormat</name> <modifier>*</modifier></type><name>format</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>void</name></type> <name>av_register_output_format</name><parameter_list>(<parameter><decl><type><name>AVOutputFormat</name> <modifier>*</modifier></type><name>format</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>int</name></type> <name>avformat_network_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>avformat_network_deinit</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_NEXT</name></expr></cpp:if>

<function_decl><type><name>attribute_deprecated</name>

<name>AVInputFormat</name> <modifier>*</modifier></type><name>av_iformat_next</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVInputFormat</name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>AVOutputFormat</name> <modifier>*</modifier></type><name>av_oformat_next</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVOutputFormat</name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><specifier>const</specifier> <name>AVOutputFormat</name> <modifier>*</modifier></type><name>av_muxer_iterate</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>AVInputFormat</name> <modifier>*</modifier></type><name>av_demuxer_iterate</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>avformat_alloc_context</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>avformat_free_context</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>avformat_get_class</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>AVStream</name> <modifier>*</modifier></type><name>avformat_new_stream</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVCodec</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_stream_add_side_data</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVPacketSideDataType</name></name></type> <name>type</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>av_stream_new_side_data</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>AVPacketSideDataType</name></name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>av_stream_get_side_data</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVStream</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>AVPacketSideDataType</name></name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>AVProgram</name> <modifier>*</modifier></type><name>av_new_program</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>avformat_alloc_output_context2</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>ff_const59</name> <name>AVOutputFormat</name> <modifier>*</modifier></type><name>oformat</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ff_const59</name> <name>AVInputFormat</name> <modifier>*</modifier></type><name>av_find_input_format</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>short_name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ff_const59</name> <name>AVInputFormat</name> <modifier>*</modifier></type><name>av_probe_input_format</name><parameter_list>(<parameter><decl><type><name>ff_const59</name> <name>AVProbeData</name> <modifier>*</modifier></type><name>pd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>is_opened</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ff_const59</name> <name>AVInputFormat</name> <modifier>*</modifier></type><name>av_probe_input_format2</name><parameter_list>(<parameter><decl><type><name>ff_const59</name> <name>AVProbeData</name> <modifier>*</modifier></type><name>pd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>is_opened</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>score_max</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ff_const59</name> <name>AVInputFormat</name> <modifier>*</modifier></type><name>av_probe_input_format3</name><parameter_list>(<parameter><decl><type><name>ff_const59</name> <name>AVProbeData</name> <modifier>*</modifier></type><name>pd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>is_opened</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>score_ret</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_probe_input_buffer2</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>ff_const59</name> <name>AVInputFormat</name> <modifier>*</modifier><modifier>*</modifier></type><name>fmt</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>logctx</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>offset</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>max_probe_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_probe_input_buffer</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>ff_const59</name> <name>AVInputFormat</name> <modifier>*</modifier><modifier>*</modifier></type><name>fmt</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>logctx</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>offset</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>max_probe_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>avformat_open_input</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>ps</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>, <parameter><decl><type><name>ff_const59</name> <name>AVInputFormat</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>attribute_deprecated</name>

<name>int</name></type> <name>av_demuxer_open</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>ic</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>avformat_find_stream_info</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>ic</name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>AVProgram</name> <modifier>*</modifier></type><name>av_find_program_from_stream</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>ic</name></decl></parameter>, <parameter><decl><type><name>AVProgram</name> <modifier>*</modifier></type><name>last</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>av_program_add_stream_index</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>ac</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>progid</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_find_best_stream</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>ic</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>AVMediaType</name></name></type> <name>type</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>wanted_stream_nb</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>related_stream</name></decl></parameter>,

<parameter><decl><type><name>AVCodec</name> <modifier>*</modifier><modifier>*</modifier></type><name>decoder_ret</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_read_frame</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_seek_frame</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>timestamp</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>avformat_seek_file</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>min_ts</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>ts</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>max_ts</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>avformat_flush</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_read_play</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_read_pause</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>avformat_close_input</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVSEEK_FLAG_BACKWARD</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVSEEK_FLAG_BYTE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVSEEK_FLAG_ANY</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVSEEK_FLAG_FRAME</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVSTREAM_INIT_IN_WRITE_HEADER</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVSTREAM_INIT_IN_INIT_OUTPUT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<function_decl><type><name>av_warn_unused_result</name>

<name>int</name></type> <name>avformat_write_header</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>av_warn_unused_result</name>

<name>int</name></type> <name>avformat_init_output</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_write_frame</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_interleaved_write_frame</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_write_uncoded_frame</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>,

<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_interleaved_write_uncoded_frame</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>,

<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_write_uncoded_frame_query</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_write_trailer</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>ff_const59</name> <name>AVOutputFormat</name> <modifier>*</modifier></type><name>av_guess_format</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>short_name</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mime_type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>av_guess_codec</name><parameter_list>(<parameter><decl><type><name>ff_const59</name> <name>AVOutputFormat</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>short_name</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>mime_type</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>AVMediaType</name></name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_get_output_timestamp</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream</name></decl></parameter>,

<parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>dts</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>wall</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>av_hex_dump</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>av_hex_dump_log</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>avcl</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>level</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>av_pkt_dump2</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dump_payload</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>av_pkt_dump_log2</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>avcl</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>level</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dump_payload</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>av_codec_get_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>AVCodecTag</name></name> <modifier>*</modifier> <specifier>const</specifier> <modifier>*</modifier></type><name>tags</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>tag</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>unsigned</name> <name>int</name></type> <name>av_codec_get_tag</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>AVCodecTag</name></name> <modifier>*</modifier> <specifier>const</specifier> <modifier>*</modifier></type><name>tags</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_codec_get_tag2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>AVCodecTag</name></name> <modifier>*</modifier> <specifier>const</specifier> <modifier>*</modifier></type><name>tags</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>id</name></decl></parameter>,

<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_find_default_stream_index</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_index_search_timestamp</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>timestamp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_add_index_entry</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>pos</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>timestamp</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>distance</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>av_url_split</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>proto</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>proto_size</name></decl></parameter>,

<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>authorization</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>authorization_size</name></decl></parameter>,

<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>hostname</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>hostname_size</name></decl></parameter>,

<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>port_ptr</name></decl></parameter>,

<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>path_size</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>av_dump_format</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>ic</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>is_output</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_FRAME_FILENAME_FLAGS_MULTIPLE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 

<function_decl><type><name>int</name></type> <name>av_get_frame_filename2</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>number</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_get_frame_filename</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>number</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_filename_number_test</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_sdp_create</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name><name>ac</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n_files</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_match_ext</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>extensions</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>avformat_query_codec</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVOutputFormat</name> <modifier>*</modifier></type><name>ofmt</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>codec_id</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>std_compliance</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name><name>struct</name> <name>AVCodecTag</name></name> <modifier>*</modifier></type><name>avformat_get_riff_video_tags</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name><name>struct</name> <name>AVCodecTag</name></name> <modifier>*</modifier></type><name>avformat_get_riff_audio_tags</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name><name>struct</name> <name>AVCodecTag</name></name> <modifier>*</modifier></type><name>avformat_get_mov_video_tags</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name><name>struct</name> <name>AVCodecTag</name></name> <modifier>*</modifier></type><name>avformat_get_mov_audio_tags</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>AVRational</name></type> <name>av_guess_sample_aspect_ratio</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>format</name></decl></parameter>, <parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>AVRational</name></type> <name>av_guess_frame_rate</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>avformat_match_stream_specifier</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>spec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>avformat_queue_attached_pictures</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_OLD_BSF</name></expr></cpp:if>

<function_decl><type><name>attribute_deprecated</name>

<name>int</name></type> <name>av_apply_bitstream_filters</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>codec</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>,

<parameter><decl><type><name>AVBitStreamFilterContext</name> <modifier>*</modifier></type><name>bsfc</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<enum>enum <name>AVTimebaseSource</name> <block>{

<decl><name>AVFMT_TBCF_AUTO</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,

<decl><name>AVFMT_TBCF_DECODER</name></decl>,

<decl><name>AVFMT_TBCF_DEMUXER</name></decl>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_R_FRAME_RATE</name></expr></cpp:if>

<decl><name>AVFMT_TBCF_R_FRAMERATE</name></decl>,

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

}</block>;</enum>

<function_decl><type><name>int</name></type> <name>avformat_transfer_internal_stream_timing_info</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVOutputFormat</name> <modifier>*</modifier></type><name>ofmt</name></decl></parameter>,

<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>ost</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVStream</name> <modifier>*</modifier></type><name>ist</name></decl></parameter>,

<parameter><decl><type><name><name>enum</name> <name>AVTimebaseSource</name></name></type> <name>copy_tb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>AVRational</name></type> <name>av_stream_get_codec_timebase</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
