<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavformat\yop.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/channel_layout.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/intreadwrite.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>yop_dec_context</name> <block>{

<decl_stmt><decl><type><name>AVPacket</name></type> <name>video_packet</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>odd_frame</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>frame_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>audio_block_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>palette_size</name></decl>;</decl_stmt>

}</block></struct></type> <name>YopDecContext</name>;</typedef>

<function><type><specifier>static</specifier> <name>int</name></type> <name>yop_probe</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVProbeData</name> <modifier>*</modifier></type><name>probe_packet</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>AV_RB16</name><argument_list>(<argument><expr><name><name>probe_packet</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <call><name>AV_RB16</name><argument_list>(<argument><expr><literal type="string">"YO"</literal></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>

<name><name>probe_packet</name><operator>-&gt;</operator><name>buf</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>&lt;</operator><literal type="number">10</literal> <operator>&amp;&amp;</operator>

<name><name>probe_packet</name><operator>-&gt;</operator><name>buf</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>&lt;</operator><literal type="number">10</literal> <operator>&amp;&amp;</operator>

<name><name>probe_packet</name><operator>-&gt;</operator><name>buf</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>&amp;&amp;</operator>

<name><name>probe_packet</name><operator>-&gt;</operator><name>buf</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>&amp;&amp;</operator>

<operator>!</operator><operator>(</operator><name><name>probe_packet</name><operator>-&gt;</operator><name>buf</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;&amp;</operator>

<operator>!</operator><operator>(</operator><name><name>probe_packet</name><operator>-&gt;</operator><name>buf</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;&amp;</operator>

<call><name>AV_RL16</name><argument_list>(<argument><expr><name><name>probe_packet</name><operator>-&gt;</operator><name>buf</name></name> <operator>+</operator> <literal type="number">12</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">920</literal> <operator>&amp;&amp;</operator>

<call><name>AV_RL16</name><argument_list>(<argument><expr><name><name>probe_packet</name><operator>-&gt;</operator><name>buf</name></name> <operator>+</operator> <literal type="number">12</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>)</argument_list></call> <operator>&lt;</operator> <name><name>probe_packet</name><operator>-&gt;</operator><name>buf</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>*</operator> <literal type="number">3</literal> <operator>+</operator> <literal type="number">4</literal> <operator>+</operator> <name><name>probe_packet</name><operator>-&gt;</operator><name>buf</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>*</operator> <literal type="number">2048</literal></expr>

)</condition><block type="pseudo"><block_content>

<return>return <expr><name>AVPROBE_SCORE_MAX</name> <operator>*</operator> <literal type="number">3</literal> <operator>/</operator> <literal type="number">4</literal></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>yop_read_header</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>YopDecContext</name> <modifier>*</modifier></type><name>yop</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>pb</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>audio_par</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>video_par</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>audio_stream</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>video_stream</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>frame_rate</name></decl>, <decl><type ref="prev"/><name>ret</name></decl>;</decl_stmt>

<expr_stmt><expr><name>audio_stream</name> <operator>=</operator> <call><name>avformat_new_stream</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>video_stream</name> <operator>=</operator> <call><name>avformat_new_stream</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>audio_stream</name> <operator>||</operator> <operator>!</operator><name>video_stream</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>audio_par</name> <operator>=</operator> <name><name>audio_stream</name><operator>-&gt;</operator><name>codecpar</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>audio_par</name><operator>-&gt;</operator><name>codec_type</name></name> <operator>=</operator> <name>AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>audio_par</name><operator>-&gt;</operator><name>codec_id</name></name> <operator>=</operator> <name>AV_CODEC_ID_ADPCM_IMA_APC</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>audio_par</name><operator>-&gt;</operator><name>channels</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>audio_par</name><operator>-&gt;</operator><name>channel_layout</name></name> <operator>=</operator> <name>AV_CH_LAYOUT_MONO</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>audio_par</name><operator>-&gt;</operator><name>sample_rate</name></name> <operator>=</operator> <literal type="number">22050</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>video_par</name> <operator>=</operator> <name><name>video_stream</name><operator>-&gt;</operator><name>codecpar</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>video_par</name><operator>-&gt;</operator><name>codec_type</name></name> <operator>=</operator> <name>AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>video_par</name><operator>-&gt;</operator><name>codec_id</name></name> <operator>=</operator> <name>AV_CODEC_ID_YOP</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>avio_skip</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>frame_rate</name> <operator>=</operator> <call><name>avio_r8</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>yop</name><operator>-&gt;</operator><name>frame_size</name></name> <operator>=</operator> <call><name>avio_r8</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call> <operator>*</operator> <literal type="number">2048</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>video_par</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <call><name>avio_rl16</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>video_par</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <call><name>avio_rl16</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>video_stream</name><operator>-&gt;</operator><name>sample_aspect_ratio</name></name> <operator>=</operator> <operator>(</operator><name>AVRational</name><operator>)</operator><block>{<expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>}</block></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ff_get_extradata</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>video_par</name></expr></argument>, <argument><expr><name>pb</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>yop</name><operator>-&gt;</operator><name>palette_size</name></name> <operator>=</operator> <name><name>video_par</name><operator>-&gt;</operator><name>extradata</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>*</operator> <literal type="number">3</literal> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>yop</name><operator>-&gt;</operator><name>audio_block_length</name></name> <operator>=</operator> <call><name>AV_RL16</name><argument_list>(<argument><expr><name><name>video_par</name><operator>-&gt;</operator><name>extradata</name></name> <operator>+</operator> <literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>video_par</name><operator>-&gt;</operator><name>bit_rate</name></name> <operator>=</operator> <literal type="number">8</literal> <operator>*</operator> <operator>(</operator><name><name>yop</name><operator>-&gt;</operator><name>frame_size</name></name> <operator>-</operator> <name><name>yop</name><operator>-&gt;</operator><name>audio_block_length</name></name><operator>)</operator> <operator>*</operator> <name>frame_rate</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>yop</name><operator>-&gt;</operator><name>audio_block_length</name></name> <operator>&lt;</operator> <literal type="number">920</literal> <operator>||</operator>

<name><name>yop</name><operator>-&gt;</operator><name>audio_block_length</name></name> <operator>+</operator> <name><name>yop</name><operator>-&gt;</operator><name>palette_size</name></name> <operator>&gt;=</operator> <name><name>yop</name><operator>-&gt;</operator><name>frame_size</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"YOP has invalid header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>avio_seek</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><literal type="number">2048</literal></expr></argument>, <argument><expr><name>SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>avpriv_set_pts_info</name><argument_list>(<argument><expr><name>video_stream</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>frame_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>yop_read_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>YopDecContext</name> <modifier>*</modifier></type><name>yop</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>pb</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>actual_video_data_size</name> <init>= <expr><name><name>yop</name><operator>-&gt;</operator><name>frame_size</name></name> <operator>-</operator>

<name><name>yop</name><operator>-&gt;</operator><name>audio_block_length</name></name> <operator>-</operator> <name><name>yop</name><operator>-&gt;</operator><name>palette_size</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>yop</name><operator>-&gt;</operator><name>video_packet</name><operator>.</operator><name>stream_index</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>yop</name><operator>-&gt;</operator><name>video_packet</name><operator>.</operator><name>data</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_packet_move_ref</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>yop</name><operator>-&gt;</operator><name>video_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pkt</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>yop</name><operator>-&gt;</operator><name>odd_frame</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pkt</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>yop</name><operator>-&gt;</operator><name>odd_frame</name></name> <operator>^=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>av_new_packet</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>yop</name><operator>-&gt;</operator><name>video_packet</name></name></expr></argument>,

<argument><expr><name><name>yop</name><operator>-&gt;</operator><name>frame_size</name></name> <operator>-</operator> <name><name>yop</name><operator>-&gt;</operator><name>audio_block_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>yop</name><operator>-&gt;</operator><name>video_packet</name><operator>.</operator><name>pos</name></name> <operator>=</operator> <call><name>avio_tell</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>avio_read</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><name><name>yop</name><operator>-&gt;</operator><name>video_packet</name><operator>.</operator><name>data</name></name></expr></argument>, <argument><expr><name><name>yop</name><operator>-&gt;</operator><name>palette_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<goto>goto <name>err_out</name>;</goto>

</block_content>}</block></if><if type="elseif">else if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <name><name>yop</name><operator>-&gt;</operator><name>palette_size</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>AVERROR_EOF</name></expr>;</expr_stmt>

<goto>goto <name>err_out</name>;</goto>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>av_get_packet</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><name>pkt</name></expr></argument>, <argument><expr><literal type="number">920</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>err_out</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>pkt</name><operator>-&gt;</operator><name>pos</name></name> <operator>=</operator> <name><name>yop</name><operator>-&gt;</operator><name>video_packet</name><operator>.</operator><name>pos</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>avio_skip</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><name><name>yop</name><operator>-&gt;</operator><name>audio_block_length</name></name> <operator>-</operator> <name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>avio_read</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><name><name>yop</name><operator>-&gt;</operator><name>video_packet</name><operator>.</operator><name>data</name></name> <operator>+</operator> <name><name>yop</name><operator>-&gt;</operator><name>palette_size</name></name></expr></argument>,

<argument><expr><name>actual_video_data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>err_out</name>;</goto></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <name>actual_video_data_size</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>av_shrink_packet</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>yop</name><operator>-&gt;</operator><name>video_packet</name></name></expr></argument>, <argument><expr><name><name>yop</name><operator>-&gt;</operator><name>palette_size</name></name> <operator>+</operator> <name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

<label><name>err_out</name>:</label>

<expr_stmt><expr><call><name>av_packet_unref</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>yop</name><operator>-&gt;</operator><name>video_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>yop_read_close</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>YopDecContext</name> <modifier>*</modifier></type><name>yop</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>av_packet_unref</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>yop</name><operator>-&gt;</operator><name>video_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>yop_read_seek</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>,

<parameter><decl><type><name>int64_t</name></type> <name>timestamp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>YopDecContext</name> <modifier>*</modifier></type><name>yop</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>frame_pos</name></decl>, <decl><type ref="prev"/><name>pos_min</name></decl>, <decl><type ref="prev"/><name>pos_max</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>frame_count</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>stream_index</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>pos_min</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>internal</name><operator>-&gt;</operator><name>data_offset</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>pos_max</name> <operator>=</operator> <call><name>avio_size</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>pb</name></name></expr></argument>)</argument_list></call> <operator>-</operator> <name><name>yop</name><operator>-&gt;</operator><name>frame_size</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>frame_count</name> <operator>=</operator> <operator>(</operator><name>pos_max</name> <operator>-</operator> <name>pos_min</name><operator>)</operator> <operator>/</operator> <name><name>yop</name><operator>-&gt;</operator><name>frame_size</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>timestamp</name> <operator>=</operator> <call><name>FFMAX</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>FFMIN</name><argument_list>(<argument><expr><name>frame_count</name></expr></argument>, <argument><expr><name>timestamp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>frame_pos</name> <operator>=</operator> <name>timestamp</name> <operator>*</operator> <name><name>yop</name><operator>-&gt;</operator><name>frame_size</name></name> <operator>+</operator> <name>pos_min</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>avio_seek</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>pb</name></name></expr></argument>, <argument><expr><name>frame_pos</name></expr></argument>, <argument><expr><name>SEEK_SET</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>av_packet_unref</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>yop</name><operator>-&gt;</operator><name>video_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>yop</name><operator>-&gt;</operator><name>odd_frame</name></name> <operator>=</operator> <name>timestamp</name> <operator>&amp;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><name>AVInputFormat</name></type> <name>ff_yop_demuxer</name> <init>= <expr><block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yop"</literal></expr>,

<expr><operator>.</operator><name>long_name</name> <operator>=</operator> <call><name>NULL_IF_CONFIG_SMALL</name><argument_list>(<argument><expr><literal type="string">"Psygnosis YOP"</literal></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>YopDecContext</name></expr></argument>)</argument_list></sizeof></expr>,

<expr><operator>.</operator><name>read_probe</name> <operator>=</operator> <name>yop_probe</name></expr>,

<expr><operator>.</operator><name>read_header</name> <operator>=</operator> <name>yop_read_header</name></expr>,

<expr><operator>.</operator><name>read_packet</name> <operator>=</operator> <name>yop_read_packet</name></expr>,

<expr><operator>.</operator><name>read_close</name> <operator>=</operator> <name>yop_read_close</name></expr>,

<expr><operator>.</operator><name>read_seek</name> <operator>=</operator> <name>yop_read_seek</name></expr>,

<expr><operator>.</operator><name>extensions</name> <operator>=</operator> <literal type="string">"yop"</literal></expr>,

<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AVFMT_GENERIC_INDEX</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

</unit>
