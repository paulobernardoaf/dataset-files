<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavformat\movenc.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"movenccenc.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOV_FRAG_INFO_ALLOC_INCREMENT</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOV_INDEX_CLUSTER_SIZE</name></cpp:macro> <cpp:value>1024</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOV_TIMESCALE</name></cpp:macro> <cpp:value>1000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTP_MAX_PACKET_SIZE</name></cpp:macro> <cpp:value>1450</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODE_MP4</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODE_MOV</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODE_3GP</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODE_PSP</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODE_3G2</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODE_IPOD</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODE_ISM</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MODE_F4V</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>MOVIentry</name> <block>{

<decl_stmt><decl><type><name>uint64_t</name></type> <name>pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>dts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>pts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>samples_in_chunk</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>chunkNum</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>entries</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>cts</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOV_SYNC_SAMPLE</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOV_PARTIAL_SYNC_SAMPLE</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOV_DISPOSABLE_SAMPLE</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVProducerReferenceTime</name></type> <name>prft</name></decl>;</decl_stmt>

}</block></struct></type> <name>MOVIentry</name>;</typedef>

<typedef>typedef <type><struct>struct <name>HintSample</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>sample_number</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>own_data</name></decl>;</decl_stmt>

}</block></struct></type> <name>HintSample</name>;</typedef>

<typedef>typedef <type><struct>struct <name>HintSampleQueue</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>HintSample</name> <modifier>*</modifier></type><name>samples</name></decl>;</decl_stmt>

}</block></struct></type> <name>HintSampleQueue</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MOVFragmentInfo</name> <block>{

<decl_stmt><decl><type><name>int64_t</name></type> <name>offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>duration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>tfrf_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>

}</block></struct></type> <name>MOVFragmentInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MOVTrack</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>mode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>entry</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>timescale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>track_duration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>last_sample_is_subtitle_end</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>long</name></type> <name>sample_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>long</name></type> <name>sample_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>long</name></type> <name>chunkCount</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>has_keyframes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>has_disposable</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOV_TRACK_CTTS</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOV_TRACK_STPS</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOV_TRACK_ENABLED</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>flags</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOV_TIMECODE_FLAG_DROPFRAME</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOV_TIMECODE_FLAG_24HOURSMAX</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MOV_TIMECODE_FLAG_ALLOWNEGATIVE</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>timecode_flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>language</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>track_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>tag</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>par</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>multichannel_as_mono</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>vos_len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>vos_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MOVIentry</name> <modifier>*</modifier></type><name>cluster</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>cluster_capacity</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>audio_vbr</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>height</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>tref_tag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>tref_id</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>start_dts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>start_cts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>end_pts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>end_reliable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>dts_shift</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>hint_track</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>src_track</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>rtp_ctx</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>prev_rtp_ts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>cur_rtp_ts_unwrapped</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>max_packet_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>default_duration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>default_sample_flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>default_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>HintSampleQueue</name></type> <name>sample_queue</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVPacket</name></type> <name>cover_image</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>mdat_buf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>data_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>frag_start</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>frag_discont</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>entries_flushed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_frag_info</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MOVFragmentInfo</name> <modifier>*</modifier></type><name>frag_info</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>frag_info_capacity</name></decl>;</decl_stmt>

<struct>struct <block>{

<decl_stmt><decl><type><name>int</name></type> <name>first_packet_seq</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>first_packet_entry</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>first_packet_seen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>first_frag_written</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>packet_seq</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>packet_entry</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>slices</name></decl>;</decl_stmt>

}</block> <decl><name>vc1_info</name></decl>;</struct>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>eac3_priv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MOVMuxCencContext</name></type> <name>cenc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>palette</name><index>[<expr><name>AVPALETTE_COUNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pal_done</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>is_unaligned_qt_rgb</name></decl>;</decl_stmt>

}</block></struct></type> <name>MOVTrack</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{

<decl><name>MOV_ENC_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>MOV_ENC_CENC_AES_CTR</name></decl>,

}</block></enum></type> <name>MOVEncryptionScheme</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{

<decl><name>MOV_PRFT_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>MOV_PRFT_SRC_WALLCLOCK</name></decl>,

<decl><name>MOV_PRFT_SRC_PTS</name></decl>,

<decl><name>MOV_PRFT_NB</name></decl>

}</block></enum></type> <name>MOVPrftBox</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MOVMuxContext</name> <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>av_class</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>mode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>time</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_streams</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_meta_tmcd</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>chapter_track</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>mdat_pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>mdat_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MOVTrack</name> <modifier>*</modifier></type><name>tracks</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>rtp_flags</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>iods_skip</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>iods_video_profile</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>iods_audio_profile</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>moov_written</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>fragments</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_fragment_duration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>min_fragment_duration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_fragment_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ism_lookahead</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>mdat_buf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>first_trun</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>video_track_timescale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>reserved_moov_size</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>reserved_header_pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>major_brand</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>per_stream_grouping</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>fc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>use_editlist</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>gamma</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>frag_interleave</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>missing_duration_warned</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>encryption_scheme_str</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MOVEncryptionScheme</name></type> <name>encryption_scheme</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>encryption_key</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>encryption_key_len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>encryption_kid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>encryption_kid_len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>need_rewrite_extradata</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>use_stream_ids_as_track_ids</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>track_ids_ok</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>write_tmcd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MOVPrftBox</name></type> <name>write_prft</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>empty_hdlr_name</name></decl>;</decl_stmt>

}</block></struct></type> <name>MOVMuxContext</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_RTP_HINT</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_FRAGMENT</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_EMPTY_MOOV</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_FRAG_KEYFRAME</name></cpp:macro> <cpp:value>(1 &lt;&lt; 3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_SEPARATE_MOOF</name></cpp:macro> <cpp:value>(1 &lt;&lt; 4)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_FRAG_CUSTOM</name></cpp:macro> <cpp:value>(1 &lt;&lt; 5)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_ISML</name></cpp:macro> <cpp:value>(1 &lt;&lt; 6)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_FASTSTART</name></cpp:macro> <cpp:value>(1 &lt;&lt; 7)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_OMIT_TFHD_OFFSET</name></cpp:macro> <cpp:value>(1 &lt;&lt; 8)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_DISABLE_CHPL</name></cpp:macro> <cpp:value>(1 &lt;&lt; 9)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_DEFAULT_BASE_MOOF</name></cpp:macro> <cpp:value>(1 &lt;&lt; 10)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_DASH</name></cpp:macro> <cpp:value>(1 &lt;&lt; 11)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_FRAG_DISCONT</name></cpp:macro> <cpp:value>(1 &lt;&lt; 12)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_DELAY_MOOV</name></cpp:macro> <cpp:value>(1 &lt;&lt; 13)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_GLOBAL_SIDX</name></cpp:macro> <cpp:value>(1 &lt;&lt; 14)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_WRITE_COLR</name></cpp:macro> <cpp:value>(1 &lt;&lt; 15)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_WRITE_GAMA</name></cpp:macro> <cpp:value>(1 &lt;&lt; 16)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_USE_MDTA</name></cpp:macro> <cpp:value>(1 &lt;&lt; 17)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_SKIP_TRAILER</name></cpp:macro> <cpp:value>(1 &lt;&lt; 18)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_NEGATIVE_CTS_OFFSETS</name></cpp:macro> <cpp:value>(1 &lt;&lt; 19)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_FRAG_EVERY_FRAME</name></cpp:macro> <cpp:value>(1 &lt;&lt; 20)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_SKIP_SIDX</name></cpp:macro> <cpp:value>(1 &lt;&lt; 21)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_CMAF</name></cpp:macro> <cpp:value>(1 &lt;&lt; 22)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_PREFER_ICC</name></cpp:macro> <cpp:value>(1 &lt;&lt; 23)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MOV_FLAG_WRITE_CLLI</name></cpp:macro> <cpp:value>(1 &lt;&lt; 24)</cpp:value></cpp:define>

<function_decl><type><name>int</name></type> <name>ff_mov_write_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_mov_init_hinting</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>src_index</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_mov_add_hinted_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>,

<parameter><decl><type><name>int</name></type> <name>track_index</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sample</name></decl></parameter>,

<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>sample_data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sample_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_mov_close_hinting</name><parameter_list>(<parameter><decl><type><name>MOVTrack</name> <modifier>*</modifier></type><name>track</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
