<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavformat\yuv4mpegenc.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/pixdesc.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"yuv4mpeg.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Y4M_LINE_MAX</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>int</name></type> <name>yuv4_generate_header</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>char</name><modifier>*</modifier></type> <name>buf</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>, <decl><type ref="prev"/><name>height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>raten</name></decl>, <decl><type ref="prev"/><name>rated</name></decl>, <decl><type ref="prev"/><name>aspectn</name></decl>, <decl><type ref="prev"/><name>aspectd</name></decl>, <decl><type ref="prev"/><name>n</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name>inter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>colorspace</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>colorrange</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>field_order</name></decl>;</decl_stmt>

<expr_stmt><expr><name>st</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>streams</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>width</name> <operator>=</operator> <name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>height</name> <operator>=</operator> <name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>field_order</name> <operator>=</operator> <name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>field_order</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_reduce</name><argument_list>(<argument><expr><operator>&amp;</operator><name>raten</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>rated</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>time_base</name><operator>.</operator><name>den</name></name></expr></argument>,

<argument><expr><name><name>st</name><operator>-&gt;</operator><name>time_base</name><operator>.</operator><name>num</name></name></expr></argument>, <argument><expr><operator>(</operator><literal type="number">1UL</literal> <operator>&lt;&lt;</operator> <literal type="number">31</literal><operator>)</operator> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>aspectn</name> <operator>=</operator> <name><name>st</name><operator>-&gt;</operator><name>sample_aspect_ratio</name><operator>.</operator><name>num</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>aspectd</name> <operator>=</operator> <name><name>st</name><operator>-&gt;</operator><name>sample_aspect_ratio</name><operator>.</operator><name>den</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>aspectn</name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>aspectd</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>aspectd</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_LAVF_AVCTX</name></expr></cpp:if>

<macro><name>FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

<if_stmt><if>if <condition>(<expr><name>field_order</name> <operator>!=</operator> <name><name>st</name><operator>-&gt;</operator><name>codec</name><operator>-&gt;</operator><name>field_order</name></name> <operator>&amp;&amp;</operator> <name><name>st</name><operator>-&gt;</operator><name>codec</name><operator>-&gt;</operator><name>field_order</name></name> <operator>!=</operator> <name>AV_FIELD_UNKNOWN</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>field_order</name> <operator>=</operator> <name><name>st</name><operator>-&gt;</operator><name>codec</name><operator>-&gt;</operator><name>field_order</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<macro><name>FF_ENABLE_DEPRECATION_WARNINGS</name></macro>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<switch>switch<condition>(<expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>color_range</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>AVCOL_RANGE_MPEG</name></expr>:</case>

<expr_stmt><expr><name>colorrange</name> <operator>=</operator> <literal type="string">" XCOLORRANGE=LIMITED"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AVCOL_RANGE_JPEG</name></expr>:</case>

<expr_stmt><expr><name>colorrange</name> <operator>=</operator> <literal type="string">" XCOLORRANGE=FULL"</literal></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<break>break;</break>

</block_content>}</block></switch>

<switch>switch <condition>(<expr><name>field_order</name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>AV_FIELD_TB</name></expr>:</case>

<case>case <expr><name>AV_FIELD_TT</name></expr>:</case> <expr_stmt><expr><name>inter</name> <operator>=</operator> <literal type="char">'t'</literal></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>AV_FIELD_BT</name></expr>:</case>

<case>case <expr><name>AV_FIELD_BB</name></expr>:</case> <expr_stmt><expr><name>inter</name> <operator>=</operator> <literal type="char">'b'</literal></expr>;</expr_stmt> <break>break;</break>

<default>default:</default> <expr_stmt><expr><name>inter</name> <operator>=</operator> <literal type="char">'p'</literal></expr>;</expr_stmt> <break>break;</break>

</block_content>}</block></switch>

<switch>switch <condition>(<expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>format</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>AV_PIX_FMT_GRAY8</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" Cmono"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_GRAY9</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" Cmono9"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_GRAY10</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" Cmono10"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_GRAY12</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" Cmono12"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_GRAY16</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" Cmono16"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV411P</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C411 XYSCSS=411"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUVJ420P</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C420jpeg XYSCSS=420JPEG"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>colorrange</name> <operator>=</operator> <literal type="string">" XCOLORRANGE=FULL"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUVJ422P</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C422 XYSCSS=422"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>colorrange</name> <operator>=</operator> <literal type="string">" XCOLORRANGE=FULL"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUVJ444P</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C444 XYSCSS=444"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>colorrange</name> <operator>=</operator> <literal type="string">" XCOLORRANGE=FULL"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV420P</name></expr>:</case>

<switch>switch <condition>(<expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>chroma_location</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>AVCHROMA_LOC_TOPLEFT</name></expr>:</case> <expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C420paldv XYSCSS=420PALDV"</literal></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><name>AVCHROMA_LOC_LEFT</name></expr>:</case> <expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C420mpeg2 XYSCSS=420MPEG2"</literal></expr>;</expr_stmt> <break>break;</break>

<default>default:</default> <expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C420jpeg XYSCSS=420JPEG"</literal></expr>;</expr_stmt> <break>break;</break>

</block_content>}</block></switch>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV422P</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C422 XYSCSS=422"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV444P</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C444 XYSCSS=444"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV420P9</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C420p9 XYSCSS=420P9"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV422P9</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C422p9 XYSCSS=422P9"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV444P9</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C444p9 XYSCSS=444P9"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV420P10</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C420p10 XYSCSS=420P10"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV422P10</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C422p10 XYSCSS=422P10"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV444P10</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C444p10 XYSCSS=444P10"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV420P12</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C420p12 XYSCSS=420P12"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV422P12</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C422p12 XYSCSS=422P12"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV444P12</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C444p12 XYSCSS=444P12"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV420P14</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C420p14 XYSCSS=420P14"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV422P14</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C422p14 XYSCSS=422P14"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV444P14</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C444p14 XYSCSS=444P14"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV420P16</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C420p16 XYSCSS=420P16"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV422P16</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C422p16 XYSCSS=422P16"</literal></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_YUV444P16</name></expr>:</case>

<expr_stmt><expr><name>colorspace</name> <operator>=</operator> <literal type="string">" C444p16 XYSCSS=444P16"</literal></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></switch>

<expr_stmt><expr><name>n</name> <operator>=</operator> <call><name>snprintf</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>Y4M_LINE_MAX</name></expr></argument>, <argument><expr><literal type="string">"%s W%d H%d F%d:%d I%c A%d:%d%s%s\n"</literal></expr></argument>,

<argument><expr><name>Y4M_MAGIC</name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><name>raten</name></expr></argument>, <argument><expr><name>rated</name></expr></argument>, <argument><expr><name>inter</name></expr></argument>,

<argument><expr><name>aspectn</name></expr></argument>, <argument><expr><name>aspectd</name></expr></argument>, <argument><expr><name>colorspace</name></expr></argument>, <argument><expr><name>colorrange</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>n</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>yuv4_write_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>streams</name><index>[<expr><name><name>pkt</name><operator>-&gt;</operator><name>stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>pb</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name><modifier>*</modifier></type> <name>first_pkt</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>, <decl><type ref="prev"/><name>height</name></decl>, <decl><type ref="prev"/><name>h_chroma_shift</name></decl>, <decl><type ref="prev"/><name>v_chroma_shift</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>buf2</name><index>[<expr><name>Y4M_LINE_MAX</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>ptr</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>ptr1</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>ptr2</name></decl>;</decl_stmt>

<expr_stmt><expr><name>frame</name> <operator>=</operator> <operator>(</operator><name>AVFrame</name> <operator>*</operator><operator>)</operator><name><name>pkt</name><operator>-&gt;</operator><name>data</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>*</operator><name>first_pkt</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>first_pkt</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>yuv4_generate_header</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>buf2</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>,

<argument><expr><literal type="string">"Error. YUV4MPEG stream header write failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EIO</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>avio_write</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><name>buf2</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>buf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>avio_printf</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>pb</name></name></expr></argument>, <argument><expr><literal type="string">"%s\n"</literal></expr></argument>, <argument><expr><name>Y4M_FRAME_MAGIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>width</name> <operator>=</operator> <name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>width</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>height</name> <operator>=</operator> <name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>height</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>ptr</name> <operator>=</operator> <name><name>frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>format</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>AV_PIX_FMT_GRAY8</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV411P</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV420P</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV422P</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV444P</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUVJ420P</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUVJ422P</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUVJ444P</name></expr>:</case>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_GRAY9</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_GRAY10</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_GRAY12</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_GRAY16</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV420P9</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV422P9</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV444P9</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV420P10</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV422P10</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV444P10</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV420P12</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV422P12</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV444P12</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV420P14</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV422P14</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV444P14</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV420P16</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV422P16</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV444P16</name></expr>:</case>

<expr_stmt><expr><name>width</name> <operator>*=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"The pixel format '%s' is not supported.\n"</literal></expr></argument>,

<argument><expr><call><name>av_get_pix_fmt_name</name><argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>format</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></switch>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>height</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>avio_write</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><name>ptr</name></expr></argument>, <argument><expr><name>width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ptr</name> <operator>+=</operator> <name><name>frame</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>format</name></name> <operator>!=</operator> <name>AV_PIX_FMT_GRAY8</name> <operator>&amp;&amp;</operator> <name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>format</name></name> <operator>!=</operator> <name>AV_PIX_FMT_GRAY9</name> <operator>&amp;&amp;</operator>

<name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>format</name></name> <operator>!=</operator> <name>AV_PIX_FMT_GRAY10</name> <operator>&amp;&amp;</operator> <name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>format</name></name> <operator>!=</operator> <name>AV_PIX_FMT_GRAY12</name> <operator>&amp;&amp;</operator>

<name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>format</name></name> <operator>!=</operator> <name>AV_PIX_FMT_GRAY16</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_pix_fmt_get_chroma_sub_sample</name><argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>format</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>h_chroma_shift</name></expr></argument>,

<argument><expr><operator>&amp;</operator><name>v_chroma_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>width</name> <operator>=</operator> <call><name>AV_CEIL_RSHIFT</name><argument_list>(<argument><expr><name>width</name></expr></argument>, <argument><expr><name>h_chroma_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>height</name> <operator>=</operator> <call><name>AV_CEIL_RSHIFT</name><argument_list>(<argument><expr><name>height</name></expr></argument>, <argument><expr><name>v_chroma_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ptr1</name> <operator>=</operator> <name><name>frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>ptr2</name> <operator>=</operator> <name><name>frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>height</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content> 

<expr_stmt><expr><call><name>avio_write</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><name>ptr1</name></expr></argument>, <argument><expr><name>width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ptr1</name> <operator>+=</operator> <name><name>frame</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>height</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content> 

<expr_stmt><expr><call><name>avio_write</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><name>ptr2</name></expr></argument>, <argument><expr><name>width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ptr2</name> <operator>+=</operator> <name><name>frame</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>yuv4_write_header</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>first_pkt</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>nb_streams</name></name> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>streams</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>-&gt;</operator><name><name>codecpar</name><operator>-&gt;</operator><name>codec_id</name></name> <operator>!=</operator> <name>AV_CODEC_ID_WRAPPED_AVFRAME</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"ERROR: Codec not supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<switch>switch <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>streams</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>-&gt;</operator><name><name>codecpar</name><operator>-&gt;</operator><name>format</name></name></expr>)</condition> <block>{<block_content>

<case>case <expr><name>AV_PIX_FMT_YUV411P</name></expr>:</case>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>AV_LOG_WARNING</name></expr></argument>, <argument><expr><literal type="string">"Warning: generating rarely used 4:1:1 YUV "</literal>

<literal type="string">"stream, some mjpegtools might not work.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_GRAY8</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV420P</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV422P</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV444P</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUVJ420P</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUVJ422P</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUVJ444P</name></expr>:</case>

<break>break;</break>

<case>case <expr><name>AV_PIX_FMT_GRAY9</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_GRAY10</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_GRAY12</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_GRAY16</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV420P9</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV422P9</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV444P9</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV420P10</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV422P10</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV444P10</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV420P12</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV422P12</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV444P12</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV420P14</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV422P14</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV444P14</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV420P16</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV422P16</name></expr>:</case>

<case>case <expr><name>AV_PIX_FMT_YUV444P16</name></expr>:</case>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>strict_std_compliance</name></name> <operator>&gt;=</operator> <name>FF_COMPLIANCE_NORMAL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"'%s' is not an official yuv4mpegpipe pixel format. "</literal>

<literal type="string">"Use '-strict -1' to encode to this pixel format.\n"</literal></expr></argument>,

<argument><expr><call><name>av_get_pix_fmt_name</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>streams</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>-&gt;</operator><name><name>codecpar</name><operator>-&gt;</operator><name>format</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>AV_LOG_WARNING</name></expr></argument>, <argument><expr><literal type="string">"Warning: generating non standard YUV stream. "</literal>

<literal type="string">"Mjpegtools will not work.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<break>break;</break>

<default>default:</default>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"ERROR: yuv4mpeg can only handle "</literal>

<literal type="string">"yuv444p, yuv422p, yuv420p, yuv411p and gray8 pixel formats. "</literal>

<literal type="string">"And using 'strict -1' also yuv444p9, yuv422p9, yuv420p9, "</literal>

<literal type="string">"yuv444p10, yuv422p10, yuv420p10, "</literal>

<literal type="string">"yuv444p12, yuv422p12, yuv420p12, "</literal>

<literal type="string">"yuv444p14, yuv422p14, yuv420p14, "</literal>

<literal type="string">"yuv444p16, yuv422p16, yuv420p16, "</literal>

<literal type="string">"gray9, gray10, gray12 "</literal>

<literal type="string">"and gray16 pixel formats. "</literal>

<literal type="string">"Use -pix_fmt to select one.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EIO</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></switch>

<expr_stmt><expr><operator>*</operator><name>first_pkt</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><name>AVOutputFormat</name></type> <name>ff_yuv4mpegpipe_muxer</name> <init>= <expr><block>{

<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"yuv4mpegpipe"</literal></expr>,

<expr><operator>.</operator><name>long_name</name> <operator>=</operator> <call><name>NULL_IF_CONFIG_SMALL</name><argument_list>(<argument><expr><literal type="string">"YUV4MPEG pipe"</literal></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name>extensions</name> <operator>=</operator> <literal type="string">"y4m"</literal></expr>,

<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof></expr>,

<expr><operator>.</operator><name>audio_codec</name> <operator>=</operator> <name>AV_CODEC_ID_NONE</name></expr>,

<expr><operator>.</operator><name>video_codec</name> <operator>=</operator> <name>AV_CODEC_ID_WRAPPED_AVFRAME</name></expr>,

<expr><operator>.</operator><name>write_header</name> <operator>=</operator> <name>yuv4_write_header</name></expr>,

<expr><operator>.</operator><name>write_packet</name> <operator>=</operator> <name>yuv4_write_packet</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

</unit>
