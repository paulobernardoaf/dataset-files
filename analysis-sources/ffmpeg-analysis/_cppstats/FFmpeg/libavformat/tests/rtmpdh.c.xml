<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavformat\tests\rtmpdh.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavformat/avformat.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavformat/rtmpdh.c"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>int</name></type> <name>test_random_shared_secret</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>FF_DH</name> <modifier>*</modifier></type><name>peer1</name> <init>= <expr><name>NULL</name></expr></init></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>peer2</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>pubkey1</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>pubkey2</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sharedkey1</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>sharedkey2</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><name>peer1</name> <operator>=</operator> <call><name>ff_dh_init</name><argument_list>(<argument><expr><literal type="number">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>peer2</name> <operator>=</operator> <call><name>ff_dh_init</name><argument_list>(<argument><expr><literal type="number">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>peer1</name> <operator>||</operator> <operator>!</operator><name>peer2</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>ff_dh_generate_public_key</name><argument_list>(<argument><expr><name>peer1</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>ff_dh_generate_public_key</name><argument_list>(<argument><expr><name>peer2</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>ff_dh_write_public_key</name><argument_list>(<argument><expr><name>peer1</name></expr></argument>, <argument><expr><name>pubkey1</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>pubkey1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>ff_dh_write_public_key</name><argument_list>(<argument><expr><name>peer2</name></expr></argument>, <argument><expr><name>pubkey2</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>pubkey2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>ff_dh_compute_shared_secret_key</name><argument_list>(<argument><expr><name>peer1</name></expr></argument>, <argument><expr><name>pubkey2</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>pubkey2</name></expr></argument>)</argument_list></sizeof></expr></argument>,

<argument><expr><name>sharedkey1</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sharedkey1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>ff_dh_compute_shared_secret_key</name><argument_list>(<argument><expr><name>peer2</name></expr></argument>, <argument><expr><name>pubkey1</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>pubkey1</name></expr></argument>)</argument_list></sizeof></expr></argument>,

<argument><expr><name>sharedkey2</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sharedkey2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>memcmp</name><argument_list>(<argument><expr><name>sharedkey1</name></expr></argument>, <argument><expr><name>sharedkey2</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sharedkey1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Mismatched generated shared key\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Generated shared key ok\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<label><name>fail</name>:</label>

<expr_stmt><expr><call><name>ff_dh_free</name><argument_list>(<argument><expr><name>peer1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ff_dh_free</name><argument_list>(<argument><expr><name>peer2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>private_key</name> <init>=

<expr><literal type="string">"976C18FCADC255B456564F74F3EEDA59D28AF6B744D743F2357BFD2404797EF896EF1A"</literal>

<literal type="string">"7C1CBEAAA3AB60AF3192D189CFF3F991C9CBBFD78119FCA2181384B94011943B6D6F28"</literal>

<literal type="string">"9E1B708E2D1A0C7771169293F03DA27E561F15F16F0AC9BC858C77A80FA98FD088A232"</literal>

<literal type="string">"19D08BE6F165DE0B02034B18705829FAD0ACB26A5B75EF"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>public_key</name> <init>=

<expr><literal type="string">"F272ECF8362257C5D2C3CC2229CF9C0A03225BC109B1DBC76A68C394F256ACA3EF5F64"</literal>

<literal type="string">"FC270C26382BF315C19E97A76104A716FC998A651E8610A3AE6CF65D8FAE5D3F32EEA0"</literal>

<literal type="string">"0B32CB9609B494116A825D7142D17B88E3D20EDD98743DE29CF37A23A9F6A58B960591"</literal>

<literal type="string">"3157D5965FCB46DDA73A1F08DD897BAE88DFE6FC937CBA"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>public_key_bin</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="number">0xf2</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0xf8</literal></expr>, <expr><literal type="number">0x36</literal></expr>, <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0xc5</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0xc3</literal></expr>, <expr><literal type="number">0xcc</literal></expr>, <expr><literal type="number">0x22</literal></expr>,

<expr><literal type="number">0x29</literal></expr>, <expr><literal type="number">0xcf</literal></expr>, <expr><literal type="number">0x9c</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0x5b</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0xb1</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0xc7</literal></expr>,

<expr><literal type="number">0x6a</literal></expr>, <expr><literal type="number">0x68</literal></expr>, <expr><literal type="number">0xc3</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0xf2</literal></expr>, <expr><literal type="number">0x56</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">0xef</literal></expr>, <expr><literal type="number">0x5f</literal></expr>, <expr><literal type="number">0x64</literal></expr>, <expr><literal type="number">0xfc</literal></expr>,

<expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">0x0c</literal></expr>, <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0x9e</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0xa7</literal></expr>, <expr><literal type="number">0x61</literal></expr>,

<expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0xa7</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0xfc</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0x86</literal></expr>, <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">0xae</literal></expr>,

<expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0xf6</literal></expr>, <expr><literal type="number">0x5d</literal></expr>, <expr><literal type="number">0x8f</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0x5d</literal></expr>, <expr><literal type="number">0x3f</literal></expr>, <expr><literal type="number">0x32</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x32</literal></expr>,

<expr><literal type="number">0xcb</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0x6a</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x5d</literal></expr>, <expr><literal type="number">0x71</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0xd1</literal></expr>,

<expr><literal type="number">0x7b</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0xe3</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0xdd</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x3d</literal></expr>, <expr><literal type="number">0xe2</literal></expr>, <expr><literal type="number">0x9c</literal></expr>, <expr><literal type="number">0xf3</literal></expr>,

<expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0xa9</literal></expr>, <expr><literal type="number">0xf6</literal></expr>, <expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0x8b</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x91</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0xd5</literal></expr>,

<expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x5f</literal></expr>, <expr><literal type="number">0xcb</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0xdd</literal></expr>, <expr><literal type="number">0xa7</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0x1f</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0xdd</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0x7b</literal></expr>,

<expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0xdf</literal></expr>, <expr><literal type="number">0xe6</literal></expr>, <expr><literal type="number">0xfc</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x7c</literal></expr>, <expr><literal type="number">0xba</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>peer_public_key</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="number">0x58</literal></expr>, <expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0x46</literal></expr>,

<expr><literal type="number">0xf2</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0x79</literal></expr>, <expr><literal type="number">0xa9</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0xae</literal></expr>, <expr><literal type="number">0x1a</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0xf0</literal></expr>, <expr><literal type="number">0x71</literal></expr>, <expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0xfb</literal></expr>,

<expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x4e</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x50</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0xaf</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x72</literal></expr>,

<expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0xdc</literal></expr>, <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0x78</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0x9a</literal></expr>, <expr><literal type="number">0x19</literal></expr>, <expr><literal type="number">0x71</literal></expr>, <expr><literal type="number">0x7e</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0x9f</literal></expr>,

<expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0xd4</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0xe2</literal></expr>, <expr><literal type="number">0x0c</literal></expr>, <expr><literal type="number">0x1d</literal></expr>, <expr><literal type="number">0x1a</literal></expr>, <expr><literal type="number">0x78</literal></expr>, <expr><literal type="number">0x4c</literal></expr>, <expr><literal type="number">0xde</literal></expr>, <expr><literal type="number">0xf1</literal></expr>, <expr><literal type="number">0xad</literal></expr>,

<expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0x60</literal></expr>, <expr><literal type="number">0xa8</literal></expr>, <expr><literal type="number">0x51</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x71</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0x86</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0x36</literal></expr>,

<expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0x7c</literal></expr>, <expr><literal type="number">0xe3</literal></expr>, <expr><literal type="number">0x87</literal></expr>, <expr><literal type="number">0xee</literal></expr>, <expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0xf1</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0x04</literal></expr>,

<expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0xdf</literal></expr>, <expr><literal type="number">0xba</literal></expr>, <expr><literal type="number">0xfa</literal></expr>, <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">0xc2</literal></expr>, <expr><literal type="number">0xbb</literal></expr>, <expr><literal type="number">0x62</literal></expr>, <expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">0xd0</literal></expr>, <expr><literal type="number">0xf4</literal></expr>,

<expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0xda</literal></expr>, <expr><literal type="number">0x8a</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x60</literal></expr>, <expr><literal type="number">0xe2</literal></expr>, <expr><literal type="number">0xdb</literal></expr>, <expr><literal type="number">0x75</literal></expr>, <expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0x98</literal></expr>,

<expr><literal type="number">0x9d</literal></expr>, <expr><literal type="number">0xb5</literal></expr>, <expr><literal type="number">0x50</literal></expr>, <expr><literal type="number">0xe3</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0xda</literal></expr>, <expr><literal type="number">0xe0</literal></expr>, <expr><literal type="number">0xa6</literal></expr>, <expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x12</literal></expr>,

<expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0x3c</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0xde</literal></expr>, <expr><literal type="number">0x74</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>shared_secret</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="number">0xb2</literal></expr>, <expr><literal type="number">0xeb</literal></expr>, <expr><literal type="number">0xcb</literal></expr>, <expr><literal type="number">0x71</literal></expr>, <expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0xfb</literal></expr>, <expr><literal type="number">0x5b</literal></expr>, <expr><literal type="number">0x4e</literal></expr>, <expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0x4c</literal></expr>, <expr><literal type="number">0xcf</literal></expr>,

<expr><literal type="number">0x5c</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x5f</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">0x77</literal></expr>, <expr><literal type="number">0x1d</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0xf1</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">0x4b</literal></expr>,

<expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x2a</literal></expr>, <expr><literal type="number">0x88</literal></expr>, <expr><literal type="number">0xc7</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0xc7</literal></expr>, <expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0xd3</literal></expr>, <expr><literal type="number">0x1a</literal></expr>,

<expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0xc8</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0xe3</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0x8f</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x1a</literal></expr>,

<expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0xf6</literal></expr>, <expr><literal type="number">0xd8</literal></expr>, <expr><literal type="number">0xc8</literal></expr>, <expr><literal type="number">0x94</literal></expr>, <expr><literal type="number">0xff</literal></expr>, <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x84</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x0f</literal></expr>, <expr><literal type="number">0xa5</literal></expr>,

<expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x5d</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0xe0</literal></expr>, <expr><literal type="number">0x7a</literal></expr>, <expr><literal type="number">0x3b</literal></expr>, <expr><literal type="number">0x5f</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0x4c</literal></expr>, <expr><literal type="number">0xf5</literal></expr>, <expr><literal type="number">0xbc</literal></expr>, <expr><literal type="number">0x18</literal></expr>,

<expr><literal type="number">0xea</literal></expr>, <expr><literal type="number">0xd4</literal></expr>, <expr><literal type="number">0x77</literal></expr>, <expr><literal type="number">0xa9</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">0x54</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0xd9</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0xb8</literal></expr>,

<expr><literal type="number">0x66</literal></expr>, <expr><literal type="number">0x5e</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">0xcd</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0x91</literal></expr>, <expr><literal type="number">0x08</literal></expr>,

<expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0x85</literal></expr>, <expr><literal type="number">0x9b</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x78</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x51</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0x5b</literal></expr>,

<expr><literal type="number">0x4d</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0x29</literal></expr>, <expr><literal type="number">0x2e</literal></expr>, <expr><literal type="number">0x9e</literal></expr>, <expr><literal type="number">0x8e</literal></expr>, <expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">0xe5</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x83</literal></expr>, <expr><literal type="number">0xb0</literal></expr>,

<expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0xb0</literal></expr>, <expr><literal type="number">0xce</literal></expr>, <expr><literal type="number">0xc6</literal></expr>, <expr><literal type="number">0xb2</literal></expr>, <expr><literal type="number">0x8f</literal></expr>, <expr><literal type="number">0x5b</literal></expr>, <expr><literal type="number">0xb0</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type> <name>test_ref_data</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>FF_DH</name> <modifier>*</modifier></type><name>dh</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOMEM</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>pubkey_test</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>sharedkey_test</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><name>dh</name> <operator>=</operator> <call><name>ff_dh_init</name><argument_list>(<argument><expr><literal type="number">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>dh</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>bn_hex2bn</name><argument_list>(<argument><expr><name><name>dh</name><operator>-&gt;</operator><name>priv_key</name></name></expr></argument>, <argument><expr><name>private_key</name></expr></argument>, <argument><expr><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>ret</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>bn_hex2bn</name><argument_list>(<argument><expr><name><name>dh</name><operator>-&gt;</operator><name>pub_key</name></name></expr></argument>, <argument><expr><name>public_key</name></expr></argument>, <argument><expr><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>ret</name></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>ff_dh_write_public_key</name><argument_list>(<argument><expr><name>dh</name></expr></argument>, <argument><expr><name>pubkey_test</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>pubkey_test</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>memcmp</name><argument_list>(<argument><expr><name>pubkey_test</name></expr></argument>, <argument><expr><name>public_key_bin</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>pubkey_test</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Mismatched generated public key\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

<goto>goto <name>fail</name>;</goto>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Generated public key ok\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>ff_dh_compute_shared_secret_key</name><argument_list>(<argument><expr><name>dh</name></expr></argument>, <argument><expr><name>peer_public_key</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>peer_public_key</name></expr></argument>)</argument_list></sizeof></expr></argument>,

<argument><expr><name>sharedkey_test</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sharedkey_test</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>memcmp</name><argument_list>(<argument><expr><name>shared_secret</name></expr></argument>, <argument><expr><name>sharedkey_test</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sharedkey_test</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Mismatched generated shared key\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Generated shared key ok\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<label><name>fail</name>:</label>

<expr_stmt><expr><call><name>ff_dh_free</name><argument_list>(<argument><expr><name>dh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>avformat_network_init</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>test_random_shared_secret</name><argument_list>()</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>test_ref_data</name><argument_list>()</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

</unit>
