<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavformat\tests\url.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavformat/url.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavformat/avformat.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>void</name></type> <name>test</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>rel</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>char</name></type> <name><name>buf</name><index>[<expr><literal type="number">200</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>buf2</name><index>[<expr><literal type="number">200</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ff_make_absolute_url</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>base</name></expr></argument>, <argument><expr><name>rel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%50s %-20s =&gt; %s\n"</literal></expr></argument>, <argument><expr><name>base</name></expr></argument>, <argument><expr><name>rel</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>base</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>buf2</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>buf2</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ff_make_absolute_url</name><argument_list>(<argument><expr><name>buf2</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>buf2</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>buf2</name></expr></argument>, <argument><expr><name>rel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>buf2</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"In-place handling of %s + %s failed\n"</literal></expr></argument>, <argument><expr><name>base</name></expr></argument>, <argument><expr><name>rel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>exit</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>test2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>char</name></type> <name><name>proto</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>auth</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>host</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>path</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>port</name><init>=<expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>av_url_split</name><argument_list>(<argument><expr><name>proto</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>proto</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>auth</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>auth</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>host</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>host</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><operator>&amp;</operator><name>port</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"%-60s =&gt; %-15s %-15s %-15s %5d %s\n"</literal></expr></argument>, <argument><expr><name>url</name></expr></argument>, <argument><expr><name>proto</name></expr></argument>, <argument><expr><name>auth</name></expr></argument>, <argument><expr><name>host</name></expr></argument>, <argument><expr><name>port</name></expr></argument>, <argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Testing ff_make_absolute_url:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"baz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test</name><argument_list>(<argument><expr><literal type="string">"/foo/bar"</literal></expr></argument>, <argument><expr><literal type="string">"baz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test</name><argument_list>(<argument><expr><literal type="string">"/foo/bar"</literal></expr></argument>, <argument><expr><literal type="string">"../baz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test</name><argument_list>(<argument><expr><literal type="string">"/foo/bar"</literal></expr></argument>, <argument><expr><literal type="string">"/baz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test</name><argument_list>(<argument><expr><literal type="string">"http://server/foo/"</literal></expr></argument>, <argument><expr><literal type="string">"baz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test</name><argument_list>(<argument><expr><literal type="string">"http://server/foo/bar"</literal></expr></argument>, <argument><expr><literal type="string">"baz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test</name><argument_list>(<argument><expr><literal type="string">"http://server/foo/"</literal></expr></argument>, <argument><expr><literal type="string">"../baz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test</name><argument_list>(<argument><expr><literal type="string">"http://server/foo/bar/123"</literal></expr></argument>, <argument><expr><literal type="string">"../../baz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test</name><argument_list>(<argument><expr><literal type="string">"http://server/foo/bar/123"</literal></expr></argument>, <argument><expr><literal type="string">"/baz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test</name><argument_list>(<argument><expr><literal type="string">"http://server/foo/bar/123"</literal></expr></argument>, <argument><expr><literal type="string">"https://other/url"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test</name><argument_list>(<argument><expr><literal type="string">"http://server/foo/bar?param=value/with/slashes"</literal></expr></argument>, <argument><expr><literal type="string">"/baz"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test</name><argument_list>(<argument><expr><literal type="string">"http://server/foo/bar?param&amp;otherparam"</literal></expr></argument>, <argument><expr><literal type="string">"?someparam"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test</name><argument_list>(<argument><expr><literal type="string">"http://server/foo/bar"</literal></expr></argument>, <argument><expr><literal type="string">"//other/url"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"\nTesting av_url_split:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test2</name><argument_list>(<argument><expr><literal type="string">"/foo/bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test2</name><argument_list>(<argument><expr><literal type="string">"http://server/foo/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test2</name><argument_list>(<argument><expr><literal type="string">"http://example.com/foo/bar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test2</name><argument_list>(<argument><expr><literal type="string">"http://user:pass@localhost:8080/foo/bar/123"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test2</name><argument_list>(<argument><expr><literal type="string">"http://server/foo/bar?param=value/with/slashes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test2</name><argument_list>(<argument><expr><literal type="string">"https://1l-lh.a.net/i/1LIVE_HDS@179577/master.m3u8"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test2</name><argument_list>(<argument><expr><literal type="string">"ftp://u:p%2B%2F2@ftp.pbt.com/ExportHD.mpg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test2</name><argument_list>(<argument><expr><literal type="string">"https://key.dns.com?key_id=2&amp;model_id=12345&amp;&amp;access_key="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>test2</name><argument_list>(<argument><expr><literal type="string">"http://example.com#tag"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

</unit>
