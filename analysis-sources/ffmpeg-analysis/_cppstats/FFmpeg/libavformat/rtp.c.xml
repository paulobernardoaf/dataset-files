<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavformat\rtp.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/avstring.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rtp.h"</cpp:file></cpp:include>

<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{

<decl_stmt><decl><type><name>int</name></type> <name>pt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>enc_name</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVMediaType</name></name></type> <name>codec_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>codec_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>clock_rate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>audio_channels</name></decl>;</decl_stmt>

}</block> <decl><name><name>rtp_payload_types</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="string">"PCMU"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_PCM_MULAW</name></expr>, <expr><literal type="number">8000</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">3</literal></expr>, <expr><literal type="string">"GSM"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">8000</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">4</literal></expr>, <expr><literal type="string">"G723"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_G723_1</name></expr>, <expr><literal type="number">8000</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">5</literal></expr>, <expr><literal type="string">"DVI4"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">8000</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">6</literal></expr>, <expr><literal type="string">"DVI4"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">16000</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">7</literal></expr>, <expr><literal type="string">"LPC"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">8000</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">8</literal></expr>, <expr><literal type="string">"PCMA"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_PCM_ALAW</name></expr>, <expr><literal type="number">8000</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">9</literal></expr>, <expr><literal type="string">"G722"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_ADPCM_G722</name></expr>, <expr><literal type="number">8000</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">10</literal></expr>, <expr><literal type="string">"L16"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_PCM_S16BE</name></expr>, <expr><literal type="number">44100</literal></expr>, <expr><literal type="number">2</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">11</literal></expr>, <expr><literal type="string">"L16"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_PCM_S16BE</name></expr>, <expr><literal type="number">44100</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">12</literal></expr>, <expr><literal type="string">"QCELP"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_QCELP</name></expr>, <expr><literal type="number">8000</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">13</literal></expr>, <expr><literal type="string">"CN"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">8000</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">14</literal></expr>, <expr><literal type="string">"MPA"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_MP2</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">14</literal></expr>, <expr><literal type="string">"MPA"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_MP3</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">15</literal></expr>, <expr><literal type="string">"G728"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">8000</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">16</literal></expr>, <expr><literal type="string">"DVI4"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">11025</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">17</literal></expr>, <expr><literal type="string">"DVI4"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">22050</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">18</literal></expr>, <expr><literal type="string">"G729"</literal></expr>, <expr><name>AVMEDIA_TYPE_AUDIO</name></expr>, <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">8000</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">25</literal></expr>, <expr><literal type="string">"CelB"</literal></expr>, <expr><name>AVMEDIA_TYPE_VIDEO</name></expr>, <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">90000</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">26</literal></expr>, <expr><literal type="string">"JPEG"</literal></expr>, <expr><name>AVMEDIA_TYPE_VIDEO</name></expr>, <expr><name>AV_CODEC_ID_MJPEG</name></expr>, <expr><literal type="number">90000</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">28</literal></expr>, <expr><literal type="string">"nv"</literal></expr>, <expr><name>AVMEDIA_TYPE_VIDEO</name></expr>, <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">90000</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">31</literal></expr>, <expr><literal type="string">"H261"</literal></expr>, <expr><name>AVMEDIA_TYPE_VIDEO</name></expr>, <expr><name>AV_CODEC_ID_H261</name></expr>, <expr><literal type="number">90000</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">32</literal></expr>, <expr><literal type="string">"MPV"</literal></expr>, <expr><name>AVMEDIA_TYPE_VIDEO</name></expr>, <expr><name>AV_CODEC_ID_MPEG1VIDEO</name></expr>, <expr><literal type="number">90000</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">32</literal></expr>, <expr><literal type="string">"MPV"</literal></expr>, <expr><name>AVMEDIA_TYPE_VIDEO</name></expr>, <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <expr><literal type="number">90000</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">33</literal></expr>, <expr><literal type="string">"MP2T"</literal></expr>, <expr><name>AVMEDIA_TYPE_DATA</name></expr>, <expr><name>AV_CODEC_ID_MPEG2TS</name></expr>, <expr><literal type="number">90000</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="number">34</literal></expr>, <expr><literal type="string">"H263"</literal></expr>, <expr><name>AVMEDIA_TYPE_VIDEO</name></expr>, <expr><name>AV_CODEC_ID_H263</name></expr>, <expr><literal type="number">90000</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,

<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><name>AVMEDIA_TYPE_UNKNOWN</name></expr>, <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>

}</block></expr></init></decl>;</struct>

<function><type><name>int</name></type> <name>ff_rtp_get_codec_info</name><parameter_list>(<parameter><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>par</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>payload_type</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pt</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<if_stmt><if>if <condition>(<expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pt</name> <operator>==</operator> <name>payload_type</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>codec_id</name> <operator>!=</operator> <name>AV_CODEC_ID_NONE</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>par</name><operator>-&gt;</operator><name>codec_type</name></name> <operator>=</operator> <name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>codec_type</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>par</name><operator>-&gt;</operator><name>codec_id</name></name> <operator>=</operator> <name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>codec_id</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>audio_channels</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>par</name><operator>-&gt;</operator><name>channels</name></name> <operator>=</operator> <name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>audio_channels</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>clock_rate</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>par</name><operator>-&gt;</operator><name>sample_rate</name></name> <operator>=</operator> <name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>clock_rate</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt></block_content></block></for>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>ff_rtp_get_payload_type</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>,

<parameter><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>par</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVOutputFormat</name> <modifier>*</modifier></type><name>ofmt</name> <init>= <expr><ternary><condition><expr><name>fmt</name></expr> ?</condition><then> <expr><name><name>fmt</name><operator>-&gt;</operator><name>oformat</name></name></expr> </then><else>: <expr><name>NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>ofmt</name> <operator>&amp;&amp;</operator> <name><name>ofmt</name><operator>-&gt;</operator><name>priv_class</name></name> <operator>&amp;&amp;</operator> <name><name>fmt</name><operator>-&gt;</operator><name>priv_data</name></name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>int64_t</name></type> <name>payload_type</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>av_opt_get_int</name><argument_list>(<argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>priv_data</name></name></expr></argument>, <argument><expr><literal type="string">"payload_type"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>payload_type</name></expr></argument>)</argument_list></call> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>

<name>payload_type</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>(</operator><name>int</name><operator>)</operator><name>payload_type</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pt</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>

<if_stmt><if>if <condition>(<expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>codec_id</name> <operator>==</operator> <name><name>par</name><operator>-&gt;</operator><name>codec_id</name></name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>par</name><operator>-&gt;</operator><name>codec_id</name></name> <operator>==</operator> <name>AV_CODEC_ID_H263</name> <operator>&amp;&amp;</operator> <operator>(</operator><operator>!</operator><name>fmt</name> <operator>||</operator> <operator>!</operator><name><name>fmt</name><operator>-&gt;</operator><name>oformat</name></name> <operator>||</operator>

<operator>!</operator><name><name>fmt</name><operator>-&gt;</operator><name>oformat</name><operator>-&gt;</operator><name>priv_class</name></name> <operator>||</operator> <operator>!</operator><name><name>fmt</name><operator>-&gt;</operator><name>priv_data</name></name> <operator>||</operator>

<operator>!</operator><call><name>av_opt_flag_is_set</name><argument_list>(<argument><expr><name><name>fmt</name><operator>-&gt;</operator><name>priv_data</name></name></expr></argument>, <argument><expr><literal type="string">"rtpflags"</literal></expr></argument>, <argument><expr><literal type="string">"rfc2190"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>par</name><operator>-&gt;</operator><name>codec_id</name></name> <operator>==</operator> <name>AV_CODEC_ID_ADPCM_G722</name> <operator>&amp;&amp;</operator>

<name><name>par</name><operator>-&gt;</operator><name>sample_rate</name></name> <operator>==</operator> <literal type="number">16000</literal> <operator>&amp;&amp;</operator> <name><name>par</name><operator>-&gt;</operator><name>channels</name></name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pt</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>par</name><operator>-&gt;</operator><name>codec_type</name></name> <operator>==</operator> <name>AVMEDIA_TYPE_AUDIO</name> <operator>&amp;&amp;</operator>

<operator>(</operator><operator>(</operator><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>clock_rate</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>

<name><name>par</name><operator>-&gt;</operator><name>sample_rate</name></name> <operator>!=</operator> <name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>clock_rate</name><operator>)</operator> <operator>||</operator>

<operator>(</operator><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>audio_channels</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>

<name><name>par</name><operator>-&gt;</operator><name>channels</name></name> <operator>!=</operator> <name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>audio_channels</name><operator>)</operator><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<continue>continue;</continue></block_content></block></if></if_stmt>

<return>return <expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pt</name></expr>;</return>

</block_content>}</block></if></if_stmt></block_content></block></for>

<if_stmt><if>if <condition>(<expr><name>idx</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>idx</name> <operator>=</operator> <name><name>par</name><operator>-&gt;</operator><name>codec_type</name></name> <operator>==</operator> <name>AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>RTP_PT_PRIVATE</name> <operator>+</operator> <name>idx</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ff_rtp_enc_name</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>payload_type</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pt</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<if_stmt><if>if <condition>(<expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pt</name> <operator>==</operator> <name>payload_type</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>enc_name</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

<return>return <expr><literal type="string">""</literal></expr>;</return>

</block_content>}</block></function>

<function><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>ff_rtp_codec_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVMediaType</name></name></type> <name>codec_type</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pt</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>av_strcasecmp</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>enc_name</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><name>codec_type</name> <operator>==</operator> <name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>codec_type</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name><name>rtp_payload_types</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>codec_id</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

<return>return <expr><name>AV_CODEC_ID_NONE</name></expr>;</return>

</block_content>}</block></function>

</unit>
