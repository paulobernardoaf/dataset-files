<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavformat\diracdec.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/intreadwrite.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rawdec.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>int</name></type> <name>dirac_probe</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVProbeData</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>unsigned</name></type> <name>size</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>AV_RL32</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>MKTAG</name><argument_list>(<argument><expr><literal type="char">'B'</literal></expr></argument>, <argument><expr><literal type="char">'B'</literal></expr></argument>, <argument><expr><literal type="char">'C'</literal></expr></argument>, <argument><expr><literal type="char">'D'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>size</name> <operator>=</operator> <call><name>AV_RB32</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>buf</name></name><operator>+</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>size</name> <operator>&lt;</operator> <literal type="number">13</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>size</name> <operator>+</operator> <literal type="number">13LL</literal> <operator>&gt;</operator> <name><name>p</name><operator>-&gt;</operator><name>buf_size</name></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>AVPROBE_SCORE_MAX</name> <operator>/</operator> <literal type="number">4</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>AV_RL32</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>buf</name></name> <operator>+</operator> <name>size</name></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>MKTAG</name><argument_list>(<argument><expr><literal type="char">'B'</literal></expr></argument>, <argument><expr><literal type="char">'B'</literal></expr></argument>, <argument><expr><literal type="char">'C'</literal></expr></argument>, <argument><expr><literal type="char">'D'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name>AVPROBE_SCORE_MAX</name></expr>;</return>

</block_content>}</block></function>

<macro><name>FF_DEF_RAWVIDEO_DEMUXER</name><argument_list>(<argument>dirac</argument>, <argument><literal type="string">"raw Dirac"</literal></argument>, <argument>dirac_probe</argument>, <argument>NULL</argument>, <argument>AV_CODEC_ID_DIRAC</argument>)</argument_list></macro>

</unit>
