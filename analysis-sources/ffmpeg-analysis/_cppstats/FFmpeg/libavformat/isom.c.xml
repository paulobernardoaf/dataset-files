<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavformat\isom.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"isom.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/mpeg4audio.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/mpegaudiodata.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/avstring.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/intreadwrite.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>ff_mp4_obj_type</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>AV_CODEC_ID_MOV_TEXT</name></expr> , <expr><literal type="number">0x08</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG4</name></expr> , <expr><literal type="number">0x20</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr> , <expr><literal type="number">0x21</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_HEVC</name></expr> , <expr><literal type="number">0x23</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_AAC</name></expr> , <expr><literal type="number">0x40</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MP4ALS</name></expr> , <expr><literal type="number">0x40</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr> , <expr><literal type="number">0x61</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr> , <expr><literal type="number">0x60</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr> , <expr><literal type="number">0x62</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr> , <expr><literal type="number">0x63</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr> , <expr><literal type="number">0x64</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr> , <expr><literal type="number">0x65</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_AAC</name></expr> , <expr><literal type="number">0x66</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_AAC</name></expr> , <expr><literal type="number">0x67</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_AAC</name></expr> , <expr><literal type="number">0x68</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MP3</name></expr> , <expr><literal type="number">0x69</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MP2</name></expr> , <expr><literal type="number">0x69</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG1VIDEO</name></expr> , <expr><literal type="number">0x6A</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MP3</name></expr> , <expr><literal type="number">0x6B</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MJPEG</name></expr> , <expr><literal type="number">0x6C</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_PNG</name></expr> , <expr><literal type="number">0x6D</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_JPEG2000</name></expr> , <expr><literal type="number">0x6E</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_VC1</name></expr> , <expr><literal type="number">0xA3</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DIRAC</name></expr> , <expr><literal type="number">0xA4</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_AC3</name></expr> , <expr><literal type="number">0xA5</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_EAC3</name></expr> , <expr><literal type="number">0xA6</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DTS</name></expr> , <expr><literal type="number">0xA9</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_OPUS</name></expr> , <expr><literal type="number">0xAD</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_VP9</name></expr> , <expr><literal type="number">0xB1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_FLAC</name></expr> , <expr><literal type="number">0xC1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_TSCC2</name></expr> , <expr><literal type="number">0xD0</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_EVRC</name></expr> , <expr><literal type="number">0xD1</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_VORBIS</name></expr> , <expr><literal type="number">0xDD</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVD_SUBTITLE</name></expr>, <expr><literal type="number">0xE0</literal></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_QCELP</name></expr> , <expr><literal type="number">0xE1</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG4SYSTEMS</name></expr>, <expr><literal type="number">0x01</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG4SYSTEMS</name></expr>, <expr><literal type="number">0x02</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_NONE</name></expr> , <expr><literal type="number">0</literal></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>ff_codec_movvideo_tags</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'w'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'y'</literal></argument>, <argument><literal type="char">'u'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'u'</literal></argument>, <argument><literal type="char">'y'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'y'</literal></argument>, <argument><literal type="char">'u'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'s'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'L'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'5'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'L'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'6'</literal></argument>, <argument><literal type="char">'5'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'6'</literal></argument>, <argument><literal type="char">'5'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'A'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'A'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'b'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'6'</literal></argument>, <argument><literal type="char">'g'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'b'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'8'</literal></argument>, <argument><literal type="char">'r'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'b'</literal></argument>, <argument><literal type="char">'6'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'a'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'b'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'b'</literal></argument>, <argument><literal type="char">'g'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'b'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'g'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'b'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'y'</literal></argument>, <argument><literal type="char">'v'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'N'</literal></argument>, <argument><literal type="char">'O'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'6'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'O'</literal></argument>, <argument><literal type="char">'O'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'0'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_R10K</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'k'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_R10K</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'g'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_R210</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'0'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_AVUI</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'U'</literal></argument>, <argument><literal type="char">'I'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_AVRP</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_AVRP</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'U'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'S'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_V210</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'0'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_V210</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'b'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'y'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_V308</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'8'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_V408</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'8'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_V410</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'0'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_Y41P</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_YUV4</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'y'</literal></argument>, <argument><literal type="char">'u'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_TARGA_Y216</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'6'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MJPEG</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'j'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'e'</literal></argument>, <argument><literal type="char">'g'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MJPEG</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'j'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'a'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_AVRN</name></expr> , <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'J'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MJPEG</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'b'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MJPEGB</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'j'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'b'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_SVQ1</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'Q'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_SVQ1</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'q'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_SVQ1</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'q'</literal></argument>, <argument><literal type="char">'i'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_SVQ3</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'Q'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG4</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'v'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG4</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'I'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'X'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG4</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'X'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'I'</literal></argument>, <argument><literal type="char">'D'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG4</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'I'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H263</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'6'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H263</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'6'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'n'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'q'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'5'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'6'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_VP3</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_RPZA</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'z'</literal></argument>, <argument><literal type="char">'a'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_CINEPAK</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'d'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_8BPS</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'8'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'S'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_SMC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_QTRLE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'e'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_SGIRLE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'e'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MSRLE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'W'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'L'</literal></argument>, <argument><literal type="char">'E'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_QDRAW</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'q'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'w'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_CDTOONS</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Q'</literal></argument>, <argument><literal type="char">'k'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'k'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'W'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'W'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_HEVC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'e'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_HEVC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_HEVC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'e'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'q'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'5'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'6'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'q'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'5'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'6'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'n'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'x'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'6'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'g'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'g'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H264</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'v'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_VP8</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'8'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_VP9</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'9'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_AV1</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG1VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG1VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG1VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'e'</literal></argument>, <argument><literal type="char">'g'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG1VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'v'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'5'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'6'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'7'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'8'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'9'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'a'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'n'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'n'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'n'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'5'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'9'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'a'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'b'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'c'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'d'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'e'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'5'</literal></argument>, <argument><literal type="char">'f'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'5'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'6'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'7'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'8'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'9'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'a'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'b'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'c'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'d'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'e'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'f'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'d'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'v'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_JPEG2000</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'j'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_TARGA</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'t'</literal></argument>, <argument><literal type="char">'g'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_TIFF</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'t'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'f'</literal></argument>, <argument><literal type="char">'f'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_GIF</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'g'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'f'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_PNG</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'n'</literal></argument>, <argument><literal type="char">'g'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PNG</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'N'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_VC1</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'-'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_CAVS</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DIRAC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'c'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DNXHD</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'n'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DNXHD</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'h'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_H263</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'H'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'6'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MSMPEG4V3</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'I'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'D'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'x'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'u'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SGI</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'g'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DPX</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_EXR</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'e'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_PRORES</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'h'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_PRORES</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'n'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_PRORES</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'s'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_PRORES</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'o'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_PRORES</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'h'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_PRORES</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'x'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_FLIC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'f'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'c'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_AIC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'o'</literal></argument>, <argument><literal type="char">'d'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_HAP</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'H'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_HAP</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'H'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'5'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_HAP</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'H'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_HAP</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'H'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'A'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_HAP</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'H'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'M'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DXV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'X'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DXV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'X'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'I'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'0'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'A'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'8'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'8'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'A'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'8'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'0'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'8'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'0'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'8'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'8'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'8'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'A'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'A'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MAGICYUV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SHEERVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'0'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SHEERVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SHEERVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SHEERVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SHEERVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SHEERVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'5'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SHEERVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'6'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SHEERVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'7'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PIXLET</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'t'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>ff_codec_movaudio_tags</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>AV_CODEC_ID_AAC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'a'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_AC3</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'-'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_AC3</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_ADPCM_IMA_QT</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_ALAC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'c'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_AMR_NB</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'r'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_AMR_WB</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'w'</literal></argument>, <argument><literal type="char">'b'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DTS</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'t'</literal></argument>, <argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'c'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DTS</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'t'</literal></argument>, <argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'h'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DTS</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'t'</literal></argument>, <argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'l'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DTS</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'t'</literal></argument>, <argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'e'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DTS</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'T'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_EAC3</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'e'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'-'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_DVAUDIO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'a'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DVAUDIO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'d'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'a'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_GSM</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'g'</literal></argument>, <argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'m'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_ILBC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'b'</literal></argument>, <argument><literal type="char">'c'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MACE3</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'C'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MACE6</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'C'</literal></argument>, <argument><literal type="char">'6'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MP1</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'.'</literal></argument>, <argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MP2</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'.'</literal></argument>, <argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MP3</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'.'</literal></argument>, <argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'3'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MP3</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MP3</name></expr>, <expr><literal type="number">0x6D730055</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_NELLYMOSER</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'n'</literal></argument>, <argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'o'</literal></argument>, <argument><literal type="char">'s'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_NELLYMOSER</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'N'</literal></argument>, <argument><literal type="char">'E'</literal></argument>, <argument><literal type="char">'L'</literal></argument>, <argument><literal type="char">'L'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_ALAW</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'w'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_F32BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'f'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_F32LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'f'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_F64BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'f'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'6'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_F64LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'f'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'6'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_MULAW</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'u'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'w'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S16BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'t'</literal></argument>, <argument><literal type="char">'w'</literal></argument>, <argument><literal type="char">'o'</literal></argument>, <argument><literal type="char">'s'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S16LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'o'</literal></argument>, <argument><literal type="char">'w'</literal></argument>, <argument><literal type="char">'t'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S16BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'m'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S16LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'m'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S24BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'n'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S24LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'n'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'4'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S32BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'n'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S32LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'n'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S8</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'o'</literal></argument>, <argument><literal type="char">'w'</literal></argument>, <argument><literal type="char">'t'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_U8</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'r'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'w'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_U8</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'N'</literal></argument>, <argument><literal type="char">'O'</literal></argument>, <argument><literal type="char">'N'</literal></argument>, <argument><literal type="char">'E'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_QCELP</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Q'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_QCELP</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Q'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'q'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_QCELP</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'q'</literal></argument>, <argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'p'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_QDM2</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Q'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'2'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_QDMC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Q'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'C'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SPEEX</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'e'</literal></argument>, <argument><literal type="char">'x'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_SPEEX</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'X'</literal></argument>, <argument><literal type="char">'N'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_EVRC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'e'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'c'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_SMV</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'s'</literal></argument>, <argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'v'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_FLAC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'f'</literal></argument>, <argument><literal type="char">'L'</literal></argument>, <argument><literal type="char">'a'</literal></argument>, <argument><literal type="char">'C'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_TRUEHD</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'l'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'a'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_OPUS</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'O'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'u'</literal></argument>, <argument><literal type="char">'s'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MPEGH_3D_AUDIO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'h'</literal></argument>, <argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>ff_codec_movsubtitle_tags</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>AV_CODEC_ID_MOV_TEXT</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'t'</literal></argument>, <argument><literal type="char">'e'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'t'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MOV_TEXT</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'t'</literal></argument>, <argument><literal type="char">'x'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'g'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_EIA_608</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'c'</literal></argument>, <argument><literal type="char">'6'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'8'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>ff_codec_movdata_tags</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>AV_CODEC_ID_BIN_DATA</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'g'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'m'</literal></argument>, <argument><literal type="char">'d'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>mov_mdhd_language_map</name><index>[]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="string">"eng"</literal></expr>, <expr><literal type="string">"fra"</literal></expr>, <expr><literal type="string">"ger"</literal></expr>, <expr><literal type="string">"ita"</literal></expr>, <expr><literal type="string">"dut"</literal></expr>, <expr><literal type="string">"sve"</literal></expr>, <expr><literal type="string">"spa"</literal></expr>, <expr><literal type="string">"dan"</literal></expr>, <expr><literal type="string">"por"</literal></expr>, <expr><literal type="string">"nor"</literal></expr>,

<expr><literal type="string">"heb"</literal></expr>, <expr><literal type="string">"jpn"</literal></expr>, <expr><literal type="string">"ara"</literal></expr>, <expr><literal type="string">"fin"</literal></expr>, <expr><literal type="string">"gre"</literal></expr>, <expr><literal type="string">"ice"</literal></expr>, <expr><literal type="string">"mlt"</literal></expr>, <expr><literal type="string">"tur"</literal></expr>, <expr><literal type="string">"hr "</literal></expr>, <expr><literal type="string">"chi"</literal></expr>,

<expr><literal type="string">"urd"</literal></expr>, <expr><literal type="string">"hin"</literal></expr>, <expr><literal type="string">"tha"</literal></expr>, <expr><literal type="string">"kor"</literal></expr>, <expr><literal type="string">"lit"</literal></expr>, <expr><literal type="string">"pol"</literal></expr>, <expr><literal type="string">"hun"</literal></expr>, <expr><literal type="string">"est"</literal></expr>, <expr><literal type="string">"lav"</literal></expr>, <expr><literal type="string">""</literal></expr>,

<expr><literal type="string">"fo "</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">"rus"</literal></expr>, <expr><literal type="string">"chi"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">"iri"</literal></expr>, <expr><literal type="string">"alb"</literal></expr>, <expr><literal type="string">"ron"</literal></expr>, <expr><literal type="string">"ces"</literal></expr>, <expr><literal type="string">"slk"</literal></expr>,

<expr><literal type="string">"slv"</literal></expr>, <expr><literal type="string">"yid"</literal></expr>, <expr><literal type="string">"sr "</literal></expr>, <expr><literal type="string">"mac"</literal></expr>, <expr><literal type="string">"bul"</literal></expr>, <expr><literal type="string">"ukr"</literal></expr>, <expr><literal type="string">"bel"</literal></expr>, <expr><literal type="string">"uzb"</literal></expr>, <expr><literal type="string">"kaz"</literal></expr>, <expr><literal type="string">"aze"</literal></expr>,

<expr><literal type="string">"aze"</literal></expr>, <expr><literal type="string">"arm"</literal></expr>, <expr><literal type="string">"geo"</literal></expr>, <expr><literal type="string">"mol"</literal></expr>, <expr><literal type="string">"kir"</literal></expr>, <expr><literal type="string">"tgk"</literal></expr>, <expr><literal type="string">"tuk"</literal></expr>, <expr><literal type="string">"mon"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">"pus"</literal></expr>,

<expr><literal type="string">"kur"</literal></expr>, <expr><literal type="string">"kas"</literal></expr>, <expr><literal type="string">"snd"</literal></expr>, <expr><literal type="string">"tib"</literal></expr>, <expr><literal type="string">"nep"</literal></expr>, <expr><literal type="string">"san"</literal></expr>, <expr><literal type="string">"mar"</literal></expr>, <expr><literal type="string">"ben"</literal></expr>, <expr><literal type="string">"asm"</literal></expr>, <expr><literal type="string">"guj"</literal></expr>,

<expr><literal type="string">"pa "</literal></expr>, <expr><literal type="string">"ori"</literal></expr>, <expr><literal type="string">"mal"</literal></expr>, <expr><literal type="string">"kan"</literal></expr>, <expr><literal type="string">"tam"</literal></expr>, <expr><literal type="string">"tel"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">"bur"</literal></expr>, <expr><literal type="string">"khm"</literal></expr>, <expr><literal type="string">"lao"</literal></expr>,

<expr><literal type="string">"vie"</literal></expr>, <expr><literal type="string">"ind"</literal></expr>, <expr><literal type="string">"tgl"</literal></expr>, <expr><literal type="string">"may"</literal></expr>, <expr><literal type="string">"may"</literal></expr>, <expr><literal type="string">"amh"</literal></expr>, <expr><literal type="string">"tir"</literal></expr>, <expr><literal type="string">"orm"</literal></expr>, <expr><literal type="string">"som"</literal></expr>, <expr><literal type="string">"swa"</literal></expr>,

<expr><literal type="string">""</literal></expr>, <expr><literal type="string">"run"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">"mlg"</literal></expr>, <expr><literal type="string">"epo"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>,

<expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>,

<expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>,

<expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="string">"wel"</literal></expr>, <expr><literal type="string">"baq"</literal></expr>,

<expr><literal type="string">"cat"</literal></expr>, <expr><literal type="string">"lat"</literal></expr>, <expr><literal type="string">"que"</literal></expr>, <expr><literal type="string">"grn"</literal></expr>, <expr><literal type="string">"aym"</literal></expr>, <expr><literal type="string">"tat"</literal></expr>, <expr><literal type="string">"uig"</literal></expr>, <expr><literal type="string">"dzo"</literal></expr>, <expr><literal type="string">"jav"</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>ff_mov_iso639_to_lang</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>lang</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mp4</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>code</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>lang</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&amp;&amp;</operator> <operator>!</operator><name>mp4</name> <operator>&amp;&amp;</operator> <name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>mov_mdhd_language_map</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strcmp</name><argument_list>(<argument><expr><name>lang</name></expr></argument>, <argument><expr><name><name>mov_mdhd_language_map</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>i</name></expr>;</return></block_content></block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>mp4</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>lang</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'\0'</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>lang</name> <operator>=</operator> <literal type="string">"und"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">3</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>c</name> <init>= <expr><name><name>lang</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>c</name> <operator>-=</operator> <literal type="number">0x60</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>c</name> <operator>&gt;</operator> <literal type="number">0x1f</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>code</name> <operator>&lt;&lt;=</operator> <literal type="number">5</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>code</name> <operator>|=</operator> <name>c</name></expr>;</expr_stmt>

</block_content>}</block></for>

<return>return <expr><name>code</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>ff_mov_lang_to_iso639</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name>code</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name><name>to</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>to</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>code</name> <operator>&gt;=</operator> <literal type="number">0x400</literal> <operator>&amp;&amp;</operator> <name>code</name> <operator>!=</operator> <literal type="number">0x7fff</literal></expr>)</condition> <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name><name>to</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="number">0x60</literal> <operator>+</operator> <operator>(</operator><name>code</name> <operator>&amp;</operator> <literal type="number">0x1f</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>code</name> <operator>&gt;&gt;=</operator> <literal type="number">5</literal></expr>;</expr_stmt>

</block_content>}</block></for>

<return>return <expr><literal type="number">1</literal></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>code</name> <operator>&gt;=</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>mov_mdhd_language_map</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>mov_mdhd_language_map</name><index>[<expr><name>code</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>to</name></expr></argument>, <argument><expr><name><name>mov_mdhd_language_map</name><index>[<expr><name>code</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">1</literal></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>ff_mp4_read_descr_len</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>len</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>count</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>;</decl_stmt>

<while>while <condition>(<expr><name>count</name><operator>--</operator></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>c</name> <init>= <expr><call><name>avio_r8</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>len</name> <operator>=</operator> <operator>(</operator><name>len</name> <operator>&lt;&lt;</operator> <literal type="number">7</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>c</name> <operator>&amp;</operator> <literal type="number">0x7f</literal><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>c</name> <operator>&amp;</operator> <literal type="number">0x80</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<break>break;</break></block_content></block></if></if_stmt>

</block_content>}</block></while>

<return>return <expr><name>len</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>ff_mp4_read_descr</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>fc</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>

<expr_stmt><expr><operator>*</operator><name>tag</name> <operator>=</operator> <call><name>avio_r8</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>len</name> <operator>=</operator> <call><name>ff_mp4_read_descr_len</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>fc</name></expr></argument>, <argument><expr><name>AV_LOG_TRACE</name></expr></argument>, <argument><expr><literal type="string">"MPEG-4 description: tag=0x%02x len=%d\n"</literal></expr></argument>, <argument><expr><operator>*</operator><name>tag</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>len</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_mp4_parse_es_descr</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>es_id</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>es_id</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><operator>*</operator><name>es_id</name> <operator>=</operator> <call><name>avio_rb16</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>avio_rb16</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name>flags</name> <operator>=</operator> <call><name>avio_r8</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <literal type="number">0x80</literal></expr>)</condition><block type="pseudo"><block_content> 

<expr_stmt><expr><call><name>avio_rb16</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <literal type="number">0x40</literal></expr>)</condition> <block>{<block_content> 

<decl_stmt><decl><type><name>int</name></type> <name>len</name> <init>= <expr><call><name>avio_r8</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>avio_skip</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <literal type="number">0x20</literal></expr>)</condition><block type="pseudo"><block_content> 

<expr_stmt><expr><call><name>avio_rb16</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>mp4_audio_types</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>AV_CODEC_ID_MP3ON4</name></expr>, <expr><name>AOT_PS</name></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MP3ON4</name></expr>, <expr><name>AOT_L1</name></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MP3ON4</name></expr>, <expr><name>AOT_L2</name></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MP3ON4</name></expr>, <expr><name>AOT_L3</name></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_MP4ALS</name></expr>, <expr><name>AOT_ALS</name></expr> }</block></expr>, 

<expr><block>{ <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><name>AOT_NULL</name></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>ff_mp4_read_dec_config_descr</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>fc</name></decl></parameter>, <parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>codec_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>, <decl><type ref="prev"/><name>tag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>object_type_id</name> <init>= <expr><call><name>avio_r8</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>avio_r8</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>avio_rb24</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>v</name> <operator>=</operator> <call><name>avio_rb32</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_LAVF_AVCTX</name></expr></cpp:if>

<macro><name>FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

<if_stmt><if>if <condition>(<expr><name>v</name> <operator>&lt;</operator> <name>INT32_MAX</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>codec</name><operator>-&gt;</operator><name>rc_max_rate</name></name> <operator>=</operator> <name>v</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>bit_rate</name></name> <init>= <expr><call><name>avio_rb32</name><argument_list>(<argument><expr><name>pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 

<expr_stmt><expr><name>codec_id</name><operator>=</operator> <call><name>ff_codec_get_id</name><argument_list>(<argument><expr><name>ff_mp4_obj_type</name></expr></argument>, <argument><expr><name>object_type_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>codec_id</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>codec_id</name></name> <operator>=</operator> <name>codec_id</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>fc</name></expr></argument>, <argument><expr><name>AV_LOG_TRACE</name></expr></argument>, <argument><expr><literal type="string">"esds object type id 0x%02x\n"</literal></expr></argument>, <argument><expr><name>object_type_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>len</name> <operator>=</operator> <call><name>ff_mp4_read_descr</name><argument_list>(<argument><expr><name>fc</name></expr></argument>, <argument><expr><name>pb</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>tag</name> <operator>==</operator> <name>MP4DecSpecificDescrTag</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>fc</name></expr></argument>, <argument><expr><name>AV_LOG_TRACE</name></expr></argument>, <argument><expr><literal type="string">"Specific MPEG-4 header len=%d\n"</literal></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>object_type_id</name> <operator>==</operator> <literal type="number">0x69</literal> <operator>||</operator> <name>object_type_id</name> <operator>==</operator> <literal type="number">0x6b</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>len</name> <operator>||</operator> <operator>(</operator><name>uint64_t</name><operator>)</operator><name>len</name> <operator>&gt;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">30</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>ff_get_extradata</name><argument_list>(<argument><expr><name>fc</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name></name></expr></argument>, <argument><expr><name>pb</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>codec_id</name></name> <operator>==</operator> <name>AV_CODEC_ID_AAC</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>MPEG4AudioConfig</name></type> <name>cfg</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>avpriv_mpeg4audio_get_config2</name><argument_list>(<argument><expr><operator>&amp;</operator><name>cfg</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>extradata</name></name></expr></argument>,

<argument><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>extradata_size</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>fc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>channels</name></name> <operator>=</operator> <name><name>cfg</name><operator>.</operator><name>channels</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>cfg</name><operator>.</operator><name>object_type</name></name> <operator>==</operator> <literal type="number">29</literal> <operator>&amp;&amp;</operator> <name><name>cfg</name><operator>.</operator><name>sampling_index</name></name> <operator>&lt;</operator> <literal type="number">3</literal></expr>)</condition><block type="pseudo"><block_content> 

<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>sample_rate</name></name> <operator>=</operator> <name><name>avpriv_mpa_freq_tab</name><index>[<expr><name><name>cfg</name><operator>.</operator><name>sampling_index</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name><name>cfg</name><operator>.</operator><name>ext_sample_rate</name></name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>sample_rate</name></name> <operator>=</operator> <name><name>cfg</name><operator>.</operator><name>ext_sample_rate</name></name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content>

<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>sample_rate</name></name> <operator>=</operator> <name><name>cfg</name><operator>.</operator><name>sample_rate</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>fc</name></expr></argument>, <argument><expr><name>AV_LOG_TRACE</name></expr></argument>, <argument><expr><literal type="string">"mp4a config channels %d obj %d ext obj %d "</literal>

<literal type="string">"sample rate %d ext sample rate %d\n"</literal></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>channels</name></name></expr></argument>,

<argument><expr><name><name>cfg</name><operator>.</operator><name>object_type</name></name></expr></argument>, <argument><expr><name><name>cfg</name><operator>.</operator><name>ext_object_type</name></name></expr></argument>,

<argument><expr><name><name>cfg</name><operator>.</operator><name>sample_rate</name></name></expr></argument>, <argument><expr><name><name>cfg</name><operator>.</operator><name>ext_sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>codec_id</name></name> <operator>=</operator> <call><name>ff_codec_get_id</name><argument_list>(<argument><expr><name>mp4_audio_types</name></expr></argument>,

<argument><expr><name><name>cfg</name><operator>.</operator><name>object_type</name></name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>codec_id</name></name> <operator>=</operator> <name>AV_CODEC_ID_AAC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<typedef>typedef <type><struct>struct <name>MovChannelLayout</name> <block>{

<decl_stmt><decl><type><name>int64_t</name></type> <name>channel_layout</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>layout_tag</name></decl>;</decl_stmt>

}</block></struct></type> <name>MovChannelLayout</name>;</typedef>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>MovChannelLayout</name></type> <name><name>mov_channel_layout</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>AV_CH_LAYOUT_MONO</name></expr>, <expr><operator>(</operator><literal type="number">100</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">1</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_STEREO</name></expr>, <expr><operator>(</operator><literal type="number">101</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">2</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_STEREO</name></expr>, <expr><operator>(</operator><literal type="number">102</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">2</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_2_1</name></expr>, <expr><operator>(</operator><literal type="number">131</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">3</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_QUAD</name></expr>, <expr><operator>(</operator><literal type="number">132</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">4</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_2_2</name></expr>, <expr><operator>(</operator><literal type="number">132</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">4</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_QUAD</name></expr>, <expr><operator>(</operator><literal type="number">108</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">4</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_SURROUND</name></expr>, <expr><operator>(</operator><literal type="number">113</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">3</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_4POINT0</name></expr>, <expr><operator>(</operator><literal type="number">115</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">4</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_5POINT0_BACK</name></expr>, <expr><operator>(</operator><literal type="number">117</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">5</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_5POINT0</name></expr>, <expr><operator>(</operator><literal type="number">117</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">5</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_5POINT1_BACK</name></expr>, <expr><operator>(</operator><literal type="number">121</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">6</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_5POINT1</name></expr>, <expr><operator>(</operator><literal type="number">121</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">6</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_7POINT1</name></expr>, <expr><operator>(</operator><literal type="number">128</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">8</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_7POINT1_WIDE</name></expr>, <expr><operator>(</operator><literal type="number">126</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">8</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_5POINT1_BACK</name><operator>|</operator><name>AV_CH_LAYOUT_STEREO_DOWNMIX</name></expr>, <expr><operator>(</operator><literal type="number">130</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">8</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_STEREO</name><operator>|</operator><name>AV_CH_LOW_FREQUENCY</name></expr>, <expr><operator>(</operator><literal type="number">133</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">3</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_2_1</name><operator>|</operator><name>AV_CH_LOW_FREQUENCY</name></expr>, <expr><operator>(</operator><literal type="number">134</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">4</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_QUAD</name><operator>|</operator><name>AV_CH_LOW_FREQUENCY</name></expr>, <expr><operator>(</operator><literal type="number">135</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">4</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_2_2</name><operator>|</operator><name>AV_CH_LOW_FREQUENCY</name></expr>, <expr><operator>(</operator><literal type="number">135</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">4</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_SURROUND</name><operator>|</operator><name>AV_CH_LOW_FREQUENCY</name></expr>, <expr><operator>(</operator><literal type="number">136</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">4</literal></expr>}</block></expr>, 

<expr><block>{ <expr><name>AV_CH_LAYOUT_4POINT0</name><operator>|</operator><name>AV_CH_LOW_FREQUENCY</name></expr>, <expr><operator>(</operator><literal type="number">137</literal><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>|</operator> <literal type="number">5</literal></expr>}</block></expr>, 

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

int ff_mov_read_chan(AVFormatContext *s, AVStream *st, int64_t size)

{

AVCodecContext *codec= st-&gt;codec;

uint32_t layout_tag;

AVIOContext *pb = s-&gt;pb;

const MovChannelLayout *layouts = mov_channel_layout;

if (size &lt; 12)

return AVERROR_INVALIDDATA;

layout_tag = avio_rb32(pb);

size -= 4;

if (layout_tag == 0) { 

av_log_ask_for_sample(s, "Unimplemented container channel layout.\n");

avio_skip(pb, size);

return 0;

}

if (layout_tag == 0x10000) { 

codec-&gt;channel_layout = avio_rb32(pb);

size -= 4;

avio_skip(pb, size);

return 0;

}

while (layouts-&gt;channel_layout) {

if (layout_tag == layouts-&gt;layout_tag) {

codec-&gt;channel_layout = layouts-&gt;channel_layout;

break;

}

layouts++;

}

if (!codec-&gt;channel_layout)

av_log(s, AV_LOG_WARNING, "Unknown container channel layout.\n");

avio_skip(pb, size);

return 0;

}

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><name>void</name></type> <name>ff_mov_write_chan</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>channel_layout</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>MovChannelLayout</name> <modifier>*</modifier></type><name>layouts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>layout_tag</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>layouts</name> <operator>=</operator> <name>mov_channel_layout</name></expr>;</init> <condition><expr><name><name>layouts</name><operator>-&gt;</operator><name>channel_layout</name></name></expr>;</condition> <incr><expr><name>layouts</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<if_stmt><if>if <condition>(<expr><name>channel_layout</name> <operator>==</operator> <name><name>layouts</name><operator>-&gt;</operator><name>channel_layout</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>layout_tag</name> <operator>=</operator> <name><name>layouts</name><operator>-&gt;</operator><name>layout_tag</name></name></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block></if></if_stmt></block_content></block></for>

<if_stmt><if>if <condition>(<expr><name>layout_tag</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>avio_wb32</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><name>layout_tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>avio_wb32</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>avio_wb32</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><literal type="number">0x10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>avio_wb32</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><name>channel_layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>avio_wb32</name><argument_list>(<argument><expr><name>pb</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name><name>struct</name> <name>AVCodecTag</name></name> <modifier>*</modifier></type><name>avformat_get_mov_video_tags</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name>ff_codec_movvideo_tags</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>const</specifier> <name><name>struct</name> <name>AVCodecTag</name></name> <modifier>*</modifier></type><name>avformat_get_mov_audio_tags</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name>ff_codec_movaudio_tags</name></expr>;</return>

</block_content>}</block></function>

</unit>
