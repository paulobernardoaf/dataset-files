<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavformat\options_table.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OFFSET</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>offsetof(AVFormatContext,x)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFAULT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>E</name></cpp:macro> <cpp:value>AV_OPT_FLAG_ENCODING_PARAM</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D</name></cpp:macro> <cpp:value>AV_OPT_FLAG_DECODING_PARAM</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVOption</name></type> <name><name>avformat_options</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{<expr><literal type="string">"avioflags"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>avio_flags</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"avioflags"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"direct"</literal></expr>, <expr><literal type="string">"reduce buffering"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVIO_FLAG_DIRECT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"avioflags"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"probesize"</literal></expr>, <expr><literal type="string">"set probing size"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>probesize</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">5000000</literal></expr> }</block></expr>, <expr><literal type="number">32</literal></expr>, <expr><name>INT64_MAX</name></expr>, <expr><name>D</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"formatprobesize"</literal></expr>, <expr><literal type="string">"number of bytes to probe file format"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>format_probesize</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PROBE_BUF_MAX</name></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>D</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"packetsize"</literal></expr>, <expr><literal type="string">"set packet size"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>packet_size</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>E</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"fflags"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_AUTO_BSF</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"fflags"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"flush_packets"</literal></expr>, <expr><literal type="string">"reduce the latency by flushing out packets immediately"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_FLUSH_PACKETS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>E</name></expr>, <expr><literal type="string">"fflags"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"ignidx"</literal></expr>, <expr><literal type="string">"ignore index"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_IGNIDX</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"fflags"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"genpts"</literal></expr>, <expr><literal type="string">"generate pts"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_GENPTS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"fflags"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"nofillin"</literal></expr>, <expr><literal type="string">"do not fill in missing values that can be exactly calculated"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_NOFILLIN</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"fflags"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"noparse"</literal></expr>, <expr><literal type="string">"disable AVParsers, this needs nofillin too"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_NOPARSE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"fflags"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"igndts"</literal></expr>, <expr><literal type="string">"ignore dts"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_IGNDTS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"fflags"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"discardcorrupt"</literal></expr>, <expr><literal type="string">"discard corrupted frames"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_DISCARD_CORRUPT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"fflags"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"sortdts"</literal></expr>, <expr><literal type="string">"try to interleave outputted packets by dts"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_SORT_DTS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"fflags"</literal></expr>}</block></expr>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_LAVF_KEEPSIDE_FLAG</name></expr></cpp:if>

<expr><block>{<expr><literal type="string">"keepside"</literal></expr>, <expr><literal type="string">"deprecated, does nothing"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_KEEP_SIDE_DATA</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"fflags"</literal></expr>}</block></expr>,

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><block>{<expr><literal type="string">"fastseek"</literal></expr>, <expr><literal type="string">"fast but inaccurate seeks"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_FAST_SEEK</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"fflags"</literal></expr>}</block></expr>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_LAVF_MP4A_LATM</name></expr></cpp:if>

<expr><block>{<expr><literal type="string">"latm"</literal></expr>, <expr><literal type="string">"deprecated, does nothing"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_MP4A_LATM</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>E</name></expr>, <expr><literal type="string">"fflags"</literal></expr>}</block></expr>,

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><block>{<expr><literal type="string">"nobuffer"</literal></expr>, <expr><literal type="string">"reduce the latency introduced by optional buffering"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_NOBUFFER</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"fflags"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"bitexact"</literal></expr>, <expr><literal type="string">"do not write random/volatile data"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_BITEXACT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>E</name></expr>, <expr><literal type="string">"fflags"</literal></expr> }</block></expr>,

<expr><block>{<expr><literal type="string">"shortest"</literal></expr>, <expr><literal type="string">"stop muxing with the shortest stream"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_SHORTEST</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>E</name></expr>, <expr><literal type="string">"fflags"</literal></expr> }</block></expr>,

<expr><block>{<expr><literal type="string">"autobsf"</literal></expr>, <expr><literal type="string">"add needed bsfs automatically"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_FLAG_AUTO_BSF</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>E</name></expr>, <expr><literal type="string">"fflags"</literal></expr> }</block></expr>,

<expr><block>{<expr><literal type="string">"seek2any"</literal></expr>, <expr><literal type="string">"allow seeking to non-keyframes on demuxer level when supported"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>seek2any</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>D</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"analyzeduration"</literal></expr>, <expr><literal type="string">"specify how many microseconds are analyzed to probe the input"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_analyze_duration</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT64_MAX</name></expr>, <expr><name>D</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"cryptokey"</literal></expr>, <expr><literal type="string">"decryption key"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BINARY</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>D</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"indexmem"</literal></expr>, <expr><literal type="string">"max memory used for timestamp index (per stream)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_index_size</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal><operator>&lt;&lt;</operator><literal type="number">20</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"rtbufsize"</literal></expr>, <expr><literal type="string">"max memory used for buffering real-time frames"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_picture_buffer</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">3041280</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>}</block></expr>, 

<expr><block>{<expr><literal type="string">"fdebug"</literal></expr>, <expr><literal type="string">"print specific debug info"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>debug</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"fdebug"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"ts"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_FDEBUG_TS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"fdebug"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"max_delay"</literal></expr>, <expr><literal type="string">"maximum muxing or demuxing delay in microseconds"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_delay</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>E</name><operator>|</operator><name>D</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"start_time_realtime"</literal></expr>, <expr><literal type="string">"wall-clock time when stream begins (PTS==0)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>start_time_realtime</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_NOPTS_VALUE</name></expr>}</block></expr>, <expr><name>INT64_MIN</name></expr>, <expr><name>INT64_MAX</name></expr>, <expr><name>E</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"fpsprobesize"</literal></expr>, <expr><literal type="string">"number of frames used to probe fps"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>fps_probe_size</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>}</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>D</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"audio_preload"</literal></expr>, <expr><literal type="string">"microseconds by which audio packets should be interleaved earlier"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>audio_preload</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>E</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"chunk_duration"</literal></expr>, <expr><literal type="string">"microseconds for each chunk"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_chunk_duration</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>E</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"chunk_size"</literal></expr>, <expr><literal type="string">"size in bytes for each chunk"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_chunk_size</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>E</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"f_err_detect"</literal></expr>, <expr><literal type="string">"set error detection flags (deprecated; use err_detect, save via avconv)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>error_recognition</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_CRCCHECK</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"err_detect"</literal></expr>, <expr><literal type="string">"set error detection flags"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>error_recognition</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_CRCCHECK</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"crccheck"</literal></expr>, <expr><literal type="string">"verify embedded CRCs"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_CRCCHECK</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"bitstream"</literal></expr>, <expr><literal type="string">"detect bitstream specification deviations"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_BITSTREAM</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"buffer"</literal></expr>, <expr><literal type="string">"detect improper bitstream length"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_BUFFER</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"explode"</literal></expr>, <expr><literal type="string">"abort decoding on minor error detection"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_EXPLODE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"ignore_err"</literal></expr>, <expr><literal type="string">"ignore errors"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_IGNORE_ERR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"careful"</literal></expr>, <expr><literal type="string">"consider things that violate the spec, are fast to check and have not been seen in the wild as errors"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_CAREFUL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"compliant"</literal></expr>, <expr><literal type="string">"consider all spec non compliancies as errors"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_COMPLIANT</name> <operator>|</operator> <name>AV_EF_CAREFUL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"aggressive"</literal></expr>, <expr><literal type="string">"consider things that a sane encoder shouldn't do as an error"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_AGGRESSIVE</name> <operator>|</operator> <name>AV_EF_COMPLIANT</name> <operator>|</operator> <name>AV_EF_CAREFUL</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"use_wallclock_as_timestamps"</literal></expr>, <expr><literal type="string">"use wallclock as timestamps"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>use_wallclock_as_timestamps</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>D</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"skip_initial_bytes"</literal></expr>, <expr><literal type="string">"set number of bytes to skip before reading header and frames"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>skip_initial_bytes</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT64_MAX</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>D</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"correct_ts_overflow"</literal></expr>, <expr><literal type="string">"correct single timestamp overflows"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>correct_ts_overflow</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>D</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"flush_packets"</literal></expr>, <expr><literal type="string">"enable flushing of the I/O context after each packet"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>flush_packets</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>}</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>E</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"metadata_header_padding"</literal></expr>, <expr><literal type="string">"set number of bytes to be written as padding in a metadata header"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>metadata_header_padding</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>}</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>E</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"output_ts_offset"</literal></expr>, <expr><literal type="string">"set output timestamp offset"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>output_ts_offset</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_DURATION</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><operator>-</operator><name>INT64_MAX</name></expr>, <expr><name>INT64_MAX</name></expr>, <expr><name>E</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"max_interleave_delta"</literal></expr>, <expr><literal type="string">"maximum buffering duration for interleaving"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_interleave_delta</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">10000000</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT64_MAX</name></expr>, <expr><name>E</name></expr> }</block></expr>,

<expr><block>{<expr><literal type="string">"f_strict"</literal></expr>, <expr><literal type="string">"how strictly to follow the standards (deprecated; use strict, save via avconv)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>strict_std_compliance</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"strict"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"strict"</literal></expr>, <expr><literal type="string">"how strictly to follow the standards"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>strict_std_compliance</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"strict"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"very"</literal></expr>, <expr><literal type="string">"strictly conform to a older more strict version of the spec or reference software"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_COMPLIANCE_VERY_STRICT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"strict"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"strict"</literal></expr>, <expr><literal type="string">"strictly conform to all the things in the spec no matter what the consequences"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_COMPLIANCE_STRICT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"strict"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"normal"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_COMPLIANCE_NORMAL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"strict"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"unofficial"</literal></expr>, <expr><literal type="string">"allow unofficial extensions"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_COMPLIANCE_UNOFFICIAL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"strict"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"experimental"</literal></expr>, <expr><literal type="string">"allow non-standardized experimental variants"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_COMPLIANCE_EXPERIMENTAL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"strict"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"max_ts_probe"</literal></expr>, <expr><literal type="string">"maximum number of packets to read while waiting for the first timestamp"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_ts_probe</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">50</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr> }</block></expr>,

<expr><block>{<expr><literal type="string">"avoid_negative_ts"</literal></expr>, <expr><literal type="string">"shift timestamps so they start at 0"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>avoid_negative_ts</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>}</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>E</name></expr>, <expr><literal type="string">"avoid_negative_ts"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"auto"</literal></expr>, <expr><literal type="string">"enabled when required by target format"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_AVOID_NEG_TS_AUTO</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>E</name></expr>, <expr><literal type="string">"avoid_negative_ts"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"disabled"</literal></expr>, <expr><literal type="string">"do not change timestamps"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>E</name></expr>, <expr><literal type="string">"avoid_negative_ts"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"make_non_negative"</literal></expr>, <expr><literal type="string">"shift timestamps so they are non negative"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_AVOID_NEG_TS_MAKE_NON_NEGATIVE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>E</name></expr>, <expr><literal type="string">"avoid_negative_ts"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"make_zero"</literal></expr>, <expr><literal type="string">"shift timestamps so they start at 0"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVFMT_AVOID_NEG_TS_MAKE_ZERO</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>E</name></expr>, <expr><literal type="string">"avoid_negative_ts"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"dump_separator"</literal></expr>, <expr><literal type="string">"set information dump field separator"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dump_separator</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_STRING</name></expr>, <expr><block>{<expr><operator>.</operator><name>str</name> <operator>=</operator> <literal type="string">", "</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>D</name><operator>|</operator><name>E</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"codec_whitelist"</literal></expr>, <expr><literal type="string">"List of decoders that are allowed to be used"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>codec_whitelist</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_STRING</name></expr>, <expr><block>{ <expr><operator>.</operator><name>str</name> <operator>=</operator> <name>NULL</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>D</name></expr> }</block></expr>,

<expr><block>{<expr><literal type="string">"format_whitelist"</literal></expr>, <expr><literal type="string">"List of demuxers that are allowed to be used"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>format_whitelist</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_STRING</name></expr>, <expr><block>{ <expr><operator>.</operator><name>str</name> <operator>=</operator> <name>NULL</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>D</name></expr> }</block></expr>,

<expr><block>{<expr><literal type="string">"protocol_whitelist"</literal></expr>, <expr><literal type="string">"List of protocols that are allowed to be used"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>protocol_whitelist</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_STRING</name></expr>, <expr><block>{ <expr><operator>.</operator><name>str</name> <operator>=</operator> <name>NULL</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>D</name></expr> }</block></expr>,

<expr><block>{<expr><literal type="string">"protocol_blacklist"</literal></expr>, <expr><literal type="string">"List of protocols that are not allowed to be used"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>protocol_blacklist</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_STRING</name></expr>, <expr><block>{ <expr><operator>.</operator><name>str</name> <operator>=</operator> <name>NULL</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>D</name></expr> }</block></expr>,

<expr><block>{<expr><literal type="string">"max_streams"</literal></expr>, <expr><literal type="string">"maximum number of streams"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_streams</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1000</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr> }</block></expr>,

<expr><block>{<expr><literal type="string">"skip_estimate_duration_from_pts"</literal></expr>, <expr><literal type="string">"skip duration calculation in estimate_timings_from_pts"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>skip_estimate_duration_from_pts</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>D</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"max_probe_packets"</literal></expr>, <expr><literal type="string">"Maximum number of packets to probe a codec"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_probe_packets</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">2500</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>D</name></expr> }</block></expr>,

<expr><block>{<expr><name>NULL</name></expr>}</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>E</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>D</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>DEFAULT</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>OFFSET</name></cpp:undef>

</unit>
