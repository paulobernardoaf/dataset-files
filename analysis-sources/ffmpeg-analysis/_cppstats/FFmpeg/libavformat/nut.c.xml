<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavformat\nut.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mathematics.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/tree.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"nut.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"riff.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>ff_nut_subtitle_tags</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>AV_CODEC_ID_TEXT</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'U'</literal></argument>, <argument><literal type="char">'T'</literal></argument>, <argument><literal type="char">'F'</literal></argument>, <argument><literal type="char">'8'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DVD_SUBTITLE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'S'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DVB_SUBTITLE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'S'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DVB_TELETEXT</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'T'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>ff_nut_data_tags</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>AV_CODEC_ID_TEXT</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'U'</literal></argument>, <argument><literal type="char">'T'</literal></argument>, <argument><literal type="char">'F'</literal></argument>, <argument><literal type="char">'8'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>ff_nut_video_tags</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>AV_CODEC_ID_GIF</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'I'</literal></argument>, <argument><literal type="char">'F'</literal></argument>, <argument><literal type="number">0</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_XFACE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'X'</literal></argument>, <argument><literal type="char">'F'</literal></argument>, <argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'C'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_VP9</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'9'</literal></argument>, <argument><literal type="char">'0'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_HEVC</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'H'</literal></argument>, <argument><literal type="char">'E'</literal></argument>, <argument><literal type="char">'V'</literal></argument>, <argument><literal type="char">'C'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_CPIA</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'C'</literal></argument>, <argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'i'</literal></argument>, <argument><literal type="char">'A'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="number">15</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="number">15</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">15</literal></argument> , <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">15</literal></argument> , <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument> , <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument> , <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="number">12</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="number">12</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">12</literal></argument> , <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">12</literal></argument> , <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'A'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="number">0</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'A'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="number">0</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>( <argument><literal type="number">0</literal></argument> , <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>( <argument><literal type="number">0</literal></argument> , <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="number">24</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="number">24</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'W'</literal></argument>, <argument><literal type="char">'0'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'0'</literal></argument>, <argument><literal type="char">'W'</literal></argument>, <argument><literal type="char">'1'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="number">4</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="number">4</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="number">48</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="number">48</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">48</literal></argument> , <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">48</literal></argument> , <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'A'</literal></argument>, <argument><literal type="number">64</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'A'</literal></argument>, <argument><literal type="number">64</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">64</literal></argument> , <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'A'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">64</literal></argument> , <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'A'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">11</literal></argument> , <argument><literal type="number">9</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>( <argument><literal type="number">9</literal></argument> , <argument><literal type="number">11</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">10</literal></argument> , <argument><literal type="number">9</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>( <argument><literal type="number">9</literal></argument> , <argument><literal type="number">10</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">0</literal></argument> , <argument><literal type="number">9</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>( <argument><literal type="number">9</literal></argument> , <argument><literal type="number">0</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">11</literal></argument> , <argument><literal type="number">10</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">10</literal></argument> , <argument><literal type="number">11</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">10</literal></argument> , <argument><literal type="number">10</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">10</literal></argument> , <argument><literal type="number">10</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">0</literal></argument> , <argument><literal type="number">10</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">10</literal></argument> , <argument><literal type="number">0</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">11</literal></argument> , <argument><literal type="number">12</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">12</literal></argument> , <argument><literal type="number">11</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">10</literal></argument> , <argument><literal type="number">12</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">12</literal></argument> , <argument><literal type="number">10</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">0</literal></argument> , <argument><literal type="number">12</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">12</literal></argument> , <argument><literal type="number">0</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">11</literal></argument> , <argument><literal type="number">14</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">14</literal></argument> , <argument><literal type="number">11</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">10</literal></argument> , <argument><literal type="number">14</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">14</literal></argument> , <argument><literal type="number">10</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">0</literal></argument> , <argument><literal type="number">14</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">14</literal></argument> , <argument><literal type="number">0</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="number">0</literal></argument> , <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument> , <argument><literal type="number">0</literal></argument> , <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">11</literal></argument> , <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument> , <argument><literal type="number">11</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">10</literal></argument> , <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument> , <argument><literal type="number">10</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">0</literal></argument> , <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument> , <argument><literal type="number">0</literal></argument> , <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">11</literal></argument> , <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">10</literal></argument> , <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">0</literal></argument> , <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'2'</literal></argument>, <argument><literal type="number">0</literal></argument> , <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">9</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">9</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">11</literal></argument>, <argument><literal type="number">9</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">9</literal></argument>, <argument><literal type="number">11</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">9</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">9</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">9</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">9</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">10</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">11</literal></argument>, <argument><literal type="number">10</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">11</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">10</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">10</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">12</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">12</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">12</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">16</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">11</literal></argument>, <argument><literal type="number">16</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument>, <argument><literal type="number">11</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">16</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">14</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">14</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'1'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">8</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">9</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>( <argument><literal type="number">9</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'G'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">10</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'G'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">12</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'G'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">14</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">14</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'G'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">16</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'G'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">8</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">00</literal></argument> , <argument><literal type="number">10</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">10</literal></argument> , <argument><literal type="number">00</literal></argument> , <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'G'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">00</literal></argument> , <argument><literal type="number">12</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">12</literal></argument> , <argument><literal type="number">00</literal></argument> , <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'G'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'4'</literal></argument>, <argument><literal type="number">00</literal></argument> , <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument> , <argument><literal type="number">00</literal></argument> , <argument><literal type="char">'4'</literal></argument>, <argument><literal type="char">'G'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'X'</literal></argument>, <argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'Z'</literal></argument> , <argument><literal type="number">36</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">36</literal></argument> , <argument><literal type="char">'Z'</literal></argument> , <argument><literal type="char">'Y'</literal></argument>, <argument><literal type="char">'X'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'L'</literal></argument>, <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">0xBA</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">0xBA</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument> , <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="number">0xBA</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">0xBA</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">0xBA</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument> , <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="number">0xBA</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">0xBA</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">0xBA</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument>, <argument><literal type="char">'B'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="number">0xBA</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">0xBA</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">0xBA</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument>, <argument><literal type="char">'R'</literal></argument>, <argument><literal type="char">'G'</literal></argument>, <argument><literal type="number">0xBA</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>ff_nut_audio_extra_tags</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>AV_CODEC_ID_COMFORT_NOISE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">'8'</literal></argument>, <argument><literal type="char">'9'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_ALAW</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'L'</literal></argument>, <argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'W'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_MULAW</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'U'</literal></argument>, <argument><literal type="char">'L'</literal></argument>, <argument><literal type="char">'A'</literal></argument>, <argument><literal type="char">'W'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MP3</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'M'</literal></argument>, <argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'3'</literal></argument>, <argument><literal type="char">' '</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_OPUS</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'O'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'u'</literal></argument>, <argument><literal type="char">'s'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_WAVPACK</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'w'</literal></argument>, <argument><literal type="char">'v'</literal></argument>, <argument><literal type="char">'p'</literal></argument>, <argument><literal type="char">'k'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>ff_nut_audio_tags</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_F32BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">32</literal></argument> , <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'F'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_F32LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'F'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="number">32</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_F64BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">64</literal></argument> , <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'F'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_F64LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'F'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="number">64</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S16BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument> , <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S16LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S24BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">24</literal></argument> , <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S24LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="number">24</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S32BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">32</literal></argument> , <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S32LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="number">32</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S64BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">64</literal></argument> , <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S64LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="number">64</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S8</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_U16BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument> , <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'U'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_U16LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'U'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_U24BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">24</literal></argument> , <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'U'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_U24LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'U'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="number">24</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_U32BE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">32</literal></argument> , <argument><literal type="char">'D'</literal></argument>, <argument><literal type="char">'U'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_U32LE</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'U'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="number">32</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_U8</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'U'</literal></argument>, <argument><literal type="char">'D'</literal></argument>, <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S8_PLANAR</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'P'</literal></argument>, <argument><literal type="number">8</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S16BE_PLANAR</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="number">16</literal></argument> , <argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'P'</literal></argument>)</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S16LE_PLANAR</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'P'</literal></argument>, <argument><literal type="number">16</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S24LE_PLANAR</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'P'</literal></argument>, <argument><literal type="number">24</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCM_S32LE_PLANAR</name></expr>, <macro><name>MKTAG</name><argument_list>(<argument><literal type="char">'P'</literal></argument>, <argument><literal type="char">'S'</literal></argument>, <argument><literal type="char">'P'</literal></argument>, <argument><literal type="number">32</literal></argument> )</argument_list></macro> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVCodecTag</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ff_nut_codec_tags</name><index>[]</index></name> <init>= <expr><block>{

<expr><name>ff_nut_video_tags</name></expr>, <expr><name>ff_nut_audio_tags</name></expr>, <expr><name>ff_nut_subtitle_tags</name></expr>,

<expr><name>ff_codec_bmp_tags</name></expr>, <expr><name>ff_codec_wav_tags</name></expr>, <expr><name>ff_nut_audio_extra_tags</name></expr>, <expr><name>ff_nut_data_tags</name></expr>, <expr><literal type="number">0</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>ff_nut_reset_ts</name><parameter_list>(<parameter><decl><type><name>NUTContext</name> <modifier>*</modifier></type><name>nut</name></decl></parameter>, <parameter><decl><type><name>AVRational</name></type> <name>time_base</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>val</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>nut</name><operator>-&gt;</operator><name>avf</name><operator>-&gt;</operator><name>nb_streams</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>nut</name><operator>-&gt;</operator><name>stream</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>last_pts</name> <operator>=</operator>

<call><name>av_rescale_rnd</name><argument_list>(<argument><expr><name>val</name></expr></argument>,

<argument><expr><name><name>time_base</name><operator>.</operator><name>num</name></name> <operator>*</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>nut</name><operator>-&gt;</operator><name>stream</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>time_base</name><operator>-&gt;</operator><name>den</name></name></expr></argument>,

<argument><expr><name><name>time_base</name><operator>.</operator><name>den</name></name> <operator>*</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>nut</name><operator>-&gt;</operator><name>stream</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>time_base</name><operator>-&gt;</operator><name>num</name></name></expr></argument>,

<argument><expr><name>AV_ROUND_DOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>

<function><type><name>int64_t</name></type> <name>ff_lsb2full</name><parameter_list>(<parameter><decl><type><name>StreamContext</name> <modifier>*</modifier></type><name>stream</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>lsb</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int64_t</name></type> <name>mask</name> <init>= <expr><operator>(</operator><literal type="number">1ULL</literal> <operator>&lt;&lt;</operator> <name><name>stream</name><operator>-&gt;</operator><name>msb_pts_shift</name></name><operator>)</operator> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>delta</name> <init>= <expr><name><name>stream</name><operator>-&gt;</operator><name>last_pts</name></name> <operator>-</operator> <name>mask</name> <operator>/</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>

<return>return <expr><operator>(</operator><operator>(</operator><name>lsb</name> <operator>-</operator> <name>delta</name><operator>)</operator> <operator>&amp;</operator> <name>mask</name><operator>)</operator> <operator>+</operator> <name>delta</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>ff_nut_sp_pos_cmp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>Syncpoint</name> <modifier>*</modifier></type><name>va</name> <init>= <expr><name>a</name></expr></init></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>vb</name> <init>= <expr><name>b</name></expr></init></decl>;</decl_stmt>

<return>return <expr><operator>(</operator><operator>(</operator><name><name>va</name><operator>-&gt;</operator><name>pos</name></name> <operator>-</operator> <name><name>vb</name><operator>-&gt;</operator><name>pos</name></name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">32</literal><operator>)</operator> <operator>-</operator> <operator>(</operator><operator>(</operator><name><name>vb</name><operator>-&gt;</operator><name>pos</name></name> <operator>-</operator> <name><name>va</name><operator>-&gt;</operator><name>pos</name></name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">32</literal><operator>)</operator></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>ff_nut_sp_pts_cmp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>Syncpoint</name> <modifier>*</modifier></type><name>va</name> <init>= <expr><name>a</name></expr></init></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>vb</name> <init>= <expr><name>b</name></expr></init></decl>;</decl_stmt>

<return>return <expr><operator>(</operator><operator>(</operator><name><name>va</name><operator>-&gt;</operator><name>ts</name></name> <operator>-</operator> <name><name>vb</name><operator>-&gt;</operator><name>ts</name></name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">32</literal><operator>)</operator> <operator>-</operator> <operator>(</operator><operator>(</operator><name><name>vb</name><operator>-&gt;</operator><name>ts</name></name> <operator>-</operator> <name><name>va</name><operator>-&gt;</operator><name>ts</name></name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">32</literal><operator>)</operator></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>ff_nut_add_sp</name><parameter_list>(<parameter><decl><type><name>NUTContext</name> <modifier>*</modifier></type><name>nut</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>pos</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>back_ptr</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>ts</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>Syncpoint</name> <modifier>*</modifier></type><name>sp</name> <init>= <expr><call><name>av_mallocz</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>Syncpoint</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>AVTreeNode</name></name> <modifier>*</modifier></type><name>node</name> <init>= <expr><call><name>av_tree_node_alloc</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>sp</name> <operator>||</operator> <operator>!</operator><name>node</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_freep</name><argument_list>(<argument><expr><operator>&amp;</operator><name>sp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_freep</name><argument_list>(<argument><expr><operator>&amp;</operator><name>node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>nut</name><operator>-&gt;</operator><name>sp_count</name></name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sp</name><operator>-&gt;</operator><name>pos</name></name> <operator>=</operator> <name>pos</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sp</name><operator>-&gt;</operator><name>back_ptr</name></name> <operator>=</operator> <name>back_ptr</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>sp</name><operator>-&gt;</operator><name>ts</name></name> <operator>=</operator> <name>ts</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_tree_insert</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>nut</name><operator>-&gt;</operator><name>syncpoints</name></name></expr></argument>, <argument><expr><name>sp</name></expr></argument>, <argument><expr><name>ff_nut_sp_pos_cmp</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>node</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_free</name><argument_list>(<argument><expr><name>sp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_free</name><argument_list>(<argument><expr><name>node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>enu_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>elem</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>av_free</name><argument_list>(<argument><expr><name>elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_nut_free_sp</name><parameter_list>(<parameter><decl><type><name>NUTContext</name> <modifier>*</modifier></type><name>nut</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>nut</name><operator>-&gt;</operator><name>syncpoints</name></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>av_tree_enumerate</name><argument_list>(<argument><expr><name><name>nut</name><operator>-&gt;</operator><name>syncpoints</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>enu_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_tree_destroy</name><argument_list>(<argument><expr><name><name>nut</name><operator>-&gt;</operator><name>syncpoints</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>const</specifier> <name>Dispositions</name></type> <name><name>ff_nut_dispositions</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="string">"default"</literal></expr>, <expr><name>AV_DISPOSITION_DEFAULT</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"dub"</literal></expr>, <expr><name>AV_DISPOSITION_DUB</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"original"</literal></expr>, <expr><name>AV_DISPOSITION_ORIGINAL</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"comment"</literal></expr>, <expr><name>AV_DISPOSITION_COMMENT</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"lyrics"</literal></expr>, <expr><name>AV_DISPOSITION_LYRICS</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"karaoke"</literal></expr>, <expr><name>AV_DISPOSITION_KARAOKE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVMetadataConv</name></type> <name><name>ff_nut_metadata_conv</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="string">"Author"</literal></expr>, <expr><literal type="string">"artist"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"X-CreationTime"</literal></expr>, <expr><literal type="string">"date"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"CreationTime"</literal></expr>, <expr><literal type="string">"date"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"SourceFilename"</literal></expr>, <expr><literal type="string">"filename"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"X-Language"</literal></expr>, <expr><literal type="string">"language"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"X-Disposition"</literal></expr>, <expr><literal type="string">"disposition"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"X-Replaces"</literal></expr>, <expr><literal type="string">"replaces"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"X-Depends"</literal></expr>, <expr><literal type="string">"depends"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"X-Uses"</literal></expr>, <expr><literal type="string">"uses"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"X-UsesFont"</literal></expr>, <expr><literal type="string">"usesfont"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>

</unit>
