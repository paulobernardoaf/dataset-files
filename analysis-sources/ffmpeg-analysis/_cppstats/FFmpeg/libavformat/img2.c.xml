<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats\FFmpeg\libavformat\img2.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/avstring.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"img2.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>IdStrMap</name></type> <name><name>ff_img_tags</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><name>AV_CODEC_ID_MJPEG</name></expr>, <expr><literal type="string">"jpeg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MJPEG</name></expr>, <expr><literal type="string">"jpg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MJPEG</name></expr>, <expr><literal type="string">"jps"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MJPEG</name></expr>, <expr><literal type="string">"mpo"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_LJPEG</name></expr>, <expr><literal type="string">"ljpg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_JPEGLS</name></expr>, <expr><literal type="string">"jls"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PNG</name></expr>, <expr><literal type="string">"png"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PNG</name></expr>, <expr><literal type="string">"pns"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PNG</name></expr>, <expr><literal type="string">"mng"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PPM</name></expr>, <expr><literal type="string">"ppm"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PPM</name></expr>, <expr><literal type="string">"pnm"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PGM</name></expr>, <expr><literal type="string">"pgm"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PGMYUV</name></expr>, <expr><literal type="string">"pgmyuv"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PBM</name></expr>, <expr><literal type="string">"pbm"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PAM</name></expr>, <expr><literal type="string">"pam"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_ALIAS_PIX</name></expr>, <expr><literal type="string">"pix"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DDS</name></expr>, <expr><literal type="string">"dds"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG1VIDEO</name></expr>, <expr><literal type="string">"mpg1-img"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>, <expr><literal type="string">"mpg2-img"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_MPEG4</name></expr>, <expr><literal type="string">"mpg4-img"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <expr><literal type="string">"y"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>, <expr><literal type="string">"raw"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_BMP</name></expr>, <expr><literal type="string">"bmp"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_TARGA</name></expr>, <expr><literal type="string">"tga"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_TIFF</name></expr>, <expr><literal type="string">"tiff"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_TIFF</name></expr>, <expr><literal type="string">"tif"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_TIFF</name></expr>, <expr><literal type="string">"dng"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SGI</name></expr>, <expr><literal type="string">"sgi"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PTX</name></expr>, <expr><literal type="string">"ptx"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PCX</name></expr>, <expr><literal type="string">"pcx"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_QDRAW</name></expr>, <expr><literal type="string">"pic"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_QDRAW</name></expr>, <expr><literal type="string">"pct"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_QDRAW</name></expr>, <expr><literal type="string">"pict"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SUNRAST</name></expr>, <expr><literal type="string">"sun"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SUNRAST</name></expr>, <expr><literal type="string">"ras"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SUNRAST</name></expr>, <expr><literal type="string">"rs"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SUNRAST</name></expr>, <expr><literal type="string">"im1"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SUNRAST</name></expr>, <expr><literal type="string">"im8"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SUNRAST</name></expr>, <expr><literal type="string">"im24"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SUNRAST</name></expr>, <expr><literal type="string">"im32"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SUNRAST</name></expr>, <expr><literal type="string">"sunras"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SVG</name></expr>, <expr><literal type="string">"svg"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_SVG</name></expr>, <expr><literal type="string">"svgz"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_JPEG2000</name></expr>, <expr><literal type="string">"j2c"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_JPEG2000</name></expr>, <expr><literal type="string">"jp2"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_JPEG2000</name></expr>, <expr><literal type="string">"jpc"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_JPEG2000</name></expr>, <expr><literal type="string">"j2k"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_DPX</name></expr>, <expr><literal type="string">"dpx"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_EXR</name></expr>, <expr><literal type="string">"exr"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_PICTOR</name></expr>, <expr><literal type="string">"pic"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_V210X</name></expr>, <expr><literal type="string">"yuv10"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_WEBP</name></expr>, <expr><literal type="string">"webp"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_XBM</name></expr>, <expr><literal type="string">"xbm"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_XPM</name></expr>, <expr><literal type="string">"xpm"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_XFACE</name></expr>, <expr><literal type="string">"xface"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_XWD</name></expr>, <expr><literal type="string">"xwd"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>AV_CODEC_ID_NONE</name></expr>, <expr><name>NULL</name></expr> }</block></expr>

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name><name>enum</name> <name>AVCodecID</name></name></type> <name>str2id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>IdStrMap</name> <modifier>*</modifier></type><name>tags</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name>str</name> <operator>=</operator> <call><name>strrchr</name><argument_list>(<argument><expr><name>str</name></expr></argument>, <argument><expr><literal type="char">'.'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>str</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>AV_CODEC_ID_NONE</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>str</name><operator>++</operator></expr>;</expr_stmt>

<while>while <condition>(<expr><name><name>tags</name><operator>-&gt;</operator><name>id</name></name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>av_strcasecmp</name><argument_list>(<argument><expr><name>str</name></expr></argument>, <argument><expr><name><name>tags</name><operator>-&gt;</operator><name>str</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name><name>tags</name><operator>-&gt;</operator><name>id</name></name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>tags</name><operator>++</operator></expr>;</expr_stmt>

</block_content>}</block></while>

<return>return <expr><name>AV_CODEC_ID_NONE</name></expr>;</return>

</block_content>}</block></function>

<function><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>ff_guess_image2_codec</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>str2id</name><argument_list>(<argument><expr><name>ff_img_tags</name></expr></argument>, <argument><expr><name>filename</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

</unit>
