<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavresample\resample.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVRESAMPLE_RESAMPLE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVRESAMPLE_RESAMPLE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avresample.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"audio_data.h"</cpp:file></cpp:include>

<struct>struct <name>ResampleContext</name> <block>{
<decl_stmt><decl><type><name>AVAudioResampleContext</name> <modifier>*</modifier></type><name>avr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>filter_bank</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>filter_length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ideal_dst_incr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dst_incr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>frac</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>src_incr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>compensation_distance</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>phase_shift</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>phase_mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>linear</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVResampleFilterType</name></name></type> <name>filter_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>kaiser_beta</name></decl>;</decl_stmt>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>set_filter</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>tab</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>phase</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>tap_count</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>resample_one</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ResampleContext</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst0</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>dst_index</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src0</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>frac</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>resample_nearest</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst0</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dst_index</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src0</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>index</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>int</name></type> <name>padding_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>initial_padding_filled</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>initial_padding_samples</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>final_padding_filled</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>final_padding_samples</name></decl>;</decl_stmt>
}</block>;</struct>










<function_decl><type><name>ResampleContext</name> <modifier>*</modifier></type><name>ff_audio_resample_init</name><parameter_list>(<parameter><decl><type><name>AVAudioResampleContext</name> <modifier>*</modifier></type><name>avr</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>ff_audio_resample_free</name><parameter_list>(<parameter><decl><type><name>ResampleContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>




















<function_decl><type><name>int</name></type> <name>ff_audio_resample</name><parameter_list>(<parameter><decl><type><name>ResampleContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
