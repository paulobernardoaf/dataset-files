<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavresample\audio_data.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVRESAMPLE_AUDIO_DATA_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVRESAMPLE_AUDIO_DATA_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/audio_fifo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/log.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/samplefmt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avresample.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<function_decl><type><name>int</name></type> <name>ff_sample_fmt_is_planar</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>channels</name></decl></parameter>)</parameter_list>;</function_decl>




<struct>struct <name>AudioData</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><name>AVRESAMPLE_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>buffer</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>buffer_size</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>allocated_samples</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>nb_samples</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>channels</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>allocated_channels</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>is_planar</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>planes</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>sample_size</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>stride</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>read_only</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>allow_realloc</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>ptr_align</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>samples_align</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 
}</block>;</struct>

<function_decl><type><name>int</name></type> <name>ff_audio_data_set_channels</name><parameter_list>(<parameter><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>channels</name></decl></parameter>)</parameter_list>;</function_decl>




















<function_decl><type><name>int</name></type> <name>ff_audio_data_init</name><parameter_list>(<parameter><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier> <specifier>const</specifier> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>plane_size</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>channels</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>read_only</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>AudioData</name> <modifier>*</modifier></type><name>ff_audio_data_alloc</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>channels</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>ff_audio_data_realloc</name><parameter_list>(<parameter><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>ff_audio_data_free</name><parameter_list>(<parameter><decl><type><name>AudioData</name> <modifier>*</modifier><modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>ff_audio_data_copy</name><parameter_list>(<parameter><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>ChannelMapInfo</name> <modifier>*</modifier></type><name>map</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>int</name></type> <name>ff_audio_data_combine</name><parameter_list>(<parameter><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dst_offset</name></decl></parameter>, <parameter><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>src_offset</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>ff_audio_data_drain</name><parameter_list>(<parameter><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>int</name></type> <name>ff_audio_data_add_to_fifo</name><parameter_list>(<parameter><decl><type><name>AVAudioFifo</name> <modifier>*</modifier></type><name>af</name></decl></parameter>, <parameter><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>offset</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>ff_audio_data_read_from_fifo</name><parameter_list>(<parameter><decl><type><name>AVAudioFifo</name> <modifier>*</modifier></type><name>af</name></decl></parameter>, <parameter><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
