<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavresample\x86\audio_mix_init.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/cpu.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/cpu.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavresample/audio_mix.h"</cpp:file></cpp:include>

<function_decl><type><name>void</name></type> <name>ff_mix_2_to_1_fltp_flt_sse</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>matrix</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>out_ch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>in_ch</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_mix_2_to_1_fltp_flt_avx</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>matrix</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>out_ch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>in_ch</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_mix_2_to_1_s16p_flt_sse2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>matrix</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>out_ch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>in_ch</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_mix_2_to_1_s16p_flt_sse4</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>matrix</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>out_ch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>in_ch</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_mix_2_to_1_s16p_q8_sse2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>matrix</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>out_ch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>in_ch</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_mix_1_to_2_fltp_flt_sse</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>matrix</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>out_ch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>in_ch</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_mix_1_to_2_fltp_flt_avx</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>matrix</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>out_ch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>in_ch</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_mix_1_to_2_s16p_flt_sse2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>matrix</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>out_ch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>in_ch</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_mix_1_to_2_s16p_flt_sse4</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>matrix</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>out_ch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>in_ch</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_mix_1_to_2_s16p_flt_avx</name> <parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>matrix</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>out_ch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>in_ch</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFINE_MIX_3_8_TO_1_2</name><parameter_list>(<parameter><type><name>chan</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_mix_ ##chan ##_to_1_fltp_flt_sse(float **src, float **matrix, int len, int out_ch, int in_ch); void ff_mix_ ##chan ##_to_2_fltp_flt_sse(float **src, float **matrix, int len, int out_ch, int in_ch); void ff_mix_ ##chan ##_to_1_s16p_flt_sse2(int16_t **src, float **matrix, int len, int out_ch, int in_ch); void ff_mix_ ##chan ##_to_2_s16p_flt_sse2(int16_t **src, float **matrix, int len, int out_ch, int in_ch); void ff_mix_ ##chan ##_to_1_s16p_flt_sse4(int16_t **src, float **matrix, int len, int out_ch, int in_ch); void ff_mix_ ##chan ##_to_2_s16p_flt_sse4(int16_t **src, float **matrix, int len, int out_ch, int in_ch); void ff_mix_ ##chan ##_to_1_fltp_flt_avx(float **src, float **matrix, int len, int out_ch, int in_ch); void ff_mix_ ##chan ##_to_2_fltp_flt_avx(float **src, float **matrix, int len, int out_ch, int in_ch); void ff_mix_ ##chan ##_to_1_s16p_flt_avx(int16_t **src, float **matrix, int len, int out_ch, int in_ch); void ff_mix_ ##chan ##_to_2_s16p_flt_avx(int16_t **src, float **matrix, int len, int out_ch, int in_ch); void ff_mix_ ##chan ##_to_1_fltp_flt_fma4(float **src, float **matrix, int len, int out_ch, int in_ch); void ff_mix_ ##chan ##_to_2_fltp_flt_fma4(float **src, float **matrix, int len, int out_ch, int in_ch); void ff_mix_ ##chan ##_to_1_s16p_flt_fma4(int16_t **src, float **matrix, int len, int out_ch, int in_ch); void ff_mix_ ##chan ##_to_2_s16p_flt_fma4(int16_t **src, float **matrix, int len, int out_ch, int in_ch);</cpp:value></cpp:define>

















































<macro><name>DEFINE_MIX_3_8_TO_1_2</name><argument_list>(<argument><literal type="number">3</literal></argument>)</argument_list></macro>
<macro><name>DEFINE_MIX_3_8_TO_1_2</name><argument_list>(<argument><literal type="number">4</literal></argument>)</argument_list></macro>
<macro><name>DEFINE_MIX_3_8_TO_1_2</name><argument_list>(<argument><literal type="number">5</literal></argument>)</argument_list></macro>
<macro><name>DEFINE_MIX_3_8_TO_1_2</name><argument_list>(<argument><literal type="number">6</literal></argument>)</argument_list></macro>
<macro><name>DEFINE_MIX_3_8_TO_1_2</name><argument_list>(<argument><literal type="number">7</literal></argument>)</argument_list></macro>
<macro><name>DEFINE_MIX_3_8_TO_1_2</name><argument_list>(<argument><literal type="number">8</literal></argument>)</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SET_MIX_3_8_TO_1_2</name><parameter_list>(<parameter><type><name>chan</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>if (EXTERNAL_SSE(cpu_flags)) { ff_audio_mix_set_func(am, AV_SAMPLE_FMT_FLTP, AV_MIX_COEFF_TYPE_FLT,chan, 1, 16, 4, "SSE", ff_mix_ ##chan ##_to_1_fltp_flt_sse); ff_audio_mix_set_func(am, AV_SAMPLE_FMT_FLTP, AV_MIX_COEFF_TYPE_FLT,chan, 2, 16, 4, "SSE", ff_mix_##chan ##_to_2_fltp_flt_sse); } if (EXTERNAL_SSE2(cpu_flags)) { ff_audio_mix_set_func(am, AV_SAMPLE_FMT_S16P, AV_MIX_COEFF_TYPE_FLT,chan, 1, 16, 8, "SSE2", ff_mix_ ##chan ##_to_1_s16p_flt_sse2); ff_audio_mix_set_func(am, AV_SAMPLE_FMT_S16P, AV_MIX_COEFF_TYPE_FLT,chan, 2, 16, 8, "SSE2", ff_mix_ ##chan ##_to_2_s16p_flt_sse2); } if (EXTERNAL_SSE4(cpu_flags)) { ff_audio_mix_set_func(am, AV_SAMPLE_FMT_S16P, AV_MIX_COEFF_TYPE_FLT,chan, 1, 16, 8, "SSE4", ff_mix_ ##chan ##_to_1_s16p_flt_sse4); ff_audio_mix_set_func(am, AV_SAMPLE_FMT_S16P, AV_MIX_COEFF_TYPE_FLT,chan, 2, 16, 8, "SSE4", ff_mix_ ##chan ##_to_2_s16p_flt_sse4); } if (EXTERNAL_AVX(cpu_flags)) { int ptr_align = 32; int smp_align = 8; if (ARCH_X86_32 || chan &gt;= 6) { ptr_align = 16; smp_align = 4; } ff_audio_mix_set_func(am, AV_SAMPLE_FMT_FLTP, AV_MIX_COEFF_TYPE_FLT,chan, 1, ptr_align, smp_align, "AVX", ff_mix_ ##chan ##_to_1_fltp_flt_avx); ff_audio_mix_set_func(am, AV_SAMPLE_FMT_FLTP, AV_MIX_COEFF_TYPE_FLT,chan, 2, ptr_align, smp_align, "AVX", ff_mix_ ##chan ##_to_2_fltp_flt_avx); ff_audio_mix_set_func(am, AV_SAMPLE_FMT_S16P, AV_MIX_COEFF_TYPE_FLT,chan, 1, 16, 8, "AVX", ff_mix_ ##chan ##_to_1_s16p_flt_avx); ff_audio_mix_set_func(am, AV_SAMPLE_FMT_S16P, AV_MIX_COEFF_TYPE_FLT,chan, 2, 16, 8, "AVX", ff_mix_ ##chan ##_to_2_s16p_flt_avx); } if (EXTERNAL_FMA4(cpu_flags)) { int ptr_align = 32; int smp_align = 8; if (ARCH_X86_32 || chan &gt;= 6) { ptr_align = 16; smp_align = 4; } ff_audio_mix_set_func(am, AV_SAMPLE_FMT_FLTP, AV_MIX_COEFF_TYPE_FLT,chan, 1, ptr_align, smp_align, "FMA4", ff_mix_ ##chan ##_to_1_fltp_flt_fma4); ff_audio_mix_set_func(am, AV_SAMPLE_FMT_FLTP, AV_MIX_COEFF_TYPE_FLT,chan, 2, ptr_align, smp_align, "FMA4", ff_mix_ ##chan ##_to_2_fltp_flt_fma4); ff_audio_mix_set_func(am, AV_SAMPLE_FMT_S16P, AV_MIX_COEFF_TYPE_FLT,chan, 1, 16, 8, "FMA4", ff_mix_ ##chan ##_to_1_s16p_flt_fma4); ff_audio_mix_set_func(am, AV_SAMPLE_FMT_S16P, AV_MIX_COEFF_TYPE_FLT,chan, 2, 16, 8, "FMA4", ff_mix_ ##chan ##_to_2_s16p_flt_fma4); }</cpp:value></cpp:define>

































































<function><type><name>av_cold</name> <name>void</name></type> <name>ff_audio_mix_init_x86</name><parameter_list>(<parameter><decl><type><name>AudioMix</name> <modifier>*</modifier></type><name>am</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>cpu_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ff_audio_mix_set_func</name><argument_list>(<argument><expr><name>am</name></expr></argument>, <argument><expr><name>AV_SAMPLE_FMT_FLTP</name></expr></argument>, <argument><expr><name>AV_MIX_COEFF_TYPE_FLT</name></expr></argument>,
<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"SSE"</literal></expr></argument>, <argument><expr><name>ff_mix_2_to_1_fltp_flt_sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_audio_mix_set_func</name><argument_list>(<argument><expr><name>am</name></expr></argument>, <argument><expr><name>AV_SAMPLE_FMT_FLTP</name></expr></argument>, <argument><expr><name>AV_MIX_COEFF_TYPE_FLT</name></expr></argument>,
<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="string">"SSE"</literal></expr></argument>, <argument><expr><name>ff_mix_1_to_2_fltp_flt_sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ff_audio_mix_set_func</name><argument_list>(<argument><expr><name>am</name></expr></argument>, <argument><expr><name>AV_SAMPLE_FMT_S16P</name></expr></argument>, <argument><expr><name>AV_MIX_COEFF_TYPE_FLT</name></expr></argument>,
<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"SSE2"</literal></expr></argument>, <argument><expr><name>ff_mix_2_to_1_s16p_flt_sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_audio_mix_set_func</name><argument_list>(<argument><expr><name>am</name></expr></argument>, <argument><expr><name>AV_SAMPLE_FMT_S16P</name></expr></argument>, <argument><expr><name>AV_MIX_COEFF_TYPE_Q8</name></expr></argument>,
<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"SSE2"</literal></expr></argument>, <argument><expr><name>ff_mix_2_to_1_s16p_q8_sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_audio_mix_set_func</name><argument_list>(<argument><expr><name>am</name></expr></argument>, <argument><expr><name>AV_SAMPLE_FMT_S16P</name></expr></argument>, <argument><expr><name>AV_MIX_COEFF_TYPE_FLT</name></expr></argument>,
<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"SSE2"</literal></expr></argument>, <argument><expr><name>ff_mix_1_to_2_s16p_flt_sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE4</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ff_audio_mix_set_func</name><argument_list>(<argument><expr><name>am</name></expr></argument>, <argument><expr><name>AV_SAMPLE_FMT_S16P</name></expr></argument>, <argument><expr><name>AV_MIX_COEFF_TYPE_FLT</name></expr></argument>,
<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"SSE4"</literal></expr></argument>, <argument><expr><name>ff_mix_2_to_1_s16p_flt_sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_audio_mix_set_func</name><argument_list>(<argument><expr><name>am</name></expr></argument>, <argument><expr><name>AV_SAMPLE_FMT_S16P</name></expr></argument>, <argument><expr><name>AV_MIX_COEFF_TYPE_FLT</name></expr></argument>,
<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"SSE4"</literal></expr></argument>, <argument><expr><name>ff_mix_1_to_2_s16p_flt_sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX_FAST</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ff_audio_mix_set_func</name><argument_list>(<argument><expr><name>am</name></expr></argument>, <argument><expr><name>AV_SAMPLE_FMT_FLTP</name></expr></argument>, <argument><expr><name>AV_MIX_COEFF_TYPE_FLT</name></expr></argument>,
<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="string">"AVX"</literal></expr></argument>, <argument><expr><name>ff_mix_2_to_1_fltp_flt_avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_audio_mix_set_func</name><argument_list>(<argument><expr><name>am</name></expr></argument>, <argument><expr><name>AV_SAMPLE_FMT_FLTP</name></expr></argument>, <argument><expr><name>AV_MIX_COEFF_TYPE_FLT</name></expr></argument>,
<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"AVX"</literal></expr></argument>, <argument><expr><name>ff_mix_1_to_2_fltp_flt_avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ff_audio_mix_set_func</name><argument_list>(<argument><expr><name>am</name></expr></argument>, <argument><expr><name>AV_SAMPLE_FMT_S16P</name></expr></argument>, <argument><expr><name>AV_MIX_COEFF_TYPE_FLT</name></expr></argument>,
<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"AVX"</literal></expr></argument>, <argument><expr><name>ff_mix_1_to_2_s16p_flt_avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<macro><name>SET_MIX_3_8_TO_1_2</name><argument_list>(<argument><literal type="number">3</literal></argument>)</argument_list></macro>
<macro><name>SET_MIX_3_8_TO_1_2</name><argument_list>(<argument><literal type="number">4</literal></argument>)</argument_list></macro>
<macro><name>SET_MIX_3_8_TO_1_2</name><argument_list>(<argument><literal type="number">5</literal></argument>)</argument_list></macro>
<macro><name>SET_MIX_3_8_TO_1_2</name><argument_list>(<argument><literal type="number">6</literal></argument>)</argument_list></macro>
<macro><name>SET_MIX_3_8_TO_1_2</name><argument_list>(<argument><literal type="number">7</literal></argument>)</argument_list></macro>
<macro><name>SET_MIX_3_8_TO_1_2</name><argument_list>(<argument><literal type="number">8</literal></argument>)</argument_list></macro>
</block_content>}</block></function>
</unit>
