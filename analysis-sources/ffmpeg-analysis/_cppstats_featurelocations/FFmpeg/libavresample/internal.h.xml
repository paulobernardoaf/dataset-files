<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavresample\internal.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVRESAMPLE_INTERNAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVRESAMPLE_INTERNAL_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/audio_fifo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/log.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/samplefmt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avresample.h"</cpp:file></cpp:include>

<typedef>typedef <type><name><name>struct</name> <name>AudioData</name></name></type> <name>AudioData</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>AudioConvert</name></name></type> <name>AudioConvert</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>AudioMix</name></name></type> <name>AudioMix</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>ResampleContext</name></name></type> <name>ResampleContext</name>;</typedef>

<enum>enum <name>RemapPoint</name> <block>{
<decl><name>REMAP_NONE</name></decl>,
<decl><name>REMAP_IN_COPY</name></decl>,
<decl><name>REMAP_IN_CONVERT</name></decl>,
<decl><name>REMAP_OUT_COPY</name></decl>,
<decl><name>REMAP_OUT_CONVERT</name></decl>,
}</block>;</enum>

<typedef>typedef <type><struct>struct <name>ChannelMapInfo</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name><name>channel_map</name><index>[<expr><name>AVRESAMPLE_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>do_remap</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name><name>channel_copy</name><index>[<expr><name>AVRESAMPLE_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>do_copy</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name><name>channel_zero</name><index>[<expr><name>AVRESAMPLE_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>do_zero</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name><name>input_map</name><index>[<expr><name>AVRESAMPLE_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
}</block></struct></type> <name>ChannelMapInfo</name>;</typedef>

<struct>struct <name>AVAudioResampleContext</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>av_class</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint64_t</name></type> <name>in_channel_layout</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>in_sample_fmt</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>in_sample_rate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint64_t</name></type> <name>out_channel_layout</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>out_sample_fmt</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>out_sample_rate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>internal_sample_fmt</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>enum</name> <name>AVMixCoeffType</name></name></type> <name>mix_coeff_type</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>double</name></type> <name>center_mix_level</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>double</name></type> <name>surround_mix_level</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>double</name></type> <name>lfe_mix_level</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>normalize_mix_level</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>force_resampling</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>filter_size</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>phase_shift</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>linear_interp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>double</name></type> <name>cutoff</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>enum</name> <name>AVResampleFilterType</name></name></type> <name>filter_type</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>kaiser_beta</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>enum</name> <name>AVResampleDitherMethod</name></name></type> <name>dither_method</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>in_channels</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>out_channels</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>resample_channels</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>downmix_needed</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>upmix_needed</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>mixing_needed</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>resample_needed</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>in_convert_needed</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>out_convert_needed</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>in_copy_needed</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>in_buffer</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>resample_out_buffer</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AudioData</name> <modifier>*</modifier></type><name>out_buffer</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AVAudioFifo</name> <modifier>*</modifier></type><name>out_fifo</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AudioConvert</name> <modifier>*</modifier></type><name>ac_in</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AudioConvert</name> <modifier>*</modifier></type><name>ac_out</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>ResampleContext</name> <modifier>*</modifier></type><name>resample</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AudioMix</name> <modifier>*</modifier></type><name>am</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>enum</name> <name>AVMatrixEncoding</name></name></type> <name>matrix_encoding</name></decl>;</decl_stmt> 





<decl_stmt><decl><type><name>double</name> <modifier>*</modifier></type><name>mix_matrix</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>use_channel_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>RemapPoint</name></name></type> <name>remap_point</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ChannelMapInfo</name></type> <name>ch_map_info</name></decl>;</decl_stmt>
}</block>;</struct>


<function_decl><type><name>void</name></type> <name>ff_audio_resample_init_aarch64</name><parameter_list>(<parameter><decl><type><name>ResampleContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_audio_resample_init_arm</name><parameter_list>(<parameter><decl><type><name>ResampleContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
