<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavresample\options.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mathematics.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mem.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avresample.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"audio_mix.h"</cpp:file></cpp:include>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OFFSET</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>offsetof(AVAudioResampleContext, x)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PARAM</name></cpp:macro> <cpp:value>AV_OPT_FLAG_AUDIO_PARAM</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVOption</name></type> <name><name>avresample_options</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"in_channel_layout"</literal></expr>, <expr><literal type="string">"Input Channel Layout"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>in_channel_layout</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><name>INT64_MIN</name></expr>, <expr><name>INT64_MAX</name></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"in_sample_fmt"</literal></expr>, <expr><literal type="string">"Input Sample Format"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>in_sample_fmt</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_SAMPLE_FMT_S16</name></expr> }</block></expr>, <expr><name>AV_SAMPLE_FMT_U8</name></expr>, <expr><name>AV_SAMPLE_FMT_NB</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"in_sample_rate"</literal></expr>, <expr><literal type="string">"Input Sample Rate"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>in_sample_rate</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">48000</literal></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"out_channel_layout"</literal></expr>, <expr><literal type="string">"Output Channel Layout"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>out_channel_layout</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><name>INT64_MIN</name></expr>, <expr><name>INT64_MAX</name></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"out_sample_fmt"</literal></expr>, <expr><literal type="string">"Output Sample Format"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>out_sample_fmt</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_SAMPLE_FMT_S16</name></expr> }</block></expr>, <expr><name>AV_SAMPLE_FMT_U8</name></expr>, <expr><name>AV_SAMPLE_FMT_NB</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"out_sample_rate"</literal></expr>, <expr><literal type="string">"Output Sample Rate"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>out_sample_rate</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">48000</literal></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"internal_sample_fmt"</literal></expr>, <expr><literal type="string">"Internal Sample Format"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>internal_sample_fmt</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_SAMPLE_FMT_NONE</name></expr> }</block></expr>, <expr><name>AV_SAMPLE_FMT_NONE</name></expr>, <expr><name>AV_SAMPLE_FMT_NB</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"internal_sample_fmt"</literal></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"u8"</literal></expr> , <expr><literal type="string">"8-bit unsigned integer"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_SAMPLE_FMT_U8</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"internal_sample_fmt"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"s16"</literal></expr>, <expr><literal type="string">"16-bit signed integer"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_SAMPLE_FMT_S16</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"internal_sample_fmt"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"s32"</literal></expr>, <expr><literal type="string">"32-bit signed integer"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_SAMPLE_FMT_S32</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"internal_sample_fmt"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"flt"</literal></expr>, <expr><literal type="string">"32-bit float"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_SAMPLE_FMT_FLT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"internal_sample_fmt"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"dbl"</literal></expr>, <expr><literal type="string">"64-bit double"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_SAMPLE_FMT_DBL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"internal_sample_fmt"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"u8p"</literal></expr> , <expr><literal type="string">"8-bit unsigned integer planar"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_SAMPLE_FMT_U8P</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"internal_sample_fmt"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"s16p"</literal></expr>, <expr><literal type="string">"16-bit signed integer planar"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_SAMPLE_FMT_S16P</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"internal_sample_fmt"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"s32p"</literal></expr>, <expr><literal type="string">"32-bit signed integer planar"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_SAMPLE_FMT_S32P</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"internal_sample_fmt"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"fltp"</literal></expr>, <expr><literal type="string">"32-bit float planar"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_SAMPLE_FMT_FLTP</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"internal_sample_fmt"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"dblp"</literal></expr>, <expr><literal type="string">"64-bit double planar"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_SAMPLE_FMT_DBLP</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"internal_sample_fmt"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"mix_coeff_type"</literal></expr>, <expr><literal type="string">"Mixing Coefficient Type"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>mix_coeff_type</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_MIX_COEFF_TYPE_FLT</name></expr> }</block></expr>, <expr><name>AV_MIX_COEFF_TYPE_Q8</name></expr>, <expr><name>AV_MIX_COEFF_TYPE_NB</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"mix_coeff_type"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"q8"</literal></expr>, <expr><literal type="string">"16-bit 8.8 Fixed-Point"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_MIX_COEFF_TYPE_Q8</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"mix_coeff_type"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"q15"</literal></expr>, <expr><literal type="string">"32-bit 17.15 Fixed-Point"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_MIX_COEFF_TYPE_Q15</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"mix_coeff_type"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"flt"</literal></expr>, <expr><literal type="string">"Floating-Point"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_MIX_COEFF_TYPE_FLT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"mix_coeff_type"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"center_mix_level"</literal></expr>, <expr><literal type="string">"Center Mix Level"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>center_mix_level</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_DOUBLE</name></expr>, <expr><block>{ <expr><operator>.</operator><name>dbl</name> <operator>=</operator> <name>M_SQRT1_2</name></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">32.0</literal></expr>, <expr><literal type="number">32.0</literal></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"surround_mix_level"</literal></expr>, <expr><literal type="string">"Surround Mix Level"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>surround_mix_level</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_DOUBLE</name></expr>, <expr><block>{ <expr><operator>.</operator><name>dbl</name> <operator>=</operator> <name>M_SQRT1_2</name></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">32.0</literal></expr>, <expr><literal type="number">32.0</literal></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"lfe_mix_level"</literal></expr>, <expr><literal type="string">"LFE Mix Level"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>lfe_mix_level</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_DOUBLE</name></expr>, <expr><block>{ <expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0.0</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">32.0</literal></expr>, <expr><literal type="number">32.0</literal></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"normalize_mix_level"</literal></expr>, <expr><literal type="string">"Normalize Mix Level"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>normalize_mix_level</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"force_resampling"</literal></expr>, <expr><literal type="string">"Force Resampling"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>force_resampling</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"filter_size"</literal></expr>, <expr><literal type="string">"Resampling Filter Size"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>filter_size</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">16</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"phase_shift"</literal></expr>, <expr><literal type="string">"Resampling Phase Shift"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>phase_shift</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">10</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"linear_interp"</literal></expr>, <expr><literal type="string">"Use Linear Interpolation"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>linear_interp</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"cutoff"</literal></expr>, <expr><literal type="string">"Cutoff Frequency Ratio"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>cutoff</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_DOUBLE</name></expr>, <expr><block>{ <expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0.8</literal></expr> }</block></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">1.0</literal></expr>, <expr><name>PARAM</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"resample_cutoff"</literal></expr>, <expr><literal type="string">"Cutoff Frequency Ratio"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>cutoff</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_DOUBLE</name></expr>, <expr><block>{ <expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0.8</literal></expr> }</block></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">1.0</literal></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"matrix_encoding"</literal></expr>, <expr><literal type="string">"Matrixed Stereo Encoding"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>matrix_encoding</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_MATRIX_ENCODING_NONE</name></expr>}</block></expr>, <expr><name>AV_MATRIX_ENCODING_NONE</name></expr>, <expr><name>AV_MATRIX_ENCODING_NB</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"matrix_encoding"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"none"</literal></expr>, <expr><literal type="string">"None"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_MATRIX_ENCODING_NONE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"matrix_encoding"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"dolby"</literal></expr>, <expr><literal type="string">"Dolby"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_MATRIX_ENCODING_DOLBY</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"matrix_encoding"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"dplii"</literal></expr>, <expr><literal type="string">"Dolby Pro Logic II"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_MATRIX_ENCODING_DPLII</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"matrix_encoding"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"filter_type"</literal></expr>, <expr><literal type="string">"Filter Type"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>filter_type</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_RESAMPLE_FILTER_TYPE_KAISER</name></expr> }</block></expr>, <expr><name>AV_RESAMPLE_FILTER_TYPE_CUBIC</name></expr>, <expr><name>AV_RESAMPLE_FILTER_TYPE_KAISER</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"filter_type"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"cubic"</literal></expr>, <expr><literal type="string">"Cubic"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_RESAMPLE_FILTER_TYPE_CUBIC</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"filter_type"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"blackman_nuttall"</literal></expr>, <expr><literal type="string">"Blackman Nuttall Windowed Sinc"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_RESAMPLE_FILTER_TYPE_BLACKMAN_NUTTALL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"filter_type"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"kaiser"</literal></expr>, <expr><literal type="string">"Kaiser Windowed Sinc"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_RESAMPLE_FILTER_TYPE_KAISER</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"filter_type"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"kaiser_beta"</literal></expr>, <expr><literal type="string">"Kaiser Window Beta"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>kaiser_beta</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">9</literal></expr> }</block></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"dither_method"</literal></expr>, <expr><literal type="string">"Dither Method"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dither_method</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_RESAMPLE_DITHER_NONE</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_RESAMPLE_DITHER_NB</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"none"</literal></expr>, <expr><literal type="string">"No Dithering"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_RESAMPLE_DITHER_NONE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"rectangular"</literal></expr>, <expr><literal type="string">"Rectangular Dither"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_RESAMPLE_DITHER_RECTANGULAR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"triangular"</literal></expr>, <expr><literal type="string">"Triangular Dither"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_RESAMPLE_DITHER_TRIANGULAR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"triangular_hp"</literal></expr>, <expr><literal type="string">"Triangular Dither With High Pass"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_RESAMPLE_DITHER_TRIANGULAR_HP</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"triangular_ns"</literal></expr>, <expr><literal type="string">"Triangular Dither With Noise Shaping"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_RESAMPLE_DITHER_TRIANGULAR_NS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVClass</name></type> <name>av_resample_context_class</name> <init>= <expr><block>{
<expr><operator>.</operator><name>class_name</name> <operator>=</operator> <literal type="string">"AVAudioResampleContext"</literal></expr>,
<expr><operator>.</operator><name>item_name</name> <operator>=</operator> <name>av_default_item_name</name></expr>,
<expr><operator>.</operator><name>option</name> <operator>=</operator> <name>avresample_options</name></expr>,
<expr><operator>.</operator><name>version</name> <operator>=</operator> <name>LIBAVUTIL_VERSION_INT</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>AVAudioResampleContext</name> <modifier>*</modifier></type><name>avresample_alloc_context</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>AVAudioResampleContext</name> <modifier>*</modifier></type><name>avr</name></decl>;</decl_stmt>

<expr_stmt><expr><name>avr</name> <operator>=</operator> <call><name>av_mallocz</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>avr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>avr</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>avr</name><operator>-&gt;</operator><name>av_class</name></name> <operator>=</operator> <operator>&amp;</operator><name>av_resample_context_class</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>av_opt_set_defaults</name><argument_list>(<argument><expr><name>avr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>avr</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>avresample_get_class</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>&amp;</operator><name>av_resample_context_class</name></expr>;</return>
</block_content>}</block></function>
</unit>
