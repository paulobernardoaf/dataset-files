<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libswscale\swscale.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SWSCALE_SWSCALE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWSCALE_SWSCALE_H</name></cpp:macro></cpp:define>







<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/avutil.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/log.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/pixfmt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"version.h"</cpp:file></cpp:include>









<function_decl><type><name>unsigned</name></type> <name>swscale_version</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>swscale_configuration</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>swscale_license</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_FAST_BILINEAR</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_BILINEAR</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_BICUBIC</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_X</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_POINT</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_AREA</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_BICUBLIN</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_GAUSS</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_SINC</name></cpp:macro> <cpp:value>0x100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_LANCZOS</name></cpp:macro> <cpp:value>0x200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_SPLINE</name></cpp:macro> <cpp:value>0x400</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_SRC_V_CHR_DROP_MASK</name></cpp:macro> <cpp:value>0x30000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_SRC_V_CHR_DROP_SHIFT</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_PARAM_DEFAULT</name></cpp:macro> <cpp:value>123456</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_PRINT_INFO</name></cpp:macro> <cpp:value>0x1000</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_FULL_CHR_H_INT</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_FULL_CHR_H_INP</name></cpp:macro> <cpp:value>0x4000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_DIRECT_BGR</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_ACCURATE_RND</name></cpp:macro> <cpp:value>0x40000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_BITEXACT</name></cpp:macro> <cpp:value>0x80000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_ERROR_DIFFUSION</name></cpp:macro> <cpp:value>0x800000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_MAX_REDUCE_CUTOFF</name></cpp:macro> <cpp:value>0.002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_CS_ITU709</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_CS_FCC</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_CS_ITU601</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_CS_ITU624</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_CS_SMPTE170M</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_CS_SMPTE240M</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_CS_DEFAULT</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SWS_CS_BT2020</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>








<function_decl><type><specifier>const</specifier> <name>int</name> <modifier>*</modifier></type><name>sws_getCoefficients</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>colorspace</name></decl></parameter>)</parameter_list>;</function_decl>



<typedef>typedef <type><struct>struct <name>SwsVector</name> <block>{
<decl_stmt><decl><type><name>double</name> <modifier>*</modifier></type><name>coeff</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>length</name></decl>;</decl_stmt> 
}</block></struct></type> <name>SwsVector</name>;</typedef>


<typedef>typedef <type><struct>struct <name>SwsFilter</name> <block>{
<decl_stmt><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>lumH</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>lumV</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>chrH</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>chrV</name></decl>;</decl_stmt>
}</block></struct></type> <name>SwsFilter</name>;</typedef>

<struct_decl>struct <name>SwsContext</name>;</struct_decl>





<function_decl><type><name>int</name></type> <name>sws_isSupportedInput</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>sws_isSupportedOutput</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>sws_isSupportedEndiannessConversion</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name><name>struct</name> <name>SwsContext</name></name> <modifier>*</modifier></type><name>sws_alloc_context</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>av_warn_unused_result</name>
<name>int</name></type> <name>sws_init_context</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SwsContext</name></name> <modifier>*</modifier></type><name>sws_context</name></decl></parameter>, <parameter><decl><type><name>SwsFilter</name> <modifier>*</modifier></type><name>srcFilter</name></decl></parameter>, <parameter><decl><type><name>SwsFilter</name> <modifier>*</modifier></type><name>dstFilter</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>sws_freeContext</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SwsContext</name></name> <modifier>*</modifier></type><name>swsContext</name></decl></parameter>)</parameter_list>;</function_decl>






















<function_decl><type><name><name>struct</name> <name>SwsContext</name></name> <modifier>*</modifier></type><name>sws_getContext</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>srcW</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>srcH</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>srcFormat</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>dstW</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dstH</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>dstFormat</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>SwsFilter</name> <modifier>*</modifier></type><name>srcFilter</name></decl></parameter>,
<parameter><decl><type><name>SwsFilter</name> <modifier>*</modifier></type><name>dstFilter</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>double</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>



























<function_decl><type><name>int</name></type> <name>sws_scale</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SwsContext</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>srcSlice</name><index>[]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>srcStride</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>srcSliceY</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>srcSliceH</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>dst</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>dstStride</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>int</name></type> <name>sws_setColorspaceDetails</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SwsContext</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>inv_table</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>srcRange</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>table</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dstRange</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>brightness</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>contrast</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>saturation</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>sws_getColorspaceDetails</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SwsContext</name></name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier><modifier>*</modifier></type><name>inv_table</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>srcRange</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier><modifier>*</modifier></type><name>table</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>dstRange</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>brightness</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>contrast</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>saturation</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>sws_allocVec</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>sws_getGaussianVec</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>variance</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>quality</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>sws_scaleVec</name><parameter_list>(<parameter><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>scalar</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>sws_normalizeVec</name><parameter_list>(<parameter><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_SWS_VECTOR</name></expr></cpp:if>
<function_decl><type><name>attribute_deprecated</name> <name>SwsVector</name> <modifier>*</modifier></type><name>sws_getConstVec</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name> <name>SwsVector</name> <modifier>*</modifier></type><name>sws_getIdentityVec</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name> <name>void</name></type> <name>sws_convVec</name><parameter_list>(<parameter><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name> <name>void</name></type> <name>sws_addVec</name><parameter_list>(<parameter><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name> <name>void</name></type> <name>sws_subVec</name><parameter_list>(<parameter><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name> <name>void</name></type> <name>sws_shiftVec</name><parameter_list>(<parameter><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>shift</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name> <name>SwsVector</name> <modifier>*</modifier></type><name>sws_cloneVec</name><parameter_list>(<parameter><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name> <name>void</name></type> <name>sws_printVec2</name><parameter_list>(<parameter><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>AVClass</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>log_level</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>void</name></type> <name>sws_freeVec</name><parameter_list>(<parameter><decl><type><name>SwsVector</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SwsFilter</name> <modifier>*</modifier></type><name>sws_getDefaultFilter</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>lumaGBlur</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>chromaGBlur</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>lumaSharpen</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>chromaSharpen</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>chromaHShift</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>chromaVShift</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>verbose</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>sws_freeFilter</name><parameter_list>(<parameter><decl><type><name>SwsFilter</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name><name>struct</name> <name>SwsContext</name></name> <modifier>*</modifier></type><name>sws_getCachedContext</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>SwsContext</name></name> <modifier>*</modifier></type><name>context</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>srcW</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>srcH</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>srcFormat</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>dstW</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dstH</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>dstFormat</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>SwsFilter</name> <modifier>*</modifier></type><name>srcFilter</name></decl></parameter>,
<parameter><decl><type><name>SwsFilter</name> <modifier>*</modifier></type><name>dstFilter</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>double</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>void</name></type> <name>sws_convertPalette8ToPacked32</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num_pixels</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>palette</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>void</name></type> <name>sws_convertPalette8ToPacked24</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num_pixels</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>palette</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>sws_get_class</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>





<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
