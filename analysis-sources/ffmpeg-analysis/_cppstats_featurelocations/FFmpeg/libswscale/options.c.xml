<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libswscale\options.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/avutil.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/pixfmt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"swscale.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"swscale_internal.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sws_context_to_name</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><literal type="string">"swscaler"</literal></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OFFSET</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>offsetof(SwsContext, x)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFAULT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VE</name></cpp:macro> <cpp:value>AV_OPT_FLAG_VIDEO_PARAM | AV_OPT_FLAG_ENCODING_PARAM</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVOption</name></type> <name><name>swscale_options</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"sws_flags"</literal></expr>, <expr><literal type="string">"scaler flags"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_BICUBIC</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>UINT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"fast_bilinear"</literal></expr>, <expr><literal type="string">"fast bilinear"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_FAST_BILINEAR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"bilinear"</literal></expr>, <expr><literal type="string">"bilinear"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_BILINEAR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"bicubic"</literal></expr>, <expr><literal type="string">"bicubic"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_BICUBIC</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"experimental"</literal></expr>, <expr><literal type="string">"experimental"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_X</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"neighbor"</literal></expr>, <expr><literal type="string">"nearest neighbor"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_POINT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"area"</literal></expr>, <expr><literal type="string">"averaging area"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_AREA</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"bicublin"</literal></expr>, <expr><literal type="string">"luma bicubic, chroma bilinear"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_BICUBLIN</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"gauss"</literal></expr>, <expr><literal type="string">"Gaussian"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_GAUSS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"sinc"</literal></expr>, <expr><literal type="string">"sinc"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_SINC</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"lanczos"</literal></expr>, <expr><literal type="string">"Lanczos"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_LANCZOS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"spline"</literal></expr>, <expr><literal type="string">"natural bicubic spline"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_SPLINE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"print_info"</literal></expr>, <expr><literal type="string">"print info"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_PRINT_INFO</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"accurate_rnd"</literal></expr>, <expr><literal type="string">"accurate rounding"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_ACCURATE_RND</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"full_chroma_int"</literal></expr>, <expr><literal type="string">"full chroma interpolation"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_FULL_CHR_H_INT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"full_chroma_inp"</literal></expr>, <expr><literal type="string">"full chroma input"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_FULL_CHR_H_INP</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"bitexact"</literal></expr>, <expr><literal type="string">""</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_BITEXACT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"error_diffusion"</literal></expr>, <expr><literal type="string">"error diffusion dither"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_ERROR_DIFFUSION</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_flags"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"srcw"</literal></expr>, <expr><literal type="string">"source width"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>srcW</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">16</literal></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"srch"</literal></expr>, <expr><literal type="string">"source height"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>srcH</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">16</literal></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"dstw"</literal></expr>, <expr><literal type="string">"destination width"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dstW</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">16</literal></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"dsth"</literal></expr>, <expr><literal type="string">"destination height"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dstH</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">16</literal></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"src_format"</literal></expr>, <expr><literal type="string">"source format"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>srcFormat</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_PIXEL_FMT</name></expr>,<expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"dst_format"</literal></expr>, <expr><literal type="string">"destination format"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dstFormat</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_PIXEL_FMT</name></expr>,<expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"src_range"</literal></expr>, <expr><literal type="string">"source is full range"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>srcRange</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"dst_range"</literal></expr>, <expr><literal type="string">"destination is full range"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dstRange</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"param0"</literal></expr>, <expr><literal type="string">"scaler param 0"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name><name>param</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_DOUBLE</name></expr>, <expr><block>{ <expr><operator>.</operator><name>dbl</name> <operator>=</operator> <name>SWS_PARAM_DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"param1"</literal></expr>, <expr><literal type="string">"scaler param 1"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name><name>param</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_DOUBLE</name></expr>, <expr><block>{ <expr><operator>.</operator><name>dbl</name> <operator>=</operator> <name>SWS_PARAM_DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"src_v_chr_pos"</literal></expr>, <expr><literal type="string">"source vertical chroma position in luma grid/256"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>src_v_chr_pos</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">513</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">513</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"src_h_chr_pos"</literal></expr>, <expr><literal type="string">"source horizontal chroma position in luma grid/256"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>src_h_chr_pos</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">513</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">513</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"dst_v_chr_pos"</literal></expr>, <expr><literal type="string">"destination vertical chroma position in luma grid/256"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dst_v_chr_pos</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">513</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">513</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"dst_h_chr_pos"</literal></expr>, <expr><literal type="string">"destination horizontal chroma position in luma grid/256"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dst_h_chr_pos</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">513</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">513</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"sws_dither"</literal></expr>, <expr><literal type="string">"set dithering algorithm"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dither</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_DITHER_AUTO</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NB_SWS_DITHER</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_dither"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"auto"</literal></expr>, <expr><literal type="string">"leave choice to sws"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_DITHER_AUTO</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_dither"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"bayer"</literal></expr>, <expr><literal type="string">"bayer dither"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_DITHER_BAYER</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_dither"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"ed"</literal></expr>, <expr><literal type="string">"error diffusion"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_DITHER_ED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_dither"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"a_dither"</literal></expr>, <expr><literal type="string">"arithmetic addition dither"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_DITHER_A_DITHER</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_dither"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"x_dither"</literal></expr>, <expr><literal type="string">"arithmetic xor dither"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_DITHER_X_DITHER</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"sws_dither"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"gamma"</literal></expr>, <expr><literal type="string">"gamma correct scaling"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>gamma_flag</name></expr></argument>)</argument_list></call></expr>,<expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"alphablend"</literal></expr>, <expr><literal type="string">"mode for alpha -&gt; non alpha"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>alphablend</name></expr></argument>)</argument_list></call></expr>,<expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_ALPHA_BLEND_NONE</name></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>SWS_ALPHA_BLEND_NB</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"alphablend"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"none"</literal></expr>, <expr><literal type="string">"ignore alpha"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_ALPHA_BLEND_NONE</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"alphablend"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"uniform_color"</literal></expr>, <expr><literal type="string">"blend onto a uniform color"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_ALPHA_BLEND_UNIFORM</name></expr>}</block></expr>,<expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"alphablend"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"checkerboard"</literal></expr>, <expr><literal type="string">"blend onto a checkerboard"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWS_ALPHA_BLEND_CHECKERBOARD</name></expr>}</block></expr>,<expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"alphablend"</literal></expr> }</block></expr>,

<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name></type> <name>ff_sws_context_class</name> <init>= <expr><block>{
<expr><operator>.</operator><name>class_name</name> <operator>=</operator> <literal type="string">"SWScaler"</literal></expr>,
<expr><operator>.</operator><name>item_name</name> <operator>=</operator> <name>sws_context_to_name</name></expr>,
<expr><operator>.</operator><name>option</name> <operator>=</operator> <name>swscale_options</name></expr>,
<expr><operator>.</operator><name>category</name> <operator>=</operator> <name>AV_CLASS_CATEGORY_SWSCALER</name></expr>,
<expr><operator>.</operator><name>version</name> <operator>=</operator> <name>LIBAVUTIL_VERSION_INT</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>sws_get_class</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>&amp;</operator><name>ff_sws_context_class</name></expr>;</return>
</block_content>}</block></function>
</unit>
