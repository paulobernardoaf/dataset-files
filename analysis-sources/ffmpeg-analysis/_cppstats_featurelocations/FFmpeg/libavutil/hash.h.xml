<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavutil\hash.h">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVUTIL_HASH_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVUTIL_HASH_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"version.h"</cpp:file></cpp:include>



















































































<struct_decl>struct <name>AVHashContext</name>;</struct_decl>









<function_decl><type><name>int</name></type> <name>av_hash_alloc</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVHashContext</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_hash_names</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_hash_get_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>AVHashContext</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_HASH_MAX_SIZE</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define>










<function_decl><type><name>int</name></type> <name>av_hash_get_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>AVHashContext</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>av_hash_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVHashContext</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_CRYPTO_SIZE_T</name></expr></cpp:if>
<function_decl><type><name>void</name></type> <name>av_hash_update</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVHashContext</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<function_decl><type><name>void</name></type> <name>av_hash_update</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVHashContext</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>















<function_decl><type><name>void</name></type> <name>av_hash_final</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVHashContext</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>void</name></type> <name>av_hash_final_bin</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVHashContext</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

















<function_decl><type><name>void</name></type> <name>av_hash_final_hex</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVHashContext</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

















<function_decl><type><name>void</name></type> <name>av_hash_final_b64</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVHashContext</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>av_hash_freep</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVHashContext</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>






<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
