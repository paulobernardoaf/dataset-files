<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavutil\x86\pixelutils_init.c">

















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pixelutils.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cpu.h"</cpp:file></cpp:include>

<function_decl><type><name>int</name></type> <name>ff_pixelutils_sad_8x8_mmx</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_pixelutils_sad_8x8_mmxext</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride2</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_pixelutils_sad_16x16_mmxext</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_pixelutils_sad_16x16_sse2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_pixelutils_sad_a_16x16_sse2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_pixelutils_sad_u_16x16_sse2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride2</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_pixelutils_sad_32x32_sse2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_pixelutils_sad_a_32x32_sse2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_pixelutils_sad_u_32x32_sse2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride2</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_pixelutils_sad_32x32_avx2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_pixelutils_sad_a_32x32_avx2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_pixelutils_sad_u_32x32_avx2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride2</name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>void</name></type> <name>ff_pixelutils_sad_init_x86</name><parameter_list>(<parameter><decl><type><name>av_pixelutils_sad_fn</name> <modifier>*</modifier></type><name>sad</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>aligned</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>cpu_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_MMX</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>sad</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_pixelutils_sad_8x8_mmx</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>







<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_MMXEXT</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>sad</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_pixelutils_sad_8x8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sad</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_pixelutils_sad_16x16_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<switch>switch <condition>(<expr><name>aligned</name></expr>)</condition> <block>{<block_content>
<case>case <expr><literal type="number">0</literal></expr>:</case> <expr_stmt><expr><name><name>sad</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_pixelutils_sad_16x16_sse2</name></expr>;</expr_stmt> <break>break;</break> 
<case>case <expr><literal type="number">1</literal></expr>:</case> <expr_stmt><expr><name><name>sad</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_pixelutils_sad_u_16x16_sse2</name></expr>;</expr_stmt> <break>break;</break> 
<case>case <expr><literal type="number">2</literal></expr>:</case> <expr_stmt><expr><name><name>sad</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_pixelutils_sad_a_16x16_sse2</name></expr>;</expr_stmt> <break>break;</break> 
</block_content>}</block></switch>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<switch>switch <condition>(<expr><name>aligned</name></expr>)</condition> <block>{<block_content>
<case>case <expr><literal type="number">0</literal></expr>:</case> <expr_stmt><expr><name><name>sad</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name>ff_pixelutils_sad_32x32_sse2</name></expr>;</expr_stmt> <break>break;</break> 
<case>case <expr><literal type="number">1</literal></expr>:</case> <expr_stmt><expr><name><name>sad</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name>ff_pixelutils_sad_u_32x32_sse2</name></expr>;</expr_stmt> <break>break;</break> 
<case>case <expr><literal type="number">2</literal></expr>:</case> <expr_stmt><expr><name><name>sad</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name>ff_pixelutils_sad_a_32x32_sse2</name></expr>;</expr_stmt> <break>break;</break> 
</block_content>}</block></switch>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX2_FAST</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<switch>switch <condition>(<expr><name>aligned</name></expr>)</condition> <block>{<block_content>
<case>case <expr><literal type="number">0</literal></expr>:</case> <expr_stmt><expr><name><name>sad</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name>ff_pixelutils_sad_32x32_avx2</name></expr>;</expr_stmt> <break>break;</break> 
<case>case <expr><literal type="number">1</literal></expr>:</case> <expr_stmt><expr><name><name>sad</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name>ff_pixelutils_sad_u_32x32_avx2</name></expr>;</expr_stmt> <break>break;</break> 
<case>case <expr><literal type="number">2</literal></expr>:</case> <expr_stmt><expr><name><name>sad</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name>ff_pixelutils_sad_a_32x32_avx2</name></expr>;</expr_stmt> <break>break;</break> 
</block_content>}</block></switch>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>
</unit>
