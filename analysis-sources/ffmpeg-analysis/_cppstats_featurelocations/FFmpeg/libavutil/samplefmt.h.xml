<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavutil\samplefmt.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVUTIL_SAMPLEFMT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVUTIL_SAMPLEFMT_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avutil.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"attributes.h"</cpp:file></cpp:include>
































<enum>enum <name>AVSampleFormat</name> <block>{
<decl><name>AV_SAMPLE_FMT_NONE</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>AV_SAMPLE_FMT_U8</name></decl>, 
<decl><name>AV_SAMPLE_FMT_S16</name></decl>, 
<decl><name>AV_SAMPLE_FMT_S32</name></decl>, 
<decl><name>AV_SAMPLE_FMT_FLT</name></decl>, 
<decl><name>AV_SAMPLE_FMT_DBL</name></decl>, 

<decl><name>AV_SAMPLE_FMT_U8P</name></decl>, 
<decl><name>AV_SAMPLE_FMT_S16P</name></decl>, 
<decl><name>AV_SAMPLE_FMT_S32P</name></decl>, 
<decl><name>AV_SAMPLE_FMT_FLTP</name></decl>, 
<decl><name>AV_SAMPLE_FMT_DBLP</name></decl>, 
<decl><name>AV_SAMPLE_FMT_S64</name></decl>, 
<decl><name>AV_SAMPLE_FMT_S64P</name></decl>, 

<decl><name>AV_SAMPLE_FMT_NB</name></decl> 
}</block>;</enum>





<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_get_sample_fmt_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>av_get_sample_fmt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>av_get_alt_sample_fmt</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>planar</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>av_get_packed_sample_fmt</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>av_get_planar_sample_fmt</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>char</name> <modifier>*</modifier></type><name>av_get_sample_fmt_string</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> <name>av_get_bytes_per_sample</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>int</name></type> <name>av_sample_fmt_is_planar</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>int</name></type> <name>av_samples_get_buffer_size</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>linesize</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_channels</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>align</name></decl></parameter>)</parameter_list>;</function_decl>








































<function_decl><type><name>int</name></type> <name>av_samples_fill_arrays</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>audio_data</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>linesize</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>nb_channels</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>align</name></decl></parameter>)</parameter_list>;</function_decl>




















<function_decl><type><name>int</name></type> <name>av_samples_alloc</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>audio_data</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>linesize</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_channels</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>align</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>av_samples_alloc_array_and_samples</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier><modifier>*</modifier></type><name>audio_data</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>linesize</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_channels</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>align</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>int</name></type> <name>av_samples_copy</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier> <specifier>const</specifier> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dst_offset</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>src_offset</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_channels</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>av_samples_set_silence</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>audio_data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>offset</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>nb_channels</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_fmt</name></decl></parameter>)</parameter_list>;</function_decl>





<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
