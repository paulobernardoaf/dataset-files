<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavutil\frame.h">























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVUTIL_FRAME_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVUTIL_FRAME_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avutil.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"buffer.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dict.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rational.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"samplefmt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pixfmt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"version.h"</cpp:file></cpp:include>










<enum>enum <name>AVFrameSideDataType</name> <block>{



<decl><name>AV_FRAME_DATA_PANSCAN</name></decl>,





<decl><name>AV_FRAME_DATA_A53_CC</name></decl>,




<decl><name>AV_FRAME_DATA_STEREO3D</name></decl>,



<decl><name>AV_FRAME_DATA_MATRIXENCODING</name></decl>,




<decl><name>AV_FRAME_DATA_DOWNMIX_INFO</name></decl>,



<decl><name>AV_FRAME_DATA_REPLAYGAIN</name></decl>,







<decl><name>AV_FRAME_DATA_DISPLAYMATRIX</name></decl>,




<decl><name>AV_FRAME_DATA_AFD</name></decl>,






<decl><name>AV_FRAME_DATA_MOTION_VECTORS</name></decl>,











<decl><name>AV_FRAME_DATA_SKIP_SAMPLES</name></decl>,




<decl><name>AV_FRAME_DATA_AUDIO_SERVICE_TYPE</name></decl>,





<decl><name>AV_FRAME_DATA_MASTERING_DISPLAY_METADATA</name></decl>,




<decl><name>AV_FRAME_DATA_GOP_TIMECODE</name></decl>,





<decl><name>AV_FRAME_DATA_SPHERICAL</name></decl>,





<decl><name>AV_FRAME_DATA_CONTENT_LIGHT_LEVEL</name></decl>,






<decl><name>AV_FRAME_DATA_ICC_PROFILE</name></decl>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_FRAME_QP</name></expr></cpp:if>






<decl><name>AV_FRAME_DATA_QP_TABLE_PROPERTIES</name></decl>,






<decl><name>AV_FRAME_DATA_QP_TABLE_DATA</name></decl>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>







<decl><name>AV_FRAME_DATA_S12M_TIMECODE</name></decl>,






<decl><name>AV_FRAME_DATA_DYNAMIC_HDR_PLUS</name></decl>,





<decl><name>AV_FRAME_DATA_REGIONS_OF_INTEREST</name></decl>,
}</block>;</enum>

<enum>enum <name>AVActiveFormatDescription</name> <block>{
<decl><name>AV_AFD_SAME</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
<decl><name>AV_AFD_4_3</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,
<decl><name>AV_AFD_16_9</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,
<decl><name>AV_AFD_14_9</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,
<decl><name>AV_AFD_4_3_SP_14_9</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,
<decl><name>AV_AFD_16_9_SP_14_9</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>,
<decl><name>AV_AFD_SP_4_3</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>,
}</block>;</enum>








<typedef>typedef <type><struct>struct <name>AVFrameSideData</name> <block>{
<decl_stmt><decl><type><name><name>enum</name> <name>AVFrameSideDataType</name></name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>metadata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVFrameSideData</name>;</typedef>












<typedef>typedef <type><struct>struct <name>AVRegionOfInterest</name> <block>{




<decl_stmt><decl><type><name>uint32_t</name></type> <name>self_size</name></decl>;</decl_stmt>









<decl_stmt><decl><type><name>int</name></type> <name>top</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bottom</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>left</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>right</name></decl>;</decl_stmt>























<decl_stmt><decl><type><name>AVRational</name></type> <name>qoffset</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVRegionOfInterest</name>;</typedef>































<typedef>typedef <type><struct>struct <name>AVFrame</name> <block>{
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_NUM_DATA_POINTERS</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>












<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><name>AV_NUM_DATA_POINTERS</name></expr>]</index></name></decl>;</decl_stmt>
















<decl_stmt><decl><type><name>int</name></type> <name><name>linesize</name><index>[<expr><name>AV_NUM_DATA_POINTERS</name></expr>]</index></name></decl>;</decl_stmt>















<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>extended_data</name></decl>;</decl_stmt>










<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>, <name>height</name>;</decl_stmt>







<decl_stmt><decl><type><name>int</name></type> <name>nb_samples</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int</name></type> <name>format</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>key_frame</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name><name>enum</name> <name>AVPictureType</name></name></type> <name>pict_type</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>AVRational</name></type> <name>sample_aspect_ratio</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int64_t</name></type> <name>pts</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PKT_PTS</name></expr></cpp:if>




<decl_stmt><decl><type><name>attribute_deprecated</name>
<name>int64_t</name></type> <name>pkt_pts</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>






<decl_stmt><decl><type><name>int64_t</name></type> <name>pkt_dts</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>coded_picture_number</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>int</name></type> <name>display_picture_number</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>quality</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_ERROR_FRAME</name></expr></cpp:if>



<decl_stmt><decl><type><name>attribute_deprecated</name>
<name>uint64_t</name></type> <name><name>error</name><index>[<expr><name>AV_NUM_DATA_POINTERS</name></expr>]</index></name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>





<decl_stmt><decl><type><name>int</name></type> <name>repeat_pict</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>interlaced_frame</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>top_field_first</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>palette_has_changed</name></decl>;</decl_stmt>









<decl_stmt><decl><type><name>int64_t</name></type> <name>reordered_opaque</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>sample_rate</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>uint64_t</name></type> <name>channel_layout</name></decl>;</decl_stmt>













<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name><name>buf</name><index>[<expr><name>AV_NUM_DATA_POINTERS</name></expr>]</index></name></decl>;</decl_stmt>













<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier><modifier>*</modifier></type><name>extended_buf</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>int</name></type> <name>nb_extended_buf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrameSideData</name> <modifier>*</modifier><modifier>*</modifier></type><name>side_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_side_data</name></decl>;</decl_stmt>












<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_FRAME_FLAG_CORRUPT</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_FRAME_FLAG_DISCARD</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define>







<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name><name>enum</name> <name>AVColorRange</name></name></type> <name>color_range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVColorPrimaries</name></name></type> <name>color_primaries</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVColorTransferCharacteristic</name></name></type> <name>color_trc</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name><name>enum</name> <name>AVColorSpace</name></name></type> <name>colorspace</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVChromaLocation</name></name></type> <name>chroma_location</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int64_t</name></type> <name>best_effort_timestamp</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int64_t</name></type> <name>pkt_pos</name></decl>;</decl_stmt>







<decl_stmt><decl><type><name>int64_t</name></type> <name>pkt_duration</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>metadata</name></decl>;</decl_stmt>








<decl_stmt><decl><type><name>int</name></type> <name>decode_error_flags</name></decl>;</decl_stmt>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_DECODE_ERROR_INVALID_BITSTREAM</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_DECODE_ERROR_MISSING_REFERENCE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_DECODE_ERROR_CONCEALMENT_ACTIVE</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_DECODE_ERROR_DECODE_SLICES</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>






<decl_stmt><decl><type><name>int</name></type> <name>channels</name></decl>;</decl_stmt>








<decl_stmt><decl><type><name>int</name></type> <name>pkt_size</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_FRAME_QP</name></expr></cpp:if>



<decl_stmt><decl><type><name>attribute_deprecated</name>
<name>int8_t</name> <modifier>*</modifier></type><name>qscale_table</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>attribute_deprecated</name>
<name>int</name></type> <name>qstride</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>attribute_deprecated</name>
<name>int</name></type> <name>qscale_type</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>attribute_deprecated</name>
<name>AVBufferRef</name> <modifier>*</modifier></type><name>qp_table_buf</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>hw_frames_ctx</name></decl>;</decl_stmt>










<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>opaque_ref</name></decl>;</decl_stmt>









<decl_stmt><decl><type><name>size_t</name></type> <name>crop_top</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>crop_bottom</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>crop_left</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>crop_right</name></decl>;</decl_stmt>















<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>private_ref</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVFrame</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_FRAME_GET_SET</name></expr></cpp:if>




<function_decl><type><name>attribute_deprecated</name>
<name>int64_t</name></type> <name>av_frame_get_best_effort_timestamp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>void</name></type> <name>av_frame_set_best_effort_timestamp</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>int64_t</name></type> <name>av_frame_get_pkt_duration</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>void</name></type> <name>av_frame_set_pkt_duration</name> <parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>int64_t</name></type> <name>av_frame_get_pkt_pos</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>void</name></type> <name>av_frame_set_pkt_pos</name> <parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>int64_t</name></type> <name>av_frame_get_channel_layout</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>void</name></type> <name>av_frame_set_channel_layout</name> <parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>int</name></type> <name>av_frame_get_channels</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>void</name></type> <name>av_frame_set_channels</name> <parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>int</name></type> <name>av_frame_get_sample_rate</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>void</name></type> <name>av_frame_set_sample_rate</name> <parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>AVDictionary</name> <modifier>*</modifier></type><name>av_frame_get_metadata</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>void</name></type> <name>av_frame_set_metadata</name> <parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>int</name></type> <name>av_frame_get_decode_error_flags</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>void</name></type> <name>av_frame_set_decode_error_flags</name> <parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>int</name></type> <name>av_frame_get_pkt_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>void</name></type> <name>av_frame_set_pkt_size</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_FRAME_QP</name></expr></cpp:if>
<function_decl><type><name>attribute_deprecated</name>
<name>int8_t</name> <modifier>*</modifier></type><name>av_frame_get_qp_table</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>stride</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>int</name></type> <name>av_frame_set_qp_table</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><name>attribute_deprecated</name>
<name><name>enum</name> <name>AVColorSpace</name></name></type> <name>av_frame_get_colorspace</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>void</name></type> <name>av_frame_set_colorspace</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVColorSpace</name></name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name><name>enum</name> <name>AVColorRange</name></name></type> <name>av_frame_get_color_range</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>attribute_deprecated</name>
<name>void</name></type> <name>av_frame_set_color_range</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVColorRange</name></name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>





<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_get_colorspace_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVColorSpace</name></name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>av_frame_alloc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>av_frame_free</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier><modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><name>int</name></type> <name>av_frame_ref</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>av_frame_clone</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>av_frame_unref</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>av_frame_move_ref</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>
























<function_decl><type><name>int</name></type> <name>av_frame_get_buffer</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>align</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>int</name></type> <name>av_frame_is_writable</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>int</name></type> <name>av_frame_make_writable</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>int</name></type> <name>av_frame_copy</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>av_frame_copy_props</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>av_frame_get_plane_buffer</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>plane</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>AVFrameSideData</name> <modifier>*</modifier></type><name>av_frame_new_side_data</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVFrameSideDataType</name></name></type> <name>type</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>AVFrameSideData</name> <modifier>*</modifier></type><name>av_frame_new_side_data_from_buf</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVFrameSideDataType</name></name></type> <name>type</name></decl></parameter>,
<parameter><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>AVFrameSideData</name> <modifier>*</modifier></type><name>av_frame_get_side_data</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVFrameSideDataType</name></name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>av_frame_remove_side_data</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVFrameSideDataType</name></name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>





<enum>enum <block>{








<decl><name>AV_FRAME_CROP_UNALIGNED</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr></init></decl>,
}</block>;</enum>

















<function_decl><type><name>int</name></type> <name>av_frame_apply_cropping</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_frame_side_data_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVFrameSideDataType</name></name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>





<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
