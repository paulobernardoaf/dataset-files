<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavutil\channel_layout.h">




















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVUTIL_CHANNEL_LAYOUT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVUTIL_CHANNEL_LAYOUT_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_FRONT_LEFT</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_FRONT_RIGHT</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_FRONT_CENTER</name></cpp:macro> <cpp:value>0x00000004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LOW_FREQUENCY</name></cpp:macro> <cpp:value>0x00000008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_BACK_LEFT</name></cpp:macro> <cpp:value>0x00000010</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_BACK_RIGHT</name></cpp:macro> <cpp:value>0x00000020</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_FRONT_LEFT_OF_CENTER</name></cpp:macro> <cpp:value>0x00000040</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_FRONT_RIGHT_OF_CENTER</name></cpp:macro> <cpp:value>0x00000080</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_BACK_CENTER</name></cpp:macro> <cpp:value>0x00000100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_SIDE_LEFT</name></cpp:macro> <cpp:value>0x00000200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_SIDE_RIGHT</name></cpp:macro> <cpp:value>0x00000400</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_TOP_CENTER</name></cpp:macro> <cpp:value>0x00000800</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_TOP_FRONT_LEFT</name></cpp:macro> <cpp:value>0x00001000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_TOP_FRONT_CENTER</name></cpp:macro> <cpp:value>0x00002000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_TOP_FRONT_RIGHT</name></cpp:macro> <cpp:value>0x00004000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_TOP_BACK_LEFT</name></cpp:macro> <cpp:value>0x00008000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_TOP_BACK_CENTER</name></cpp:macro> <cpp:value>0x00010000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_TOP_BACK_RIGHT</name></cpp:macro> <cpp:value>0x00020000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_STEREO_LEFT</name></cpp:macro> <cpp:value>0x20000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_STEREO_RIGHT</name></cpp:macro> <cpp:value>0x40000000</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_WIDE_LEFT</name></cpp:macro> <cpp:value>0x0000000080000000ULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_WIDE_RIGHT</name></cpp:macro> <cpp:value>0x0000000100000000ULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_SURROUND_DIRECT_LEFT</name></cpp:macro> <cpp:value>0x0000000200000000ULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_SURROUND_DIRECT_RIGHT</name></cpp:macro> <cpp:value>0x0000000400000000ULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LOW_FREQUENCY_2</name></cpp:macro> <cpp:value>0x0000000800000000ULL</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_NATIVE</name></cpp:macro> <cpp:value>0x8000000000000000ULL</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_MONO</name></cpp:macro> <cpp:value>(AV_CH_FRONT_CENTER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_STEREO</name></cpp:macro> <cpp:value>(AV_CH_FRONT_LEFT|AV_CH_FRONT_RIGHT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_2POINT1</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_STEREO|AV_CH_LOW_FREQUENCY)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_2_1</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_STEREO|AV_CH_BACK_CENTER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_SURROUND</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_STEREO|AV_CH_FRONT_CENTER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_3POINT1</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_SURROUND|AV_CH_LOW_FREQUENCY)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_4POINT0</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_SURROUND|AV_CH_BACK_CENTER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_4POINT1</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_4POINT0|AV_CH_LOW_FREQUENCY)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_2_2</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_STEREO|AV_CH_SIDE_LEFT|AV_CH_SIDE_RIGHT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_QUAD</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_STEREO|AV_CH_BACK_LEFT|AV_CH_BACK_RIGHT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_5POINT0</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_SURROUND|AV_CH_SIDE_LEFT|AV_CH_SIDE_RIGHT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_5POINT1</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_5POINT0|AV_CH_LOW_FREQUENCY)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_5POINT0_BACK</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_SURROUND|AV_CH_BACK_LEFT|AV_CH_BACK_RIGHT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_5POINT1_BACK</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_5POINT0_BACK|AV_CH_LOW_FREQUENCY)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_6POINT0</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_5POINT0|AV_CH_BACK_CENTER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_6POINT0_FRONT</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_2_2|AV_CH_FRONT_LEFT_OF_CENTER|AV_CH_FRONT_RIGHT_OF_CENTER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_HEXAGONAL</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_5POINT0_BACK|AV_CH_BACK_CENTER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_6POINT1</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_5POINT1|AV_CH_BACK_CENTER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_6POINT1_BACK</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_5POINT1_BACK|AV_CH_BACK_CENTER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_6POINT1_FRONT</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_6POINT0_FRONT|AV_CH_LOW_FREQUENCY)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_7POINT0</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_5POINT0|AV_CH_BACK_LEFT|AV_CH_BACK_RIGHT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_7POINT0_FRONT</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_5POINT0|AV_CH_FRONT_LEFT_OF_CENTER|AV_CH_FRONT_RIGHT_OF_CENTER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_7POINT1</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_5POINT1|AV_CH_BACK_LEFT|AV_CH_BACK_RIGHT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_7POINT1_WIDE</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_5POINT1|AV_CH_FRONT_LEFT_OF_CENTER|AV_CH_FRONT_RIGHT_OF_CENTER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_7POINT1_WIDE_BACK</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_5POINT1_BACK|AV_CH_FRONT_LEFT_OF_CENTER|AV_CH_FRONT_RIGHT_OF_CENTER)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_OCTAGONAL</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_5POINT0|AV_CH_BACK_LEFT|AV_CH_BACK_CENTER|AV_CH_BACK_RIGHT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_HEXADECAGONAL</name></cpp:macro> <cpp:value>(AV_CH_LAYOUT_OCTAGONAL|AV_CH_WIDE_LEFT|AV_CH_WIDE_RIGHT|AV_CH_TOP_BACK_LEFT|AV_CH_TOP_BACK_RIGHT|AV_CH_TOP_BACK_CENTER|AV_CH_TOP_FRONT_CENTER|AV_CH_TOP_FRONT_LEFT|AV_CH_TOP_FRONT_RIGHT)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CH_LAYOUT_STEREO_DOWNMIX</name></cpp:macro> <cpp:value>(AV_CH_STEREO_LEFT|AV_CH_STEREO_RIGHT)</cpp:value></cpp:define>

<enum>enum <name>AVMatrixEncoding</name> <block>{
<decl><name>AV_MATRIX_ENCODING_NONE</name></decl>,
<decl><name>AV_MATRIX_ENCODING_DOLBY</name></decl>,
<decl><name>AV_MATRIX_ENCODING_DPLII</name></decl>,
<decl><name>AV_MATRIX_ENCODING_DPLIIX</name></decl>,
<decl><name>AV_MATRIX_ENCODING_DPLIIZ</name></decl>,
<decl><name>AV_MATRIX_ENCODING_DOLBYEX</name></decl>,
<decl><name>AV_MATRIX_ENCODING_DOLBYHEADPHONE</name></decl>,
<decl><name>AV_MATRIX_ENCODING_NB</name></decl>
}</block>;</enum>


















<function_decl><type><name>uint64_t</name></type> <name>av_get_channel_layout</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>int</name></type> <name>av_get_extended_channel_layout</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name><modifier>*</modifier></type> <name>channel_layout</name></decl></parameter>, <parameter><decl><type><name>int</name><modifier>*</modifier></type> <name>nb_channels</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>av_get_channel_layout_string</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_channels</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>channel_layout</name></decl></parameter>)</parameter_list>;</function_decl>

<struct_decl>struct <name>AVBPrint</name>;</struct_decl>



<function_decl><type><name>void</name></type> <name>av_bprint_channel_layout</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVBPrint</name></name> <modifier>*</modifier></type><name>bp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_channels</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>channel_layout</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>av_get_channel_layout_nb_channels</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>channel_layout</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int64_t</name></type> <name>av_get_default_channel_layout</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>nb_channels</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>av_get_channel_layout_channel_index</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>channel_layout</name></decl></parameter>,
<parameter><decl><type><name>uint64_t</name></type> <name>channel</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>uint64_t</name></type> <name>av_channel_layout_extract_channel</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>channel_layout</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_get_channel_name</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>channel</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_get_channel_description</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>channel</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>av_get_standard_channel_layout</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type><name>layout</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>






<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
