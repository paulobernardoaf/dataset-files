<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavutil\integer.h">


























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVUTIL_INTEGER_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVUTIL_INTEGER_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_INTEGER_SIZE</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>AVInteger</name><block>{
<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>v</name><index>[<expr><name>AV_INTEGER_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>AVInteger</name>;</typedef>

<decl_stmt><decl><type><name>AVInteger</name></type> <name>av_add_i</name><argument_list>(<argument><expr><name>AVInteger</name> <name>a</name></expr></argument>, <argument><expr><name>AVInteger</name> <name>b</name></expr></argument>)</argument_list> <name>av_const</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVInteger</name></type> <name>av_sub_i</name><argument_list>(<argument><expr><name>AVInteger</name> <name>a</name></expr></argument>, <argument><expr><name>AVInteger</name> <name>b</name></expr></argument>)</argument_list> <name>av_const</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int</name></type> <name>av_log2_i</name><argument_list>(<argument><expr><name>AVInteger</name> <name>a</name></expr></argument>)</argument_list> <name>av_const</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVInteger</name></type> <name>av_mul_i</name><argument_list>(<argument><expr><name>AVInteger</name> <name>a</name></expr></argument>, <argument><expr><name>AVInteger</name> <name>b</name></expr></argument>)</argument_list> <name>av_const</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>av_cmp_i</name><argument_list>(<argument><expr><name>AVInteger</name> <name>a</name></expr></argument>, <argument><expr><name>AVInteger</name> <name>b</name></expr></argument>)</argument_list> <name>av_const</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>AVInteger</name></type> <name>av_shr_i</name><argument_list>(<argument><expr><name>AVInteger</name> <name>a</name></expr></argument>, <argument><expr><name>int</name> <name>s</name></expr></argument>)</argument_list> <name>av_const</name></decl>;</decl_stmt>





<function_decl><type><name>AVInteger</name></type> <name>av_mod_i</name><parameter_list>(<parameter><decl><type><name>AVInteger</name> <modifier>*</modifier></type><name>quot</name></decl></parameter>, <parameter><decl><type><name>AVInteger</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>AVInteger</name></type> <name>b</name></decl></parameter>)</parameter_list>;</function_decl>




<decl_stmt><decl><type><name>AVInteger</name></type> <name>av_div_i</name><argument_list>(<argument><expr><name>AVInteger</name> <name>a</name></expr></argument>, <argument><expr><name>AVInteger</name> <name>b</name></expr></argument>)</argument_list> <name>av_const</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>AVInteger</name></type> <name>av_int2i</name><argument_list>(<argument><expr><name>int64_t</name> <name>a</name></expr></argument>)</argument_list> <name>av_const</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int64_t</name></type> <name>av_i2int</name><argument_list>(<argument><expr><name>AVInteger</name> <name>a</name></expr></argument>)</argument_list> <name>av_const</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
