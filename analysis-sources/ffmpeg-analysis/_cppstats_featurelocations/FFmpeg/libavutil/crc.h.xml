<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavutil\crc.h">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVUTIL_CRC_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVUTIL_CRC_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"attributes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"version.h"</cpp:file></cpp:include>













<typedef>typedef <type><name>uint32_t</name></type> <name>AVCRC</name>;</typedef>

<typedef>typedef <type><enum>enum <block>{
<decl><name>AV_CRC_8_ATM</name></decl>,
<decl><name>AV_CRC_16_ANSI</name></decl>,
<decl><name>AV_CRC_16_CCITT</name></decl>,
<decl><name>AV_CRC_32_IEEE</name></decl>,
<decl><name>AV_CRC_32_IEEE_LE</name></decl>, 
<decl><name>AV_CRC_16_ANSI_LE</name></decl>, 
<decl><name>AV_CRC_24_IEEE</name></decl>,
<decl><name>AV_CRC_8_EBU</name></decl>,
<decl><name>AV_CRC_MAX</name></decl>, 
}</block></enum></type><name>AVCRCId</name>;</typedef>

















<function_decl><type><name>int</name></type> <name>av_crc_init</name><parameter_list>(<parameter><decl><type><name>AVCRC</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>le</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>poly</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ctx_size</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><specifier>const</specifier> <name>AVCRC</name> <modifier>*</modifier></type><name>av_crc_get_table</name><parameter_list>(<parameter><decl><type><name>AVCRCId</name></type> <name>crc_id</name></decl></parameter>)</parameter_list>;</function_decl>








<decl_stmt><decl><type><name>uint32_t</name></type> <name>av_crc</name><argument_list>(<argument><expr><specifier>const</specifier> <name>AVCRC</name> <operator>*</operator><name>ctx</name></expr></argument>, <argument><expr><name>uint32_t</name> <name>crc</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>uint8_t</name> <operator>*</operator><name>buffer</name></expr></argument>, <argument><expr><name>size_t</name> <name>length</name></expr></argument>)</argument_list> <name>av_pure</name></decl>;</decl_stmt>





<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
