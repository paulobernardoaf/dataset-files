<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavutil\fifo.h">






















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVUTIL_FIFO_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVUTIL_FIFO_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avutil.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"attributes.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>AVFifoBuffer</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>rptr</name></decl>, <modifier>*</modifier><name>wptr</name>, <modifier>*</modifier><name>end</name>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>rndx</name></decl>, <name>wndx</name>;</decl_stmt>
}</block></struct></type> <name>AVFifoBuffer</name>;</typedef>






<function_decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>av_fifo_alloc</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>av_fifo_alloc_array</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>nmemb</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>av_fifo_free</name><parameter_list>(<parameter><decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>av_fifo_freep</name><parameter_list>(<parameter><decl><type><name>AVFifoBuffer</name> <modifier>*</modifier><modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>av_fifo_reset</name><parameter_list>(<parameter><decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>int</name></type> <name>av_fifo_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFifoBuffer</name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>int</name></type> <name>av_fifo_space</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFifoBuffer</name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>av_fifo_generic_peek_at</name><parameter_list>(<parameter><decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dest</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>offset</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>, <parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>func</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>av_fifo_generic_peek</name><parameter_list>(<parameter><decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dest</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>, <parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>func</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> <name>av_fifo_generic_read</name><parameter_list>(<parameter><decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dest</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>, <parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>func</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>int</name></type> <name>av_fifo_generic_write</name><parameter_list>(<parameter><decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>func</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>av_fifo_realloc2</name><parameter_list>(<parameter><decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>av_fifo_grow</name><parameter_list>(<parameter><decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>additional_space</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>av_fifo_drain</name><parameter_list>(<parameter><decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>











<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>av_fifo_peek2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFifoBuffer</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>offs</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>ptr</name> <init>= <expr><name><name>f</name><operator>-&gt;</operator><name>rptr</name></name> <operator>+</operator> <name>offs</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>ptr</name> <operator>&gt;=</operator> <name><name>f</name><operator>-&gt;</operator><name>end</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>ptr</name> <operator>=</operator> <name><name>f</name><operator>-&gt;</operator><name>buffer</name></name> <operator>+</operator> <operator>(</operator><name>ptr</name> <operator>-</operator> <name><name>f</name><operator>-&gt;</operator><name>end</name></name><operator>)</operator></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>ptr</name> <operator>&lt;</operator> <name><name>f</name><operator>-&gt;</operator><name>buffer</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>ptr</name> <operator>=</operator> <name><name>f</name><operator>-&gt;</operator><name>end</name></name> <operator>-</operator> <operator>(</operator><name><name>f</name><operator>-&gt;</operator><name>buffer</name></name> <operator>-</operator> <name>ptr</name><operator>)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>ptr</name></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
