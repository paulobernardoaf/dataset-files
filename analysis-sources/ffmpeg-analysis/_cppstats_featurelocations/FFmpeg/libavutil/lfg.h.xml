<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavutil\lfg.h">




















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVUTIL_LFG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVUTIL_LFG_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>







<typedef>typedef <type><struct>struct <name>AVLFG</name> <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name><name>state</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVLFG</name>;</typedef>

<function_decl><type><name>void</name></type> <name>av_lfg_init</name><parameter_list>(<parameter><decl><type><name>AVLFG</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>seed</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>av_lfg_init_from_data</name><parameter_list>(<parameter><decl><type><name>AVLFG</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>







<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>unsigned</name> <name>int</name></type> <name>av_lfg_get</name><parameter_list>(<parameter><decl><type><name>AVLFG</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list><block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name></type> <name>a</name> <init>= <expr><name><name>c</name><operator>-&gt;</operator><name>state</name><index>[<expr><name><name>c</name><operator>-&gt;</operator><name>index</name></name> <operator>&amp;</operator> <literal type="number">63</literal></expr>]</index></name> <operator>=</operator> <name><name>c</name><operator>-&gt;</operator><name>state</name><index>[<expr><operator>(</operator><name><name>c</name><operator>-&gt;</operator><name>index</name></name><operator>-</operator><literal type="number">24</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">63</literal></expr>]</index></name> <operator>+</operator> <name><name>c</name><operator>-&gt;</operator><name>state</name><index>[<expr><operator>(</operator><name><name>c</name><operator>-&gt;</operator><name>index</name></name><operator>-</operator><literal type="number">55</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">63</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>index</name></name> <operator>+=</operator> <literal type="number">1U</literal></expr>;</expr_stmt>
<return>return <expr><name>a</name></expr>;</return>
</block_content>}</block></function>






<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>unsigned</name> <name>int</name></type> <name>av_mlfg_get</name><parameter_list>(<parameter><decl><type><name>AVLFG</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list><block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>a</name><init>= <expr><name><name>c</name><operator>-&gt;</operator><name>state</name><index>[<expr><operator>(</operator><name><name>c</name><operator>-&gt;</operator><name>index</name></name><operator>-</operator><literal type="number">55</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">63</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>b</name><init>= <expr><name><name>c</name><operator>-&gt;</operator><name>state</name><index>[<expr><operator>(</operator><name><name>c</name><operator>-&gt;</operator><name>index</name></name><operator>-</operator><literal type="number">24</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">63</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>a</name> <operator>=</operator> <name><name>c</name><operator>-&gt;</operator><name>state</name><index>[<expr><name><name>c</name><operator>-&gt;</operator><name>index</name></name> <operator>&amp;</operator> <literal type="number">63</literal></expr>]</index></name> <operator>=</operator> <literal type="number">2</literal><operator>*</operator><name>a</name><operator>*</operator><name>b</name><operator>+</operator><name>a</name><operator>+</operator><name>b</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>index</name></name> <operator>+=</operator> <literal type="number">1U</literal></expr>;</expr_stmt>
<return>return <expr><name>a</name></expr>;</return>
</block_content>}</block></function>







<function_decl><type><name>void</name></type> <name>av_bmg_get</name><parameter_list>(<parameter><decl><type><name>AVLFG</name> <modifier>*</modifier></type><name>lfg</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name><name>out</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
