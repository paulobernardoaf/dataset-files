<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavutil\pixdesc.h">




















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVUTIL_PIXDESC_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVUTIL_PIXDESC_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;inttypes.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"attributes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pixfmt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"version.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>AVComponentDescriptor</name> <block>{



<decl_stmt><decl><type><name>int</name></type> <name>plane</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>int</name></type> <name>step</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>int</name></type> <name>offset</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>int</name></type> <name>shift</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>depth</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PLUS1_MINUS1</name></expr></cpp:if>

<decl_stmt><decl><type><name>attribute_deprecated</name> <name>int</name></type> <name>step_minus1</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>attribute_deprecated</name> <name>int</name></type> <name>depth_minus1</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>attribute_deprecated</name> <name>int</name></type> <name>offset_plus1</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>AVComponentDescriptor</name>;</typedef>










<typedef>typedef <type><struct>struct <name>AVPixFmtDescriptor</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>nb_components</name></decl>;</decl_stmt> 








<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_chroma_w</name></decl>;</decl_stmt>








<decl_stmt><decl><type><name>uint8_t</name></type> <name>log2_chroma_h</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>uint64_t</name></type> <name>flags</name></decl>;</decl_stmt>










<decl_stmt><decl><type><name>AVComponentDescriptor</name></type> <name><name>comp</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>alias</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVPixFmtDescriptor</name>;</typedef>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PIX_FMT_FLAG_BE</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PIX_FMT_FLAG_PAL</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PIX_FMT_FLAG_BITSTREAM</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PIX_FMT_FLAG_HWACCEL</name></cpp:macro> <cpp:value>(1 &lt;&lt; 3)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PIX_FMT_FLAG_PLANAR</name></cpp:macro> <cpp:value>(1 &lt;&lt; 4)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PIX_FMT_FLAG_RGB</name></cpp:macro> <cpp:value>(1 &lt;&lt; 5)</cpp:value></cpp:define>

















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PIX_FMT_FLAG_PSEUDOPAL</name></cpp:macro> <cpp:value>(1 &lt;&lt; 6)</cpp:value></cpp:define>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PIX_FMT_FLAG_ALPHA</name></cpp:macro> <cpp:value>(1 &lt;&lt; 7)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PIX_FMT_FLAG_BAYER</name></cpp:macro> <cpp:value>(1 &lt;&lt; 8)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_PIX_FMT_FLAG_FLOAT</name></cpp:macro> <cpp:value>(1 &lt;&lt; 9)</cpp:value></cpp:define>










<function_decl><type><name>int</name></type> <name>av_get_bits_per_pixel</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>pixdesc</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>av_get_padded_bits_per_pixel</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>pixdesc</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>av_pix_fmt_desc_get</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>av_pix_fmt_desc_next</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>prev</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>av_pix_fmt_desc_get_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>int</name></type> <name>av_pix_fmt_get_chroma_sub_sample</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>h_shift</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>v_shift</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>av_pix_fmt_count_planes</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_color_range_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVColorRange</name></name></type> <name>range</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>av_color_range_from_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_color_primaries_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVColorPrimaries</name></name></type> <name>primaries</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>av_color_primaries_from_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_color_transfer_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVColorTransferCharacteristic</name></name></type> <name>transfer</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>av_color_transfer_from_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_color_space_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVColorSpace</name></name></type> <name>space</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>av_color_space_from_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_chroma_location_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVChromaLocation</name></name></type> <name>location</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>av_chroma_location_from_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>av_get_pix_fmt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_get_pix_fmt_name</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>char</name> <modifier>*</modifier></type><name>av_get_pix_fmt_string</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>;</function_decl>


















<function_decl><type><name>void</name></type> <name>av_read_image_line2</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>linesize</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>read_pal_component</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>dst_element_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>av_read_image_line</name><parameter_list>(<parameter><decl><type><name>uint16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>linesize</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>read_pal_component</name></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><name>void</name></type> <name>av_write_image_line2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>linesize</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>src_element_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>av_write_image_line</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>linesize</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>desc</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>av_pix_fmt_swap_endianness</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_LOSS_RESOLUTION</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_LOSS_DEPTH</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_LOSS_COLORSPACE</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_LOSS_ALPHA</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_LOSS_COLORQUANT</name></cpp:macro> <cpp:value>0x0010</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_LOSS_CHROMA</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define> 



















<function_decl><type><name>int</name></type> <name>av_get_pix_fmt_loss</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>dst_pix_fmt</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>src_pix_fmt</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>has_alpha</name></decl></parameter>)</parameter_list>;</function_decl>



















<function_decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>av_find_best_pix_fmt_of_2</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>dst_pix_fmt1</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>dst_pix_fmt2</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>src_pix_fmt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>has_alpha</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>loss_ptr</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
