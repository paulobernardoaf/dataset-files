<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavutil\stereo3d.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"common.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mem.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stereo3d.h"</cpp:file></cpp:include>

<function><type><name>AVStereo3D</name> <modifier>*</modifier></type><name>av_stereo3d_alloc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>av_mallocz</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>AVStereo3D</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>AVStereo3D</name> <modifier>*</modifier></type><name>av_stereo3d_create_side_data</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>AVFrameSideData</name> <modifier>*</modifier></type><name>side_data</name> <init>= <expr><call><name>av_frame_new_side_data</name><argument_list>(<argument><expr><name>frame</name></expr></argument>,
<argument><expr><name>AV_FRAME_DATA_STEREO3D</name></expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>AVStereo3D</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>side_data</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name><name>side_data</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>AVStereo3D</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><operator>(</operator><name>AVStereo3D</name> <operator>*</operator><operator>)</operator><name><name>side_data</name><operator>-&gt;</operator><name>data</name></name></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>stereo3d_type_names</name><index>[]</index></name> <init>= <expr><block>{
<expr><index>[<expr><name>AV_STEREO3D_2D</name></expr>]</index> <operator>=</operator> <literal type="string">"2D"</literal></expr>,
<expr><index>[<expr><name>AV_STEREO3D_SIDEBYSIDE</name></expr>]</index> <operator>=</operator> <literal type="string">"side by side"</literal></expr>,
<expr><index>[<expr><name>AV_STEREO3D_TOPBOTTOM</name></expr>]</index> <operator>=</operator> <literal type="string">"top and bottom"</literal></expr>,
<expr><index>[<expr><name>AV_STEREO3D_FRAMESEQUENCE</name></expr>]</index> <operator>=</operator> <literal type="string">"frame alternate"</literal></expr>,
<expr><index>[<expr><name>AV_STEREO3D_CHECKERBOARD</name></expr>]</index> <operator>=</operator> <literal type="string">"checkerboard"</literal></expr>,
<expr><index>[<expr><name>AV_STEREO3D_SIDEBYSIDE_QUINCUNX</name></expr>]</index> <operator>=</operator> <literal type="string">"side by side (quincunx subsampling)"</literal></expr>,
<expr><index>[<expr><name>AV_STEREO3D_LINES</name></expr>]</index> <operator>=</operator> <literal type="string">"interleaved lines"</literal></expr>,
<expr><index>[<expr><name>AV_STEREO3D_COLUMNS</name></expr>]</index> <operator>=</operator> <literal type="string">"interleaved columns"</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>av_stereo3d_type_name</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>type</name> <operator>&gt;=</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>stereo3d_type_names</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="string">"unknown"</literal></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><name><name>stereo3d_type_names</name><index>[<expr><name>type</name></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>av_stereo3d_from_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>stereo3d_type_names</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>len</name> <init>= <expr><call><name>strlen</name><argument_list>(<argument><expr><name><name>stereo3d_type_names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>strncmp</name><argument_list>(<argument><expr><name><name>stereo3d_type_names</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>i</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>

<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>
</unit>
