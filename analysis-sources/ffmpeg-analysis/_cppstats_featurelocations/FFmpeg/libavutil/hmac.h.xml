<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavutil\hmac.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVUTIL_HMAC_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVUTIL_HMAC_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"version.h"</cpp:file></cpp:include>






<enum>enum <name>AVHMACType</name> <block>{
<decl><name>AV_HMAC_MD5</name></decl>,
<decl><name>AV_HMAC_SHA1</name></decl>,
<decl><name>AV_HMAC_SHA224</name></decl>,
<decl><name>AV_HMAC_SHA256</name></decl>,
<decl><name>AV_HMAC_SHA384</name></decl>,
<decl><name>AV_HMAC_SHA512</name></decl>,
}</block>;</enum>

<typedef>typedef <type><name><name>struct</name> <name>AVHMAC</name></name></type> <name>AVHMAC</name>;</typedef>





<function_decl><type><name>AVHMAC</name> <modifier>*</modifier></type><name>av_hmac_alloc</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVHMACType</name></name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>av_hmac_free</name><parameter_list>(<parameter><decl><type><name>AVHMAC</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>av_hmac_init</name><parameter_list>(<parameter><decl><type><name>AVHMAC</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>keylen</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>av_hmac_update</name><parameter_list>(<parameter><decl><type><name>AVHMAC</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> <name>av_hmac_final</name><parameter_list>(<parameter><decl><type><name>AVHMAC</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>outlen</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>int</name></type> <name>av_hmac_calc</name><parameter_list>(<parameter><decl><type><name>AVHMAC</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>keylen</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>outlen</name></decl></parameter>)</parameter_list>;</function_decl>





<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
