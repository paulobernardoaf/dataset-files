<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\options_table.h">




















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_OPTIONS_TABLE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_OPTIONS_TABLE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;float.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"version.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OFFSET</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>offsetof(AVCodecContext,x)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFAULT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V</name></cpp:macro> <cpp:value>AV_OPT_FLAG_VIDEO_PARAM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>A</name></cpp:macro> <cpp:value>AV_OPT_FLAG_AUDIO_PARAM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S</name></cpp:macro> <cpp:value>AV_OPT_FLAG_SUBTITLE_PARAM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>E</name></cpp:macro> <cpp:value>AV_OPT_FLAG_ENCODING_PARAM</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>D</name></cpp:macro> <cpp:value>AV_OPT_FLAG_DECODING_PARAM</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_CODEC_DEFAULT_BITRATE</name></cpp:macro> <cpp:value>200*1000</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVOption</name></type> <name><name>avcodec_options</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><literal type="string">"b"</literal></expr>, <expr><literal type="string">"set bitrate (in bits/s)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>bit_rate</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_DEFAULT_BITRATE</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT64_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ab"</literal></expr>, <expr><literal type="string">"set bitrate (in bits/s)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>bit_rate</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">128</literal><operator>*</operator><literal type="number">1000</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt"</literal></expr>, <expr><literal type="string">"Set video bitrate tolerance (in bits/s). In 1-pass mode, bitrate tolerance specifies how far "</literal>
<literal type="string">"ratecontrol is willing to deviate from the target average bitrate value. This is not related "</literal>
<literal type="string">"to minimum/maximum bitrate. Lowering tolerance too much has an adverse effect on quality."</literal></expr>,
<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>bit_rate_tolerance</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_DEFAULT_BITRATE</name><operator>*</operator><literal type="number">20</literal></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"flags"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>UINT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>S</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unaligned"</literal></expr>, <expr><literal type="string">"allow decoders to produce unaligned output"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_UNALIGNED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name> <operator>|</operator> <name>D</name></expr>, <expr><literal type="string">"flags"</literal></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"mv4"</literal></expr>, <expr><literal type="string">"use four motion vectors per macroblock (MPEG-4)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_4MV</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"qpel"</literal></expr>, <expr><literal type="string">"use 1/4-pel motion compensation"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_QPEL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"loop"</literal></expr>, <expr><literal type="string">"use loop filter"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_LOOP_FILTER</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"qscale"</literal></expr>, <expr><literal type="string">"use fixed qscale"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_QSCALE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"pass1"</literal></expr>, <expr><literal type="string">"use internal 2-pass ratecontrol in first pass mode"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_PASS1</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"pass2"</literal></expr>, <expr><literal type="string">"use internal 2-pass ratecontrol in second pass mode"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_PASS2</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"gray"</literal></expr>, <expr><literal type="string">"only decode/encode grayscale"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_GRAY</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"psnr"</literal></expr>, <expr><literal type="string">"error[?] variables will be set during encoding"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_PSNR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"truncated"</literal></expr>, <expr><literal type="string">"Input bitstream might be randomly truncated"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_TRUNCATED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ildct"</literal></expr>, <expr><literal type="string">"use interlaced DCT"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_INTERLACED_DCT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"low_delay"</literal></expr>, <expr><literal type="string">"force low delay"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_LOW_DELAY</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"global_header"</literal></expr>, <expr><literal type="string">"place global headers in extradata instead of every keyframe"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_GLOBAL_HEADER</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bitexact"</literal></expr>, <expr><literal type="string">"use only bitexact functions (except (I)DCT)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_BITEXACT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>S</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"aic"</literal></expr>, <expr><literal type="string">"H.263 advanced intra coding / MPEG-4 AC prediction"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_AC_PRED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ilme"</literal></expr>, <expr><literal type="string">"interlaced motion estimation"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_INTERLACED_ME</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"cgop"</literal></expr>, <expr><literal type="string">"closed GOP"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_CLOSED_GOP</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"output_corrupt"</literal></expr>, <expr><literal type="string">"Output even potentially corrupted frames"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_OUTPUT_CORRUPT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"drop_changed"</literal></expr>, <expr><literal type="string">"Drop frames whose parameters differ from first decoded frame"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG_DROPCHANGED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"flags2"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>flags2</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>UINT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name><operator>|</operator><name>S</name></expr>, <expr><literal type="string">"flags2"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"fast"</literal></expr>, <expr><literal type="string">"allow non-spec-compliant speedup tricks"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG2_FAST</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags2"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"noout"</literal></expr>, <expr><literal type="string">"skip bitstream encoding"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG2_NO_OUTPUT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags2"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ignorecrop"</literal></expr>, <expr><literal type="string">"ignore cropping information from sps"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG2_IGNORE_CROP</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"flags2"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"local_header"</literal></expr>, <expr><literal type="string">"place global headers at every keyframe instead of in extradata"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG2_LOCAL_HEADER</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"flags2"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"chunks"</literal></expr>, <expr><literal type="string">"Frame data might be split into multiple chunks"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG2_CHUNKS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"flags2"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"showall"</literal></expr>, <expr><literal type="string">"Show all frames before the first keyframe"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG2_SHOW_ALL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"flags2"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"export_mvs"</literal></expr>, <expr><literal type="string">"export motion vectors through frame side data"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG2_EXPORT_MVS</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"flags2"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"skip_manual"</literal></expr>, <expr><literal type="string">"do not skip samples and export skip information as frame side data"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG2_SKIP_MANUAL</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"flags2"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ass_ro_flush_noop"</literal></expr>, <expr><literal type="string">"do not reset ASS ReadOrder field on flush"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_FLAG2_RO_FLUSH_NOOP</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>S</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"flags2"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"export_side_data"</literal></expr>, <expr><literal type="string">"Export metadata as side data"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>export_side_data</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>UINT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>S</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"export_side_data"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mvs"</literal></expr>, <expr><literal type="string">"export motion vectors through frame side data"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_EXPORT_DATA_MVS</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"export_side_data"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"prft"</literal></expr>, <expr><literal type="string">"export Producer Reference Time through packet side data"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_CODEC_EXPORT_DATA_PRFT</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>S</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"export_side_data"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"time_base"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>time_base</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_RATIONAL</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"g"</literal></expr>, <expr><literal type="string">"set the group of picture (GOP) size"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>gop_size</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">12</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ar"</literal></expr>, <expr><literal type="string">"set audio sampling rate (in Hz)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>sample_rate</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ac"</literal></expr>, <expr><literal type="string">"set number of audio channels"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>channels</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"cutoff"</literal></expr>, <expr><literal type="string">"set cutoff bandwidth"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>cutoff</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"frame_size"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>frame_size</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"frame_number"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>frame_number</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"delay"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>delay</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"qcomp"</literal></expr>, <expr><literal type="string">"video quantizer scale compression (VBR). Constant of ratecontrol equation. "</literal>
<literal type="string">"Recommended range for default rc_eq: 0.0-1.0"</literal></expr>,
<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>qcompress</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0.5</literal></expr> }</block></expr>, <expr><operator>-</operator><name>FLT_MAX</name></expr>, <expr><name>FLT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"qblur"</literal></expr>, <expr><literal type="string">"video quantizer scale blur (VBR)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>qblur</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0.5</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>FLT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"qmin"</literal></expr>, <expr><literal type="string">"minimum video quantizer scale (VBR)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>qmin</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">2</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">69</literal></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"qmax"</literal></expr>, <expr><literal type="string">"maximum video quantizer scale (VBR)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>qmax</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">31</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1024</literal></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"qdiff"</literal></expr>, <expr><literal type="string">"maximum difference between the quantizer scales (VBR)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_qdiff</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">3</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bf"</literal></expr>, <expr><literal type="string">"set maximum number of B-frames between non-B-frames"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_b_frames</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"b_qfactor"</literal></expr>, <expr><literal type="string">"QP factor between P- and B-frames"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>b_quant_factor</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">1.25</literal></expr> }</block></expr>, <expr><operator>-</operator><name>FLT_MAX</name></expr>, <expr><name>FLT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PRIVATE_OPT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"b_strategy"</literal></expr>, <expr><literal type="string">"strategy to choose between I/P/B-frames"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>b_frame_strategy</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ps"</literal></expr>, <expr><literal type="string">"RTP payload size in bytes"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>rtp_payload_size</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_STAT_BITS</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"mv_bits"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>mv_bits</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"header_bits"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>header_bits</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"i_tex_bits"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>i_tex_bits</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"p_tex_bits"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>p_tex_bits</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"i_count"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>i_count</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"p_count"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>p_count</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"skip_count"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>skip_count</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"misc_bits"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>misc_bits</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"frame_bits"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>frame_bits</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"codec_tag"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>codec_tag</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bug"</literal></expr>, <expr><literal type="string">"work around not autodetected encoder bugs"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>workaround_bugs</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_AUTODETECT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"autodetect"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_AUTODETECT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"xvid_ilace"</literal></expr>, <expr><literal type="string">"Xvid interlacing bug (autodetected if FOURCC == XVIX)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_XVID_ILACE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ump4"</literal></expr>, <expr><literal type="string">"(autodetected if FOURCC == UMP4)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_UMP4</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"no_padding"</literal></expr>, <expr><literal type="string">"padding bug (autodetected)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_NO_PADDING</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"amv"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_AMV</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"qpel_chroma"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_QPEL_CHROMA</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"std_qpel"</literal></expr>, <expr><literal type="string">"old standard qpel (autodetected per FOURCC/version)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_STD_QPEL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"qpel_chroma2"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_QPEL_CHROMA2</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"direct_blocksize"</literal></expr>, <expr><literal type="string">"direct-qpel-blocksize bug (autodetected per FOURCC/version)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_DIRECT_BLOCKSIZE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"edge"</literal></expr>, <expr><literal type="string">"edge padding bug (autodetected per FOURCC/version)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_EDGE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"hpel_chroma"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_HPEL_CHROMA</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"dc_clip"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_DC_CLIP</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ms"</literal></expr>, <expr><literal type="string">"work around various bugs in Microsoft's broken decoders"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_MS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"trunc"</literal></expr>, <expr><literal type="string">"truncated frames"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_TRUNCATED</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"iedge"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_BUG_IEDGE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"bug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"strict"</literal></expr>, <expr><literal type="string">"how strictly to follow the standards"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>strict_std_compliance</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"strict"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"very"</literal></expr>, <expr><literal type="string">"strictly conform to a older more strict version of the spec or reference software"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_COMPLIANCE_VERY_STRICT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"strict"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"strict"</literal></expr>, <expr><literal type="string">"strictly conform to all the things in the spec no matter what the consequences"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_COMPLIANCE_STRICT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"strict"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"normal"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_COMPLIANCE_NORMAL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"strict"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unofficial"</literal></expr>, <expr><literal type="string">"allow unofficial extensions"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_COMPLIANCE_UNOFFICIAL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"strict"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"experimental"</literal></expr>, <expr><literal type="string">"allow non-standardized experimental things"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_COMPLIANCE_EXPERIMENTAL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"strict"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"b_qoffset"</literal></expr>, <expr><literal type="string">"QP offset between P- and B-frames"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>b_quant_offset</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">1.25</literal></expr> }</block></expr>, <expr><operator>-</operator><name>FLT_MAX</name></expr>, <expr><name>FLT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"err_detect"</literal></expr>, <expr><literal type="string">"set error detection flags"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>err_recognition</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"crccheck"</literal></expr>, <expr><literal type="string">"verify embedded CRCs"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_CRCCHECK</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bitstream"</literal></expr>, <expr><literal type="string">"detect bitstream specification deviations"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_BITSTREAM</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"buffer"</literal></expr>, <expr><literal type="string">"detect improper bitstream length"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_BUFFER</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"explode"</literal></expr>, <expr><literal type="string">"abort decoding on minor error detection"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_EXPLODE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ignore_err"</literal></expr>, <expr><literal type="string">"ignore errors"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_IGNORE_ERR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"careful"</literal></expr>, <expr><literal type="string">"consider things that violate the spec, are fast to check and have not been seen in the wild as errors"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_CAREFUL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"compliant"</literal></expr>, <expr><literal type="string">"consider all spec non compliancies as errors"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_COMPLIANT</name> <operator>|</operator> <name>AV_EF_CAREFUL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"aggressive"</literal></expr>, <expr><literal type="string">"consider things that a sane encoder should not do as an error"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_EF_AGGRESSIVE</name> <operator>|</operator> <name>AV_EF_COMPLIANT</name> <operator>|</operator> <name>AV_EF_CAREFUL</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"err_detect"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"has_b_frames"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>has_b_frames</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"block_align"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>block_align</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PRIVATE_OPT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"mpeg_quant"</literal></expr>, <expr><literal type="string">"use MPEG quantizers instead of H.263"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>mpeg_quant</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"rc_override_count"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>rc_override_count</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"maxrate"</literal></expr>, <expr><literal type="string">"maximum bitrate (in bits/s). Used for VBV together with bufsize."</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>rc_max_rate</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"minrate"</literal></expr>, <expr><literal type="string">"minimum bitrate (in bits/s). Most useful in setting up a CBR encode. It is of little use otherwise."</literal></expr>,
<expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>rc_min_rate</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bufsize"</literal></expr>, <expr><literal type="string">"set ratecontrol buffer size (in bits)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>rc_buffer_size</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"i_qfactor"</literal></expr>, <expr><literal type="string">"QP factor between P- and I-frames"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>i_quant_factor</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <operator>-</operator><literal type="number">0.8</literal></expr> }</block></expr>, <expr><operator>-</operator><name>FLT_MAX</name></expr>, <expr><name>FLT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"i_qoffset"</literal></expr>, <expr><literal type="string">"QP offset between P- and I-frames"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>i_quant_offset</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0.0</literal></expr> }</block></expr>, <expr><operator>-</operator><name>FLT_MAX</name></expr>, <expr><name>FLT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"dct"</literal></expr>, <expr><literal type="string">"DCT algorithm"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dct_algo</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"dct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"auto"</literal></expr>, <expr><literal type="string">"autoselect a good one"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DCT_AUTO</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"dct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"fastint"</literal></expr>, <expr><literal type="string">"fast integer"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DCT_FASTINT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"dct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"int"</literal></expr>, <expr><literal type="string">"accurate integer"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DCT_INT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"dct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mmx"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DCT_MMX</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"dct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"altivec"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DCT_ALTIVEC</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"dct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"faan"</literal></expr>, <expr><literal type="string">"floating point AAN DCT"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DCT_FAAN</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"dct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"lumi_mask"</literal></expr>, <expr><literal type="string">"compresses bright areas stronger than medium ones"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>lumi_masking</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><operator>-</operator><name>FLT_MAX</name></expr>, <expr><name>FLT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"tcplx_mask"</literal></expr>, <expr><literal type="string">"temporal complexity masking"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>temporal_cplx_masking</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><operator>-</operator><name>FLT_MAX</name></expr>, <expr><name>FLT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"scplx_mask"</literal></expr>, <expr><literal type="string">"spatial complexity masking"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>spatial_cplx_masking</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><operator>-</operator><name>FLT_MAX</name></expr>, <expr><name>FLT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"p_mask"</literal></expr>, <expr><literal type="string">"inter masking"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>p_masking</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><operator>-</operator><name>FLT_MAX</name></expr>, <expr><name>FLT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"dark_mask"</literal></expr>, <expr><literal type="string">"compresses dark areas stronger than medium ones"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dark_masking</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><operator>-</operator><name>FLT_MAX</name></expr>, <expr><name>FLT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"idct"</literal></expr>, <expr><literal type="string">"select IDCT implementation"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>idct_algo</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"auto"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_AUTO</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"int"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_INT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"simple"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_SIMPLE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"simplemmx"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_SIMPLEMMX</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"arm"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_ARM</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"altivec"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_ALTIVEC</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"simplearm"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_SIMPLEARM</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"simplearmv5te"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_SIMPLEARMV5TE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"simplearmv6"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_SIMPLEARMV6</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"simpleneon"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_SIMPLENEON</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"xvid"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_XVID</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"xvidmmx"</literal></expr>, <expr><literal type="string">"deprecated, for compatibility only"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_XVID</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"faani"</literal></expr>, <expr><literal type="string">"floating point AAN IDCT"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_FAAN</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"simpleauto"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_IDCT_SIMPLEAUTO</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"idct"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"slice_count"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>slice_count</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ec"</literal></expr>, <expr><literal type="string">"set error concealment strategy"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>error_concealment</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">3</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"ec"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"guess_mvs"</literal></expr>, <expr><literal type="string">"iterative motion vector (MV) search (slow)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_EC_GUESS_MVS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"ec"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"deblock"</literal></expr>, <expr><literal type="string">"use strong deblock filter for damaged MBs"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_EC_DEBLOCK</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"ec"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"favor_inter"</literal></expr>, <expr><literal type="string">"favor predicting from the previous frame"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_EC_FAVOR_INTER</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"ec"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bits_per_coded_sample"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>bits_per_coded_sample</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PRIVATE_OPT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"pred"</literal></expr>, <expr><literal type="string">"prediction method"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>prediction_method</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"pred"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"left"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PRED_LEFT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"pred"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"plane"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PRED_PLANE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"pred"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"median"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PRED_MEDIAN</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"pred"</literal></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"aspect"</literal></expr>, <expr><literal type="string">"sample aspect ratio"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>sample_aspect_ratio</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_RATIONAL</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"sar"</literal></expr>, <expr><literal type="string">"sample aspect ratio"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>sample_aspect_ratio</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_RATIONAL</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"debug"</literal></expr>, <expr><literal type="string">"print specific debug info"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>debug</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>S</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"pict"</literal></expr>, <expr><literal type="string">"picture info"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_PICT_INFO</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"rc"</literal></expr>, <expr><literal type="string">"rate control"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_RC</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bitstream"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_BITSTREAM</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mb_type"</literal></expr>, <expr><literal type="string">"macroblock (MB) type"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_MB_TYPE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"qp"</literal></expr>, <expr><literal type="string">"per-block quantization parameter (QP)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_QP</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_DEBUG_MV</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"mv"</literal></expr>, <expr><literal type="string">"motion vector"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_MV</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"dct_coeff"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_DCT_COEFF</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"green_metadata"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_GREEN_MD</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"skip"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_SKIP</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"startcode"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_STARTCODE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"er"</literal></expr>, <expr><literal type="string">"error recognition"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_ER</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mmco"</literal></expr>, <expr><literal type="string">"memory management control operations (H.264)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_MMCO</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bugs"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_BUGS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_DEBUG_MV</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"vis_qp"</literal></expr>, <expr><literal type="string">"visualize quantization parameter (QP), lower QP are tinted greener"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_VIS_QP</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"vis_mb_type"</literal></expr>, <expr><literal type="string">"visualize block types"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_VIS_MB_TYPE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"buffers"</literal></expr>, <expr><literal type="string">"picture buffer allocations"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_BUFFERS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"thread_ops"</literal></expr>, <expr><literal type="string">"threading operations"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_THREADS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"nomc"</literal></expr>, <expr><literal type="string">"skip motion compensation"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_DEBUG_NOMC</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"debug"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"dia_size"</literal></expr>, <expr><literal type="string">"diamond type &amp; size for motion estimation"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dia_size</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"last_pred"</literal></expr>, <expr><literal type="string">"amount of motion predictors from the previous frame"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>last_predictor_count</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PRIVATE_OPT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"preme"</literal></expr>, <expr><literal type="string">"pre motion estimation"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>pre_me</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"pre_dia_size"</literal></expr>, <expr><literal type="string">"diamond type &amp; size for motion estimation pre-pass"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>pre_dia_size</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"subq"</literal></expr>, <expr><literal type="string">"sub-pel motion estimation quality"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>me_subpel_quality</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">8</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"me_range"</literal></expr>, <expr><literal type="string">"limit motion vectors range (1023 for DivX player)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>me_range</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"global_quality"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>global_quality</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_CODER_TYPE</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"coder"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>coder_type</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"coder"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"vlc"</literal></expr>, <expr><literal type="string">"variable length coder / Huffman coder"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CODER_TYPE_VLC</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"coder"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ac"</literal></expr>, <expr><literal type="string">"arithmetic coder"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CODER_TYPE_AC</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"coder"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"raw"</literal></expr>, <expr><literal type="string">"raw (no encoding)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CODER_TYPE_RAW</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"coder"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"rle"</literal></expr>, <expr><literal type="string">"run-length coder"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CODER_TYPE_RLE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"coder"</literal></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PRIVATE_OPT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"context"</literal></expr>, <expr><literal type="string">"context model"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>context_model</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"slice_flags"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>slice_flags</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mbd"</literal></expr>, <expr><literal type="string">"macroblock decision algorithm (high quality mode)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>mb_decision</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"mbd"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"simple"</literal></expr>, <expr><literal type="string">"use mbcmp"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_MB_DECISION_SIMPLE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"mbd"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bits"</literal></expr>, <expr><literal type="string">"use fewest bits"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_MB_DECISION_BITS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"mbd"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"rd"</literal></expr>, <expr><literal type="string">"use best rate distortion"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_MB_DECISION_RD</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"mbd"</literal></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PRIVATE_OPT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"sc_threshold"</literal></expr>, <expr><literal type="string">"scene change threshold"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>scenechange_threshold</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PRIVATE_OPT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"nr"</literal></expr>, <expr><literal type="string">"noise reduction"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>noise_reduction</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"rc_init_occupancy"</literal></expr>, <expr><literal type="string">"number of bits which should be loaded into the rc buffer before decoding starts"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>rc_initial_buffer_occupancy</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"threads"</literal></expr>, <expr><literal type="string">"set the number of threads"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>thread_count</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"threads"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"auto"</literal></expr>, <expr><literal type="string">"autodetect a suitable number of threads to use"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"threads"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"dc"</literal></expr>, <expr><literal type="string">"intra_dc_precision"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>intra_dc_precision</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"nssew"</literal></expr>, <expr><literal type="string">"nsse weight"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>nsse_weight</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">8</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"skip_top"</literal></expr>, <expr><literal type="string">"number of macroblock rows at the top which are skipped"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>skip_top</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"skip_bottom"</literal></expr>, <expr><literal type="string">"number of macroblock rows at the bottom which are skipped"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>skip_bottom</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"profile"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>profile</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_UNKNOWN</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unknown"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_UNKNOWN</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"aac_main"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_AAC_MAIN</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"aac_low"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_AAC_LOW</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"aac_ssr"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_AAC_SSR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"aac_ltp"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_AAC_LTP</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"aac_he"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_AAC_HE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"aac_he_v2"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_AAC_HE_V2</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"aac_ld"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_AAC_LD</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"aac_eld"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_AAC_ELD</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mpeg2_aac_low"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_MPEG2_AAC_LOW</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mpeg2_aac_he"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_MPEG2_AAC_HE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"dts"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_DTS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"dts_es"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_DTS_ES</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"dts_96_24"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_DTS_96_24</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"dts_hd_hra"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_DTS_HD_HRA</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"dts_hd_ma"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_DTS_HD_MA</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mpeg4_sp"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_MPEG4_SIMPLE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mpeg4_core"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_MPEG4_CORE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mpeg4_main"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_MPEG4_MAIN</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mpeg4_asp"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_MPEG4_ADVANCED_SIMPLE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"main10"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_HEVC_MAIN_10</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"msbc"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_PROFILE_SBC_MSBC</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"profile"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"level"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>level</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_LEVEL_UNKNOWN</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"level"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unknown"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_LEVEL_UNKNOWN</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"level"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"lowres"</literal></expr>, <expr><literal type="string">"decode at 1= 1/2, 2=1/4, 3=1/8 resolutions"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>lowres</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>D</name></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PRIVATE_OPT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"skip_threshold"</literal></expr>, <expr><literal type="string">"frame skip threshold"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>frame_skip_threshold</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"skip_factor"</literal></expr>, <expr><literal type="string">"frame skip factor"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>frame_skip_factor</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"skip_exp"</literal></expr>, <expr><literal type="string">"frame skip exponent"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>frame_skip_exp</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"skipcmp"</literal></expr>, <expr><literal type="string">"frame skip compare function"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>frame_skip_cmp</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_DCTMAX</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"cmp"</literal></expr>, <expr><literal type="string">"full-pel ME compare function"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>me_cmp</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"subcmp"</literal></expr>, <expr><literal type="string">"sub-pel ME compare function"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>me_sub_cmp</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mbcmp"</literal></expr>, <expr><literal type="string">"macroblock compare function"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>mb_cmp</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ildctcmp"</literal></expr>, <expr><literal type="string">"interlaced DCT compare function"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>ildct_cmp</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_VSAD</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"precmp"</literal></expr>, <expr><literal type="string">"pre motion estimation compare function"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>me_pre_cmp</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"sad"</literal></expr>, <expr><literal type="string">"sum of absolute differences, fast"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_SAD</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"sse"</literal></expr>, <expr><literal type="string">"sum of squared errors"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_SSE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"satd"</literal></expr>, <expr><literal type="string">"sum of absolute Hadamard transformed differences"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_SATD</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"dct"</literal></expr>, <expr><literal type="string">"sum of absolute DCT transformed differences"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_DCT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"psnr"</literal></expr>, <expr><literal type="string">"sum of squared quantization errors (avoid, low quality)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_PSNR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bit"</literal></expr>, <expr><literal type="string">"number of bits needed for the block"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_BIT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"rd"</literal></expr>, <expr><literal type="string">"rate distortion optimal, slow"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_RD</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"zero"</literal></expr>, <expr><literal type="string">"0"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_ZERO</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"vsad"</literal></expr>, <expr><literal type="string">"sum of absolute vertical differences"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_VSAD</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"vsse"</literal></expr>, <expr><literal type="string">"sum of squared vertical differences"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_VSSE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"nsse"</literal></expr>, <expr><literal type="string">"noise preserving sum of squared differences"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_NSSE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_SNOW_ENCODER</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"w53"</literal></expr>, <expr><literal type="string">"5/3 wavelet, only used in snow"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_W53</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"w97"</literal></expr>, <expr><literal type="string">"9/7 wavelet, only used in snow"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_W97</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"dctmax"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_DCTMAX</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"chroma"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_CHROMA</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"msad"</literal></expr>, <expr><literal type="string">"sum of absolute differences, median predicted"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_CMP_MEDIAN_SAD</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"cmp_func"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mblmin"</literal></expr>, <expr><literal type="string">"minimum macroblock Lagrange factor (VBR)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>mb_lmin</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_QP2LAMBDA</name> <operator>*</operator> <literal type="number">2</literal></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>FF_LAMBDA_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mblmax"</literal></expr>, <expr><literal type="string">"maximum macroblock Lagrange factor (VBR)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>mb_lmax</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_QP2LAMBDA</name> <operator>*</operator> <literal type="number">31</literal></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>FF_LAMBDA_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PRIVATE_OPT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"mepc"</literal></expr>, <expr><literal type="string">"motion estimation bitrate penalty compensation (1.0 = 256)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>me_penalty_compensation</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">256</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"skip_loop_filter"</literal></expr>, <expr><literal type="string">"skip loop filtering process for the selected frames"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>skip_loop_filter</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVDISCARD_DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"avdiscard"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"skip_idct"</literal></expr> , <expr><literal type="string">"skip IDCT/dequantization for the selected frames"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>skip_idct</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVDISCARD_DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"avdiscard"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"skip_frame"</literal></expr> , <expr><literal type="string">"skip decoding for the selected frames"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>skip_frame</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVDISCARD_DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"avdiscard"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"none"</literal></expr> , <expr><literal type="string">"discard no frame"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVDISCARD_NONE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"avdiscard"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"default"</literal></expr> , <expr><literal type="string">"discard useless frames"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVDISCARD_DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"avdiscard"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"noref"</literal></expr> , <expr><literal type="string">"discard all non-reference frames"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVDISCARD_NONREF</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"avdiscard"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bidir"</literal></expr> , <expr><literal type="string">"discard all bidirectional frames"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVDISCARD_BIDIR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"avdiscard"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"nokey"</literal></expr> , <expr><literal type="string">"discard all frames except keyframes"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVDISCARD_NONKEY</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"avdiscard"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"nointra"</literal></expr> , <expr><literal type="string">"discard all frames except I frames"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVDISCARD_NONINTRA</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"avdiscard"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"all"</literal></expr> , <expr><literal type="string">"discard all frames"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVDISCARD_ALL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"avdiscard"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bidir_refine"</literal></expr>, <expr><literal type="string">"refine the two motion vectors used in bidirectional macroblocks"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>bidir_refine</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PRIVATE_OPT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"brd_scale"</literal></expr>, <expr><literal type="string">"downscale frames for dynamic B-frame decision"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>brd_scale</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"keyint_min"</literal></expr>, <expr><literal type="string">"minimum interval between IDR-frames"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>keyint_min</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">25</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"refs"</literal></expr>, <expr><literal type="string">"reference frames to consider for motion compensation"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>refs</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PRIVATE_OPT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"chromaoffset"</literal></expr>, <expr><literal type="string">"chroma QP offset from luma"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>chromaoffset</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"trellis"</literal></expr>, <expr><literal type="string">"rate-distortion optimal quantization"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>trellis</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mv0_threshold"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>mv0_threshold</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">256</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PRIVATE_OPT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"b_sensitivity"</literal></expr>, <expr><literal type="string">"adjust sensitivity of b_frame_strategy 1"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>b_sensitivity</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">40</literal></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"compression_level"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>compression_level</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_COMPRESSION_DEFAULT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_PRIVATE_OPT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"min_prediction_order"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>min_prediction_order</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"max_prediction_order"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_prediction_order</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"timecode_frame_start"</literal></expr>, <expr><literal type="string">"GOP timecode frame start number, in non-drop-frame format"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>timecode_frame_start</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>INT64_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"bits_per_raw_sample"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>bits_per_raw_sample</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"channel_layout"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>channel_layout</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_UINT64</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>UINT64_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"channel_layout"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"request_channel_layout"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>request_channel_layout</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_UINT64</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>UINT64_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"request_channel_layout"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"rc_max_vbv_use"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>rc_max_available_vbv_use</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><name>FLT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"rc_min_vbv_use"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>rc_min_vbv_overflow_use</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">3</literal></expr> }</block></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><name>FLT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ticks_per_frame"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>ticks_per_frame</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"color_primaries"</literal></expr>, <expr><literal type="string">"color primaries"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>color_primaries</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_UNSPECIFIED</name></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt709"</literal></expr>, <expr><literal type="string">"BT.709"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_BT709</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unknown"</literal></expr>, <expr><literal type="string">"Unspecified"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_UNSPECIFIED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt470m"</literal></expr>, <expr><literal type="string">"BT.470 M"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_BT470M</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt470bg"</literal></expr>, <expr><literal type="string">"BT.470 BG"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_BT470BG</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte170m"</literal></expr>, <expr><literal type="string">"SMPTE 170 M"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_SMPTE170M</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte240m"</literal></expr>, <expr><literal type="string">"SMPTE 240 M"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_SMPTE240M</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"film"</literal></expr>, <expr><literal type="string">"Film"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_FILM</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt2020"</literal></expr>, <expr><literal type="string">"BT.2020"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_BT2020</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte428"</literal></expr>, <expr><literal type="string">"SMPTE 428-1"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_SMPTE428</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte428_1"</literal></expr>, <expr><literal type="string">"SMPTE 428-1"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_SMPTE428</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte431"</literal></expr>, <expr><literal type="string">"SMPTE 431-2"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_SMPTE431</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte432"</literal></expr>, <expr><literal type="string">"SMPTE 422-1"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_SMPTE432</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"jedec-p22"</literal></expr>, <expr><literal type="string">"JEDEC P22"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_JEDEC_P22</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ebu3213"</literal></expr>, <expr><literal type="string">"EBU 3213-E"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_EBU3213</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unspecified"</literal></expr>, <expr><literal type="string">"Unspecified"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_PRI_UNSPECIFIED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_primaries_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"color_trc"</literal></expr>, <expr><literal type="string">"color transfer characteristics"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>color_trc</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_UNSPECIFIED</name></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt709"</literal></expr>, <expr><literal type="string">"BT.709"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_BT709</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unknown"</literal></expr>, <expr><literal type="string">"Unspecified"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_UNSPECIFIED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"gamma22"</literal></expr>, <expr><literal type="string">"BT.470 M"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_GAMMA22</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"gamma28"</literal></expr>, <expr><literal type="string">"BT.470 BG"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_GAMMA28</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte170m"</literal></expr>, <expr><literal type="string">"SMPTE 170 M"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_SMPTE170M</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte240m"</literal></expr>, <expr><literal type="string">"SMPTE 240 M"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_SMPTE240M</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"linear"</literal></expr>, <expr><literal type="string">"Linear"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_LINEAR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"log100"</literal></expr>, <expr><literal type="string">"Log"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_LOG</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"log316"</literal></expr>, <expr><literal type="string">"Log square root"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_LOG_SQRT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"iec61966-2-4"</literal></expr>, <expr><literal type="string">"IEC 61966-2-4"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_IEC61966_2_4</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt1361e"</literal></expr>, <expr><literal type="string">"BT.1361"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_BT1361_ECG</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"iec61966-2-1"</literal></expr>, <expr><literal type="string">"IEC 61966-2-1"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_IEC61966_2_1</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt2020-10"</literal></expr>, <expr><literal type="string">"BT.2020 - 10 bit"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_BT2020_10</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt2020-12"</literal></expr>, <expr><literal type="string">"BT.2020 - 12 bit"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_BT2020_12</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte2084"</literal></expr>, <expr><literal type="string">"SMPTE 2084"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_SMPTE2084</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte428"</literal></expr>, <expr><literal type="string">"SMPTE 428-1"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_SMPTE428</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"arib-std-b67"</literal></expr>, <expr><literal type="string">"ARIB STD-B67"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_ARIB_STD_B67</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unspecified"</literal></expr>, <expr><literal type="string">"Unspecified"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_UNSPECIFIED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"log"</literal></expr>, <expr><literal type="string">"Log"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_LOG</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"log_sqrt"</literal></expr>, <expr><literal type="string">"Log square root"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_LOG_SQRT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"iec61966_2_4"</literal></expr>, <expr><literal type="string">"IEC 61966-2-4"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_IEC61966_2_4</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt1361"</literal></expr>, <expr><literal type="string">"BT.1361"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_BT1361_ECG</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"iec61966_2_1"</literal></expr>, <expr><literal type="string">"IEC 61966-2-1"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_IEC61966_2_1</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt2020_10bit"</literal></expr>, <expr><literal type="string">"BT.2020 - 10 bit"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_BT2020_10</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt2020_12bit"</literal></expr>, <expr><literal type="string">"BT.2020 - 12 bit"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_BT2020_12</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte428_1"</literal></expr>, <expr><literal type="string">"SMPTE 428-1"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_TRC_SMPTE428</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_trc_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"colorspace"</literal></expr>, <expr><literal type="string">"color space"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>colorspace</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_UNSPECIFIED</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"rgb"</literal></expr>, <expr><literal type="string">"RGB"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_RGB</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt709"</literal></expr>, <expr><literal type="string">"BT.709"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_BT709</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unknown"</literal></expr>, <expr><literal type="string">"Unspecified"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_UNSPECIFIED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"fcc"</literal></expr>, <expr><literal type="string">"FCC"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_FCC</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt470bg"</literal></expr>, <expr><literal type="string">"BT.470 BG"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_BT470BG</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte170m"</literal></expr>, <expr><literal type="string">"SMPTE 170 M"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_SMPTE170M</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte240m"</literal></expr>, <expr><literal type="string">"SMPTE 240 M"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_SMPTE240M</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ycgco"</literal></expr>, <expr><literal type="string">"YCGCO"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_YCGCO</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt2020nc"</literal></expr>, <expr><literal type="string">"BT.2020 NCL"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_BT2020_NCL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt2020c"</literal></expr>, <expr><literal type="string">"BT.2020 CL"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_BT2020_CL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"smpte2085"</literal></expr>, <expr><literal type="string">"SMPTE 2085"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_SMPTE2085</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unspecified"</literal></expr>, <expr><literal type="string">"Unspecified"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_UNSPECIFIED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ycocg"</literal></expr>, <expr><literal type="string">"YCGCO"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_YCGCO</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt2020_ncl"</literal></expr>, <expr><literal type="string">"BT.2020 NCL"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_BT2020_NCL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bt2020_cl"</literal></expr>, <expr><literal type="string">"BT.2020 CL"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_SPC_BT2020_CL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"colorspace_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"color_range"</literal></expr>, <expr><literal type="string">"color range"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>color_range</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_RANGE_UNSPECIFIED</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_range_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unknown"</literal></expr>, <expr><literal type="string">"Unspecified"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_RANGE_UNSPECIFIED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_range_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"tv"</literal></expr>, <expr><literal type="string">"MPEG (219*2^(n-8))"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_RANGE_MPEG</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_range_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"pc"</literal></expr>, <expr><literal type="string">"JPEG (2^n-1)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_RANGE_JPEG</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_range_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unspecified"</literal></expr>, <expr><literal type="string">"Unspecified"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_RANGE_UNSPECIFIED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_range_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"mpeg"</literal></expr>, <expr><literal type="string">"MPEG (219*2^(n-8))"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_RANGE_MPEG</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_range_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"jpeg"</literal></expr>, <expr><literal type="string">"JPEG (2^n-1)"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCOL_RANGE_JPEG</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"color_range_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"chroma_sample_location"</literal></expr>, <expr><literal type="string">"chroma sample location"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>chroma_sample_location</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCHROMA_LOC_UNSPECIFIED</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"chroma_sample_location_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unknown"</literal></expr>, <expr><literal type="string">"Unspecified"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCHROMA_LOC_UNSPECIFIED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"chroma_sample_location_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"left"</literal></expr>, <expr><literal type="string">"Left"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCHROMA_LOC_LEFT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"chroma_sample_location_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"center"</literal></expr>, <expr><literal type="string">"Center"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCHROMA_LOC_CENTER</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"chroma_sample_location_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"topleft"</literal></expr>, <expr><literal type="string">"Top-left"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCHROMA_LOC_TOPLEFT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"chroma_sample_location_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"top"</literal></expr>, <expr><literal type="string">"Top"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCHROMA_LOC_TOP</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"chroma_sample_location_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bottomleft"</literal></expr>, <expr><literal type="string">"Bottom-left"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCHROMA_LOC_BOTTOMLEFT</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"chroma_sample_location_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"bottom"</literal></expr>, <expr><literal type="string">"Bottom"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCHROMA_LOC_BOTTOM</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"chroma_sample_location_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"unspecified"</literal></expr>, <expr><literal type="string">"Unspecified"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AVCHROMA_LOC_UNSPECIFIED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"chroma_sample_location_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"log_level_offset"</literal></expr>, <expr><literal type="string">"set the log level offset"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>log_level_offset</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"slices"</literal></expr>, <expr><literal type="string">"set the number of slices, used in parallelized encoding"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>slices</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"thread_type"</literal></expr>, <expr><literal type="string">"select multithreading type"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>thread_type</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_THREAD_SLICE</name><operator>|</operator><name>FF_THREAD_FRAME</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>A</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"thread_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"slice"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_THREAD_SLICE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"thread_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"frame"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_THREAD_FRAME</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>E</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"thread_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"audio_service_type"</literal></expr>, <expr><literal type="string">"audio service type"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>audio_service_type</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_AUDIO_SERVICE_TYPE_MAIN</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_AUDIO_SERVICE_TYPE_NB</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"audio_service_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ma"</literal></expr>, <expr><literal type="string">"Main Audio Service"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_AUDIO_SERVICE_TYPE_MAIN</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"audio_service_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ef"</literal></expr>, <expr><literal type="string">"Effects"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_AUDIO_SERVICE_TYPE_EFFECTS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"audio_service_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"vi"</literal></expr>, <expr><literal type="string">"Visually Impaired"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"audio_service_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"hi"</literal></expr>, <expr><literal type="string">"Hearing Impaired"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"audio_service_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"di"</literal></expr>, <expr><literal type="string">"Dialogue"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_AUDIO_SERVICE_TYPE_DIALOGUE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"audio_service_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"co"</literal></expr>, <expr><literal type="string">"Commentary"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_AUDIO_SERVICE_TYPE_COMMENTARY</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"audio_service_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"em"</literal></expr>, <expr><literal type="string">"Emergency"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_AUDIO_SERVICE_TYPE_EMERGENCY</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"audio_service_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"vo"</literal></expr>, <expr><literal type="string">"Voice Over"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_AUDIO_SERVICE_TYPE_VOICE_OVER</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"audio_service_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ka"</literal></expr>, <expr><literal type="string">"Karaoke"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_AUDIO_SERVICE_TYPE_KARAOKE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"audio_service_type"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"request_sample_fmt"</literal></expr>, <expr><literal type="string">"sample format audio decoders should prefer"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>request_sample_fmt</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_SAMPLE_FMT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>AV_SAMPLE_FMT_NONE</name></expr>}</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"request_sample_fmt"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"pkt_timebase"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>pkt_timebase</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_RATIONAL</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"sub_charenc"</literal></expr>, <expr><literal type="string">"set input text subtitles character encoding"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>sub_charenc</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_STRING</name></expr>, <expr><block>{<expr><operator>.</operator><name>str</name> <operator>=</operator> <name>NULL</name></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>S</name><operator>|</operator><name>D</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"sub_charenc_mode"</literal></expr>, <expr><literal type="string">"set input text subtitles character encoding mode"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>sub_charenc_mode</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_SUB_CHARENC_MODE_AUTOMATIC</name></expr>}</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>S</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"sub_charenc_mode"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"do_nothing"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_SUB_CHARENC_MODE_DO_NOTHING</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>S</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"sub_charenc_mode"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"auto"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_SUB_CHARENC_MODE_AUTOMATIC</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>S</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"sub_charenc_mode"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"pre_decoder"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_SUB_CHARENC_MODE_PRE_DECODER</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>S</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"sub_charenc_mode"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ignore"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_SUB_CHARENC_MODE_IGNORE</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>S</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"sub_charenc_mode"</literal></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_ASS_TIMING</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"sub_text_format"</literal></expr>, <expr><literal type="string">"set decoded text subtitle format"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>sub_text_format</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_SUB_TEXT_FMT_ASS_WITH_TIMINGS</name></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>S</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"sub_text_format"</literal></expr>}</block></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><block>{<expr><literal type="string">"sub_text_format"</literal></expr>, <expr><literal type="string">"set decoded text subtitle format"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>sub_text_format</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_SUB_TEXT_FMT_ASS</name></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>S</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"sub_text_format"</literal></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"ass"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_SUB_TEXT_FMT_ASS</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>S</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"sub_text_format"</literal></expr>}</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_ASS_TIMING</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"ass_with_timings"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>FF_SUB_TEXT_FMT_ASS_WITH_TIMINGS</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>S</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"sub_text_format"</literal></expr>}</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"refcounted_frames"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>refcounted_frames</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>D</name></expr> }</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_SIDEDATA_ONLY_PKT</name></expr></cpp:if>
<expr><block>{<expr><literal type="string">"side_data_only_packets"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>side_data_only_packets</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>E</name></expr> }</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{<expr><literal type="string">"apply_cropping"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>apply_cropping</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>V</name> <operator>|</operator> <name>D</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"skip_alpha"</literal></expr>, <expr><literal type="string">"Skip processing alpha"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>skip_alpha</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"field_order"</literal></expr>, <expr><literal type="string">"Field order"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>field_order</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_FIELD_UNKNOWN</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"field_order"</literal></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"progressive"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_FIELD_PROGRESSIVE</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"field_order"</literal></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"tt"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_FIELD_TT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"field_order"</literal></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"bb"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_FIELD_BB</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"field_order"</literal></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"tb"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_FIELD_TB</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"field_order"</literal></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"bt"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_FIELD_BT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>V</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>, <expr><literal type="string">"field_order"</literal></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"dump_separator"</literal></expr>, <expr><literal type="string">"set information dump field separator"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>dump_separator</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_STRING</name></expr>, <expr><block>{<expr><operator>.</operator><name>str</name> <operator>=</operator> <name>NULL</name></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>S</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"codec_whitelist"</literal></expr>, <expr><literal type="string">"List of decoders that are allowed to be used"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>codec_whitelist</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_STRING</name></expr>, <expr><block>{ <expr><operator>.</operator><name>str</name> <operator>=</operator> <name>NULL</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>S</name><operator>|</operator><name>D</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"pixel_format"</literal></expr>, <expr><literal type="string">"set pixel format"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>pix_fmt</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_PIXEL_FMT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>AV_PIX_FMT_NONE</name></expr>}</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"video_size"</literal></expr>, <expr><literal type="string">"set video size"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>width</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_IMAGE_SIZE</name></expr>, <expr><block>{<expr><operator>.</operator><name>str</name><operator>=</operator><name>NULL</name></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"max_pixels"</literal></expr>, <expr><literal type="string">"Maximum number of pixels"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_pixels</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>INT_MAX</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>V</name><operator>|</operator><name>S</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"max_samples"</literal></expr>, <expr><literal type="string">"Maximum number of samples"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_samples</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>INT_MAX</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>A</name><operator>|</operator><name>D</name><operator>|</operator><name>E</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"hwaccel_flags"</literal></expr>, <expr><name>NULL</name></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>hwaccel_flags</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_HWACCEL_FLAG_IGNORE_LEVEL</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>UINT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr>, <expr><literal type="string">"hwaccel_flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ignore_level"</literal></expr>, <expr><literal type="string">"ignore level even if the codec level used is unknown or higher than the maximum supported level reported by the hardware driver"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_HWACCEL_FLAG_IGNORE_LEVEL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name> <operator>|</operator> <name>D</name></expr>, <expr><literal type="string">"hwaccel_flags"</literal></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"allow_high_depth"</literal></expr>, <expr><literal type="string">"allow to output YUV pixel formats with a different chroma sampling than 4:2:0 and/or other than 8 bits per component"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_HWACCEL_FLAG_ALLOW_HIGH_DEPTH</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name> <operator>|</operator> <name>D</name></expr>, <expr><literal type="string">"hwaccel_flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"allow_profile_mismatch"</literal></expr>, <expr><literal type="string">"attempt to decode anyway if HW accelerated decoder's supported profiles do not exactly match the stream"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_HWACCEL_FLAG_ALLOW_PROFILE_MISMATCH</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name> <operator>|</operator> <name>D</name></expr>, <expr><literal type="string">"hwaccel_flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"extra_hw_frames"</literal></expr>, <expr><literal type="string">"Number of extra hardware frames to allocate for the user"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>extra_hw_frames</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"discard_damaged_percentage"</literal></expr>, <expr><literal type="string">"Percentage of damaged samples to discard a frame"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>discard_damaged_percentage</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">95</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><name>V</name><operator>|</operator><name>D</name></expr> }</block></expr>,
<expr><block>{<expr><name>NULL</name></expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>A</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>V</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>S</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>E</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>D</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>DEFAULT</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>OFFSET</name></cpp:undef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
