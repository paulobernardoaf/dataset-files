<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\tests\h264_levels.c">

















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/common.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/h264_levels.h"</cpp:file></cpp:include>

<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>level_idc</name></decl>;</decl_stmt>
}</block> <decl><name><name>test_sizes</name><index>[]</index></name> <init>= <expr><block>{


<expr><block>{ <expr><literal type="number">176</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, 
<expr><block>{ <expr><literal type="number">352</literal></expr>, <expr><literal type="number">288</literal></expr>, <expr><literal type="number">11</literal></expr> }</block></expr>, 
<expr><block>{ <expr><literal type="number">640</literal></expr>, <expr><literal type="number">480</literal></expr>, <expr><literal type="number">22</literal></expr> }</block></expr>, 
<expr><block>{ <expr><literal type="number">720</literal></expr>, <expr><literal type="number">480</literal></expr>, <expr><literal type="number">22</literal></expr> }</block></expr>, 
<expr><block>{ <expr><literal type="number">720</literal></expr>, <expr><literal type="number">576</literal></expr>, <expr><literal type="number">22</literal></expr> }</block></expr>, 
<expr><block>{ <expr><literal type="number">800</literal></expr>, <expr><literal type="number">600</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>, 
<expr><block>{ <expr><literal type="number">1280</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>, 
<expr><block>{ <expr><literal type="number">1280</literal></expr>, <expr><literal type="number">1024</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>, 
<expr><block>{ <expr><literal type="number">1920</literal></expr>, <expr><literal type="number">1080</literal></expr>, <expr><literal type="number">40</literal></expr> }</block></expr>, 
<expr><block>{ <expr><literal type="number">2048</literal></expr>, <expr><literal type="number">1080</literal></expr>, <expr><literal type="number">42</literal></expr> }</block></expr>, 
<expr><block>{ <expr><literal type="number">2048</literal></expr>, <expr><literal type="number">1536</literal></expr>, <expr><literal type="number">50</literal></expr> }</block></expr>, 
<expr><block>{ <expr><literal type="number">3840</literal></expr>, <expr><literal type="number">2160</literal></expr>, <expr><literal type="number">51</literal></expr> }</block></expr>, 
<expr><block>{ <expr><literal type="number">7680</literal></expr>, <expr><literal type="number">4320</literal></expr>, <expr><literal type="number">60</literal></expr> }</block></expr>, 


<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">256</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">11</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1024</literal></expr>, <expr><literal type="number">21</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1808</literal></expr>, <expr><literal type="number">22</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1824</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">256</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">512</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1024</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">21</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1808</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">22</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1824</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">512</literal></expr>, <expr><literal type="number">4096</literal></expr>, <expr><literal type="number">40</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">256</literal></expr>, <expr><literal type="number">4112</literal></expr>, <expr><literal type="number">42</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">8688</literal></expr>, <expr><literal type="number">1024</literal></expr>, <expr><literal type="number">51</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">8704</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">60</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">16880</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">60</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">16896</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</struct>

<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>framerate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>level_idc</name></decl>;</decl_stmt>
}</block> <decl><name><name>test_framerate</name><index>[]</index></name> <init>= <expr><block>{


<expr><block>{ <expr><literal type="number">176</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">176</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">11</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">320</literal></expr>, <expr><literal type="number">240</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">320</literal></expr>, <expr><literal type="number">240</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">12</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">320</literal></expr>, <expr><literal type="number">240</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">21</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">352</literal></expr>, <expr><literal type="number">288</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">13</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">352</literal></expr>, <expr><literal type="number">288</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">22</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">352</literal></expr>, <expr><literal type="number">576</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">21</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">352</literal></expr>, <expr><literal type="number">576</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">30</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">640</literal></expr>, <expr><literal type="number">480</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">30</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">640</literal></expr>, <expr><literal type="number">480</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">720</literal></expr>, <expr><literal type="number">480</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">720</literal></expr>, <expr><literal type="number">576</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">30</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">800</literal></expr>, <expr><literal type="number">600</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1024</literal></expr>, <expr><literal type="number">768</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1024</literal></expr>, <expr><literal type="number">768</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1280</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1280</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1280</literal></expr>, <expr><literal type="number">960</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1280</literal></expr>, <expr><literal type="number">960</literal></expr>, <expr><literal type="number">46</literal></expr>, <expr><literal type="number">40</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1280</literal></expr>, <expr><literal type="number">1024</literal></expr>, <expr><literal type="number">42</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1600</literal></expr>, <expr><literal type="number">1200</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">40</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1600</literal></expr>, <expr><literal type="number">1200</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">42</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1920</literal></expr>, <expr><literal type="number">1088</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">40</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1920</literal></expr>, <expr><literal type="number">1088</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">42</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">2048</literal></expr>, <expr><literal type="number">1024</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">40</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">2048</literal></expr>, <expr><literal type="number">1024</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">42</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">2048</literal></expr>, <expr><literal type="number">1088</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">42</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">3680</literal></expr>, <expr><literal type="number">1536</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">50</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">4096</literal></expr>, <expr><literal type="number">2048</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">51</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">4096</literal></expr>, <expr><literal type="number">2048</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">52</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">4096</literal></expr>, <expr><literal type="number">2160</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">52</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</struct>

<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dpb_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>level_idc</name></decl>;</decl_stmt>
}</block> <decl><name><name>test_dpb</name><index>[]</index></name> <init>= <expr><block>{


<expr><block>{ <expr><literal type="number">176</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">176</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">11</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">176</literal></expr>, <expr><literal type="number">144</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">12</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1280</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1280</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1280</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">40</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1280</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">50</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1920</literal></expr>, <expr><literal type="number">1080</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">40</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1920</literal></expr>, <expr><literal type="number">1080</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">50</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1920</literal></expr>, <expr><literal type="number">1080</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">50</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1920</literal></expr>, <expr><literal type="number">1080</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">51</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">3840</literal></expr>, <expr><literal type="number">2160</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">51</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">3840</literal></expr>, <expr><literal type="number">2160</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">60</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">3840</literal></expr>, <expr><literal type="number">2160</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">60</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">7680</literal></expr>, <expr><literal type="number">4320</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">60</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">7680</literal></expr>, <expr><literal type="number">4320</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</struct>

<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{
<decl_stmt><decl><type><name>int64_t</name></type> <name>bitrate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>profile_idc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>level_idc</name></decl>;</decl_stmt>
}</block> <decl><name><name>test_bitrate</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="number">2500000</literal></expr>, <expr><literal type="number">77</literal></expr>, <expr><literal type="number">21</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">2500000</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">20</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">2500000</literal></expr>, <expr><literal type="number">244</literal></expr>, <expr><literal type="number">13</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">100000000</literal></expr>, <expr><literal type="number">77</literal></expr>, <expr><literal type="number">50</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">100000000</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">50</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">100000000</literal></expr>, <expr><literal type="number">244</literal></expr>, <expr><literal type="number">41</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">999999999</literal></expr>, <expr><literal type="number">77</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">999999999</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">62</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="number">32</literal> <operator>*</operator> <literal type="number">1200</literal></expr>, <expr><literal type="number">66</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">32</literal> <operator>*</operator> <literal type="number">1500</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">96</literal> <operator>*</operator> <literal type="number">1200</literal></expr>, <expr><literal type="number">66</literal></expr>, <expr><literal type="number">11</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">96</literal> <operator>*</operator> <literal type="number">1500</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">9</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">144</literal> <operator>*</operator> <literal type="number">1200</literal></expr>, <expr><literal type="number">66</literal></expr>, <expr><literal type="number">11</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">144</literal> <operator>*</operator> <literal type="number">1500</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">11</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</struct>

<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>profile_idc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>bitrate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dpb_frames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>level_idc</name></decl>;</decl_stmt>
}</block> <decl><name><name>test_all</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"Bluray 1080p 40Mb/s"</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">40000000</literal></expr>, <expr><literal type="number">1920</literal></expr>, <expr><literal type="number">1080</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">41</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Bluray 1080p 24Mb/s"</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">24000000</literal></expr>, <expr><literal type="number">1920</literal></expr>, <expr><literal type="number">1080</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">40</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Bluray 720p 40Mb/s"</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">40000000</literal></expr>, <expr><literal type="number">1280</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">41</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Bluray 720p 24Mb/s"</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">24000000</literal></expr>, <expr><literal type="number">1280</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">40</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Bluray PAL 40Mb/s"</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">40000000</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">576</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">41</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Bluray PAL 24Mb/s"</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">24000000</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">576</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Bluray PAL 16Mb/s"</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">16800000</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">576</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Bluray PAL 12Mb/s"</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">12000000</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">576</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">30</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Bluray NTSC 40Mb/s"</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">40000000</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">480</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">41</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Bluray NTSC 24Mb/s"</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">24000000</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">480</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Bluray NTSC 16Mb/s"</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">16800000</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">480</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"Bluray NTSC 12Mb/s"</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">12000000</literal></expr>, <expr><literal type="number">720</literal></expr>, <expr><literal type="number">480</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">30</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</struct>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>H264LevelDescriptor</name> <modifier>*</modifier></type><name>level</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHECK</name><parameter_list>(<parameter><type><name>expected</name></type></parameter>, <parameter><type><name>format</name></type></parameter>, <parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { if (expected ? (!level || level-&gt;level_idc != expected) : !!level) { av_log(NULL, AV_LOG_ERROR, "Incorrect level for " format ": expected %d, got %d.\n", __VA_ARGS__, expected, level ? level-&gt;level_idc : -1); return 1; } } while (0)</cpp:value></cpp:define>









<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>test_sizes</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>level</name> <operator>=</operator> <call><name>ff_h264_guess_level</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>test_sizes</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>width</name></expr></argument>,
<argument><expr><name><name>test_sizes</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>height</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CHECK</name><argument_list>(<argument><expr><name><name>test_sizes</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>level_idc</name></expr></argument>, <argument><expr><literal type="string">"size %dx%d"</literal></expr></argument>,
<argument><expr><name><name>test_sizes</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>width</name></expr></argument>, <argument><expr><name><name>test_sizes</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>test_framerate</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>level</name> <operator>=</operator> <call><name>ff_h264_guess_level</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>test_framerate</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>framerate</name></expr></argument>,
<argument><expr><name><name>test_framerate</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>width</name></expr></argument>,
<argument><expr><name><name>test_framerate</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>height</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CHECK</name><argument_list>(<argument><expr><name><name>test_framerate</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>level_idc</name></expr></argument>, <argument><expr><literal type="string">"framerate %d, size %dx%d"</literal></expr></argument>,
<argument><expr><name><name>test_framerate</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>framerate</name></expr></argument>, <argument><expr><name><name>test_framerate</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>width</name></expr></argument>,
<argument><expr><name><name>test_framerate</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>test_dpb</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>level</name> <operator>=</operator> <call><name>ff_h264_guess_level</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>test_dpb</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>width</name></expr></argument>,
<argument><expr><name><name>test_dpb</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>height</name></expr></argument>,
<argument><expr><name><name>test_dpb</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>dpb_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CHECK</name><argument_list>(<argument><expr><name><name>test_dpb</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>level_idc</name></expr></argument>, <argument><expr><literal type="string">"size %dx%d dpb %d"</literal></expr></argument>,
<argument><expr><name><name>test_dpb</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>width</name></expr></argument>, <argument><expr><name><name>test_dpb</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>height</name></expr></argument>,
<argument><expr><name><name>test_dpb</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>dpb_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>test_bitrate</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>level</name> <operator>=</operator> <call><name>ff_h264_guess_level</name><argument_list>(<argument><expr><name><name>test_bitrate</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>profile_idc</name></expr></argument>,
<argument><expr><name><name>test_bitrate</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>bitrate</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CHECK</name><argument_list>(<argument><expr><name><name>test_bitrate</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>level_idc</name></expr></argument>, <argument><expr><literal type="string">"bitrate %"</literal><name>PRId64</name><literal type="string">" profile %d"</literal></expr></argument>,
<argument><expr><name><name>test_bitrate</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>bitrate</name></expr></argument>, <argument><expr><name><name>test_bitrate</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>profile_idc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>test_all</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>level</name> <operator>=</operator> <call><name>ff_h264_guess_level</name><argument_list>(<argument><expr><name><name>test_all</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>profile_idc</name></expr></argument>,
<argument><expr><name><name>test_all</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>bitrate</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><name><name>test_all</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>width</name></expr></argument>,
<argument><expr><name><name>test_all</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>height</name></expr></argument>,
<argument><expr><name><name>test_all</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>dpb_frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CHECK</name><argument_list>(<argument><expr><name><name>test_all</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>level_idc</name></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name><name>test_all</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
