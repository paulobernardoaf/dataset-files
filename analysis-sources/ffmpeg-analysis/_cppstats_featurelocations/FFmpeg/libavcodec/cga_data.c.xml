<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\cga_data.c">

























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cga_data.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name><name>ff_cga_palette</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">0xFF000000</literal></expr>, <expr><literal type="number">0xFF0000AA</literal></expr>, <expr><literal type="number">0xFF00AA00</literal></expr>, <expr><literal type="number">0xFF00AAAA</literal></expr>, <expr><literal type="number">0xFFAA0000</literal></expr>, <expr><literal type="number">0xFFAA00AA</literal></expr>, <expr><literal type="number">0xFFAA5500</literal></expr>, <expr><literal type="number">0xFFAAAAAA</literal></expr>,
<expr><literal type="number">0xFF555555</literal></expr>, <expr><literal type="number">0xFF5555FF</literal></expr>, <expr><literal type="number">0xFF55FF55</literal></expr>, <expr><literal type="number">0xFF55FFFF</literal></expr>, <expr><literal type="number">0xFFFF5555</literal></expr>, <expr><literal type="number">0xFFFF55FF</literal></expr>, <expr><literal type="number">0xFFFFFF55</literal></expr>, <expr><literal type="number">0xFFFFFFFF</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name><name>ff_ega_palette</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">0xFF000000</literal></expr>, <expr><literal type="number">0xFF0000AA</literal></expr>, <expr><literal type="number">0xFF00AA00</literal></expr>, <expr><literal type="number">0xFF00AAAA</literal></expr>, <expr><literal type="number">0xFFAA0000</literal></expr>, <expr><literal type="number">0xFFAA00AA</literal></expr>, <expr><literal type="number">0xFFAAAA00</literal></expr>, <expr><literal type="number">0xFFAAAAAA</literal></expr>,
<expr><literal type="number">0xFF000055</literal></expr>, <expr><literal type="number">0xFF0000FF</literal></expr>, <expr><literal type="number">0xFF00AA55</literal></expr>, <expr><literal type="number">0xFF00AAFF</literal></expr>, <expr><literal type="number">0xFFAA0055</literal></expr>, <expr><literal type="number">0xFFAA00FF</literal></expr>, <expr><literal type="number">0xFFAAAA55</literal></expr>, <expr><literal type="number">0xFFAAAAFF</literal></expr>,
<expr><literal type="number">0xFF005500</literal></expr>, <expr><literal type="number">0xFF0055AA</literal></expr>, <expr><literal type="number">0xFF00FF00</literal></expr>, <expr><literal type="number">0xFF00FFAA</literal></expr>, <expr><literal type="number">0xFFAA5500</literal></expr>, <expr><literal type="number">0xFFAA55AA</literal></expr>, <expr><literal type="number">0xFFAAFF00</literal></expr>, <expr><literal type="number">0xFFAAFFAA</literal></expr>,
<expr><literal type="number">0xFF005555</literal></expr>, <expr><literal type="number">0xFF0055FF</literal></expr>, <expr><literal type="number">0xFF00FF55</literal></expr>, <expr><literal type="number">0xFF00FFFF</literal></expr>, <expr><literal type="number">0xFFAA5555</literal></expr>, <expr><literal type="number">0xFFAA55FF</literal></expr>, <expr><literal type="number">0xFFAAFF55</literal></expr>, <expr><literal type="number">0xFFAAFFFF</literal></expr>,
<expr><literal type="number">0xFF550000</literal></expr>, <expr><literal type="number">0xFF5500AA</literal></expr>, <expr><literal type="number">0xFF55AA00</literal></expr>, <expr><literal type="number">0xFF55AAAA</literal></expr>, <expr><literal type="number">0xFFFF0000</literal></expr>, <expr><literal type="number">0xFFFF00AA</literal></expr>, <expr><literal type="number">0xFFFFAA00</literal></expr>, <expr><literal type="number">0xFFFFAAAA</literal></expr>,
<expr><literal type="number">0xFF550055</literal></expr>, <expr><literal type="number">0xFF5500FF</literal></expr>, <expr><literal type="number">0xFF55AA55</literal></expr>, <expr><literal type="number">0xFF55AAFF</literal></expr>, <expr><literal type="number">0xFFFF0055</literal></expr>, <expr><literal type="number">0xFFFF00FF</literal></expr>, <expr><literal type="number">0xFFFFAA55</literal></expr>, <expr><literal type="number">0xFFFFAAFF</literal></expr>,
<expr><literal type="number">0xFF555500</literal></expr>, <expr><literal type="number">0xFF5555AA</literal></expr>, <expr><literal type="number">0xFF55FF00</literal></expr>, <expr><literal type="number">0xFF55FFAA</literal></expr>, <expr><literal type="number">0xFFFF5500</literal></expr>, <expr><literal type="number">0xFFFF55AA</literal></expr>, <expr><literal type="number">0xFFFFFF00</literal></expr>, <expr><literal type="number">0xFFFFFFAA</literal></expr>,
<expr><literal type="number">0xFF555555</literal></expr>, <expr><literal type="number">0xFF5555FF</literal></expr>, <expr><literal type="number">0xFF55FF55</literal></expr>, <expr><literal type="number">0xFF55FFFF</literal></expr>, <expr><literal type="number">0xFFFF5555</literal></expr>, <expr><literal type="number">0xFFFF55FF</literal></expr>, <expr><literal type="number">0xFFFFFF55</literal></expr>, <expr><literal type="number">0xFFFFFFFF</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>ff_draw_pc_font</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>linesize</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>font</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>font_height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ch</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>char_y</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>char_y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>char_y</name> <operator>&lt;</operator> <name>font_height</name></expr>;</condition> <incr><expr><name>char_y</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<for>for <control>(<init><expr><name>mask</name> <operator>=</operator> <literal type="number">0x80</literal></expr>;</init> <condition><expr><name>mask</name></expr>;</condition> <incr><expr><name>mask</name> <operator>&gt;&gt;=</operator> <literal type="number">1</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>dst</name><operator>++</operator> <operator>=</operator> <ternary><condition><expr><name><name>font</name><index>[<expr><name>ch</name> <operator>*</operator> <name>font_height</name> <operator>+</operator> <name>char_y</name></expr>]</index></name> <operator>&amp;</operator> <name>mask</name></expr> ?</condition><then> <expr><name>fg</name></expr> </then><else>: <expr><name>bg</name></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>linesize</name> <operator>-</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>
</unit>
