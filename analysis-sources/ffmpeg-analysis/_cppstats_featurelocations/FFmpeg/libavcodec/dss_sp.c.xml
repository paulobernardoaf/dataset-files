<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\dss_sp.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/channel_layout.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/common.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mem.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"get_bits.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SUBFRAMES</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PULSE_MAX</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSS_SP_FRAME_SIZE</name></cpp:macro> <cpp:value>42</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSS_SP_SAMPLE_COUNT</name></cpp:macro> <cpp:value>(66 * SUBFRAMES)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DSS_SP_FORMULA</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((int)((((a) * (1 &lt;&lt; 15)) + (b) * (unsigned)(c)) + 0x4000) &gt;&gt; 15)</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>DssSpSubframe</name> <block>{
<decl_stmt><decl><type><name>int16_t</name></type> <name>gain</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name>combined_pulse_pos</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name><name>pulse_pos</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name><name>pulse_val</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>DssSpSubframe</name>;</typedef>

<typedef>typedef <type><struct>struct <name>DssSpFrame</name> <block>{
<decl_stmt><decl><type><name>int16_t</name></type> <name><name>filter_idx</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name><name>sf_adaptive_gain</name><index>[<expr><name>SUBFRAMES</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name><name>pitch_lag</name><index>[<expr><name>SUBFRAMES</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>DssSpSubframe</name></name></type> <name><name>sf</name><index>[<expr><name>SUBFRAMES</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>DssSpFrame</name>;</typedef>

<typedef>typedef <type><struct>struct <name>DssSpContext</name> <block>{
<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name><name>excitation</name><index>[<expr><literal type="number">288</literal> <operator>+</operator> <literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name><name>history</name><index>[<expr><literal type="number">187</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DssSpFrame</name></type> <name>fparam</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name><name>working_buffer</name><index>[<expr><name>SUBFRAMES</name></expr>]</index><index>[<expr><literal type="number">72</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name><name>audio_buf</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name><name>err_buf1</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name><name>lpc_filter</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name><name>filter</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name><name>vector_buf</name><index>[<expr><literal type="number">72</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>noise_state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name><name>err_buf2</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>pulse_dec_mode</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>uint8_t</name></expr></argument>, <argument><expr><name>bits</name></expr></argument>)</argument_list></call><index>[<expr><name>DSS_SP_FRAME_SIZE</name> <operator>+</operator>
<name>AV_INPUT_BUFFER_PADDING_SIZE</name></expr>]</index></expr>;</expr_stmt>
}</block></struct></type> <name>DssSpContext</name>;</typedef>




<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint32_t</name></type> <name><name>dss_sp_combinatorial_table</name><index>[<expr><name>PULSE_MAX</name></expr>]</index><index>[<expr><literal type="number">72</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>,
<expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>,
<expr><literal type="number">12</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">17</literal></expr>,
<expr><literal type="number">18</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">23</literal></expr>,
<expr><literal type="number">24</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">29</literal></expr>,
<expr><literal type="number">30</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">35</literal></expr>,
<expr><literal type="number">36</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">39</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">41</literal></expr>,
<expr><literal type="number">42</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">46</literal></expr>, <expr><literal type="number">47</literal></expr>,
<expr><literal type="number">48</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">52</literal></expr>, <expr><literal type="number">53</literal></expr>,
<expr><literal type="number">54</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">56</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">59</literal></expr>,
<expr><literal type="number">60</literal></expr>, <expr><literal type="number">61</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">65</literal></expr>,
<expr><literal type="number">66</literal></expr>, <expr><literal type="number">67</literal></expr>, <expr><literal type="number">68</literal></expr>, <expr><literal type="number">69</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">71</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>,
<expr><literal type="number">15</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">55</literal></expr>,
<expr><literal type="number">66</literal></expr>, <expr><literal type="number">78</literal></expr>, <expr><literal type="number">91</literal></expr>, <expr><literal type="number">105</literal></expr>, <expr><literal type="number">120</literal></expr>, <expr><literal type="number">136</literal></expr>,
<expr><literal type="number">153</literal></expr>, <expr><literal type="number">171</literal></expr>, <expr><literal type="number">190</literal></expr>, <expr><literal type="number">210</literal></expr>, <expr><literal type="number">231</literal></expr>, <expr><literal type="number">253</literal></expr>,
<expr><literal type="number">276</literal></expr>, <expr><literal type="number">300</literal></expr>, <expr><literal type="number">325</literal></expr>, <expr><literal type="number">351</literal></expr>, <expr><literal type="number">378</literal></expr>, <expr><literal type="number">406</literal></expr>,
<expr><literal type="number">435</literal></expr>, <expr><literal type="number">465</literal></expr>, <expr><literal type="number">496</literal></expr>, <expr><literal type="number">528</literal></expr>, <expr><literal type="number">561</literal></expr>, <expr><literal type="number">595</literal></expr>,
<expr><literal type="number">630</literal></expr>, <expr><literal type="number">666</literal></expr>, <expr><literal type="number">703</literal></expr>, <expr><literal type="number">741</literal></expr>, <expr><literal type="number">780</literal></expr>, <expr><literal type="number">820</literal></expr>,
<expr><literal type="number">861</literal></expr>, <expr><literal type="number">903</literal></expr>, <expr><literal type="number">946</literal></expr>, <expr><literal type="number">990</literal></expr>, <expr><literal type="number">1035</literal></expr>, <expr><literal type="number">1081</literal></expr>,
<expr><literal type="number">1128</literal></expr>, <expr><literal type="number">1176</literal></expr>, <expr><literal type="number">1225</literal></expr>, <expr><literal type="number">1275</literal></expr>, <expr><literal type="number">1326</literal></expr>, <expr><literal type="number">1378</literal></expr>,
<expr><literal type="number">1431</literal></expr>, <expr><literal type="number">1485</literal></expr>, <expr><literal type="number">1540</literal></expr>, <expr><literal type="number">1596</literal></expr>, <expr><literal type="number">1653</literal></expr>, <expr><literal type="number">1711</literal></expr>,
<expr><literal type="number">1770</literal></expr>, <expr><literal type="number">1830</literal></expr>, <expr><literal type="number">1891</literal></expr>, <expr><literal type="number">1953</literal></expr>, <expr><literal type="number">2016</literal></expr>, <expr><literal type="number">2080</literal></expr>,
<expr><literal type="number">2145</literal></expr>, <expr><literal type="number">2211</literal></expr>, <expr><literal type="number">2278</literal></expr>, <expr><literal type="number">2346</literal></expr>, <expr><literal type="number">2415</literal></expr>, <expr><literal type="number">2485</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">10</literal></expr>,
<expr><literal type="number">20</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">56</literal></expr>, <expr><literal type="number">84</literal></expr>, <expr><literal type="number">120</literal></expr>, <expr><literal type="number">165</literal></expr>,
<expr><literal type="number">220</literal></expr>, <expr><literal type="number">286</literal></expr>, <expr><literal type="number">364</literal></expr>, <expr><literal type="number">455</literal></expr>, <expr><literal type="number">560</literal></expr>, <expr><literal type="number">680</literal></expr>,
<expr><literal type="number">816</literal></expr>, <expr><literal type="number">969</literal></expr>, <expr><literal type="number">1140</literal></expr>, <expr><literal type="number">1330</literal></expr>, <expr><literal type="number">1540</literal></expr>, <expr><literal type="number">1771</literal></expr>,
<expr><literal type="number">2024</literal></expr>, <expr><literal type="number">2300</literal></expr>, <expr><literal type="number">2600</literal></expr>, <expr><literal type="number">2925</literal></expr>, <expr><literal type="number">3276</literal></expr>, <expr><literal type="number">3654</literal></expr>,
<expr><literal type="number">4060</literal></expr>, <expr><literal type="number">4495</literal></expr>, <expr><literal type="number">4960</literal></expr>, <expr><literal type="number">5456</literal></expr>, <expr><literal type="number">5984</literal></expr>, <expr><literal type="number">6545</literal></expr>,
<expr><literal type="number">7140</literal></expr>, <expr><literal type="number">7770</literal></expr>, <expr><literal type="number">8436</literal></expr>, <expr><literal type="number">9139</literal></expr>, <expr><literal type="number">9880</literal></expr>, <expr><literal type="number">10660</literal></expr>,
<expr><literal type="number">11480</literal></expr>, <expr><literal type="number">12341</literal></expr>, <expr><literal type="number">13244</literal></expr>, <expr><literal type="number">14190</literal></expr>, <expr><literal type="number">15180</literal></expr>, <expr><literal type="number">16215</literal></expr>,
<expr><literal type="number">17296</literal></expr>, <expr><literal type="number">18424</literal></expr>, <expr><literal type="number">19600</literal></expr>, <expr><literal type="number">20825</literal></expr>, <expr><literal type="number">22100</literal></expr>, <expr><literal type="number">23426</literal></expr>,
<expr><literal type="number">24804</literal></expr>, <expr><literal type="number">26235</literal></expr>, <expr><literal type="number">27720</literal></expr>, <expr><literal type="number">29260</literal></expr>, <expr><literal type="number">30856</literal></expr>, <expr><literal type="number">32509</literal></expr>,
<expr><literal type="number">34220</literal></expr>, <expr><literal type="number">35990</literal></expr>, <expr><literal type="number">37820</literal></expr>, <expr><literal type="number">39711</literal></expr>, <expr><literal type="number">41664</literal></expr>, <expr><literal type="number">43680</literal></expr>,
<expr><literal type="number">45760</literal></expr>, <expr><literal type="number">47905</literal></expr>, <expr><literal type="number">50116</literal></expr>, <expr><literal type="number">52394</literal></expr>, <expr><literal type="number">54740</literal></expr>, <expr><literal type="number">57155</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>,
<expr><literal type="number">15</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">126</literal></expr>, <expr><literal type="number">210</literal></expr>, <expr><literal type="number">330</literal></expr>,
<expr><literal type="number">495</literal></expr>, <expr><literal type="number">715</literal></expr>, <expr><literal type="number">1001</literal></expr>, <expr><literal type="number">1365</literal></expr>, <expr><literal type="number">1820</literal></expr>, <expr><literal type="number">2380</literal></expr>,
<expr><literal type="number">3060</literal></expr>, <expr><literal type="number">3876</literal></expr>, <expr><literal type="number">4845</literal></expr>, <expr><literal type="number">5985</literal></expr>, <expr><literal type="number">7315</literal></expr>, <expr><literal type="number">8855</literal></expr>,
<expr><literal type="number">10626</literal></expr>, <expr><literal type="number">12650</literal></expr>, <expr><literal type="number">14950</literal></expr>, <expr><literal type="number">17550</literal></expr>, <expr><literal type="number">20475</literal></expr>, <expr><literal type="number">23751</literal></expr>,
<expr><literal type="number">27405</literal></expr>, <expr><literal type="number">31465</literal></expr>, <expr><literal type="number">35960</literal></expr>, <expr><literal type="number">40920</literal></expr>, <expr><literal type="number">46376</literal></expr>, <expr><literal type="number">52360</literal></expr>,
<expr><literal type="number">58905</literal></expr>, <expr><literal type="number">66045</literal></expr>, <expr><literal type="number">73815</literal></expr>, <expr><literal type="number">82251</literal></expr>, <expr><literal type="number">91390</literal></expr>, <expr><literal type="number">101270</literal></expr>,
<expr><literal type="number">111930</literal></expr>, <expr><literal type="number">123410</literal></expr>, <expr><literal type="number">135751</literal></expr>, <expr><literal type="number">148995</literal></expr>, <expr><literal type="number">163185</literal></expr>, <expr><literal type="number">178365</literal></expr>,
<expr><literal type="number">194580</literal></expr>, <expr><literal type="number">211876</literal></expr>, <expr><literal type="number">230300</literal></expr>, <expr><literal type="number">249900</literal></expr>, <expr><literal type="number">270725</literal></expr>, <expr><literal type="number">292825</literal></expr>,
<expr><literal type="number">316251</literal></expr>, <expr><literal type="number">341055</literal></expr>, <expr><literal type="number">367290</literal></expr>, <expr><literal type="number">395010</literal></expr>, <expr><literal type="number">424270</literal></expr>, <expr><literal type="number">455126</literal></expr>,
<expr><literal type="number">487635</literal></expr>, <expr><literal type="number">521855</literal></expr>, <expr><literal type="number">557845</literal></expr>, <expr><literal type="number">595665</literal></expr>, <expr><literal type="number">635376</literal></expr>, <expr><literal type="number">677040</literal></expr>,
<expr><literal type="number">720720</literal></expr>, <expr><literal type="number">766480</literal></expr>, <expr><literal type="number">814385</literal></expr>, <expr><literal type="number">864501</literal></expr>, <expr><literal type="number">916895</literal></expr>, <expr><literal type="number">971635</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>,
<expr><literal type="number">6</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">56</literal></expr>, <expr><literal type="number">126</literal></expr>, <expr><literal type="number">252</literal></expr>, <expr><literal type="number">462</literal></expr>,
<expr><literal type="number">792</literal></expr>, <expr><literal type="number">1287</literal></expr>, <expr><literal type="number">2002</literal></expr>, <expr><literal type="number">3003</literal></expr>, <expr><literal type="number">4368</literal></expr>, <expr><literal type="number">6188</literal></expr>,
<expr><literal type="number">8568</literal></expr>, <expr><literal type="number">11628</literal></expr>, <expr><literal type="number">15504</literal></expr>, <expr><literal type="number">20349</literal></expr>, <expr><literal type="number">26334</literal></expr>, <expr><literal type="number">33649</literal></expr>,
<expr><literal type="number">42504</literal></expr>, <expr><literal type="number">53130</literal></expr>, <expr><literal type="number">65780</literal></expr>, <expr><literal type="number">80730</literal></expr>, <expr><literal type="number">98280</literal></expr>, <expr><literal type="number">118755</literal></expr>,
<expr><literal type="number">142506</literal></expr>, <expr><literal type="number">169911</literal></expr>, <expr><literal type="number">201376</literal></expr>, <expr><literal type="number">237336</literal></expr>, <expr><literal type="number">278256</literal></expr>, <expr><literal type="number">324632</literal></expr>,
<expr><literal type="number">376992</literal></expr>, <expr><literal type="number">435897</literal></expr>, <expr><literal type="number">501942</literal></expr>, <expr><literal type="number">575757</literal></expr>, <expr><literal type="number">658008</literal></expr>, <expr><literal type="number">749398</literal></expr>,
<expr><literal type="number">850668</literal></expr>, <expr><literal type="number">962598</literal></expr>, <expr><literal type="number">1086008</literal></expr>, <expr><literal type="number">1221759</literal></expr>, <expr><literal type="number">1370754</literal></expr>, <expr><literal type="number">1533939</literal></expr>,
<expr><literal type="number">1712304</literal></expr>, <expr><literal type="number">1906884</literal></expr>, <expr><literal type="number">2118760</literal></expr>, <expr><literal type="number">2349060</literal></expr>, <expr><literal type="number">2598960</literal></expr>, <expr><literal type="number">2869685</literal></expr>,
<expr><literal type="number">3162510</literal></expr>, <expr><literal type="number">3478761</literal></expr>, <expr><literal type="number">3819816</literal></expr>, <expr><literal type="number">4187106</literal></expr>, <expr><literal type="number">4582116</literal></expr>, <expr><literal type="number">5006386</literal></expr>,
<expr><literal type="number">5461512</literal></expr>, <expr><literal type="number">5949147</literal></expr>, <expr><literal type="number">6471002</literal></expr>, <expr><literal type="number">7028847</literal></expr>, <expr><literal type="number">7624512</literal></expr>, <expr><literal type="number">8259888</literal></expr>,
<expr><literal type="number">8936928</literal></expr>, <expr><literal type="number">9657648</literal></expr>, <expr><literal type="number">10424128</literal></expr>, <expr><literal type="number">11238513</literal></expr>, <expr><literal type="number">12103014</literal></expr>, <expr><literal type="number">13019909</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">84</literal></expr>, <expr><literal type="number">210</literal></expr>, <expr><literal type="number">462</literal></expr>,
<expr><literal type="number">924</literal></expr>, <expr><literal type="number">1716</literal></expr>, <expr><literal type="number">3003</literal></expr>, <expr><literal type="number">5005</literal></expr>, <expr><literal type="number">8008</literal></expr>, <expr><literal type="number">12376</literal></expr>,
<expr><literal type="number">18564</literal></expr>, <expr><literal type="number">27132</literal></expr>, <expr><literal type="number">38760</literal></expr>, <expr><literal type="number">54264</literal></expr>, <expr><literal type="number">74613</literal></expr>, <expr><literal type="number">100947</literal></expr>,
<expr><literal type="number">134596</literal></expr>, <expr><literal type="number">177100</literal></expr>, <expr><literal type="number">230230</literal></expr>, <expr><literal type="number">296010</literal></expr>, <expr><literal type="number">376740</literal></expr>, <expr><literal type="number">475020</literal></expr>,
<expr><literal type="number">593775</literal></expr>, <expr><literal type="number">736281</literal></expr>, <expr><literal type="number">906192</literal></expr>, <expr><literal type="number">1107568</literal></expr>, <expr><literal type="number">1344904</literal></expr>, <expr><literal type="number">1623160</literal></expr>,
<expr><literal type="number">1947792</literal></expr>, <expr><literal type="number">2324784</literal></expr>, <expr><literal type="number">2760681</literal></expr>, <expr><literal type="number">3262623</literal></expr>, <expr><literal type="number">3838380</literal></expr>, <expr><literal type="number">4496388</literal></expr>,
<expr><literal type="number">5245786</literal></expr>, <expr><literal type="number">6096454</literal></expr>, <expr><literal type="number">7059052</literal></expr>, <expr><literal type="number">8145060</literal></expr>, <expr><literal type="number">9366819</literal></expr>, <expr><literal type="number">10737573</literal></expr>,
<expr><literal type="number">12271512</literal></expr>, <expr><literal type="number">13983816</literal></expr>, <expr><literal type="number">15890700</literal></expr>, <expr><literal type="number">18009460</literal></expr>, <expr><literal type="number">20358520</literal></expr>, <expr><literal type="number">22957480</literal></expr>,
<expr><literal type="number">25827165</literal></expr>, <expr><literal type="number">28989675</literal></expr>, <expr><literal type="number">32468436</literal></expr>, <expr><literal type="number">36288252</literal></expr>, <expr><literal type="number">40475358</literal></expr>, <expr><literal type="number">45057474</literal></expr>,
<expr><literal type="number">50063860</literal></expr>, <expr><literal type="number">55525372</literal></expr>, <expr><literal type="number">61474519</literal></expr>, <expr><literal type="number">67945521</literal></expr>, <expr><literal type="number">74974368</literal></expr>, <expr><literal type="number">82598880</literal></expr>,
<expr><literal type="number">90858768</literal></expr>, <expr><literal type="number">99795696</literal></expr>, <expr><literal type="number">109453344</literal></expr>, <expr><literal type="number">119877472</literal></expr>, <expr><literal type="number">131115985</literal></expr>, <expr><literal type="number">143218999</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">120</literal></expr>, <expr><literal type="number">330</literal></expr>,
<expr><literal type="number">792</literal></expr>, <expr><literal type="number">1716</literal></expr>, <expr><literal type="number">3432</literal></expr>, <expr><literal type="number">6435</literal></expr>, <expr><literal type="number">11440</literal></expr>, <expr><literal type="number">19448</literal></expr>,
<expr><literal type="number">31824</literal></expr>, <expr><literal type="number">50388</literal></expr>, <expr><literal type="number">77520</literal></expr>, <expr><literal type="number">116280</literal></expr>, <expr><literal type="number">170544</literal></expr>, <expr><literal type="number">245157</literal></expr>,
<expr><literal type="number">346104</literal></expr>, <expr><literal type="number">480700</literal></expr>, <expr><literal type="number">657800</literal></expr>, <expr><literal type="number">888030</literal></expr>, <expr><literal type="number">1184040</literal></expr>, <expr><literal type="number">1560780</literal></expr>,
<expr><literal type="number">2035800</literal></expr>, <expr><literal type="number">2629575</literal></expr>, <expr><literal type="number">3365856</literal></expr>, <expr><literal type="number">4272048</literal></expr>, <expr><literal type="number">5379616</literal></expr>, <expr><literal type="number">6724520</literal></expr>,
<expr><literal type="number">8347680</literal></expr>, <expr><literal type="number">10295472</literal></expr>, <expr><literal type="number">12620256</literal></expr>, <expr><literal type="number">15380937</literal></expr>, <expr><literal type="number">18643560</literal></expr>, <expr><literal type="number">22481940</literal></expr>,
<expr><literal type="number">26978328</literal></expr>, <expr><literal type="number">32224114</literal></expr>, <expr><literal type="number">38320568</literal></expr>, <expr><literal type="number">45379620</literal></expr>, <expr><literal type="number">53524680</literal></expr>, <expr><literal type="number">62891499</literal></expr>,
<expr><literal type="number">73629072</literal></expr>, <expr><literal type="number">85900584</literal></expr>, <expr><literal type="number">99884400</literal></expr>, <expr><literal type="number">115775100</literal></expr>, <expr><literal type="number">133784560</literal></expr>, <expr><literal type="number">154143080</literal></expr>,
<expr><literal type="number">177100560</literal></expr>, <expr><literal type="number">202927725</literal></expr>, <expr><literal type="number">231917400</literal></expr>, <expr><literal type="number">264385836</literal></expr>, <expr><literal type="number">300674088</literal></expr>, <expr><literal type="number">341149446</literal></expr>,
<expr><literal type="number">386206920</literal></expr>, <expr><literal type="number">436270780</literal></expr>, <expr><literal type="number">491796152</literal></expr>, <expr><literal type="number">553270671</literal></expr>, <expr><literal type="number">621216192</literal></expr>, <expr><literal type="number">696190560</literal></expr>,
<expr><literal type="number">778789440</literal></expr>, <expr><literal type="number">869648208</literal></expr>, <expr><literal type="number">969443904</literal></expr>, <expr><literal type="number">1078897248</literal></expr>, <expr><literal type="number">1198774720</literal></expr>, <expr><literal type="number">1329890705</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>dss_sp_filter_cb</name><index>[<expr><literal type="number">14</literal></expr>]</index><index>[<expr><literal type="number">32</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><operator>-</operator><literal type="number">32653</literal></expr>, <expr><operator>-</operator><literal type="number">32587</literal></expr>, <expr><operator>-</operator><literal type="number">32515</literal></expr>, <expr><operator>-</operator><literal type="number">32438</literal></expr>, <expr><operator>-</operator><literal type="number">32341</literal></expr>, <expr><operator>-</operator><literal type="number">32216</literal></expr>, <expr><operator>-</operator><literal type="number">32062</literal></expr>, <expr><operator>-</operator><literal type="number">31881</literal></expr>,
<expr><operator>-</operator><literal type="number">31665</literal></expr>, <expr><operator>-</operator><literal type="number">31398</literal></expr>, <expr><operator>-</operator><literal type="number">31080</literal></expr>, <expr><operator>-</operator><literal type="number">30724</literal></expr>, <expr><operator>-</operator><literal type="number">30299</literal></expr>, <expr><operator>-</operator><literal type="number">29813</literal></expr>, <expr><operator>-</operator><literal type="number">29248</literal></expr>, <expr><operator>-</operator><literal type="number">28572</literal></expr>,
<expr><operator>-</operator><literal type="number">27674</literal></expr>, <expr><operator>-</operator><literal type="number">26439</literal></expr>, <expr><operator>-</operator><literal type="number">24666</literal></expr>, <expr><operator>-</operator><literal type="number">22466</literal></expr>, <expr><operator>-</operator><literal type="number">19433</literal></expr>, <expr><operator>-</operator><literal type="number">16133</literal></expr>, <expr><operator>-</operator><literal type="number">12218</literal></expr>, <expr><operator>-</operator><literal type="number">7783</literal></expr>,
<expr><operator>-</operator><literal type="number">2834</literal></expr>, <expr><literal type="number">1819</literal></expr>, <expr><literal type="number">6544</literal></expr>, <expr><literal type="number">11260</literal></expr>, <expr><literal type="number">16050</literal></expr>, <expr><literal type="number">20220</literal></expr>, <expr><literal type="number">24774</literal></expr>, <expr><literal type="number">28120</literal></expr> }</block></expr>,

<expr><block>{ <expr><operator>-</operator><literal type="number">27503</literal></expr>, <expr><operator>-</operator><literal type="number">24509</literal></expr>, <expr><operator>-</operator><literal type="number">20644</literal></expr>, <expr><operator>-</operator><literal type="number">17496</literal></expr>, <expr><operator>-</operator><literal type="number">14187</literal></expr>, <expr><operator>-</operator><literal type="number">11277</literal></expr>, <expr><operator>-</operator><literal type="number">8420</literal></expr>, <expr><operator>-</operator><literal type="number">5595</literal></expr>,
<expr><operator>-</operator><literal type="number">3013</literal></expr>, <expr><operator>-</operator><literal type="number">624</literal></expr>, <expr><literal type="number">1711</literal></expr>, <expr><literal type="number">3880</literal></expr>, <expr><literal type="number">5844</literal></expr>, <expr><literal type="number">7774</literal></expr>, <expr><literal type="number">9739</literal></expr>, <expr><literal type="number">11592</literal></expr>,
<expr><literal type="number">13364</literal></expr>, <expr><literal type="number">14903</literal></expr>, <expr><literal type="number">16426</literal></expr>, <expr><literal type="number">17900</literal></expr>, <expr><literal type="number">19250</literal></expr>, <expr><literal type="number">20586</literal></expr>, <expr><literal type="number">21803</literal></expr>, <expr><literal type="number">23006</literal></expr>,
<expr><literal type="number">24142</literal></expr>, <expr><literal type="number">25249</literal></expr>, <expr><literal type="number">26275</literal></expr>, <expr><literal type="number">27300</literal></expr>, <expr><literal type="number">28359</literal></expr>, <expr><literal type="number">29249</literal></expr>, <expr><literal type="number">30118</literal></expr>, <expr><literal type="number">31183</literal></expr> }</block></expr>,

<expr><block>{ <expr><operator>-</operator><literal type="number">27827</literal></expr>, <expr><operator>-</operator><literal type="number">24208</literal></expr>, <expr><operator>-</operator><literal type="number">20943</literal></expr>, <expr><operator>-</operator><literal type="number">17781</literal></expr>, <expr><operator>-</operator><literal type="number">14843</literal></expr>, <expr><operator>-</operator><literal type="number">11848</literal></expr>, <expr><operator>-</operator><literal type="number">9066</literal></expr>, <expr><operator>-</operator><literal type="number">6297</literal></expr>,
<expr><operator>-</operator><literal type="number">3660</literal></expr>, <expr><operator>-</operator><literal type="number">910</literal></expr>, <expr><literal type="number">1918</literal></expr>, <expr><literal type="number">5025</literal></expr>, <expr><literal type="number">8223</literal></expr>, <expr><literal type="number">11649</literal></expr>, <expr><literal type="number">15086</literal></expr>, <expr><literal type="number">18423</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{ <expr><operator>-</operator><literal type="number">17128</literal></expr>, <expr><operator>-</operator><literal type="number">11975</literal></expr>, <expr><operator>-</operator><literal type="number">8270</literal></expr>, <expr><operator>-</operator><literal type="number">5123</literal></expr>, <expr><operator>-</operator><literal type="number">2296</literal></expr>, <expr><literal type="number">183</literal></expr>, <expr><literal type="number">2503</literal></expr>, <expr><literal type="number">4707</literal></expr>,
<expr><literal type="number">6798</literal></expr>, <expr><literal type="number">8945</literal></expr>, <expr><literal type="number">11045</literal></expr>, <expr><literal type="number">13239</literal></expr>, <expr><literal type="number">15528</literal></expr>, <expr><literal type="number">18248</literal></expr>, <expr><literal type="number">21115</literal></expr>, <expr><literal type="number">24785</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{ <expr><operator>-</operator><literal type="number">21557</literal></expr>, <expr><operator>-</operator><literal type="number">17280</literal></expr>, <expr><operator>-</operator><literal type="number">14286</literal></expr>, <expr><operator>-</operator><literal type="number">11644</literal></expr>, <expr><operator>-</operator><literal type="number">9268</literal></expr>, <expr><operator>-</operator><literal type="number">7087</literal></expr>, <expr><operator>-</operator><literal type="number">4939</literal></expr>, <expr><operator>-</operator><literal type="number">2831</literal></expr>,
<expr><operator>-</operator><literal type="number">691</literal></expr>, <expr><literal type="number">1407</literal></expr>, <expr><literal type="number">3536</literal></expr>, <expr><literal type="number">5721</literal></expr>, <expr><literal type="number">8125</literal></expr>, <expr><literal type="number">10677</literal></expr>, <expr><literal type="number">13721</literal></expr>, <expr><literal type="number">17731</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{ <expr><operator>-</operator><literal type="number">15030</literal></expr>, <expr><operator>-</operator><literal type="number">10377</literal></expr>, <expr><operator>-</operator><literal type="number">7034</literal></expr>, <expr><operator>-</operator><literal type="number">4327</literal></expr>, <expr><operator>-</operator><literal type="number">1900</literal></expr>, <expr><literal type="number">364</literal></expr>, <expr><literal type="number">2458</literal></expr>, <expr><literal type="number">4450</literal></expr>,
<expr><literal type="number">6422</literal></expr>, <expr><literal type="number">8374</literal></expr>, <expr><literal type="number">10374</literal></expr>, <expr><literal type="number">12486</literal></expr>, <expr><literal type="number">14714</literal></expr>, <expr><literal type="number">16997</literal></expr>, <expr><literal type="number">19626</literal></expr>, <expr><literal type="number">22954</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{ <expr><operator>-</operator><literal type="number">16155</literal></expr>, <expr><operator>-</operator><literal type="number">12362</literal></expr>, <expr><operator>-</operator><literal type="number">9698</literal></expr>, <expr><operator>-</operator><literal type="number">7460</literal></expr>, <expr><operator>-</operator><literal type="number">5258</literal></expr>, <expr><operator>-</operator><literal type="number">3359</literal></expr>, <expr><operator>-</operator><literal type="number">1547</literal></expr>, <expr><literal type="number">219</literal></expr>,
<expr><literal type="number">1916</literal></expr>, <expr><literal type="number">3599</literal></expr>, <expr><literal type="number">5299</literal></expr>, <expr><literal type="number">6994</literal></expr>, <expr><literal type="number">8963</literal></expr>, <expr><literal type="number">11226</literal></expr>, <expr><literal type="number">13716</literal></expr>, <expr><literal type="number">16982</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{ <expr><operator>-</operator><literal type="number">14742</literal></expr>, <expr><operator>-</operator><literal type="number">9848</literal></expr>, <expr><operator>-</operator><literal type="number">6921</literal></expr>, <expr><operator>-</operator><literal type="number">4648</literal></expr>, <expr><operator>-</operator><literal type="number">2769</literal></expr>, <expr><operator>-</operator><literal type="number">1065</literal></expr>, <expr><literal type="number">499</literal></expr>, <expr><literal type="number">2083</literal></expr>,
<expr><literal type="number">3633</literal></expr>, <expr><literal type="number">5219</literal></expr>, <expr><literal type="number">6857</literal></expr>, <expr><literal type="number">8580</literal></expr>, <expr><literal type="number">10410</literal></expr>, <expr><literal type="number">12672</literal></expr>, <expr><literal type="number">15561</literal></expr>, <expr><literal type="number">20101</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{ <expr><operator>-</operator><literal type="number">11099</literal></expr>, <expr><operator>-</operator><literal type="number">7014</literal></expr>, <expr><operator>-</operator><literal type="number">3855</literal></expr>, <expr><operator>-</operator><literal type="number">1025</literal></expr>, <expr><literal type="number">1680</literal></expr>, <expr><literal type="number">4544</literal></expr>, <expr><literal type="number">7807</literal></expr>, <expr><literal type="number">11932</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{ <expr><operator>-</operator><literal type="number">9060</literal></expr>, <expr><operator>-</operator><literal type="number">4570</literal></expr>, <expr><operator>-</operator><literal type="number">1381</literal></expr>, <expr><literal type="number">1419</literal></expr>, <expr><literal type="number">4034</literal></expr>, <expr><literal type="number">6728</literal></expr>, <expr><literal type="number">9865</literal></expr>, <expr><literal type="number">14149</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{ <expr><operator>-</operator><literal type="number">12450</literal></expr>, <expr><operator>-</operator><literal type="number">7985</literal></expr>, <expr><operator>-</operator><literal type="number">4596</literal></expr>, <expr><operator>-</operator><literal type="number">1734</literal></expr>, <expr><literal type="number">961</literal></expr>, <expr><literal type="number">3629</literal></expr>, <expr><literal type="number">6865</literal></expr>, <expr><literal type="number">11142</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{ <expr><operator>-</operator><literal type="number">11831</literal></expr>, <expr><operator>-</operator><literal type="number">7404</literal></expr>, <expr><operator>-</operator><literal type="number">4010</literal></expr>, <expr><operator>-</operator><literal type="number">1096</literal></expr>, <expr><literal type="number">1606</literal></expr>, <expr><literal type="number">4291</literal></expr>, <expr><literal type="number">7386</literal></expr>, <expr><literal type="number">11482</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{ <expr><operator>-</operator><literal type="number">13404</literal></expr>, <expr><operator>-</operator><literal type="number">9250</literal></expr>, <expr><operator>-</operator><literal type="number">5995</literal></expr>, <expr><operator>-</operator><literal type="number">3312</literal></expr>, <expr><operator>-</operator><literal type="number">890</literal></expr>, <expr><literal type="number">1594</literal></expr>, <expr><literal type="number">4464</literal></expr>, <expr><literal type="number">8198</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{ <expr><operator>-</operator><literal type="number">11239</literal></expr>, <expr><operator>-</operator><literal type="number">7220</literal></expr>, <expr><operator>-</operator><literal type="number">4040</literal></expr>, <expr><operator>-</operator><literal type="number">1406</literal></expr>, <expr><literal type="number">971</literal></expr>, <expr><literal type="number">3321</literal></expr>, <expr><literal type="number">6006</literal></expr>, <expr><literal type="number">9697</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>dss_sp_fixed_cb_gain</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">31</literal></expr>,
<expr><literal type="number">35</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">69</literal></expr>,
<expr><literal type="number">76</literal></expr>, <expr><literal type="number">83</literal></expr>, <expr><literal type="number">91</literal></expr>, <expr><literal type="number">99</literal></expr>, <expr><literal type="number">109</literal></expr>, <expr><literal type="number">119</literal></expr>, <expr><literal type="number">130</literal></expr>, <expr><literal type="number">142</literal></expr>,
<expr><literal type="number">155</literal></expr>, <expr><literal type="number">170</literal></expr>, <expr><literal type="number">185</literal></expr>, <expr><literal type="number">203</literal></expr>, <expr><literal type="number">222</literal></expr>, <expr><literal type="number">242</literal></expr>, <expr><literal type="number">265</literal></expr>, <expr><literal type="number">290</literal></expr>,
<expr><literal type="number">317</literal></expr>, <expr><literal type="number">346</literal></expr>, <expr><literal type="number">378</literal></expr>, <expr><literal type="number">414</literal></expr>, <expr><literal type="number">452</literal></expr>, <expr><literal type="number">494</literal></expr>, <expr><literal type="number">540</literal></expr>, <expr><literal type="number">591</literal></expr>,
<expr><literal type="number">646</literal></expr>, <expr><literal type="number">706</literal></expr>, <expr><literal type="number">771</literal></expr>, <expr><literal type="number">843</literal></expr>, <expr><literal type="number">922</literal></expr>, <expr><literal type="number">1007</literal></expr>, <expr><literal type="number">1101</literal></expr>, <expr><literal type="number">1204</literal></expr>,
<expr><literal type="number">1316</literal></expr>, <expr><literal type="number">1438</literal></expr>, <expr><literal type="number">1572</literal></expr>, <expr><literal type="number">1719</literal></expr>, <expr><literal type="number">1879</literal></expr>, <expr><literal type="number">2053</literal></expr>, <expr><literal type="number">2244</literal></expr>, <expr><literal type="number">2453</literal></expr>,
<expr><literal type="number">2682</literal></expr>, <expr><literal type="number">2931</literal></expr>, <expr><literal type="number">3204</literal></expr>, <expr><literal type="number">3502</literal></expr>, <expr><literal type="number">3828</literal></expr>, <expr><literal type="number">4184</literal></expr>, <expr><literal type="number">4574</literal></expr>, <expr><literal type="number">5000</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>dss_sp_pulse_val</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{
<expr><operator>-</operator><literal type="number">31182</literal></expr>, <expr><operator>-</operator><literal type="number">22273</literal></expr>, <expr><operator>-</operator><literal type="number">13364</literal></expr>, <expr><operator>-</operator><literal type="number">4455</literal></expr>, <expr><literal type="number">4455</literal></expr>, <expr><literal type="number">13364</literal></expr>, <expr><literal type="number">22273</literal></expr>, <expr><literal type="number">31182</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>binary_decreasing_array</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="number">32767</literal></expr>, <expr><literal type="number">16384</literal></expr>, <expr><literal type="number">8192</literal></expr>, <expr><literal type="number">4096</literal></expr>, <expr><literal type="number">2048</literal></expr>, <expr><literal type="number">1024</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">256</literal></expr>,
<expr><literal type="number">128</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>dss_sp_unc_decreasing_array</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="number">32767</literal></expr>, <expr><literal type="number">26214</literal></expr>, <expr><literal type="number">20972</literal></expr>, <expr><literal type="number">16777</literal></expr>, <expr><literal type="number">13422</literal></expr>, <expr><literal type="number">10737</literal></expr>, <expr><literal type="number">8590</literal></expr>, <expr><literal type="number">6872</literal></expr>,
<expr><literal type="number">5498</literal></expr>, <expr><literal type="number">4398</literal></expr>, <expr><literal type="number">3518</literal></expr>, <expr><literal type="number">2815</literal></expr>, <expr><literal type="number">2252</literal></expr>, <expr><literal type="number">1801</literal></expr>, <expr><literal type="number">1441</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>dss_sp_adaptive_gain</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="number">102</literal></expr>, <expr><literal type="number">231</literal></expr>, <expr><literal type="number">360</literal></expr>, <expr><literal type="number">488</literal></expr>, <expr><literal type="number">617</literal></expr>, <expr><literal type="number">746</literal></expr>, <expr><literal type="number">875</literal></expr>, <expr><literal type="number">1004</literal></expr>,
<expr><literal type="number">1133</literal></expr>, <expr><literal type="number">1261</literal></expr>, <expr><literal type="number">1390</literal></expr>, <expr><literal type="number">1519</literal></expr>, <expr><literal type="number">1648</literal></expr>, <expr><literal type="number">1777</literal></expr>, <expr><literal type="number">1905</literal></expr>, <expr><literal type="number">2034</literal></expr>,
<expr><literal type="number">2163</literal></expr>, <expr><literal type="number">2292</literal></expr>, <expr><literal type="number">2421</literal></expr>, <expr><literal type="number">2550</literal></expr>, <expr><literal type="number">2678</literal></expr>, <expr><literal type="number">2807</literal></expr>, <expr><literal type="number">2936</literal></expr>, <expr><literal type="number">3065</literal></expr>,
<expr><literal type="number">3194</literal></expr>, <expr><literal type="number">3323</literal></expr>, <expr><literal type="number">3451</literal></expr>, <expr><literal type="number">3580</literal></expr>, <expr><literal type="number">3709</literal></expr>, <expr><literal type="number">3838</literal></expr>, <expr><literal type="number">3967</literal></expr>, <expr><literal type="number">4096</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int32_t</name></type> <name><name>dss_sp_sinc</name><index>[<expr><literal type="number">67</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">262</literal></expr>, <expr><literal type="number">293</literal></expr>, <expr><literal type="number">323</literal></expr>, <expr><literal type="number">348</literal></expr>, <expr><literal type="number">356</literal></expr>, <expr><literal type="number">336</literal></expr>, <expr><literal type="number">269</literal></expr>, <expr><literal type="number">139</literal></expr>,
<expr><operator>-</operator><literal type="number">67</literal></expr>, <expr><operator>-</operator><literal type="number">358</literal></expr>, <expr><operator>-</operator><literal type="number">733</literal></expr>, <expr><operator>-</operator><literal type="number">1178</literal></expr>, <expr><operator>-</operator><literal type="number">1668</literal></expr>, <expr><operator>-</operator><literal type="number">2162</literal></expr>, <expr><operator>-</operator><literal type="number">2607</literal></expr>, <expr><operator>-</operator><literal type="number">2940</literal></expr>,
<expr><operator>-</operator><literal type="number">3090</literal></expr>, <expr><operator>-</operator><literal type="number">2986</literal></expr>, <expr><operator>-</operator><literal type="number">2562</literal></expr>, <expr><operator>-</operator><literal type="number">1760</literal></expr>, <expr><operator>-</operator><literal type="number">541</literal></expr>, <expr><literal type="number">1110</literal></expr>, <expr><literal type="number">3187</literal></expr>, <expr><literal type="number">5651</literal></expr>,
<expr><literal type="number">8435</literal></expr>, <expr><literal type="number">11446</literal></expr>, <expr><literal type="number">14568</literal></expr>, <expr><literal type="number">17670</literal></expr>, <expr><literal type="number">20611</literal></expr>, <expr><literal type="number">23251</literal></expr>, <expr><literal type="number">25460</literal></expr>, <expr><literal type="number">27125</literal></expr>,
<expr><literal type="number">28160</literal></expr>, <expr><literal type="number">28512</literal></expr>, <expr><literal type="number">28160</literal></expr>,
<expr><literal type="number">27125</literal></expr>, <expr><literal type="number">25460</literal></expr>, <expr><literal type="number">23251</literal></expr>, <expr><literal type="number">20611</literal></expr>, <expr><literal type="number">17670</literal></expr>, <expr><literal type="number">14568</literal></expr>, <expr><literal type="number">11446</literal></expr>, <expr><literal type="number">8435</literal></expr>,
<expr><literal type="number">5651</literal></expr>, <expr><literal type="number">3187</literal></expr>, <expr><literal type="number">1110</literal></expr>, <expr><operator>-</operator><literal type="number">541</literal></expr>, <expr><operator>-</operator><literal type="number">1760</literal></expr>, <expr><operator>-</operator><literal type="number">2562</literal></expr>, <expr><operator>-</operator><literal type="number">2986</literal></expr>, <expr><operator>-</operator><literal type="number">3090</literal></expr>,
<expr><operator>-</operator><literal type="number">2940</literal></expr>, <expr><operator>-</operator><literal type="number">2607</literal></expr>, <expr><operator>-</operator><literal type="number">2162</literal></expr>, <expr><operator>-</operator><literal type="number">1668</literal></expr>, <expr><operator>-</operator><literal type="number">1178</literal></expr>, <expr><operator>-</operator><literal type="number">733</literal></expr>, <expr><operator>-</operator><literal type="number">358</literal></expr>, <expr><operator>-</operator><literal type="number">67</literal></expr>,
<expr><literal type="number">139</literal></expr>, <expr><literal type="number">269</literal></expr>, <expr><literal type="number">336</literal></expr>, <expr><literal type="number">356</literal></expr>, <expr><literal type="number">348</literal></expr>, <expr><literal type="number">323</literal></expr>, <expr><literal type="number">293</literal></expr>, <expr><literal type="number">262</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>av_cold</name> <name>int</name></type> <name>dss_sp_decode_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>DssSpContext</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><name><name>avctx</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>avctx</name><operator>-&gt;</operator><name>channel_layout</name></name> <operator>=</operator> <name>AV_CH_LAYOUT_MONO</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>avctx</name><operator>-&gt;</operator><name>sample_fmt</name></name> <operator>=</operator> <name>AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>avctx</name><operator>-&gt;</operator><name>channels</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>avctx</name><operator>-&gt;</operator><name>sample_rate</name></name> <operator>=</operator> <literal type="number">11025</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>history</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>history</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>pulse_dec_mode</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>avctx</name></name> <operator>=</operator> <name>avctx</name></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dss_sp_unpack_coeffs</name><parameter_list>(<parameter><decl><type><name>DssSpContext</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>GetBitContext</name></type> <name>gb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>DssSpFrame</name> <modifier>*</modifier></type><name>fparam</name> <init>= <expr><operator>&amp;</operator><name><name>p</name><operator>-&gt;</operator><name>fparam</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>subframe_idx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>combined_pitch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>pitch_lag</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>DSS_SP_FRAME_SIZE</name></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">2</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>bits</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>src</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>bits</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>src</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>init_get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gb</name></expr></argument>, <argument><expr><name><name>p</name><operator>-&gt;</operator><name>bits</name></name></expr></argument>, <argument><expr><name>DSS_SP_FRAME_SIZE</name> <operator>*</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>filter_idx</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gb</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<for>for <control>(<init>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">8</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>filter_idx</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gb</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<for>for <control>(<init>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">14</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>filter_idx</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gb</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>subframe_idx</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>subframe_idx</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>subframe_idx</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>sf_adaptive_gain</name><index>[<expr><name>subframe_idx</name></expr>]</index></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gb</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>sf</name><index>[<expr><name>subframe_idx</name></expr>]</index></name><operator>.</operator><name>combined_pulse_pos</name> <operator>=</operator> <call><name>get_bits_long</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gb</name></expr></argument>, <argument><expr><literal type="number">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>sf</name><index>[<expr><name>subframe_idx</name></expr>]</index></name><operator>.</operator><name>gain</name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gb</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">7</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>sf</name><index>[<expr><name>subframe_idx</name></expr>]</index></name><operator>.</operator><name><name>pulse_val</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gb</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></for>

<for>for <control>(<init><expr><name>subframe_idx</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>subframe_idx</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>subframe_idx</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name><name>C72_binomials</name><index>[<expr><name>PULSE_MAX</name></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">72</literal></expr>, <expr><literal type="number">2556</literal></expr>, <expr><literal type="number">59640</literal></expr>, <expr><literal type="number">1028790</literal></expr>, <expr><literal type="number">13991544</literal></expr>, <expr><literal type="number">156238908</literal></expr>, <expr><literal type="number">1473109704</literal></expr>,
<expr><literal type="number">3379081753</literal></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>combined_pulse_pos</name> <init>=
<expr><name><name>fparam</name><operator>-&gt;</operator><name>sf</name><index>[<expr><name>subframe_idx</name></expr>]</index></name><operator>.</operator><name>combined_pulse_pos</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>index</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>combined_pulse_pos</name> <operator>&lt;</operator> <name><name>C72_binomials</name><index>[<expr><name>PULSE_MAX</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>p</name><operator>-&gt;</operator><name>pulse_dec_mode</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>pulse</name></decl>, <decl><type ref="prev"/><name>pulse_idx</name></decl>;</decl_stmt>
<expr_stmt><expr><name>pulse</name> <operator>=</operator> <name>PULSE_MAX</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>pulse_idx</name> <operator>=</operator> <literal type="number">71</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>combined_pulse_pos</name> <operator>=</operator>
<name><name>fparam</name><operator>-&gt;</operator><name>sf</name><index>[<expr><name>subframe_idx</name></expr>]</index></name><operator>.</operator><name>combined_pulse_pos</name></expr>;</expr_stmt>





<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">7</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<for>for <control>(<init>;</init>
<condition><expr><name>combined_pulse_pos</name> <operator>&lt;</operator>
<name><name>dss_sp_combinatorial_table</name><index>[<expr><name>pulse</name></expr>]</index><index>[<expr><name>pulse_idx</name></expr>]</index></name></expr>;</condition>
<incr><expr><operator>--</operator><name>pulse_idx</name></expr></incr>)</control><block type="pseudo"><block_content>
<empty_stmt>;</empty_stmt></block_content></block></for>
<expr_stmt><expr><name>combined_pulse_pos</name> <operator>-=</operator>
<name><name>dss_sp_combinatorial_table</name><index>[<expr><name>pulse</name></expr>]</index><index>[<expr><name>pulse_idx</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>pulse</name><operator>--</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>sf</name><index>[<expr><name>subframe_idx</name></expr>]</index></name><operator>.</operator><name><name>pulse_pos</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>pulse_idx</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>pulse_dec_mode</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>


<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>sf</name><index>[<expr><name>subframe_idx</name></expr>]</index></name><operator>.</operator><name><name>pulse_pos</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">71</literal></expr>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>C72_binomials</name><index>[<expr><name>index</name></expr>]</index></name> <operator>&lt;=</operator> <name>combined_pulse_pos</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>combined_pulse_pos</name> <operator>-=</operator> <name><name>C72_binomials</name><index>[<expr><name>index</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>sf</name><index>[<expr><name>subframe_idx</name></expr>]</index></name><operator>.</operator><name><name>pulse_pos</name><index>[<expr><literal type="number">6</literal> <operator>-</operator> <name>index</name></expr>]</index></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>index</name></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>--</operator><name>index</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><operator>--</operator><name><name>C72_binomials</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>index</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>a</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>a</name> <operator>&lt;</operator> <name>index</name></expr>;</condition> <incr><expr><name>a</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>C72_binomials</name><index>[<expr><name>a</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>-=</operator> <name><name>C72_binomials</name><index>[<expr><name>a</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></else></if_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>combined_pitch</name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name>gb</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>pitch_lag</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>combined_pitch</name> <operator>%</operator> <literal type="number">151</literal><operator>)</operator> <operator>+</operator> <literal type="number">36</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>combined_pitch</name> <operator>/=</operator> <literal type="number">151</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>SUBFRAMES</name> <operator>-</operator> <literal type="number">1</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>pitch_lag</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>combined_pitch</name> <operator>%</operator> <literal type="number">48</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>combined_pitch</name> <operator>/=</operator> <literal type="number">48</literal></expr>;</expr_stmt>
</block_content>}</block></for>
<if_stmt><if>if <condition>(<expr><name>combined_pitch</name> <operator>&gt;</operator> <literal type="number">47</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name> <argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_WARNING</name></expr></argument>, <argument><expr><literal type="string">"combined_pitch was too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>combined_pitch</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>pitch_lag</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>combined_pitch</name></expr>;</expr_stmt>

<expr_stmt><expr><name>pitch_lag</name> <operator>=</operator> <name><name>fparam</name><operator>-&gt;</operator><name>pitch_lag</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>SUBFRAMES</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>pitch_lag</name> <operator>&gt;</operator> <literal type="number">162</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>pitch_lag</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <literal type="number">162</literal> <operator>-</operator> <literal type="number">23</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name>pitch_lag</name> <operator>-</operator> <literal type="number">23</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>tmp</name> <operator>&lt;</operator> <literal type="number">36</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <literal type="number">36</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>fparam</name><operator>-&gt;</operator><name>pitch_lag</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <name>tmp</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>pitch_lag</name> <operator>=</operator> <name><name>fparam</name><operator>-&gt;</operator><name>pitch_lag</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dss_sp_unpack_filter</name><parameter_list>(<parameter><decl><type><name>DssSpContext</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">14</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>lpc_filter</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>dss_sp_filter_cb</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name><name>p</name><operator>-&gt;</operator><name>fparam</name><operator>.</operator><name>filter_idx</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dss_sp_convert_coeffs</name><parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>lpc_filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>, <decl><type ref="prev"/><name>a_plus</name></decl>, <decl><type ref="prev"/><name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>coeffs</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x2000</literal></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>a</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>a</name> <operator>&lt;</operator> <literal type="number">14</literal></expr>;</condition> <incr><expr><name>a</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>a_plus</name> <operator>=</operator> <name>a</name> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>coeffs</name><index>[<expr><name>a_plus</name></expr>]</index></name> <operator>=</operator> <name><name>lpc_filter</name><index>[<expr><name>a</name></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>a_plus</name> <operator>/</operator> <literal type="number">2</literal> <operator>&gt;=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <name>a_plus</name> <operator>/</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>coeff_1</name></decl>, <decl><type ref="prev"/><name>coeff_2</name></decl>, <decl><type ref="prev"/><name>tmp</name></decl>;</decl_stmt>

<expr_stmt><expr><name>coeff_1</name> <operator>=</operator> <name><name>coeffs</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>coeff_2</name> <operator>=</operator> <name><name>coeffs</name><index>[<expr><name>a_plus</name> <operator>-</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>DSS_SP_FORMULA</name><argument_list>(<argument><expr><name>coeff_1</name></expr></argument>, <argument><expr><name><name>lpc_filter</name><index>[<expr><name>a</name></expr>]</index></name></expr></argument>, <argument><expr><name>coeff_2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>coeffs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>av_clip_int16</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>DSS_SP_FORMULA</name><argument_list>(<argument><expr><name>coeff_2</name></expr></argument>, <argument><expr><name><name>lpc_filter</name><index>[<expr><name>a</name></expr>]</index></name></expr></argument>, <argument><expr><name>coeff_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>coeffs</name><index>[<expr><name>a_plus</name> <operator>-</operator> <name>i</name></expr>]</index></name> <operator>=</operator> <call><name>av_clip_int16</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dss_sp_add_pulses</name><parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>vector_buf</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>DssSpSubframe</name></name> <modifier>*</modifier></type><name>sf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">7</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>vector_buf</name><index>[<expr><name><name>sf</name><operator>-&gt;</operator><name>pulse_pos</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>+=</operator> <operator>(</operator><name><name>dss_sp_fixed_cb_gain</name><index>[<expr><name><name>sf</name><operator>-&gt;</operator><name>gain</name></name></expr>]</index></name> <operator>*</operator>
<name><name>dss_sp_pulse_val</name><index>[<expr><name><name>sf</name><operator>-&gt;</operator><name>pulse_val</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name> <operator>+</operator>
<literal type="number">0x4000</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">15</literal></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dss_sp_gen_exc</name><parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>vector</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>prev_exc</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>pitch_lag</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>gain</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>



<if_stmt><if>if <condition>(<expr><name>pitch_lag</name> <operator>&lt;</operator> <literal type="number">72</literal></expr>)</condition><block type="pseudo"><block_content>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">72</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>vector</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>prev_exc</name><index>[<expr><name>pitch_lag</name> <operator>-</operator> <name>i</name> <operator>%</operator> <name>pitch_lag</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">72</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>vector</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>prev_exc</name><index>[<expr><name>pitch_lag</name> <operator>-</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></else></if_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">72</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>tmp</name> <init>= <expr><name>gain</name> <operator>*</operator> <name><name>vector</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">11</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>vector</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>av_clip_int16</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dss_sp_scale_vector</name><parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>vec</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bits</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>bits</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>vec</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>vec</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;&gt;</operator> <operator>-</operator><name>bits</name></expr>;</expr_stmt></block_content></block></for></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>vec</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>vec</name><index>[<expr><name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>bits</name><operator>)</operator></expr>;</expr_stmt></block_content></block></for></block_content></block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dss_sp_update_buf</name><parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>hist</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>vector</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">114</literal></expr>;</init> <condition><expr><name>i</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>vector</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">72</literal></expr>]</index></name> <operator>=</operator> <name><name>vector</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">72</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>vector</name><index>[<expr><literal type="number">72</literal> <operator>-</operator> <name>i</name></expr>]</index></name> <operator>=</operator> <name><name>hist</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dss_sp_shift_sq_sub</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>int32_t</name> <modifier>*</modifier></type><name>filter_buf</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>error_buf</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>a</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>a</name> <operator>&lt;</operator> <literal type="number">72</literal></expr>;</condition> <incr><expr><name>a</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>tmp</name></decl>;</decl_stmt>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name><name>dst</name><index>[<expr><name>a</name></expr>]</index></name> <operator>*</operator> <name><name>filter_buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">14</literal></expr>;</init> <condition><expr><name>i</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name>tmp</name> <operator>-=</operator> <name><name>error_buf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>*</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><name><name>filter_buf</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">14</literal></expr>;</init> <condition><expr><name>i</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>error_buf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>error_buf</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><name>tmp</name> <operator>+</operator> <literal type="number">4096U</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">13</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>error_buf</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><index>[<expr><name>a</name></expr>]</index></name> <operator>=</operator> <call><name>av_clip_int16</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dss_sp_shift_sq_add</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>int32_t</name> <modifier>*</modifier></type><name>filter_buf</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>audio_buf</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>a</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>a</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>a</name> <operator>&lt;</operator> <literal type="number">72</literal></expr>;</condition> <incr><expr><name>a</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>tmp</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>audio_buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>dst</name><index>[<expr><name>a</name></expr>]</index></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">14</literal></expr>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name>tmp</name> <operator>+=</operator> <name><name>audio_buf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>*</operator> <name><name>filter_buf</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">14</literal></expr>;</init> <condition><expr><name>i</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>audio_buf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>audio_buf</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>tmp</name> <operator>+</operator> <literal type="number">4096</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">13</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><index>[<expr><name>a</name></expr>]</index></name> <operator>=</operator> <call><name>av_clip_int16</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dss_sp_vec_mult</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>int32_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int16_t</name> <modifier>*</modifier></type><name>mult</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>dst</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>src</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">15</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>dst</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>src</name><index>[<expr><name>i</name></expr>]</index></name> <operator>*</operator> <name><name>mult</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <literal type="number">0x4000</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">15</literal></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>dss_sp_get_normalize_bits</name><parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>vector_buf</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>val</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>max_val</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name>val</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name>val</name> <operator>|=</operator> <call><name>FFABS</name><argument_list>(<argument><expr><name><name>vector_buf</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>max_val</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>val</name> <operator>&lt;=</operator> <literal type="number">0x4000</literal></expr>;</condition> <incr><expr><operator>++</operator><name>max_val</name></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name>val</name> <operator>*=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block_content></block></for>
<return>return <expr><name>max_val</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>dss_sp_vector_sum</name><parameter_list>(<parameter><decl><type><name>DssSpContext</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>sum</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>FFABS</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<return>return <expr><name>sum</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dss_sp_sf_synthesis</name><parameter_list>(<parameter><decl><type><name>DssSpContext</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>lpc_filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name><name>tmp_buf</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name></type> <name><name>noise</name><index>[<expr><literal type="number">72</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bias</name></decl>, <decl><type ref="prev"/><name>vsum_2</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>vsum_1</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>v36</name></decl>, <decl><type ref="prev"/><name>normalize_bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>tmp</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>size</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>vsum_1</name> <operator>=</operator> <call><name>dss_sp_vector_sum</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>vsum_1</name> <operator>&gt;</operator> <literal type="number">0xFFFFF</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>vsum_1</name> <operator>=</operator> <literal type="number">0xFFFFF</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>normalize_bits</name> <operator>=</operator> <call><name>dss_sp_get_normalize_bits</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name></name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dss_sp_scale_vector</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name></name></expr></argument>, <argument><expr><name>normalize_bits</name> <operator>-</operator> <literal type="number">3</literal></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>dss_sp_scale_vector</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>audio_buf</name></name></expr></argument>, <argument><expr><name>normalize_bits</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>dss_sp_scale_vector</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>err_buf1</name></name></expr></argument>, <argument><expr><name>normalize_bits</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>v36</name> <operator>=</operator> <name><name>p</name><operator>-&gt;</operator><name>err_buf1</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dss_sp_vec_mult</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>filter</name></name></expr></argument>, <argument><expr><name>tmp_buf</name></expr></argument>, <argument><expr><name>binary_decreasing_array</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>dss_sp_shift_sq_add</name><argument_list>(<argument><expr><name>tmp_buf</name></expr></argument>, <argument><expr><name><name>p</name><operator>-&gt;</operator><name>audio_buf</name></name></expr></argument>, <argument><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dss_sp_vec_mult</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>filter</name></name></expr></argument>, <argument><expr><name>tmp_buf</name></expr></argument>, <argument><expr><name>dss_sp_unc_decreasing_array</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>dss_sp_shift_sq_sub</name><argument_list>(<argument><expr><name>tmp_buf</name></expr></argument>, <argument><expr><name><name>p</name><operator>-&gt;</operator><name>err_buf1</name></name></expr></argument>, <argument><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>lpc_filter</name> <operator>=</operator> <name>lpc_filter</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>lpc_filter</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>lpc_filter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>size</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <name>size</name> <operator>-</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>DSS_SP_FORMULA</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>lpc_filter</name></expr></argument>,
<argument><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>av_clip_int16</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>DSS_SP_FORMULA</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name>lpc_filter</name></expr></argument>, <argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>av_clip_int16</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dss_sp_scale_vector</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name></name></expr></argument>, <argument><expr><operator>-</operator><name>normalize_bits</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>dss_sp_scale_vector</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>audio_buf</name></name></expr></argument>, <argument><expr><operator>-</operator><name>normalize_bits</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>dss_sp_scale_vector</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>err_buf1</name></name></expr></argument>, <argument><expr><operator>-</operator><name>normalize_bits</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>size</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>vsum_2</name> <operator>=</operator> <call><name>dss_sp_vector_sum</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>vsum_2</name> <operator>&gt;=</operator> <literal type="number">0x40</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>vsum_1</name> <operator>&lt;&lt;</operator> <literal type="number">11</literal><operator>)</operator> <operator>/</operator> <name>vsum_2</name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name>bias</name> <operator>=</operator> <literal type="number">409</literal> <operator>*</operator> <name>tmp</name> <operator>&gt;&gt;</operator> <literal type="number">15</literal> <operator>&lt;&lt;</operator> <literal type="number">15</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>bias</name> <operator>+</operator> <literal type="number">32358</literal> <operator>*</operator> <name><name>p</name><operator>-&gt;</operator><name>noise_state</name></name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">15</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>noise</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>av_clip_int16</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>bias</name> <operator>+</operator> <literal type="number">32358</literal> <operator>*</operator> <name><name>noise</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">15</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>noise</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>av_clip_int16</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>noise_state</name></name> <operator>=</operator> <name><name>noise</name><index>[<expr><name>size</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>*</operator> <name><name>noise</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">11</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>av_clip_int16</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dss_sp_update_state</name><parameter_list>(<parameter><decl><type><name>DssSpContext</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>offset</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>, <decl><type ref="prev"/><name>counter</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>a</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">6</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>excitation</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>p</name><operator>-&gt;</operator><name>excitation</name><index>[<expr><literal type="number">288</literal> <operator>+</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">72</literal> <operator>*</operator> <name>SUBFRAMES</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>excitation</name><index>[<expr><literal type="number">6</literal> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>=</operator> <name><name>dst</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<do>do <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>tmp</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">6</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name>tmp</name> <operator>+=</operator> <name><name>p</name><operator>-&gt;</operator><name>excitation</name><index>[<expr><name>offset</name><operator>--</operator></expr>]</index></name> <operator>*</operator> <name><name>dss_sp_sinc</name><index>[<expr><name>a</name> <operator>+</operator> <name>i</name> <operator>*</operator> <literal type="number">11</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name>offset</name> <operator>+=</operator> <literal type="number">7</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp</name> <operator>&gt;&gt;=</operator> <literal type="number">15</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><index>[<expr><name>counter</name></expr>]</index></name> <operator>=</operator> <call><name>av_clip_int16</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>counter</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>a</name> <operator>=</operator> <operator>(</operator><name>a</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>%</operator> <literal type="number">11</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>a</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>offset</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block> while <condition>(<expr><name>offset</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>excitation</name></name></expr></argument>)</argument_list></call></expr>)</condition>;</do>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>dss_sp_32to16bit</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>dst</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>av_clip_int16</name><argument_list>(<argument><expr><name><name>src</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>dss_sp_decode_one_frame</name><parameter_list>(<parameter><decl><type><name>DssSpContext</name> <modifier>*</modifier></type><name>p</name></decl></parameter>,
<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>abuf_dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>abuf_src</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>dss_sp_unpack_coeffs</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>abuf_src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dss_sp_unpack_filter</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dss_sp_convert_coeffs</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>lpc_filter</name></name></expr></argument>, <argument><expr><name><name>p</name><operator>-&gt;</operator><name>filter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>SUBFRAMES</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>dss_sp_gen_exc</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name></name></expr></argument>, <argument><expr><name><name>p</name><operator>-&gt;</operator><name>history</name></name></expr></argument>,
<argument><expr><name><name>p</name><operator>-&gt;</operator><name>fparam</name><operator>.</operator><name>pitch_lag</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>dss_sp_adaptive_gain</name><index>[<expr><name><name>p</name><operator>-&gt;</operator><name>fparam</name><operator>.</operator><name>sf_adaptive_gain</name><index>[<expr><name>j</name></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dss_sp_add_pulses</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p</name><operator>-&gt;</operator><name>fparam</name><operator>.</operator><name>sf</name><index>[<expr><name>j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dss_sp_update_buf</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name></name></expr></argument>, <argument><expr><name><name>p</name><operator>-&gt;</operator><name>history</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">72</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>p</name><operator>-&gt;</operator><name>history</name><index>[<expr><literal type="number">72</literal> <operator>-</operator> <name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><call><name>dss_sp_shift_sq_sub</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>filter</name></name></expr></argument>,
<argument><expr><name><name>p</name><operator>-&gt;</operator><name>err_buf2</name></name></expr></argument>, <argument><expr><name><name>p</name><operator>-&gt;</operator><name>vector_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dss_sp_sf_synthesis</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name><name>p</name><operator>-&gt;</operator><name>lpc_filter</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>p</name><operator>-&gt;</operator><name>working_buffer</name><index>[<expr><name>j</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">72</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>dss_sp_update_state</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>p</name><operator>-&gt;</operator><name>working_buffer</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dss_sp_32to16bit</name><argument_list>(<argument><expr><name>abuf_dst</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>p</name><operator>-&gt;</operator><name>working_buffer</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">264</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>dss_sp_decode_frame</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>got_frame_ptr</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>avpkt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>DssSpContext</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><name><name>avctx</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buf</name> <init>= <expr><name><name>avpkt</name><operator>-&gt;</operator><name>data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>buf_size</name> <init>= <expr><name><name>avpkt</name><operator>-&gt;</operator><name>size</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>buf_size</name> <operator>&lt;</operator> <name>DSS_SP_FRAME_SIZE</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>buf_size</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>AV_LOG_WARNING</name></expr></argument>,
<argument><expr><literal type="string">"Expected %d bytes, got %d - skipping packet.\n"</literal></expr></argument>,
<argument><expr><name>DSS_SP_FRAME_SIZE</name></expr></argument>, <argument><expr><name>buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>got_frame_ptr</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>frame</name><operator>-&gt;</operator><name>nb_samples</name></name> <operator>=</operator> <name>DSS_SP_SAMPLE_COUNT</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>ff_get_buffer</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>frame</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>out</name> <operator>=</operator> <operator>(</operator><name>int16_t</name> <operator>*</operator><operator>)</operator><name><name>frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>dss_sp_decode_one_frame</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>got_frame_ptr</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<return>return <expr><name>DSS_SP_FRAME_SIZE</name></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><name>AVCodec</name></type> <name>ff_dss_sp_decoder</name> <init>= <expr><block>{
<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"dss_sp"</literal></expr>,
<expr><operator>.</operator><name>long_name</name> <operator>=</operator> <call><name>NULL_IF_CONFIG_SMALL</name><argument_list>(<argument><expr><literal type="string">"Digital Speech Standard - Standard Play mode (DSS SP)"</literal></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>AVMEDIA_TYPE_AUDIO</name></expr>,
<expr><operator>.</operator><name>id</name> <operator>=</operator> <name>AV_CODEC_ID_DSS_SP</name></expr>,
<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>DssSpContext</name></expr></argument>)</argument_list></sizeof></expr>,
<expr><operator>.</operator><name>init</name> <operator>=</operator> <name>dss_sp_decode_init</name></expr>,
<expr><operator>.</operator><name>decode</name> <operator>=</operator> <name>dss_sp_decode_frame</name></expr>,
<expr><operator>.</operator><name>capabilities</name> <operator>=</operator> <name>AV_CODEC_CAP_DR1</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
</unit>
