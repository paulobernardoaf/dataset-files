<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\roqvideo.c">

























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"roqvideo.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>block_copy</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>in</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>outstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>instride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sz</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>rows</name> <init>= <expr><name>sz</name></expr></init></decl>;</decl_stmt>
<while>while<condition>(<expr><name>rows</name><operator>--</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>in</name></expr></argument>, <argument><expr><name>sz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>+=</operator> <name>outstride</name></expr>;</expr_stmt>
<expr_stmt><expr><name>in</name> <operator>+=</operator> <name>instride</name></expr>;</expr_stmt>
</block_content>}</block></while>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_apply_vector_2x2</name><parameter_list>(<parameter><decl><type><name>RoqContext</name> <modifier>*</modifier></type><name>ri</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>roq_cell</name> <modifier>*</modifier></type><name>cell</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>bptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>boffs</name></decl>,<decl><type ref="prev"/><name>stride</name></decl>;</decl_stmt>

<expr_stmt><expr><name>stride</name> <operator>=</operator> <name><name>ri</name><operator>-&gt;</operator><name>current_frame</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>boffs</name> <operator>=</operator> <name>y</name><operator>*</operator><name>stride</name> <operator>+</operator> <name>x</name></expr>;</expr_stmt>

<expr_stmt><expr><name>bptr</name> <operator>=</operator> <name><name>ri</name><operator>-&gt;</operator><name>current_frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name>boffs</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>bptr</name><index>[<expr><literal type="number">0</literal></expr> ]</index></name> <operator>=</operator> <name><name>cell</name><operator>-&gt;</operator><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>bptr</name><index>[<expr><literal type="number">1</literal></expr> ]</index></name> <operator>=</operator> <name><name>cell</name><operator>-&gt;</operator><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>bptr</name><index>[<expr><name>stride</name></expr> ]</index></name> <operator>=</operator> <name><name>cell</name><operator>-&gt;</operator><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>bptr</name><index>[<expr><name>stride</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>cell</name><operator>-&gt;</operator><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>stride</name> <operator>=</operator> <name><name>ri</name><operator>-&gt;</operator><name>current_frame</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>boffs</name> <operator>=</operator> <name>y</name><operator>*</operator><name>stride</name> <operator>+</operator> <name>x</name></expr>;</expr_stmt>

<expr_stmt><expr><name>bptr</name> <operator>=</operator> <name><name>ri</name><operator>-&gt;</operator><name>current_frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name>boffs</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>bptr</name><index>[<expr><literal type="number">0</literal></expr> ]</index></name> <operator>=</operator>
<name><name>bptr</name><index>[<expr><literal type="number">1</literal></expr> ]</index></name> <operator>=</operator>
<name><name>bptr</name><index>[<expr><name>stride</name></expr> ]</index></name> <operator>=</operator>
<name><name>bptr</name><index>[<expr><name>stride</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>cell</name><operator>-&gt;</operator><name>u</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>bptr</name> <operator>=</operator> <name><name>ri</name><operator>-&gt;</operator><name>current_frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+</operator> <name>boffs</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>bptr</name><index>[<expr><literal type="number">0</literal></expr> ]</index></name> <operator>=</operator>
<name><name>bptr</name><index>[<expr><literal type="number">1</literal></expr> ]</index></name> <operator>=</operator>
<name><name>bptr</name><index>[<expr><name>stride</name></expr> ]</index></name> <operator>=</operator>
<name><name>bptr</name><index>[<expr><name>stride</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>cell</name><operator>-&gt;</operator><name>v</name></name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_apply_vector_4x4</name><parameter_list>(<parameter><decl><type><name>RoqContext</name> <modifier>*</modifier></type><name>ri</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>roq_cell</name> <modifier>*</modifier></type><name>cell</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>bptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>boffs</name></decl>,<decl><type ref="prev"/><name>stride</name></decl>;</decl_stmt>

<expr_stmt><expr><name>stride</name> <operator>=</operator> <name><name>ri</name><operator>-&gt;</operator><name>current_frame</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>boffs</name> <operator>=</operator> <name>y</name><operator>*</operator><name>stride</name> <operator>+</operator> <name>x</name></expr>;</expr_stmt>

<expr_stmt><expr><name>bptr</name> <operator>=</operator> <name><name>ri</name><operator>-&gt;</operator><name>current_frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name>boffs</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>bptr</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name></expr> ]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name> <operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>cell</name><operator>-&gt;</operator><name>y</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>bptr</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name> <operator>+</operator><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name> <operator>+</operator><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>cell</name><operator>-&gt;</operator><name>y</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">2</literal></expr> ]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">2</literal><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">3</literal></expr> ]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">3</literal><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>cell</name><operator>-&gt;</operator><name>y</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">2</literal><operator>+</operator><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">2</literal><operator>+</operator><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">3</literal><operator>+</operator><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">3</literal><operator>+</operator><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>cell</name><operator>-&gt;</operator><name>y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>stride</name> <operator>=</operator> <name><name>ri</name><operator>-&gt;</operator><name>current_frame</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>boffs</name> <operator>=</operator> <name>y</name><operator>*</operator><name>stride</name> <operator>+</operator> <name>x</name></expr>;</expr_stmt>

<expr_stmt><expr><name>bptr</name> <operator>=</operator> <name><name>ri</name><operator>-&gt;</operator><name>current_frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name>boffs</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>bptr</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name></expr> ]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name> <operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator>
<name><name>bptr</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name> <operator>+</operator><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name> <operator>+</operator><literal type="number">3</literal></expr>]</index></name> <operator>=</operator>
<name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">2</literal></expr> ]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">2</literal><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">3</literal></expr> ]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">3</literal><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator>
<name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">2</literal><operator>+</operator><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">2</literal><operator>+</operator><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">3</literal><operator>+</operator><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">3</literal><operator>+</operator><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>cell</name><operator>-&gt;</operator><name>u</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>bptr</name> <operator>=</operator> <name><name>ri</name><operator>-&gt;</operator><name>current_frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+</operator> <name>boffs</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>bptr</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[ <expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name></expr> ]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name> <operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator>
<name><name>bptr</name><index>[ <expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[ <expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name> <operator>+</operator><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name> <operator>+</operator><literal type="number">3</literal></expr>]</index></name> <operator>=</operator>
<name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">2</literal></expr> ]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">2</literal><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">3</literal></expr> ]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">3</literal><operator>+</operator><literal type="number">1</literal></expr>]</index></name> <operator>=</operator>
<name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">2</literal><operator>+</operator><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">2</literal><operator>+</operator><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">3</literal><operator>+</operator><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>bptr</name><index>[<expr><name>stride</name><operator>*</operator><literal type="number">3</literal><operator>+</operator><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>cell</name><operator>-&gt;</operator><name>v</name></name></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>apply_motion_generic</name><parameter_list>(<parameter><decl><type><name>RoqContext</name> <modifier>*</modifier></type><name>ri</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>deltax</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>deltay</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sz</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>mx</name></decl>, <decl><type ref="prev"/><name>my</name></decl>, <decl><type ref="prev"/><name>cp</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mx</name> <operator>=</operator> <name>x</name> <operator>+</operator> <name>deltax</name></expr>;</expr_stmt>
<expr_stmt><expr><name>my</name> <operator>=</operator> <name>y</name> <operator>+</operator> <name>deltay</name></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><operator>(</operator><name>mx</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator> <operator>||</operator> <operator>(</operator><name>mx</name> <operator>&gt;</operator> <name><name>ri</name><operator>-&gt;</operator><name>width</name></name> <operator>-</operator> <name>sz</name><operator>)</operator> <operator>||</operator>
<operator>(</operator><name>my</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator> <operator>||</operator> <operator>(</operator><name>my</name> <operator>&gt;</operator> <name><name>ri</name><operator>-&gt;</operator><name>height</name></name> <operator>-</operator> <name>sz</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>ri</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"motion vector out of bounds: MV = (%d, %d), boundaries = (0, 0, %d, %d)\n"</literal></expr></argument>,
<argument><expr><name>mx</name></expr></argument>, <argument><expr><name>my</name></expr></argument>, <argument><expr><name><name>ri</name><operator>-&gt;</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>ri</name><operator>-&gt;</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>ri</name><operator>-&gt;</operator><name>last_frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>ri</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"Invalid decode type. Invalid header?\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>

<for>for<control>(<init><expr><name>cp</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>cp</name> <operator>&lt;</operator> <literal type="number">3</literal></expr>;</condition> <incr><expr><name>cp</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>outstride</name> <init>= <expr><name><name>ri</name><operator>-&gt;</operator><name>current_frame</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><name>cp</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>instride</name> <init>= <expr><name><name>ri</name><operator>-&gt;</operator><name>last_frame</name> <operator>-&gt;</operator><name>linesize</name><index>[<expr><name>cp</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>block_copy</name><argument_list>(<argument><expr><name><name>ri</name><operator>-&gt;</operator><name>current_frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><name>cp</name></expr>]</index></name> <operator>+</operator> <name>y</name><operator>*</operator><name>outstride</name> <operator>+</operator> <name>x</name></expr></argument>,
<argument><expr><name><name>ri</name><operator>-&gt;</operator><name>last_frame</name><operator>-&gt;</operator><name>data</name><index>[<expr><name>cp</name></expr>]</index></name> <operator>+</operator> <name>my</name><operator>*</operator><name>instride</name> <operator>+</operator> <name>mx</name></expr></argument>,
<argument><expr><name>outstride</name></expr></argument>, <argument><expr><name>instride</name></expr></argument>, <argument><expr><name>sz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>ff_apply_motion_4x4</name><parameter_list>(<parameter><decl><type><name>RoqContext</name> <modifier>*</modifier></type><name>ri</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>deltax</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>deltay</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>apply_motion_generic</name><argument_list>(<argument><expr><name>ri</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>deltax</name></expr></argument>, <argument><expr><name>deltay</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_apply_motion_8x8</name><parameter_list>(<parameter><decl><type><name>RoqContext</name> <modifier>*</modifier></type><name>ri</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>deltax</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>deltay</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>apply_motion_generic</name><argument_list>(<argument><expr><name>ri</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>deltax</name></expr></argument>, <argument><expr><name>deltay</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
