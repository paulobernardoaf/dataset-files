<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\acelp_filters.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_ACELP_FILTERS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_ACELP_FILTERS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>ACELPFContext</name> <block>{



<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>acelp_interpolatef</name>)<parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>in</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>filter_coeffs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>precision</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>frac_pos</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>filter_length</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>acelp_apply_order_2_transfer_function</name>)<parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>in</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>float</name></type> <name><name>zero_coeffs</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>float</name></type> <name><name>pole_coeffs</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>gain</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name><name>mem</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>

}</block></struct></type><name>ACELPFContext</name>;</typedef>




<function_decl><type><name>void</name></type> <name>ff_acelp_filter_init</name><parameter_list>(<parameter><decl><type><name>ACELPFContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_acelp_filter_init_mips</name><parameter_list>(<parameter><decl><type><name>ACELPFContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>;</function_decl>










<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>ff_acelp_interp_filter</name><index>[<expr><literal type="number">61</literal></expr>]</index></name></decl>;</decl_stmt>















<function_decl><type><name>void</name></type> <name>ff_acelp_interpolate</name><parameter_list>(<parameter><decl><type><name>int16_t</name><modifier>*</modifier></type> <name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int16_t</name><modifier>*</modifier></type> <name>in</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int16_t</name><modifier>*</modifier></type> <name>filter_coeffs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>precision</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>frac_pos</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>filter_length</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ff_acelp_interpolatef</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>in</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>filter_coeffs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>precision</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>frac_pos</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>filter_length</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>

























<function_decl><type><name>void</name></type> <name>ff_acelp_high_pass_filter</name><parameter_list>(<parameter><decl><type><name>int16_t</name><modifier>*</modifier></type> <name>out</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name><name>hpf_f</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int16_t</name><modifier>*</modifier></type> <name>in</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>void</name></type> <name>ff_acelp_apply_order_2_transfer_function</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>in</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>float</name></type> <name><name>zero_coeffs</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>float</name></type> <name><name>pole_coeffs</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>gain</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name><name>mem</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>ff_tilt_compensation</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>mem</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>tilt</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>samples</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
