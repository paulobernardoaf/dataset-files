<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\vp56dsp.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vp56dsp.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/common.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP56_EDGE_FILTER</name><parameter_list>(<parameter><type><name>pfx</name></type></parameter>, <parameter><type><name>suf</name></type></parameter>, <parameter><type><name>pix_inc</name></type></parameter>, <parameter><type><name>line_inc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>static void pfx ##_edge_filter_ ##suf(uint8_t *yuv, ptrdiff_t stride, int t) { int pix2_inc = 2 * pix_inc; int i, v; for (i=0; i&lt;12; i++) { v = (yuv[-pix2_inc] + 3*(yuv[0]-yuv[-pix_inc]) - yuv[pix_inc] + 4)&gt;&gt;3;v = pfx##_adjust(v, t); yuv[-pix_inc] = av_clip_uint8(yuv[-pix_inc] + v); yuv[0] = av_clip_uint8(yuv[0] - v); yuv += line_inc; } }</cpp:value></cpp:define>















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_VP5_DECODER</name></expr></cpp:if>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vp5_adjust</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>t</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>s2</name></decl>, <decl><type ref="prev"/><name>s1</name> <init>= <expr><name>v</name> <operator>&gt;&gt;</operator> <literal type="number">31</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>v</name> <operator>^=</operator> <name>s1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v</name> <operator>-=</operator> <name>s1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v</name> <operator>*=</operator> <name>v</name> <operator>&lt;</operator> <literal type="number">2</literal><operator>*</operator><name>t</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v</name> <operator>-=</operator> <name>t</name></expr>;</expr_stmt>
<expr_stmt><expr><name>s2</name> <operator>=</operator> <name>v</name> <operator>&gt;&gt;</operator> <literal type="number">31</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>v</name> <operator>^=</operator> <name>s2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v</name> <operator>-=</operator> <name>s2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v</name> <operator>=</operator> <name>t</name> <operator>-</operator> <name>v</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v</name> <operator>+=</operator> <name>s1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>v</name> <operator>^=</operator> <name>s1</name></expr>;</expr_stmt>
<return>return <expr><name>v</name></expr>;</return>
</block_content>}</block></function>


<macro><name>VP56_EDGE_FILTER</name><argument_list>(<argument>vp5</argument>, <argument>hor</argument>, <argument><literal type="number">1</literal></argument>, <argument>stride</argument>)</argument_list></macro>
<macro><name>VP56_EDGE_FILTER</name><argument_list>(<argument>vp5</argument>, <argument>ver</argument>, <argument>stride</argument>, <argument><literal type="number">1</literal></argument>)</argument_list></macro>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_vp5dsp_init</name><parameter_list>(<parameter><decl><type><name>VP56DSPContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>edge_filter_hor</name></name> <operator>=</operator> <name>vp5_edge_filter_hor</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>edge_filter_ver</name></name> <operator>=</operator> <name>vp5_edge_filter_ver</name></expr>;</expr_stmt>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_VP6_DECODER</name></expr></cpp:if>
<function><type><name>av_cold</name> <name>void</name></type> <name>ff_vp6dsp_init</name><parameter_list>(<parameter><decl><type><name>VP56DSPContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>vp6_filter_diag4</name></name> <operator>=</operator> <name>ff_vp6_filter_diag4_c</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ARCH_ARM</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_vp6dsp_init_arm</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_X86</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_vp6dsp_init_x86</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
