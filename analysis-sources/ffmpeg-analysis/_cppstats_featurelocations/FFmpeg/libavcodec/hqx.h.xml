<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\hqx.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_HQX_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_HQX_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/frame.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mem.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"get_bits.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hqxdsp.h"</cpp:file></cpp:include>

<enum>enum <name>HQXACMode</name> <block>{
<decl><name>HQX_AC_Q0</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>HQX_AC_Q8</name></decl>,
<decl><name>HQX_AC_Q16</name></decl>,
<decl><name>HQX_AC_Q32</name></decl>,
<decl><name>HQX_AC_Q64</name></decl>,
<decl><name>HQX_AC_Q128</name></decl>,
<decl><name>NUM_HQX_AC</name></decl>
}</block>;</enum>

<typedef>typedef <type><struct>struct <name>HQXLUT</name> <block>{
<decl_stmt><decl><type><name>int16_t</name></type> <name>lev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>run</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int8_t</name></type> <name>bits</name></decl>;</decl_stmt>
}</block></struct></type> <name>HQXLUT</name>;</typedef>

<typedef>typedef <type><struct>struct <name>HQXAC</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>lut_bits</name></decl>, <name>extra_bits</name>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>HQXLUT</name> <modifier>*</modifier></type><name>lut</name></decl>;</decl_stmt>
}</block></struct></type> <name>HQXAC</name>;</typedef>

<struct_decl>struct <name>HQXContext</name>;</struct_decl>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>mb_decode_func</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>HQXContext</name></name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>slice_no</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>HQXSlice</name> <block>{
<decl_stmt><decl><type><name>GetBitContext</name></type> <name>gb</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>int16_t</name></expr></argument>, <argument><expr><name>block</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">16</literal></expr>]</index><index>[<expr><literal type="number">64</literal></expr>]</index></expr>;</expr_stmt>
}</block></struct></type> <name>HQXSlice</name>;</typedef>

<typedef>typedef <type><struct>struct <name>HQXContext</name> <block>{
<decl_stmt><decl><type><name>HQXDSPContext</name></type> <name>hqxdsp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HQXSlice</name></type> <name><name>slice</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>pic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mb_decode_func</name></type> <name>decode_func</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>format</name></decl>, <name>dcb</name>, <name>width</name>, <name>height</name>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>interlaced</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>data_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>slice_off</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VLC</name></type> <name>cbp_vlc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VLC</name></type> <name><name>dc_vlc</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>HQXContext</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HQX_DC_VLC_BITS</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>HQXAC</name></type> <name><name>ff_hqx_ac</name><index>[<expr><name>NUM_HQX_AC</name></expr>]</index></name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> <name>ff_hqx_init_vlcs</name><parameter_list>(<parameter><decl><type><name>HQXContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
