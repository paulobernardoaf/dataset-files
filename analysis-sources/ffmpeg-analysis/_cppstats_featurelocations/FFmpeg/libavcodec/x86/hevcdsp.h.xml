<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\x86\hevcdsp.h">























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_X86_HEVCDSP_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_X86_HEVCDSP_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PEL_LINK</name><parameter_list>(<parameter><type><name>dst</name></type></parameter>, <parameter><type><name>idx1</name></type></parameter>, <parameter><type><name>idx2</name></type></parameter>, <parameter><type><name>idx3</name></type></parameter>, <parameter><type><name>name</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>dst[idx1][idx2][idx3] = ff_hevc_put_hevc_ ##name ##_ ##D ##_##opt; dst ##_bi[idx1][idx2][idx3] = ff_hevc_put_hevc_bi_ ##name ##_ ##D ##_##opt; dst ##_uni[idx1][idx2][idx3] = ff_hevc_put_hevc_uni_ ##name ##_ ##D ##_##opt; dst ##_uni_w[idx1][idx2][idx3] = ff_hevc_put_hevc_uni_w_ ##name ##_ ##D ##_##opt; dst ##_bi_w[idx1][idx2][idx3] = ff_hevc_put_hevc_bi_w_ ##name ##_ ##D ##_##opt</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PEL_PROTOTYPE</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_ ##name ##_ ##D ##_##opt(int16_t *dst, uint8_t *_src, ptrdiff_t _srcstride, int height, intptr_t mx, intptr_t my,int width); void ff_hevc_put_hevc_bi_ ##name ##_ ##D ##_##opt(uint8_t *_dst, ptrdiff_t _dststride, uint8_t *_src, ptrdiff_t _srcstride, int16_t *src2, int height, intptr_t mx, intptr_t my, int width); void ff_hevc_put_hevc_uni_ ##name ##_ ##D ##_##opt(uint8_t *_dst, ptrdiff_t _dststride, uint8_t *_src, ptrdiff_t _srcstride, int height, intptr_t mx, intptr_t my, int width); void ff_hevc_put_hevc_uni_w_ ##name ##_ ##D ##_##opt(uint8_t *_dst, ptrdiff_t _dststride, uint8_t *_src, ptrdiff_t _srcstride, int height, int denom, int wx, int ox, intptr_t mx, intptr_t my, int width); void ff_hevc_put_hevc_bi_w_ ##name ##_ ##D ##_##opt(uint8_t *_dst, ptrdiff_t _dststride, uint8_t *_src, ptrdiff_t _srcstride, int16_t *src2, int height, int denom, int wx0, int wx1, int ox0, int ox1, intptr_t mx, intptr_t my, int width)</cpp:value></cpp:define>











<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EPEL_PROTOTYPES</name><parameter_list>(<parameter><type><name>fname</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>PEL_PROTOTYPE(fname##4, bitd, opt); PEL_PROTOTYPE(fname##6, bitd, opt); PEL_PROTOTYPE(fname##8, bitd, opt); PEL_PROTOTYPE(fname##12, bitd, opt); PEL_PROTOTYPE(fname##16, bitd, opt); PEL_PROTOTYPE(fname##24, bitd, opt); PEL_PROTOTYPE(fname##32, bitd, opt); PEL_PROTOTYPE(fname##48, bitd, opt); PEL_PROTOTYPE(fname##64, bitd, opt)</cpp:value></cpp:define>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QPEL_PROTOTYPES</name><parameter_list>(<parameter><type><name>fname</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>PEL_PROTOTYPE(fname##4, bitd, opt); PEL_PROTOTYPE(fname##8, bitd, opt); PEL_PROTOTYPE(fname##12, bitd, opt); PEL_PROTOTYPE(fname##16, bitd, opt); PEL_PROTOTYPE(fname##24, bitd, opt); PEL_PROTOTYPE(fname##32, bitd, opt); PEL_PROTOTYPE(fname##48, bitd, opt); PEL_PROTOTYPE(fname##64, bitd, opt)</cpp:value></cpp:define>









<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WEIGHTING_PROTOTYPE</name><parameter_list>(<parameter><type><name>width</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_uni_w##width##_##bitd##_##opt(uint8_t *dst, ptrdiff_t dststride, int16_t *_src, int height, int denom, int _wx, int _ox); void ff_hevc_put_hevc_bi_w##width##_##bitd##_##opt(uint8_t *dst, ptrdiff_t dststride, int16_t *_src, int16_t *_src2, int height, int denom, int _wx0, int _wx1, int _ox0, int _ox1)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WEIGHTING_PROTOTYPES</name><parameter_list>(<parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>WEIGHTING_PROTOTYPE(2, bitd, opt); WEIGHTING_PROTOTYPE(4, bitd, opt); WEIGHTING_PROTOTYPE(6, bitd, opt); WEIGHTING_PROTOTYPE(8, bitd, opt); WEIGHTING_PROTOTYPE(12, bitd, opt); WEIGHTING_PROTOTYPE(16, bitd, opt); WEIGHTING_PROTOTYPE(24, bitd, opt); WEIGHTING_PROTOTYPE(32, bitd, opt); WEIGHTING_PROTOTYPE(48, bitd, opt); WEIGHTING_PROTOTYPE(64, bitd, opt)</cpp:value></cpp:define>















<expr_stmt><expr><call><name>EPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>pel_pixels</name></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>pel_pixels</name></expr></argument> , <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>pel_pixels</name></expr></argument> , <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_pel_pixels16_8_avx2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_pel_pixels24_8_avx2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_pel_pixels32_8_avx2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_pel_pixels48_8_avx2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_pel_pixels64_8_avx2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_pel_pixels16_10_avx2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_pel_pixels24_10_avx2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_pel_pixels32_10_avx2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_pel_pixels48_10_avx2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_pel_pixels64_10_avx2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_uni_pel_pixels32_8_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dststride</name></decl></parameter>,<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_uni_pel_pixels48_8_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dststride</name></decl></parameter>,<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_uni_pel_pixels64_8_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dststride</name></decl></parameter>,<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_uni_pel_pixels96_8_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dststride</name></decl></parameter>,<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl> 
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_uni_pel_pixels128_8_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dststride</name></decl></parameter>,<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_bi_pel_pixels16_8_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_bi_pel_pixels24_8_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_bi_pel_pixels32_8_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_bi_pel_pixels48_8_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_bi_pel_pixels64_8_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_bi_pel_pixels16_10_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_bi_pel_pixels24_10_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_bi_pel_pixels32_10_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_bi_pel_pixels48_10_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_put_hevc_bi_pel_pixels64_10_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_dststride</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>_srcstride</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>src2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>intptr_t</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>)</parameter_list>;</function_decl>




<expr_stmt><expr><call><name>EPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>epel_h</name></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>epel_h</name></expr></argument> , <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>epel_h</name></expr></argument> , <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>EPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>epel_v</name></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>epel_v</name></expr></argument> , <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>epel_v</name></expr></argument> , <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>EPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>epel_hv</name></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>epel_hv</name></expr></argument> , <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>epel_hv</name></expr></argument> , <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_h16</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_h24</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_h32</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_h48</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_h64</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_h16</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_h24</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_h32</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_h48</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_h64</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_v16</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_v24</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_v32</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_v48</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_v64</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_v16</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_v24</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_v32</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_v48</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_v64</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_hv16</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_hv24</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_hv32</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_hv48</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_hv64</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_hv16</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_hv24</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_hv32</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_hv48</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>epel_hv64</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<expr_stmt><expr><call><name>QPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>qpel_h</name></expr></argument> , <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>qpel_h</name></expr></argument> , <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>qpel_h</name></expr></argument> , <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>qpel_v</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>qpel_v</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>qpel_v</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>qpel_hv</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>qpel_hv</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_PROTOTYPES</name><argument_list>(<argument><expr><name>qpel_hv</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_h16</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_h24</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_h32</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_h48</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_h64</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_h16</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_h24</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_h32</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_h48</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_h64</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_v16</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_v24</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_v32</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_v48</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_v64</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_v16</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_v24</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_v32</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_v48</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_v64</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_hv16</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_hv24</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_hv32</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_hv48</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_hv64</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_hv16</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_hv24</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_hv32</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_hv48</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PEL_PROTOTYPE</name><argument_list>(<argument><expr><name>qpel_hv64</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>WEIGHTING_PROTOTYPES</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WEIGHTING_PROTOTYPES</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WEIGHTING_PROTOTYPES</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_4_8_mmxext</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_8_8_sse2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_16_8_sse2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_32_8_sse2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_8_8_avx</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_16_8_avx</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_32_8_avx</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_32_8_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_4_10_mmxext</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_8_10_sse2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_16_10_sse2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_32_10_sse2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_16_10_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_hevc_add_residual_32_10_avx2</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
