<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\x86\hevcdsp_init.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/cpu.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/asm.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/cpu.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/get_bits.h"</cpp:file></cpp:include> 
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/hevcdsp.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/x86/hevcdsp.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LFC_FUNC</name><parameter_list>(<parameter><type><name>DIR</name></type></parameter>, <parameter><type><name>DEPTH</name></type></parameter>, <parameter><type><name>OPT</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_ ##DIR ##_loop_filter_chroma_ ##DEPTH ##_ ##OPT(uint8_t *pix, ptrdiff_t stride, int *tc, uint8_t *no_p, uint8_t *no_q);</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LFL_FUNC</name><parameter_list>(<parameter><type><name>DIR</name></type></parameter>, <parameter><type><name>DEPTH</name></type></parameter>, <parameter><type><name>OPT</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_ ##DIR ##_loop_filter_luma_ ##DEPTH ##_ ##OPT(uint8_t *pix, ptrdiff_t stride, int beta, int *tc, uint8_t *no_p, uint8_t *no_q);</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LFC_FUNCS</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>depth</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LFC_FUNC(h, depth, opt) LFC_FUNC(v, depth, opt)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LFL_FUNCS</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>depth</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>LFL_FUNC(h, depth, opt) LFL_FUNC(v, depth, opt)</cpp:value></cpp:define>



<macro><name>LFC_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>LFC_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>LFC_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>LFC_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">8</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>LFC_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>LFC_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">12</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>LFL_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>LFL_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>LFL_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>LFL_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>LFL_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">10</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>LFL_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">12</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>LFL_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">8</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>LFL_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>LFL_FUNCS</name><argument_list>(<argument>uint8_t</argument>, <argument><literal type="number">12</literal></argument>, <argument>avx</argument>)</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IDCT_DC_FUNCS</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_idct_ ##W ##_dc_8_ ##opt(int16_t *coeffs); void ff_hevc_idct_ ##W ##_dc_10_ ##opt(int16_t *coeffs); void ff_hevc_idct_ ##W ##_dc_12_ ##opt(int16_t *coeffs)</cpp:value></cpp:define>




<expr_stmt><expr><call><name>IDCT_DC_FUNCS</name><argument_list>(<argument><expr><literal type="number">4x4</literal></expr></argument>, <argument><expr><name>mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>IDCT_DC_FUNCS</name><argument_list>(<argument><expr><literal type="number">8x8</literal></expr></argument>, <argument><expr><name>mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>IDCT_DC_FUNCS</name><argument_list>(<argument><expr><literal type="number">8x8</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>IDCT_DC_FUNCS</name><argument_list>(<argument><expr><literal type="number">16x16</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>IDCT_DC_FUNCS</name><argument_list>(<argument><expr><literal type="number">32x32</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>IDCT_DC_FUNCS</name><argument_list>(<argument><expr><literal type="number">16x16</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>IDCT_DC_FUNCS</name><argument_list>(<argument><expr><literal type="number">32x32</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>IDCT_FUNCS</name><parameter_list>(<parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_idct_4x4_8_ ##opt(int16_t *coeffs, int col_limit); void ff_hevc_idct_4x4_10_ ##opt(int16_t *coeffs, int col_limit); void ff_hevc_idct_8x8_8_ ##opt(int16_t *coeffs, int col_limit); void ff_hevc_idct_8x8_10_ ##opt(int16_t *coeffs, int col_limit); void ff_hevc_idct_16x16_8_ ##opt(int16_t *coeffs, int col_limit); void ff_hevc_idct_16x16_10_ ##opt(int16_t *coeffs, int col_limit); void ff_hevc_idct_32x32_8_ ##opt(int16_t *coeffs, int col_limit); void ff_hevc_idct_32x32_10_ ##opt(int16_t *coeffs, int col_limit);</cpp:value></cpp:define>









<macro><name>IDCT_FUNCS</name><argument_list>(<argument>sse2</argument>)</argument_list></macro>
<macro><name>IDCT_FUNCS</name><argument_list>(<argument>avx</argument>)</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_func</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>step</name></type></parameter>, <parameter><type><name>W</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_##name##W##_##bitd##_##opt(int16_t *_dst, uint8_t *_src, ptrdiff_t _srcstride, int height, intptr_t mx, intptr_t my, int width) { int i; uint8_t *src; int16_t *dst; for (i = 0; i &lt; W; i += step) { src = _src + (i * ((bitd + 7) / 8)); dst = _dst + i; ff_hevc_put_hevc_##name##step##_##bitd##_##opt(dst, src, _srcstride, height, mx, my, width); } }</cpp:value></cpp:define>













<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_uni_func</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>step</name></type></parameter>, <parameter><type><name>W</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_uni_##name##W##_##bitd##_##opt(uint8_t *_dst, ptrdiff_t dststride, uint8_t *_src, ptrdiff_t _srcstride, int height, intptr_t mx, intptr_t my, int width) { int i; uint8_t *src; uint8_t *dst; for (i = 0; i &lt; W; i += step) { src = _src + (i * ((bitd + 7) / 8)); dst = _dst + (i * ((bitd + 7) / 8)); ff_hevc_put_hevc_uni_##name##step##_##bitd##_##opt(dst, dststride, src, _srcstride, height, mx, my, width); } }</cpp:value></cpp:define>














<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_bi_func</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>step</name></type></parameter>, <parameter><type><name>W</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_bi_##name##W##_##bitd##_##opt(uint8_t *_dst, ptrdiff_t dststride, uint8_t *_src, ptrdiff_t _srcstride, int16_t* _src2, int height, intptr_t mx, intptr_t my, int width) { int i; uint8_t *src; uint8_t *dst; int16_t *src2; for (i = 0; i &lt; W ; i += step) { src = _src + (i * ((bitd + 7) / 8)); dst = _dst + (i * ((bitd + 7) / 8)); src2 = _src2 + i; ff_hevc_put_hevc_bi_##name##step##_##bitd##_##opt(dst, dststride, src, _srcstride, src2, height, mx, my, width); } }</cpp:value></cpp:define>

















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_funcs</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>step</name></type></parameter>, <parameter><type><name>W</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mc_rep_func(name, bitd, step, W, opt) mc_rep_uni_func(name, bitd, step, W, opt) mc_rep_bi_func(name, bitd, step, W, opt)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_func2</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>step1</name></type></parameter>, <parameter><type><name>step2</name></type></parameter>, <parameter><type><name>W</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_##name##W##_##bitd##_##opt(int16_t *dst, uint8_t *src, ptrdiff_t _srcstride, int height, intptr_t mx, intptr_t my, int width) { ff_hevc_put_hevc_##name##step1##_##bitd##_##opt(dst, src, _srcstride, height, mx, my, width); ff_hevc_put_hevc_##name##step2##_##bitd##_##opt(dst + step1, src + (step1 * ((bitd + 7) / 8)), _srcstride, height, mx, my, width); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_uni_func2</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>step1</name></type></parameter>, <parameter><type><name>step2</name></type></parameter>, <parameter><type><name>W</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_uni_##name##W##_##bitd##_##opt(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t _srcstride, int height, intptr_t mx, intptr_t my, int width) { ff_hevc_put_hevc_uni_##name##step1##_##bitd##_##opt(dst, dststride, src, _srcstride, height, mx, my, width);ff_hevc_put_hevc_uni_##name##step2##_##bitd##_##opt(dst + (step1 * ((bitd + 7) / 8)), dststride, src + (step1 * ((bitd + 7) / 8)), _srcstride, height, mx, my, width); }</cpp:value></cpp:define>









<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_bi_func2</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>step1</name></type></parameter>, <parameter><type><name>step2</name></type></parameter>, <parameter><type><name>W</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_bi_##name##W##_##bitd##_##opt(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t _srcstride, int16_t* src2, int height, intptr_t mx, intptr_t my, int width) { ff_hevc_put_hevc_bi_##name##step1##_##bitd##_##opt(dst, dststride, src, _srcstride, src2, height, mx, my, width);ff_hevc_put_hevc_bi_##name##step2##_##bitd##_##opt(dst + (step1 * ((bitd + 7) / 8)), dststride, src + (step1 * ((bitd + 7) / 8)), _srcstride, src2 + step1, height, mx, my, width); }</cpp:value></cpp:define>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_funcs2</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>step1</name></type></parameter>, <parameter><type><name>step2</name></type></parameter>, <parameter><type><name>W</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mc_rep_func2(name, bitd, step1, step2, W, opt) mc_rep_uni_func2(name, bitd, step1, step2, W, opt) mc_rep_bi_func2(name, bitd, step1, step2, W, opt)</cpp:value></cpp:define>




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>ARCH_X86_64</name> <operator>&amp;&amp;</operator> <name>HAVE_SSE4_EXTERNAL</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_mix_10</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>width1</name></type></parameter>, <parameter><type><name>width2</name></type></parameter>, <parameter><type><name>width3</name></type></parameter>, <parameter><type><name>opt1</name></type></parameter>, <parameter><type><name>opt2</name></type></parameter>, <parameter><type><name>width4</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_##name##width1##_10_##opt1(int16_t *dst, uint8_t *src, ptrdiff_t _srcstride, int height, intptr_t mx, intptr_t my, int width) { ff_hevc_put_hevc_##name##width2##_10_##opt1(dst, src, _srcstride, height, mx, my, width); ff_hevc_put_hevc_##name##width3##_10_##opt2(dst+ width2, src+ width4, _srcstride, height, mx, my, width); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_bi_rep_mix_10</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>width1</name></type></parameter>, <parameter><type><name>width2</name></type></parameter>, <parameter><type><name>width3</name></type></parameter>, <parameter><type><name>opt1</name></type></parameter>, <parameter><type><name>opt2</name></type></parameter>, <parameter><type><name>width4</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_bi_##name##width1##_10_##opt1(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t _srcstride, int16_t *src2, int height, intptr_t mx, intptr_t my, int width) { ff_hevc_put_hevc_bi_##name##width2##_10_##opt1(dst, dststride, src, _srcstride, src2, height, mx, my, width); ff_hevc_put_hevc_bi_##name##width3##_10_##opt2(dst+width4, dststride, src+width4, _srcstride, src2+width2,height, mx, my, width); }</cpp:value></cpp:define>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_uni_rep_mix_10</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>width1</name></type></parameter>, <parameter><type><name>width2</name></type></parameter>, <parameter><type><name>width3</name></type></parameter>, <parameter><type><name>opt1</name></type></parameter>, <parameter><type><name>opt2</name></type></parameter>, <parameter><type><name>width4</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_uni_##name##width1##_10_##opt1(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t _srcstride, int height, intptr_t mx, intptr_t my, int width) { ff_hevc_put_hevc_uni_##name##width2##_10_##opt1(dst, dststride, src, _srcstride, height, mx, my, width); ff_hevc_put_hevc_uni_##name##width3##_10_##opt2(dst+width4, dststride, src+width4, _srcstride, height, mx, my, width); }</cpp:value></cpp:define>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_mixs_10</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>width1</name></type></parameter>, <parameter><type><name>width2</name></type></parameter>, <parameter><type><name>width3</name></type></parameter>, <parameter><type><name>opt1</name></type></parameter>, <parameter><type><name>opt2</name></type></parameter>, <parameter><type><name>width4</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mc_rep_mix_10(name, width1, width2, width3, opt1, opt2, width4) mc_bi_rep_mix_10(name, width1, width2, width3, opt1, opt2, width4) mc_uni_rep_mix_10(name, width1, width2, width3, opt1, opt2, width4)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_mix_8</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>width1</name></type></parameter>, <parameter><type><name>width2</name></type></parameter>, <parameter><type><name>width3</name></type></parameter>, <parameter><type><name>opt1</name></type></parameter>, <parameter><type><name>opt2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_##name##width1##_8_##opt1(int16_t *dst, uint8_t *src, ptrdiff_t _srcstride, int height, intptr_t mx, intptr_t my, int width) { ff_hevc_put_hevc_##name##width2##_8_##opt1(dst, src, _srcstride, height, mx, my, width); ff_hevc_put_hevc_##name##width3##_8_##opt2(dst+ width2, src+ width2, _srcstride, height, mx, my, width); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_bi_rep_mix_8</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>width1</name></type></parameter>, <parameter><type><name>width2</name></type></parameter>, <parameter><type><name>width3</name></type></parameter>, <parameter><type><name>opt1</name></type></parameter>, <parameter><type><name>opt2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_bi_##name##width1##_8_##opt1(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t _srcstride, int16_t* src2, int height, intptr_t mx, intptr_t my, int width) { ff_hevc_put_hevc_bi_##name##width2##_8_##opt1(dst, dststride, src, _srcstride, src2, height, mx, my, width); ff_hevc_put_hevc_bi_##name##width3##_8_##opt2(dst+width2, dststride, src+width2, _srcstride, src2+width2, height, mx, my, width); }</cpp:value></cpp:define>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_uni_rep_mix_8</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>width1</name></type></parameter>, <parameter><type><name>width2</name></type></parameter>, <parameter><type><name>width3</name></type></parameter>, <parameter><type><name>opt1</name></type></parameter>, <parameter><type><name>opt2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_uni_##name##width1##_8_##opt1(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t _srcstride, int height, intptr_t mx, intptr_t my, int width) { ff_hevc_put_hevc_uni_##name##width2##_8_##opt1(dst, dststride, src, _srcstride, height, mx, my, width); ff_hevc_put_hevc_uni_##name##width3##_8_##opt2(dst+width2, dststride, src+width2, _srcstride, height, mx, my, width); }</cpp:value></cpp:define>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_mixs_8</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>width1</name></type></parameter>, <parameter><type><name>width2</name></type></parameter>, <parameter><type><name>width3</name></type></parameter>, <parameter><type><name>opt1</name></type></parameter>, <parameter><type><name>opt2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mc_rep_mix_8(name, width1, width2, width3, opt1, opt2) mc_bi_rep_mix_8(name, width1, width2, width3, opt1, opt2) mc_uni_rep_mix_8(name, width1, width2, width3, opt1, opt2)</cpp:value></cpp:define>




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_AVX2_EXTERNAL</name></expr></cpp:if>

<macro><name>mc_rep_mixs_8</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">48</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_mixs_8</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">48</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_mixs_8</name><argument_list>(<argument>epel_h</argument> , <argument><literal type="number">48</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_mixs_8</name><argument_list>(<argument>epel_v</argument> , <argument><literal type="number">48</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>mc_rep_mix_10</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">24</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>, <argument><literal type="number">32</literal></argument>)</argument_list></macro>
<macro><name>mc_bi_rep_mix_10</name><argument_list>(<argument>pel_pixels</argument>,<argument><literal type="number">24</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>, <argument><literal type="number">32</literal></argument>)</argument_list></macro>
<macro><name>mc_rep_mixs_10</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">24</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>, <argument><literal type="number">32</literal></argument>)</argument_list></macro>
<macro><name>mc_rep_mixs_10</name><argument_list>(<argument>epel_h</argument> , <argument><literal type="number">24</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>, <argument><literal type="number">32</literal></argument>)</argument_list></macro>
<macro><name>mc_rep_mixs_10</name><argument_list>(<argument>epel_v</argument> , <argument><literal type="number">24</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>, <argument><literal type="number">32</literal></argument>)</argument_list></macro>


<macro><name>mc_rep_mixs_10</name><argument_list>(<argument>qpel_h</argument> , <argument><literal type="number">24</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>, <argument><literal type="number">32</literal></argument>)</argument_list></macro>
<macro><name>mc_rep_mixs_10</name><argument_list>(<argument>qpel_v</argument> , <argument><literal type="number">24</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>, <argument><literal type="number">32</literal></argument>)</argument_list></macro>
<macro><name>mc_rep_mixs_10</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">24</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>, <argument><literal type="number">32</literal></argument>)</argument_list></macro>


<macro><name>mc_rep_uni_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument><literal type="number">128</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">96</literal></argument>, <argument>avx2</argument>)</argument_list></macro> 

<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>mc_rep_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>mc_rep_bi_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>


<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_mixs_8</name><argument_list>(<argument>qpel_h</argument> , <argument><literal type="number">48</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_mixs_8</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">48</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>avx2</argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>pel_pixels</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_h</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_v</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs2</name><argument_list>(<argument>epel_hv</argument>,<argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>epel_hv</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_h</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_v</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs2</name><argument_list>(<argument>qpel_hv</argument>,<argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>,<argument><literal type="number">10</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_funcs</name><argument_list>(<argument>qpel_hv</argument>,<argument><literal type="number">12</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_uni_w</name><parameter_list>(<parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>step</name></type></parameter>, <parameter><type><name>W</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_uni_w##W##_##bitd##_##opt(uint8_t *_dst, ptrdiff_t dststride, int16_t *_src, int height, int denom, int _wx, int _ox) { int i; int16_t *src; uint8_t *dst; for (i = 0; i &lt; W; i += step) { src= _src + i; dst= _dst + (i * ((bitd + 7) / 8)); ff_hevc_put_hevc_uni_w##step##_##bitd##_##opt(dst, dststride, src, height, denom, _wx, _ox); } }</cpp:value></cpp:define>














<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_uni_w</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_rep_bi_w</name><parameter_list>(<parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>step</name></type></parameter>, <parameter><type><name>W</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_bi_w##W##_##bitd##_##opt(uint8_t *_dst, ptrdiff_t dststride, int16_t *_src, int16_t *_src2, int height, int denom, int _wx0, int _wx1, int _ox0, int _ox1) { int i; int16_t *src; int16_t *src2; uint8_t *dst; for (i = 0; i &lt; W; i += step) { src = _src + i; src2 = _src2 + i; dst = _dst + (i * ((bitd + 7) / 8)); ff_hevc_put_hevc_bi_w##step##_##bitd##_##opt(dst, dststride, src, src2, height, denom, _wx0, _wx1, _ox0, _ox1); } }</cpp:value></cpp:define>

















<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">16</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">24</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">32</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">48</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_rep_bi_w</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">64</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_uni_w_func</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>W</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_uni_w_##name##W##_##bitd##_##opt(uint8_t *_dst, ptrdiff_t _dststride, uint8_t *_src, ptrdiff_t _srcstride, int height, int denom, int _wx, int _ox, intptr_t mx, intptr_t my, int width) { LOCAL_ALIGNED_16(int16_t, temp, [71 * MAX_PB_SIZE]); ff_hevc_put_hevc_##name##W##_##bitd##_##opt(temp, _src, _srcstride, height, mx, my, width); ff_hevc_put_hevc_uni_w##W##_##bitd##_##opt(_dst, _dststride, temp, height, denom, _wx, _ox);}</cpp:value></cpp:define>











<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_uni_w_funcs</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mc_uni_w_func(name, bitd, 4, opt) mc_uni_w_func(name, bitd, 8, opt) mc_uni_w_func(name, bitd, 12, opt) mc_uni_w_func(name, bitd, 16, opt) mc_uni_w_func(name, bitd, 24, opt) mc_uni_w_func(name, bitd, 32, opt) mc_uni_w_func(name, bitd, 48, opt) mc_uni_w_func(name, bitd, 64, opt)</cpp:value></cpp:define>









<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_func</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_func</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_func</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_func</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_func</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_func</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">12</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_func</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">12</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_func</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">12</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_func</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">12</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_uni_w_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_bi_w_func</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>W</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_put_hevc_bi_w_##name##W##_##bitd##_##opt(uint8_t *_dst, ptrdiff_t _dststride, uint8_t *_src, ptrdiff_t _srcstride, int16_t *_src2, int height, int denom, int _wx0, int _wx1, int _ox0, int _ox1, intptr_t mx, intptr_t my, int width) { LOCAL_ALIGNED_16(int16_t, temp, [71 * MAX_PB_SIZE]); ff_hevc_put_hevc_##name##W##_##bitd##_##opt(temp, _src, _srcstride, height, mx, my, width); ff_hevc_put_hevc_bi_w##W##_##bitd##_##opt(_dst, _dststride, temp, _src2, height, denom, _wx0, _wx1, _ox0, _ox1); }</cpp:value></cpp:define>













<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mc_bi_w_funcs</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mc_bi_w_func(name, bitd, 4, opt) mc_bi_w_func(name, bitd, 8, opt) mc_bi_w_func(name, bitd, 12, opt) mc_bi_w_func(name, bitd, 16, opt) mc_bi_w_func(name, bitd, 24, opt) mc_bi_w_func(name, bitd, 32, opt) mc_bi_w_func(name, bitd, 48, opt) mc_bi_w_func(name, bitd, 64, opt)</cpp:value></cpp:define>









<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_func</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_func</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_func</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_func</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_func</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_func</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse4</argument>)</argument_list></macro>

<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_func</name><argument_list>(<argument>pel_pixels</argument>, <argument><literal type="number">12</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_func</name><argument_list>(<argument>epel_h</argument>, <argument><literal type="number">12</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_func</name><argument_list>(<argument>epel_v</argument>, <argument><literal type="number">12</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_func</name><argument_list>(<argument>epel_hv</argument>, <argument><literal type="number">12</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>qpel_h</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>qpel_v</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<macro><name>mc_bi_w_funcs</name><argument_list>(<argument>qpel_hv</argument>, <argument><literal type="number">12</literal></argument>, <argument>sse4</argument>)</argument_list></macro>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SAO_BAND_FILTER_FUNCS</name><parameter_list>(<parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_sao_band_filter_8_##bitd##_##opt(uint8_t *_dst, uint8_t *_src, ptrdiff_t _stride_dst, ptrdiff_t _stride_src, int16_t *sao_offset_val, int sao_left_class, int width, int height); void ff_hevc_sao_band_filter_16_##bitd##_##opt(uint8_t *_dst, uint8_t *_src, ptrdiff_t _stride_dst, ptrdiff_t _stride_src, int16_t *sao_offset_val, int sao_left_class, int width, int height); void ff_hevc_sao_band_filter_32_##bitd##_##opt(uint8_t *_dst, uint8_t *_src, ptrdiff_t _stride_dst, ptrdiff_t _stride_src, int16_t *sao_offset_val, int sao_left_class, int width, int height); void ff_hevc_sao_band_filter_48_##bitd##_##opt(uint8_t *_dst, uint8_t *_src, ptrdiff_t _stride_dst, ptrdiff_t _stride_src, int16_t *sao_offset_val, int sao_left_class, int width, int height); void ff_hevc_sao_band_filter_64_##bitd##_##opt(uint8_t *_dst, uint8_t *_src, ptrdiff_t _stride_dst, ptrdiff_t _stride_src, int16_t *sao_offset_val, int sao_left_class, int width, int height);</cpp:value></cpp:define>











<macro><name>SAO_BAND_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>SAO_BAND_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>SAO_BAND_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>SAO_BAND_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>SAO_BAND_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>SAO_BAND_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>SAO_BAND_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>SAO_BAND_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>SAO_BAND_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SAO_BAND_INIT</name><parameter_list>(<parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { c-&gt;sao_band_filter[0] = ff_hevc_sao_band_filter_8_##bitd##_##opt; c-&gt;sao_band_filter[1] = ff_hevc_sao_band_filter_16_##bitd##_##opt; c-&gt;sao_band_filter[2] = ff_hevc_sao_band_filter_32_##bitd##_##opt; c-&gt;sao_band_filter[3] = ff_hevc_sao_band_filter_48_##bitd##_##opt; c-&gt;sao_band_filter[4] = ff_hevc_sao_band_filter_64_##bitd##_##opt; } while (0)</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SAO_EDGE_FILTER_FUNCS</name><parameter_list>(<parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_hevc_sao_edge_filter_8_##bitd##_##opt(uint8_t *_dst, uint8_t *_src, ptrdiff_t stride_dst, int16_t *sao_offset_val, int eo, int width, int height); void ff_hevc_sao_edge_filter_16_##bitd##_##opt(uint8_t *_dst, uint8_t *_src, ptrdiff_t stride_dst, int16_t *sao_offset_val, int eo, int width, int height); void ff_hevc_sao_edge_filter_32_##bitd##_##opt(uint8_t *_dst, uint8_t *_src, ptrdiff_t stride_dst, int16_t *sao_offset_val, int eo, int width, int height); void ff_hevc_sao_edge_filter_48_##bitd##_##opt(uint8_t *_dst, uint8_t *_src, ptrdiff_t stride_dst, int16_t *sao_offset_val, int eo, int width, int height); void ff_hevc_sao_edge_filter_64_##bitd##_##opt(uint8_t *_dst, uint8_t *_src, ptrdiff_t stride_dst, int16_t *sao_offset_val, int eo, int width, int height);</cpp:value></cpp:define> 











<macro><name>SAO_EDGE_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>SAO_EDGE_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">8</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>SAO_EDGE_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>SAO_EDGE_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">10</literal></argument>, <argument>avx2</argument>)</argument_list></macro>
<macro><name>SAO_EDGE_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>SAO_EDGE_FILTER_FUNCS</name><argument_list>(<argument><literal type="number">12</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SAO_EDGE_INIT</name><parameter_list>(<parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { c-&gt;sao_edge_filter[0] = ff_hevc_sao_edge_filter_8_##bitd##_##opt; c-&gt;sao_edge_filter[1] = ff_hevc_sao_edge_filter_16_##bitd##_##opt; c-&gt;sao_edge_filter[2] = ff_hevc_sao_edge_filter_32_##bitd##_##opt; c-&gt;sao_edge_filter[3] = ff_hevc_sao_edge_filter_48_##bitd##_##opt; c-&gt;sao_edge_filter[4] = ff_hevc_sao_edge_filter_64_##bitd##_##opt; } while (0)</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EPEL_LINKS</name><parameter_list>(<parameter><type><name>pointer</name></type></parameter>, <parameter><type><name>my</name></type></parameter>, <parameter><type><name>mx</name></type></parameter>, <parameter><type><name>fname</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>opt</name></type></parameter> )</parameter_list></cpp:macro> <cpp:value>PEL_LINK(pointer, 1, my , mx , fname##4 , bitd, opt ); PEL_LINK(pointer, 2, my , mx , fname##6 , bitd, opt ); PEL_LINK(pointer, 3, my , mx , fname##8 , bitd, opt ); PEL_LINK(pointer, 4, my , mx , fname##12, bitd, opt ); PEL_LINK(pointer, 5, my , mx , fname##16, bitd, opt ); PEL_LINK(pointer, 6, my , mx , fname##24, bitd, opt ); PEL_LINK(pointer, 7, my , mx , fname##32, bitd, opt ); PEL_LINK(pointer, 8, my , mx , fname##48, bitd, opt ); PEL_LINK(pointer, 9, my , mx , fname##64, bitd, opt )</cpp:value></cpp:define>









<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QPEL_LINKS</name><parameter_list>(<parameter><type><name>pointer</name></type></parameter>, <parameter><type><name>my</name></type></parameter>, <parameter><type><name>mx</name></type></parameter>, <parameter><type><name>fname</name></type></parameter>, <parameter><type><name>bitd</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>PEL_LINK(pointer, 1, my , mx , fname##4 , bitd, opt ); PEL_LINK(pointer, 3, my , mx , fname##8 , bitd, opt ); PEL_LINK(pointer, 4, my , mx , fname##12, bitd, opt ); PEL_LINK(pointer, 5, my , mx , fname##16, bitd, opt ); PEL_LINK(pointer, 6, my , mx , fname##24, bitd, opt ); PEL_LINK(pointer, 7, my , mx , fname##32, bitd, opt ); PEL_LINK(pointer, 8, my , mx , fname##48, bitd, opt ); PEL_LINK(pointer, 9, my , mx , fname##64, bitd, opt )</cpp:value></cpp:define>









<function><type><name>void</name></type> <name>ff_hevc_dsp_init_x86</name><parameter_list>(<parameter><decl><type><name>HEVCDSPContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name>bit_depth</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>cpu_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>bit_depth</name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_MMXEXT</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_4x4_dc_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_dc_8_mmxext</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_4_8_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_chroma_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_chroma_8_sse2</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_luma_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_luma_8_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_8_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>SAO_BAND_INIT</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_dc_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_dc_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_dc_8_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_4x4_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_8_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_8_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_16_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_32_8_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSSE3</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_luma_8_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_luma_8_ssse3</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>SAO_EDGE_INIT</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>ssse3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE4</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>EPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>pel_pixels</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>epel_h</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>epel_v</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>epel_hv</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>pel_pixels</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>qpel_h</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>qpel_v</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>qpel_hv</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_chroma_8_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_chroma_8_avx</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_luma_8_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_luma_8_avx</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_8_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_8_avx</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>SAO_BAND_INIT</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_4x4_8_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_8_avx</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_8_8_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_16_8_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_32_8_avx</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_band_filter</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_band_filter_8_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_band_filter</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_band_filter_16_8_avx2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX2_FAST</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_dc_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_dc_8_avx2</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_h32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_h48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_h64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_h32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_h48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_h64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_h32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_h48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_h64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_v32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_v48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_v64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_v32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_v48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_v64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_v32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_v48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_v64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_hv32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_hv48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_hv64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_hv32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_hv48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_hv64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_hv32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_hv48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_hv64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_h32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_h48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_h64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_v32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_v48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_v64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_h32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_h48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_h64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_v32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_v48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_v64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_h32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_h48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_h64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_v32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_v48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_v64_8_avx2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>SAO_BAND_INIT</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_edge_filter</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_edge_filter_32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_edge_filter</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_edge_filter_48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_edge_filter</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_edge_filter_64_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_32_8_avx2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>bit_depth</name> <operator>==</operator> <literal type="number">10</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_MMXEXT</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_4_10_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_4x4_dc_10_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_dc_10_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_chroma_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_chroma_10_sse2</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_luma_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_luma_10_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_10_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>SAO_BAND_INIT</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAO_EDGE_INIT</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_dc_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_dc_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_dc_10_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_4x4_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_10_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_8_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_16_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_32_10_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSSE3</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_luma_10_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_luma_10_ssse3</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE4</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>EPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>pel_pixels</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>epel_h</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>epel_v</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>epel_hv</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>pel_pixels</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>qpel_h</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>qpel_v</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>qpel_hv</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_chroma_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_chroma_10_avx</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_luma_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_luma_10_avx</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_10_avx</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_4x4_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_10_avx</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAO_BAND_INIT</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_band_filter</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_band_filter_8_10_avx2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX2_FAST</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_dc_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_dc_10_avx2</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_pel_pixels64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels64_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels96_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels128_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels32_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels48_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels64_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels96_8_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_pel_pixels128_8_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels64_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_pel_pixels64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_h16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_h24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_h32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_h48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_h64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_h16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_h24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_h32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_h48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_h64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_h16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_h24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_h32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_h48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_h64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_v16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_v24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_v32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_v48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_v64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_v16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_v24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_v32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_v48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_v64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_v16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_v24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_v32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_v48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_v64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_hv16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_hv24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_hv32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_hv48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_epel_hv64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_hv16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_hv24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_hv32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_hv48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_epel_hv64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_hv16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_hv24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_hv32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_hv48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_epel_hv64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_h16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_h24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_h32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_h48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_h64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_h16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_h24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_h32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_h48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_h64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_h16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_h24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_h32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_h48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_h64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_v16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_v24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_v32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_v48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_v64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_v16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_v24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_v32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_v48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_v64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_v16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_v24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_v32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_v48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_v64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_hv16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_hv24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_hv32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_hv48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_qpel_hv64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_hv16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_hv24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_hv32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_hv48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_uni</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_uni_qpel_hv64_10_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_hv16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_hv24_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_hv32_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_hv48_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel_bi</name><index>[<expr><literal type="number">9</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_put_hevc_bi_qpel_hv64_10_avx2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>SAO_BAND_INIT</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAO_EDGE_INIT</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_16_10_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_residual</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_add_residual_32_10_avx2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>bit_depth</name> <operator>==</operator> <literal type="number">12</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_MMXEXT</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_4x4_dc_12_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_dc_12_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_chroma_12_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_chroma_12_sse2</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_luma_12_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_luma_12_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>SAO_BAND_INIT</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAO_EDGE_INIT</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_8x8_dc_12_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_dc_12_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_dc_12_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSSE3</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_luma_12_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_luma_12_ssse3</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE4</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>EPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>pel_pixels</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>epel_h</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>epel_v</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>EPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_epel</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>epel_hv</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>QPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>pel_pixels</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>qpel_h</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>qpel_v</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>QPEL_LINKS</name><argument_list>(<argument><expr><name><name>c</name><operator>-&gt;</operator><name>put_hevc_qpel</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>qpel_hv</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>sse4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_chroma_12_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_chroma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_chroma_12_avx</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_X86_64</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_v_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_v_loop_filter_luma_12_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>hevc_h_loop_filter_luma</name></name> <operator>=</operator> <name>ff_hevc_h_loop_filter_luma_12_avx</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>SAO_BAND_INIT</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>sao_band_filter</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_sao_band_filter_8_12_avx2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX2_FAST</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_16x16_dc_12_avx2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_dc</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name>ff_hevc_idct_32x32_dc_12_avx2</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAO_BAND_INIT</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAO_EDGE_INIT</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>avx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>
</unit>
