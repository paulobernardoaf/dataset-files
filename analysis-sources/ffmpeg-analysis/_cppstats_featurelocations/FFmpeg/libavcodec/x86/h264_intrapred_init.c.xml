<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\x86\h264_intrapred_init.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/cpu.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/cpu.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/h264pred.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRED4x4</name><parameter_list>(<parameter><type><name>TYPE</name></type></parameter>, <parameter><type><name>DEPTH</name></type></parameter>, <parameter><type><name>OPT</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_pred4x4_ ##TYPE ##_ ##DEPTH ##_ ##OPT (uint8_t *src, const uint8_t *topright, ptrdiff_t stride);</cpp:value></cpp:define>




<macro><name>PRED4x4</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>down_left</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>down_left</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>down_right</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>down_right</argument>, <argument><literal type="number">10</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>down_right</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>vertical_left</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>vertical_left</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>vertical_right</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>vertical_right</argument>, <argument><literal type="number">10</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>vertical_right</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>horizontal_up</argument>, <argument><literal type="number">10</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>horizontal_down</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>horizontal_down</argument>, <argument><literal type="number">10</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>horizontal_down</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRED8x8</name><parameter_list>(<parameter><type><name>TYPE</name></type></parameter>, <parameter><type><name>DEPTH</name></type></parameter>, <parameter><type><name>OPT</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_pred8x8_ ##TYPE ##_ ##DEPTH ##_ ##OPT (uint8_t *src, ptrdiff_t stride);</cpp:value></cpp:define>



<macro><name>PRED8x8</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>top_dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>plane</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>vertical</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRED8x8L</name><parameter_list>(<parameter><type><name>TYPE</name></type></parameter>, <parameter><type><name>DEPTH</name></type></parameter>, <parameter><type><name>OPT</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>void ff_pred8x8l_ ##TYPE ##_ ##DEPTH ##_ ##OPT (uint8_t *src, int has_topleft, int has_topright, ptrdiff_t stride);</cpp:value></cpp:define>





<macro><name>PRED8x8L</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument><literal type="number">128_dc</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument><literal type="number">128_dc</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>top_dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>top_dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>vertical</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>vertical</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">10</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>down_left</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>down_left</argument>, <argument><literal type="number">10</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>down_left</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>down_right</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>down_right</argument>, <argument><literal type="number">10</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>down_right</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>vertical_right</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>vertical_right</argument>, <argument><literal type="number">10</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>vertical_right</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>horizontal_up</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>horizontal_up</argument>, <argument><literal type="number">10</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>horizontal_up</argument>, <argument><literal type="number">10</literal></argument>, <argument>avx</argument>)</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRED16x16</name><parameter_list>(<parameter><type><name>TYPE</name></type></parameter>, <parameter><type><name>DEPTH</name></type></parameter>, <parameter><type><name>OPT</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>void ff_pred16x16_ ##TYPE ##_ ##DEPTH ##_ ##OPT (uint8_t *src, ptrdiff_t stride);</cpp:value></cpp:define>



<macro><name>PRED16x16</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>top_dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>top_dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument><literal type="number">128_dc</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument><literal type="number">128_dc</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>left_dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>left_dc</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>vertical</argument>, <argument><literal type="number">10</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>vertical</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">10</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">10</literal></argument>, <argument>sse2</argument>)</argument_list></macro>


<macro><name>PRED16x16</name><argument_list>(<argument>vertical</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmx</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>vertical</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmx</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>plane_h264</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmx</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>plane_h264</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>plane_h264</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>plane_h264</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>plane_rv40</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmx</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>plane_rv40</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>plane_rv40</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>plane_rv40</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>plane_svq3</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmx</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>plane_svq3</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>plane_svq3</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>plane_svq3</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>tm_vp8</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmx</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>tm_vp8</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>tm_vp8</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED16x16</name><argument_list>(<argument>tm_vp8</argument>, <argument><literal type="number">8</literal></argument>, <argument>avx2</argument>)</argument_list></macro>

<macro><name>PRED8x8</name><argument_list>(<argument>top_dc</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>dc_rv40</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>vertical</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmx</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmx</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>plane</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmx</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>plane</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>plane</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>plane</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>tm_vp8</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmx</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>tm_vp8</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>tm_vp8</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8</name><argument_list>(<argument>tm_vp8</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>

<macro><name>PRED8x8L</name><argument_list>(<argument>top_dc</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>top_dc</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>horizontal</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>vertical</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>vertical</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>down_left</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>down_left</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>down_left</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>down_right</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>down_right</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>down_right</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>vertical_right</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>vertical_right</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>vertical_right</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>vertical_left</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>vertical_left</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>horizontal_up</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>horizontal_up</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>horizontal_down</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>horizontal_down</argument>, <argument><literal type="number">8</literal></argument>, <argument>sse2</argument>)</argument_list></macro>
<macro><name>PRED8x8L</name><argument_list>(<argument>horizontal_down</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>

<macro><name>PRED4x4</name><argument_list>(<argument>dc</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>down_left</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>down_right</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>vertical_left</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>vertical_right</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>horizontal_up</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>horizontal_down</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>tm_vp8</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmx</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>tm_vp8</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>tm_vp8</argument>, <argument><literal type="number">8</literal></argument>, <argument>ssse3</argument>)</argument_list></macro>
<macro><name>PRED4x4</name><argument_list>(<argument>vertical_vp8</argument>, <argument><literal type="number">8</literal></argument>, <argument>mmxext</argument>)</argument_list></macro>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_h264_pred_init_x86</name><parameter_list>(<parameter><decl><type><name>H264PredContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>codec_id</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name>bit_depth</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name>chroma_format_idc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>cpu_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>bit_depth</name> <operator>==</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_MMX</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>VERT_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_vertical_8_mmx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>HOR_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_horizontal_8_mmx</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>chroma_format_idc</name> <operator>&lt;=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name> <index>[<expr><name>VERT_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_vertical_8_mmx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name> <index>[<expr><name>HOR_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_horizontal_8_mmx</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_VP7</name> <operator>||</operator> <name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_VP8</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_tm_vp8_8_mmx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name> <index>[<expr><name>PLANE_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_tm_vp8_8_mmx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name> <index>[<expr><name>TM_VP8_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_tm_vp8_8_mmx</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>chroma_format_idc</name> <operator>&lt;=</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name> <index>[<expr><name>PLANE_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred8x8_plane_8_mmx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_SVQ3</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>cpu_flags</name> <operator>&amp;</operator> <name>AV_CPU_FLAG_CMOV</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred16x16_plane_svq3_8_mmx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_RV40</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred16x16_plane_rv40_8_mmx</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred16x16_plane_h264_8_mmx</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_MMXEXT</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>HOR_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_horizontal_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_dc_8_mmxext</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>chroma_format_idc</name> <operator>&lt;=</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name><index>[<expr><name>HOR_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_horizontal_8_mmxext</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>TOP_DC_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_top_dc_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>DC_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_dc_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>HOR_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_horizontal_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>VERT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_vertical_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>DIAG_DOWN_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_down_right_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>VERT_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_vertical_right_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>HOR_UP_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_horizontal_up_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>DIAG_DOWN_LEFT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_down_left_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>HOR_DOWN_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_horizontal_down_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name> <index>[<expr><name>DIAG_DOWN_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_down_right_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name> <index>[<expr><name>VERT_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_vertical_right_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name> <index>[<expr><name>HOR_DOWN_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_horizontal_down_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name> <index>[<expr><name>DC_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_dc_8_mmxext</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_VP7</name> <operator>||</operator> <name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_VP8</name> <operator>||</operator>
<name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_H264</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name> <index>[<expr><name>DIAG_DOWN_LEFT_PRED</name></expr>]</index></name> <operator>=</operator> <name>ff_pred4x4_down_left_8_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_SVQ3</name> <operator>||</operator> <name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_H264</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name> <index>[<expr><name>VERT_LEFT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_vertical_left_8_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>codec_id</name> <operator>!=</operator> <name>AV_CODEC_ID_RV40</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name> <index>[<expr><name>HOR_UP_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_horizontal_up_8_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_SVQ3</name> <operator>||</operator> <name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_H264</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>chroma_format_idc</name> <operator>&lt;=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name><index>[<expr><name>TOP_DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_top_dc_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name><index>[<expr><name>DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_dc_8_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_VP7</name> <operator>||</operator> <name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_VP8</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_tm_vp8_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name> <index>[<expr><name>DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_dc_rv40_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name> <index>[<expr><name>PLANE_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_tm_vp8_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name> <index>[<expr><name>TM_VP8_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_tm_vp8_8_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name> <index>[<expr><name>VERT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_vertical_vp8_8_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>chroma_format_idc</name> <operator>&lt;=</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name> <index>[<expr><name>PLANE_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred8x8_plane_8_mmxext</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_SVQ3</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_plane_svq3_8_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_RV40</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_plane_rv40_8_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_plane_h264_8_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>VERT_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred16x16_vertical_8_sse</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_dc_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>DIAG_DOWN_LEFT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_down_left_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>DIAG_DOWN_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_down_right_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>VERT_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_vertical_right_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>VERT_LEFT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_vertical_left_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>HOR_DOWN_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_horizontal_down_8_sse2</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_VP7</name> <operator>||</operator> <name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_VP8</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_tm_vp8_8_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name> <index>[<expr><name>PLANE_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_tm_vp8_8_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>chroma_format_idc</name> <operator>&lt;=</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name> <index>[<expr><name>PLANE_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred8x8_plane_8_sse2</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_SVQ3</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred16x16_plane_svq3_8_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_RV40</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred16x16_plane_rv40_8_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred16x16_plane_h264_8_sse2</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSSE3</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>HOR_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_horizontal_8_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_dc_8_ssse3</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>chroma_format_idc</name> <operator>&lt;=</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name> <index>[<expr><name>HOR_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_horizontal_8_ssse3</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>TOP_DC_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_top_dc_8_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>DC_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_dc_8_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>HOR_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_horizontal_8_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>VERT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_vertical_8_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>DIAG_DOWN_LEFT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_down_left_8_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>DIAG_DOWN_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_down_right_8_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>VERT_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_vertical_right_8_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>VERT_LEFT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_vertical_left_8_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>HOR_UP_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_horizontal_up_8_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name> <index>[<expr><name>HOR_DOWN_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_horizontal_down_8_ssse3</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_VP7</name> <operator>||</operator> <name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_VP8</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name> <index>[<expr><name>PLANE_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_tm_vp8_8_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name> <index>[<expr><name>TM_VP8_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_tm_vp8_8_ssse3</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>chroma_format_idc</name> <operator>&lt;=</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name> <index>[<expr><name>PLANE_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred8x8_plane_8_ssse3</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_SVQ3</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred16x16_plane_svq3_8_ssse3</name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_RV40</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred16x16_plane_rv40_8_ssse3</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr>]</index></name> <operator>=</operator> <name>ff_pred16x16_plane_h264_8_ssse3</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><call><name>EXTERNAL_AVX2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>codec_id</name> <operator>==</operator> <name>AV_CODEC_ID_VP8</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>PLANE_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_tm_vp8_8_avx2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>bit_depth</name> <operator>==</operator> <literal type="number">10</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_MMXEXT</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>DC_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_dc_10_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>HOR_UP_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_horizontal_up_10_mmxext</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>chroma_format_idc</name> <operator>&lt;=</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name><index>[<expr><name>DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_dc_10_mmxext</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>DC_128_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_128_dc_10_mmxext</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_dc_10_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>TOP_DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_top_dc_10_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>DC_128_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_128_dc_10_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>LEFT_DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_left_dc_10_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>VERT_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_vertical_10_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>HOR_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_horizontal_10_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>DIAG_DOWN_LEFT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_down_left_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>DIAG_DOWN_RIGHT_PRED</name></expr>]</index></name> <operator>=</operator> <name>ff_pred4x4_down_right_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>VERT_LEFT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_vertical_left_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>VERT_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_vertical_right_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>HOR_DOWN_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_horizontal_down_10_sse2</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>chroma_format_idc</name> <operator>&lt;=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name><index>[<expr><name>DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_dc_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name><index>[<expr><name>TOP_DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_top_dc_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name><index>[<expr><name>PLANE_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_plane_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name><index>[<expr><name>VERT_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_vertical_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8</name><index>[<expr><name>HOR_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8_horizontal_10_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>VERT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_vertical_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>HOR_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_horizontal_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>DC_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_dc_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>DC_128_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_128_dc_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>TOP_DC_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_top_dc_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>DIAG_DOWN_LEFT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_down_left_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>DIAG_DOWN_RIGHT_PRED</name></expr>]</index></name> <operator>=</operator> <name>ff_pred8x8l_down_right_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>VERT_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_vertical_right_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>HOR_UP_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_horizontal_up_10_sse2</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_dc_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>TOP_DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_top_dc_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>DC_128_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_128_dc_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>LEFT_DC_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_left_dc_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>VERT_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_vertical_10_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred16x16</name><index>[<expr><name>HOR_PRED8x8</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred16x16_horizontal_10_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSSE3</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>DIAG_DOWN_RIGHT_PRED</name></expr>]</index></name> <operator>=</operator> <name>ff_pred4x4_down_right_10_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>VERT_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_vertical_right_10_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>HOR_DOWN_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_horizontal_down_10_ssse3</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>HOR_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_horizontal_10_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>DIAG_DOWN_LEFT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_down_left_10_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>DIAG_DOWN_RIGHT_PRED</name></expr>]</index></name> <operator>=</operator> <name>ff_pred8x8l_down_right_10_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>VERT_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_vertical_right_10_ssse3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>HOR_UP_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_horizontal_up_10_ssse3</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>DIAG_DOWN_LEFT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_down_left_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>DIAG_DOWN_RIGHT_PRED</name></expr>]</index></name> <operator>=</operator> <name>ff_pred4x4_down_right_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>VERT_LEFT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_vertical_left_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>VERT_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_vertical_right_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred4x4</name><index>[<expr><name>HOR_DOWN_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred4x4_horizontal_down_10_avx</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>VERT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_vertical_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>HOR_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_horizontal_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>DC_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_dc_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>TOP_DC_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_top_dc_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>DIAG_DOWN_RIGHT_PRED</name></expr>]</index></name> <operator>=</operator> <name>ff_pred8x8l_down_right_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>DIAG_DOWN_LEFT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_down_left_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>VERT_RIGHT_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_vertical_right_10_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred8x8l</name><index>[<expr><name>HOR_UP_PRED</name></expr> ]</index></name> <operator>=</operator> <name>ff_pred8x8l_horizontal_up_10_avx</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>
</unit>
