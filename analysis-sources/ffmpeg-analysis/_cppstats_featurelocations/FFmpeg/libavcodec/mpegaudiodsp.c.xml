<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mpegaudiodsp.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/thread.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpegaudiodsp.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dct.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dct32.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>AVOnce</name></type> <name>mpadsp_float_table_init</name> <init>= <expr><name>AV_ONCE_INIT</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>AVOnce</name></type> <name>mpadsp_fixed_table_init</name> <init>= <expr><name>AV_ONCE_INIT</name></expr></init></decl>;</decl_stmt>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_mpadsp_init</name><parameter_list>(<parameter><decl><type><name>MPADSPContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>DCTContext</name></type> <name>dct</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ff_dct_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dct</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>DCT_II</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_thread_once</name><argument_list>(<argument><expr><operator>&amp;</operator><name>mpadsp_float_table_init</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ff_init_mpadsp_tabs_float</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_thread_once</name><argument_list>(<argument><expr><operator>&amp;</operator><name>mpadsp_fixed_table_init</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ff_init_mpadsp_tabs_fixed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>apply_window_float</name></name> <operator>=</operator> <name>ff_mpadsp_apply_window_float</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>apply_window_fixed</name></name> <operator>=</operator> <name>ff_mpadsp_apply_window_fixed</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>dct32_float</name></name> <operator>=</operator> <name><name>dct</name><operator>.</operator><name>dct32</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>dct32_fixed</name></name> <operator>=</operator> <name>ff_dct32_fixed</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>imdct36_blocks_float</name></name> <operator>=</operator> <name>ff_imdct36_blocks_float</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>imdct36_blocks_fixed</name></name> <operator>=</operator> <name>ff_imdct36_blocks_fixed</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ARCH_AARCH64</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>ff_mpadsp_init_aarch64</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_ARM</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>ff_mpadsp_init_arm</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_PPC</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>ff_mpadsp_init_ppc</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_X86</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>ff_mpadsp_init_x86</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>HAVE_MIPSFPU</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>ff_mpadsp_init_mipsfpu</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>HAVE_MIPSDSP</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>ff_mpadsp_init_mipsdsp</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>
</unit>
