<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\h264data.c">



























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/avutil.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h264dec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h264data.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_h264_golomb_to_pict_type</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{
<expr><name>AV_PICTURE_TYPE_P</name></expr>, <expr><name>AV_PICTURE_TYPE_B</name></expr>, <expr><name>AV_PICTURE_TYPE_I</name></expr>,
<expr><name>AV_PICTURE_TYPE_SP</name></expr>, <expr><name>AV_PICTURE_TYPE_SI</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_h264_golomb_to_intra4x4_cbp</name><index>[<expr><literal type="number">48</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">47</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">39</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">46</literal></expr>,
<expr><literal type="number">16</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">42</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>,
<expr><literal type="number">8</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">41</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_h264_golomb_to_inter_cbp</name><index>[<expr><literal type="number">48</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">47</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">13</literal></expr>,
<expr><literal type="number">14</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">42</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">39</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">46</literal></expr>,
<expr><literal type="number">17</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">41</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_h264_chroma_dc_scan</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{
<expr><operator>(</operator><literal type="number">0</literal> <operator>+</operator> <literal type="number">0</literal> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal></expr>, <expr><operator>(</operator><literal type="number">1</literal> <operator>+</operator> <literal type="number">0</literal> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal></expr>,
<expr><operator>(</operator><literal type="number">0</literal> <operator>+</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal></expr>, <expr><operator>(</operator><literal type="number">1</literal> <operator>+</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_h264_chroma422_dc_scan</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{
<expr><operator>(</operator><literal type="number">0</literal> <operator>+</operator> <literal type="number">0</literal> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal></expr>, <expr><operator>(</operator><literal type="number">0</literal> <operator>+</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal></expr>,
<expr><operator>(</operator><literal type="number">1</literal> <operator>+</operator> <literal type="number">0</literal> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal></expr>, <expr><operator>(</operator><literal type="number">0</literal> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal></expr>,
<expr><operator>(</operator><literal type="number">0</literal> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal></expr>, <expr><operator>(</operator><literal type="number">1</literal> <operator>+</operator> <literal type="number">1</literal> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal></expr>,
<expr><operator>(</operator><literal type="number">1</literal> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal></expr>, <expr><operator>(</operator><literal type="number">1</literal> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>IMbInfo</name></type> <name><name>ff_h264_i_mb_type_info</name><index>[<expr><literal type="number">26</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><name>MB_TYPE_INTRA4x4</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">15</literal> <operator>+</operator> <literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal> <operator>+</operator> <literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">15</literal> <operator>+</operator> <literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">15</literal> <operator>+</operator> <literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">15</literal> <operator>+</operator> <literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal> <operator>+</operator> <literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">15</literal> <operator>+</operator> <literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">15</literal> <operator>+</operator> <literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">15</literal> <operator>+</operator> <literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal> <operator>+</operator> <literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">15</literal> <operator>+</operator> <literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA16x16</name></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">15</literal> <operator>+</operator> <literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_INTRA_PCM</name></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PMbInfo</name></type> <name><name>ff_h264_p_mb_type_info</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><name>MB_TYPE_16x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P1L0</name></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P1L0</name></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P1L0</name></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P1L0</name> <operator>|</operator> <name>MB_TYPE_REF0</name></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PMbInfo</name></type> <name><name>ff_h264_p_sub_mb_type_info</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><name>MB_TYPE_16x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PMbInfo</name></type> <name><name>ff_h264_b_mb_type_info</name><index>[<expr><literal type="number">23</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><name>MB_TYPE_DIRECT2</name> <operator>|</operator> <name>MB_TYPE_L0L1</name></expr>, <expr><literal type="number">1</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name></expr>, <expr><literal type="number">1</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x16</name> <operator>|</operator> <name>MB_TYPE_P0L1</name></expr>, <expr><literal type="number">1</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P0L1</name></expr>, <expr><literal type="number">1</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P1L0</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P1L0</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L0</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L0</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P1L0</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P1L0</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L0</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L0</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L0</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L0</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L0</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L0</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L0</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">4</literal></expr>, }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>PMbInfo</name></type> <name><name>ff_h264_b_sub_mb_type_info</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><name>MB_TYPE_DIRECT2</name></expr>, <expr><literal type="number">1</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name></expr>, <expr><literal type="number">1</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x16</name> <operator>|</operator> <name>MB_TYPE_P0L1</name></expr>, <expr><literal type="number">1</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P0L1</name></expr>, <expr><literal type="number">1</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P1L0</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P1L0</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_16x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L0</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x16</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L0</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">2</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P1L0</name></expr>, <expr><literal type="number">4</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x8</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">4</literal></expr>, }</block></expr>,
<expr><block>{ <expr><name>MB_TYPE_8x8</name> <operator>|</operator> <name>MB_TYPE_P0L0</name> <operator>|</operator> <name>MB_TYPE_P0L1</name> <operator>|</operator> <name>MB_TYPE_P1L0</name> <operator>|</operator> <name>MB_TYPE_P1L1</name></expr>, <expr><literal type="number">4</literal></expr>, }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_h264_dequant4_coeff_init</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="number">10</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">11</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">18</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">13</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">20</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">14</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">23</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">25</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">18</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">29</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_h264_dequant8_coeff_init_scan</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_h264_dequant8_coeff_init</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">6</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="number">20</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">24</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">22</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">26</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">26</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">42</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">33</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">28</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">35</literal></expr>, <expr><literal type="number">33</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">32</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">38</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">36</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">46</literal></expr>, <expr><literal type="number">43</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_h264_quant_rem6</name><index>[<expr><name>QP_MAX_NUM</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>,
<expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>,
<expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_h264_quant_div6</name><index>[<expr><name>QP_MAX_NUM</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>,
<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>,
<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>,
<expr><literal type="number">10</literal></expr>,<expr><literal type="number">10</literal></expr>,<expr><literal type="number">10</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">12</literal></expr>,<expr><literal type="number">12</literal></expr>,<expr><literal type="number">12</literal></expr>,<expr><literal type="number">12</literal></expr>,<expr><literal type="number">12</literal></expr>,<expr><literal type="number">12</literal></expr>,<expr><literal type="number">13</literal></expr>,<expr><literal type="number">13</literal></expr>,<expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>,
<expr><literal type="number">14</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">14</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QP</name><parameter_list>(<parameter><type><name>qP</name></type></parameter>, <parameter><type><name>depth</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((qP) + 6 * ((depth) - 8))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHROMA_QP_TABLE_END</name><parameter_list>(<parameter><type><name>d</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>QP(0, d), QP(1, d), QP(2, d), QP(3, d), QP(4, d), QP(5, d), QP(6, d), QP(7, d), QP(8, d), QP(9, d), QP(10, d), QP(11, d), QP(12, d), QP(13, d), QP(14, d), QP(15, d), QP(16, d), QP(17, d), QP(18, d), QP(19, d), QP(20, d), QP(21, d), QP(22, d), QP(23, d), QP(24, d), QP(25, d), QP(26, d), QP(27, d), QP(28, d), QP(29, d), QP(29, d), QP(30, d), QP(31, d), QP(32, d), QP(32, d), QP(33, d), QP(34, d), QP(34, d), QP(35, d), QP(35, d), QP(36, d), QP(36, d), QP(37, d), QP(37, d), QP(37, d), QP(38, d), QP(38, d), QP(38, d), QP(39, d), QP(39, d), QP(39, d), QP(39, d)</cpp:value></cpp:define>










<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_h264_chroma_qp</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><name>QP_MAX_NUM</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <macro><name>CHROMA_QP_TABLE_END</name><argument_list>(<argument><literal type="number">8</literal></argument>)</argument_list></macro> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>,
<macro><name>CHROMA_QP_TABLE_END</name><argument_list>(<argument><literal type="number">9</literal></argument>)</argument_list></macro> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>,
<expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>,
<macro><name>CHROMA_QP_TABLE_END</name><argument_list>(<argument><literal type="number">10</literal></argument>)</argument_list></macro> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>,
<expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>,
<expr><literal type="number">12</literal></expr>,<expr><literal type="number">13</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">15</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">17</literal></expr>,
<macro><name>CHROMA_QP_TABLE_END</name><argument_list>(<argument><literal type="number">11</literal></argument>)</argument_list></macro> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>,
<expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>,
<expr><literal type="number">12</literal></expr>,<expr><literal type="number">13</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">15</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">17</literal></expr>,
<expr><literal type="number">18</literal></expr>,<expr><literal type="number">19</literal></expr>,<expr><literal type="number">20</literal></expr>,<expr><literal type="number">21</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">23</literal></expr>,
<macro><name>CHROMA_QP_TABLE_END</name><argument_list>(<argument><literal type="number">12</literal></argument>)</argument_list></macro> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>,
<expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>,
<expr><literal type="number">12</literal></expr>,<expr><literal type="number">13</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">15</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">17</literal></expr>,
<expr><literal type="number">18</literal></expr>,<expr><literal type="number">19</literal></expr>,<expr><literal type="number">20</literal></expr>,<expr><literal type="number">21</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">23</literal></expr>,
<expr><literal type="number">24</literal></expr>,<expr><literal type="number">25</literal></expr>,<expr><literal type="number">26</literal></expr>,<expr><literal type="number">27</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">29</literal></expr>,
<macro><name>CHROMA_QP_TABLE_END</name><argument_list>(<argument><literal type="number">13</literal></argument>)</argument_list></macro> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>,
<expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>,
<expr><literal type="number">12</literal></expr>,<expr><literal type="number">13</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">15</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">17</literal></expr>,
<expr><literal type="number">18</literal></expr>,<expr><literal type="number">19</literal></expr>,<expr><literal type="number">20</literal></expr>,<expr><literal type="number">21</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">23</literal></expr>,
<expr><literal type="number">24</literal></expr>,<expr><literal type="number">25</literal></expr>,<expr><literal type="number">26</literal></expr>,<expr><literal type="number">27</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">29</literal></expr>,
<expr><literal type="number">30</literal></expr>,<expr><literal type="number">31</literal></expr>,<expr><literal type="number">32</literal></expr>,<expr><literal type="number">33</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">35</literal></expr>,
<macro><name>CHROMA_QP_TABLE_END</name><argument_list>(<argument><literal type="number">14</literal></argument>)</argument_list></macro> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>
</unit>
