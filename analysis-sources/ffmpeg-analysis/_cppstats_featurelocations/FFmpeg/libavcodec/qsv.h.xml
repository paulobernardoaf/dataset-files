<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\qsv.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_QSV_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_QSV_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;mfx/mfxvideo.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/buffer.h"</cpp:file></cpp:include>









<typedef>typedef <type><struct>struct <name>AVQSVContext</name> <block>{




<decl_stmt><decl><type><name>mfxSession</name></type> <name>session</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>iopattern</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>mfxExtBuffer</name> <modifier>*</modifier><modifier>*</modifier></type><name>ext_buffers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_ext_buffers</name></decl>;</decl_stmt>












<decl_stmt><decl><type><name>int</name></type> <name>opaque_alloc</name></decl>;</decl_stmt>










<decl_stmt><decl><type><name>int</name></type> <name>nb_opaque_surfaces</name></decl>;</decl_stmt>













<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>opaque_surfaces</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int</name></type> <name>opaque_alloc_type</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVQSVContext</name>;</typedef>






<function_decl><type><name>AVQSVContext</name> <modifier>*</modifier></type><name>av_qsv_alloc_context</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
