<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\audio_frame_queue.h">




















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_AUDIO_FRAME_QUEUE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_AUDIO_FRAME_QUEUE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>AudioFrame</name> <block>{
<decl_stmt><decl><type><name>int64_t</name></type> <name>pts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>duration</name></decl>;</decl_stmt>
}</block></struct></type> <name>AudioFrame</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AudioFrameQueue</name> <block>{
<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>remaining_delay</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>remaining_samples</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AudioFrame</name> <modifier>*</modifier></type><name>frames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>frame_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>frame_alloc</name></decl>;</decl_stmt>
}</block></struct></type> <name>AudioFrameQueue</name>;</typedef>







<function_decl><type><name>void</name></type> <name>ff_af_queue_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>AudioFrameQueue</name> <modifier>*</modifier></type><name>afq</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>ff_af_queue_close</name><parameter_list>(<parameter><decl><type><name>AudioFrameQueue</name> <modifier>*</modifier></type><name>afq</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>int</name></type> <name>ff_af_queue_add</name><parameter_list>(<parameter><decl><type><name>AudioFrameQueue</name> <modifier>*</modifier></type><name>afq</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>;</function_decl>















<function_decl><type><name>void</name></type> <name>ff_af_queue_remove</name><parameter_list>(<parameter><decl><type><name>AudioFrameQueue</name> <modifier>*</modifier></type><name>afq</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>pts</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>duration</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
