<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\vp9dsp.h">






















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_VP9DSP_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_VP9DSP_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/vp9.h"</cpp:file></cpp:include>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>vp9_mc_func</name>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>ref</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>ref_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>vp9_scaled_mc_func</name>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>ref</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>ref_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dy</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>VP9DSPContext</name> <block>{











<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>intra_pred</name><index>[<expr><name>N_TXFM_SIZES</name></expr>]</index><index>[<expr><name>N_INTRA_PRED_MODES</name></expr>]</index>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>left</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>top</name></decl></parameter>)</parameter_list>;</function_decl>















<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>itxfm_add</name><index>[<expr><name>N_TXFM_SIZES</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><name>N_TXFM_TYPES</name></expr>]</index>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>,
<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>block</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>eob</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>loop_filter_8</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>mb_lim</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>lim</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>hev_thr</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>loop_filter_16</name><index>[<expr><literal type="number">2</literal></expr>]</index>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>mb_lim</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>lim</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>hev_thr</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>loop_filter_mix2</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>mb_lim</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>lim</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>hev_thr</name></decl></parameter>)</parameter_list>;</function_decl>










<decl_stmt><decl><type><name>vp9_mc_func</name></type> <name><name>mc</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><name>N_FILTERS</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>vp9_scaled_mc_func</name></type> <name><name>smc</name><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><name>N_FILTERS</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>VP9DSPContext</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>ff_vp9_subpel_filters</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">16</literal></expr>]</index><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> <name>ff_vp9dsp_init</name><parameter_list>(<parameter><decl><type><name>VP9DSPContext</name> <modifier>*</modifier></type><name>dsp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bpp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bitexact</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_vp9dsp_init_8</name><parameter_list>(<parameter><decl><type><name>VP9DSPContext</name> <modifier>*</modifier></type><name>dsp</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_vp9dsp_init_10</name><parameter_list>(<parameter><decl><type><name>VP9DSPContext</name> <modifier>*</modifier></type><name>dsp</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_vp9dsp_init_12</name><parameter_list>(<parameter><decl><type><name>VP9DSPContext</name> <modifier>*</modifier></type><name>dsp</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_vp9dsp_init_aarch64</name><parameter_list>(<parameter><decl><type><name>VP9DSPContext</name> <modifier>*</modifier></type><name>dsp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bpp</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_vp9dsp_init_arm</name><parameter_list>(<parameter><decl><type><name>VP9DSPContext</name> <modifier>*</modifier></type><name>dsp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bpp</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_vp9dsp_init_x86</name><parameter_list>(<parameter><decl><type><name>VP9DSPContext</name> <modifier>*</modifier></type><name>dsp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bpp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bitexact</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_vp9dsp_init_mips</name><parameter_list>(<parameter><decl><type><name>VP9DSPContext</name> <modifier>*</modifier></type><name>dsp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bpp</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
