<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\d3d11va.h">






















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_D3D11VA_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_D3D11VA_H</name></cpp:macro></cpp:define>







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32_WINNT</name></expr></argument>)</argument_list></call> <operator>||</operator> <name>_WIN32_WINNT</name> <operator>&lt;</operator> <literal type="number">0x0602</literal></expr></cpp:if>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>_WIN32_WINNT</name></cpp:undef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_WIN32_WINNT</name></cpp:macro> <cpp:value>0x0602</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;d3d11.h&gt;</cpp:file></cpp:include>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_DXVA2_WORKAROUND_SCALING_LIST_ZIGZAG</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_DXVA2_WORKAROUND_INTEL_CLEARVIDEO</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 









<typedef>typedef <type><struct>struct <name>AVD3D11VAContext</name> <block>{



<decl_stmt><decl><type><name>ID3D11VideoDecoder</name> <modifier>*</modifier></type><name>decoder</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>ID3D11VideoContext</name> <modifier>*</modifier></type><name>video_context</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>D3D11_VIDEO_DECODER_CONFIG</name> <modifier>*</modifier></type><name>cfg</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>unsigned</name></type> <name>surface_count</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>ID3D11VideoDecoderOutputView</name> <modifier>*</modifier><modifier>*</modifier></type><name>surface</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>uint64_t</name></type> <name>workaround</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>unsigned</name></type> <name>report_id</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>HANDLE</name></type> <name>context_mutex</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVD3D11VAContext</name>;</typedef>






<function_decl><type><name>AVD3D11VAContext</name> <modifier>*</modifier></type><name>av_d3d11va_alloc_context</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>





<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
