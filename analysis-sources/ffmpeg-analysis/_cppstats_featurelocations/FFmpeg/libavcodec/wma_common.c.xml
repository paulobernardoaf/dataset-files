<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\wma_common.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"wma_common.h"</cpp:file></cpp:include>








<function><type><name>av_cold</name> <name>int</name></type> <name>ff_wma_get_frame_len_bits</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>sample_rate</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>version</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>decode_flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>frame_len_bits</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>sample_rate</name> <operator>&lt;=</operator> <literal type="number">16000</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>frame_len_bits</name> <operator>=</operator> <literal type="number">9</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>sample_rate</name> <operator>&lt;=</operator> <literal type="number">22050</literal> <operator>||</operator> <operator>(</operator><name>sample_rate</name> <operator>&lt;=</operator> <literal type="number">32000</literal> <operator>&amp;&amp;</operator> <name>version</name> <operator>==</operator> <literal type="number">1</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>frame_len_bits</name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>sample_rate</name> <operator>&lt;=</operator> <literal type="number">48000</literal> <operator>||</operator> <name>version</name> <operator>&lt;</operator> <literal type="number">3</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>frame_len_bits</name> <operator>=</operator> <literal type="number">11</literal></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>sample_rate</name> <operator>&lt;=</operator> <literal type="number">96000</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>frame_len_bits</name> <operator>=</operator> <literal type="number">12</literal></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>frame_len_bits</name> <operator>=</operator> <literal type="number">13</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>version</name> <operator>==</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>tmp</name> <init>= <expr><name>decode_flags</name> <operator>&amp;</operator> <literal type="number">0x6</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>tmp</name> <operator>==</operator> <literal type="number">0x2</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>++</operator><name>frame_len_bits</name></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>tmp</name> <operator>==</operator> <literal type="number">0x4</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>--</operator><name>frame_len_bits</name></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>tmp</name> <operator>==</operator> <literal type="number">0x6</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>frame_len_bits</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>frame_len_bits</name></expr>;</return>
</block_content>}</block></function>
</unit>
