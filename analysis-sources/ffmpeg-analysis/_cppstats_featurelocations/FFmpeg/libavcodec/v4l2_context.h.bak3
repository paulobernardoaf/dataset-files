






















#ifndef AVCODEC_V4L2_CONTEXT_H
#define AVCODEC_V4L2_CONTEXT_H

#include <stdatomic.h>
#include <linux/videodev2.h>

#include "libavcodec/avcodec.h"
#include "libavutil/pixfmt.h"
#include "libavutil/frame.h"
#include "libavutil/buffer.h"
#include "v4l2_buffers.h"

typedef struct V4L2Context {



const char* name;






enum v4l2_buf_type type;





enum AVPixelFormat av_pix_fmt;





enum AVCodecID av_codec_id;





struct v4l2_format format;





int width, height;
AVRational sample_aspect_ratio;




V4L2Buffer *buffers;




int num_buffers;




int streamon;





int done;

} V4L2Context;







int ff_v4l2_context_init(V4L2Context* ctx);







int ff_v4l2_context_set_format(V4L2Context* ctx);








int ff_v4l2_context_get_format(V4L2Context* ctx, int probe);








void ff_v4l2_context_release(V4L2Context* ctx);










int ff_v4l2_context_set_status(V4L2Context* ctx, uint32_t cmd);









int ff_v4l2_context_dequeue_packet(V4L2Context* ctx, AVPacket* pkt);










int ff_v4l2_context_dequeue_frame(V4L2Context* ctx, AVFrame* f, int timeout);











int ff_v4l2_context_enqueue_packet(V4L2Context* ctx, const AVPacket* pkt);










int ff_v4l2_context_enqueue_frame(V4L2Context* ctx, const AVFrame* f);

#endif 
