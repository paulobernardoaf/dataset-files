<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\libwebpenc_common.h">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_LIBWEBPENC_COMMON_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_LIBWEBPENC_COMMON_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;webp/encode.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/common.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/frame.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/imgutils.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>LibWebPContextCommon</name> <block>{
<decl_stmt><decl><type><name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>float</name></type> <name>quality</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>lossless</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>preset</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>chroma_warning</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>conversion_warning</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>WebPConfig</name></type> <name>config</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>ref</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cr_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cr_threshold</name></decl>;</decl_stmt>
}</block></struct></type> <name>LibWebPContextCommon</name>;</typedef>

<function_decl><type><name>int</name></type> <name>ff_libwebp_error_to_averror</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>err</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>av_cold</name> <name>int</name></type> <name>ff_libwebp_encode_init_common</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_libwebp_get_frame</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>LibWebPContextCommon</name> <modifier>*</modifier></type><name>s</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier><modifier>*</modifier></type><name>alt_frame_ptr</name></decl></parameter>,
<parameter><decl><type><name>WebPPicture</name> <modifier>*</modifier><modifier>*</modifier></type><name>pic_ptr</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OFFSET</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>offsetof(LibWebPContextCommon, x)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VE</name></cpp:macro> <cpp:value>AV_OPT_FLAG_VIDEO_PARAM | AV_OPT_FLAG_ENCODING_PARAM</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVOption</name></type> <name><name>options</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"lossless"</literal></expr>, <expr><literal type="string">"Use lossless mode"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>lossless</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"preset"</literal></expr>, <expr><literal type="string">"Configuration preset"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>preset</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>WEBP_PRESET_TEXT</name></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"none"</literal></expr>, <expr><literal type="string">"do not use a preset"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"default"</literal></expr>, <expr><literal type="string">"default preset"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>WEBP_PRESET_DEFAULT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"picture"</literal></expr>, <expr><literal type="string">"digital picture, like portrait, inner shot"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>WEBP_PRESET_PICTURE</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"photo"</literal></expr>, <expr><literal type="string">"outdoor photograph, with natural lighting"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>WEBP_PRESET_PHOTO</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"drawing"</literal></expr>, <expr><literal type="string">"hand or line drawing, with high-contrast details"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>WEBP_PRESET_DRAWING</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"icon"</literal></expr>, <expr><literal type="string">"small-sized colorful images"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>WEBP_PRESET_ICON</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"text"</literal></expr>, <expr><literal type="string">"text-like"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>WEBP_PRESET_TEXT</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>VE</name></expr>, <expr><literal type="string">"preset"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"cr_threshold"</literal></expr>,<expr><literal type="string">"Conditional replenishment threshold"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>cr_threshold</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"cr_size"</literal></expr> ,<expr><literal type="string">"Conditional replenishment block size"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>cr_size</name></expr></argument>)</argument_list></call></expr> , <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">16</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">256</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"quality"</literal></expr> ,<expr><literal type="string">"Quality"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>quality</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">75</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><name>VE</name></expr> }</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVCodecDefault</name></type> <name><name>libwebp_defaults</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"compression_level"</literal></expr>, <expr><literal type="string">"4"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"global_quality"</literal></expr>, <expr><literal type="string">"-1"</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
