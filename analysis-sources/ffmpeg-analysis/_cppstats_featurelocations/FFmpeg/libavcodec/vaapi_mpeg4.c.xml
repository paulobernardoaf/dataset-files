<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\vaapi_mpeg4.c">





















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h263.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hwaccel.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpeg4video.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpegvideo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vaapi_decode.h"</cpp:file></cpp:include>


<function><type><specifier>static</specifier> <name>int</name></type> <name>mpeg4_get_intra_dc_vlc_thr</name><parameter_list>(<parameter><decl><type><name>Mpeg4DecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>intra_dc_threshold</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><literal type="number">99</literal></expr>:</case> <return>return <expr><literal type="number">0</literal></expr>;</return>
<case>case <expr><literal type="number">13</literal></expr>:</case> <return>return <expr><literal type="number">1</literal></expr>;</return>
<case>case <expr><literal type="number">15</literal></expr>:</case> <return>return <expr><literal type="number">2</literal></expr>;</return>
<case>case <expr><literal type="number">17</literal></expr>:</case> <return>return <expr><literal type="number">3</literal></expr>;</return>
<case>case <expr><literal type="number">19</literal></expr>:</case> <return>return <expr><literal type="number">4</literal></expr>;</return>
<case>case <expr><literal type="number">21</literal></expr>:</case> <return>return <expr><literal type="number">5</literal></expr>;</return>
<case>case <expr><literal type="number">23</literal></expr>:</case> <return>return <expr><literal type="number">6</literal></expr>;</return>
<case>case <expr><literal type="number">0</literal></expr>:</case> <return>return <expr><literal type="number">7</literal></expr>;</return>
</block_content>}</block></switch>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vaapi_mpeg4_start_frame</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>av_unused</name> <specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>av_unused</name> <name>uint32_t</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>Mpeg4DecContext</name> <modifier>*</modifier></type><name>ctx</name> <init>= <expr><name><name>avctx</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><operator>&amp;</operator><name><name>ctx</name><operator>-&gt;</operator><name>m</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VAAPIDecodePicture</name> <modifier>*</modifier></type><name>pic</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name><operator>-&gt;</operator><name>hwaccel_picture_private</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VAPictureParameterBufferMPEG4</name></type> <name>pic_param</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>err</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>pic</name><operator>-&gt;</operator><name>output_surface</name></name> <operator>=</operator> <call><name>ff_vaapi_get_surface_id</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name><operator>-&gt;</operator><name>f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>pic_param</name> <operator>=</operator> <operator>(</operator><name>VAPictureParameterBufferMPEG4</name><operator>)</operator> <block>{
<expr><operator>.</operator><name>vop_width</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>width</name></name></expr>,
<expr><operator>.</operator><name>vop_height</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>height</name></name></expr>,
<expr><operator>.</operator><name>forward_reference_picture</name> <operator>=</operator> <name>VA_INVALID_ID</name></expr>,
<expr><operator>.</operator><name>backward_reference_picture</name> <operator>=</operator> <name>VA_INVALID_ID</name></expr>,
<expr><operator>.</operator><name><name>vol_fields</name><operator>.</operator><name>bits</name></name> <operator>=</operator> <block>{
<expr><operator>.</operator><name>short_video_header</name> <operator>=</operator> <name><name>avctx</name><operator>-&gt;</operator><name>codec</name><operator>-&gt;</operator><name>id</name></name> <operator>==</operator> <name>AV_CODEC_ID_H263</name></expr>,
<expr><operator>.</operator><name>chroma_format</name> <operator>=</operator> <name>CHROMA_420</name></expr>,
<expr><operator>.</operator><name>interlaced</name> <operator>=</operator> <operator>!</operator><name><name>s</name><operator>-&gt;</operator><name>progressive_sequence</name></name></expr>,
<expr><operator>.</operator><name>obmc_disable</name> <operator>=</operator> <literal type="number">1</literal></expr>,
<expr><operator>.</operator><name>sprite_enable</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>vol_sprite_usage</name></name></expr>,
<expr><operator>.</operator><name>sprite_warping_accuracy</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>sprite_warping_accuracy</name></name></expr>,
<expr><operator>.</operator><name>quant_type</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mpeg_quant</name></name></expr>,
<expr><operator>.</operator><name>quarter_sample</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>quarter_sample</name></name></expr>,
<expr><operator>.</operator><name>data_partitioned</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>data_partitioning</name></name></expr>,
<expr><operator>.</operator><name>reversible_vlc</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>rvlc</name></name></expr>,
<expr><operator>.</operator><name>resync_marker_disable</name> <operator>=</operator> <operator>!</operator><name><name>ctx</name><operator>-&gt;</operator><name>resync_marker</name></name></expr>,
}</block></expr>,
<expr><operator>.</operator><name>no_of_sprite_warping_points</name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>num_sprite_warping_points</name></name></expr>,
<expr><operator>.</operator><name>quant_precision</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>quant_precision</name></name></expr>,
<expr><operator>.</operator><name><name>vop_fields</name><operator>.</operator><name>bits</name></name> <operator>=</operator> <block>{
<expr><operator>.</operator><name>vop_coding_type</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>-</operator> <name>AV_PICTURE_TYPE_I</name></expr>,
<expr><operator>.</operator><name>backward_reference_vop_coding_type</name> <operator>=</operator>
<name><name>s</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>==</operator> <name>AV_PICTURE_TYPE_B</name> <operator>?</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>-</operator> <name>AV_PICTURE_TYPE_I</name> <operator>:</operator> <literal type="number">0</literal></expr>,
<expr><operator>.</operator><name>vop_rounding_type</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>no_rounding</name></name></expr>,
<expr><operator>.</operator><name>intra_dc_vlc_thr</name> <operator>=</operator> <call><name>mpeg4_get_intra_dc_vlc_thr</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name>top_field_first</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>top_field_first</name></name></expr>,
<expr><operator>.</operator><name>alternate_vertical_scan_flag</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>alternate_scan</name></name></expr>,
}</block></expr>,
<expr><operator>.</operator><name>vop_fcode_forward</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>f_code</name></name></expr>,
<expr><operator>.</operator><name>vop_fcode_backward</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>b_code</name></name></expr>,
<expr><operator>.</operator><name>vop_time_increment_resolution</name> <operator>=</operator> <name><name>avctx</name><operator>-&gt;</operator><name>framerate</name><operator>.</operator><name>num</name></name></expr>,
<expr><operator>.</operator><name>num_macroblocks_in_gob</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_width</name></name> <operator>*</operator> <call><name>H263_GOB_HEIGHT</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name>num_gobs_in_vop</name> <operator>=</operator>
<operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mb_width</name></name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_height</name></name><operator>)</operator> <operator>/</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mb_width</name></name> <operator>*</operator> <call><name>H263_GOB_HEIGHT</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>height</name></name></expr></argument>)</argument_list></call><operator>)</operator></expr>,
<expr><operator>.</operator><name>TRB</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>pb_time</name></name></expr>,
<expr><operator>.</operator><name>TRD</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>pp_time</name></name></expr>,
}</block></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>ctx</name><operator>-&gt;</operator><name>num_sprite_warping_points</name></name> <operator>&amp;&amp;</operator> <name>i</name> <operator>&lt;</operator> <literal type="number">3</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>pic_param</name><operator>.</operator><name>sprite_trajectory_du</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>sprite_traj</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>pic_param</name><operator>.</operator><name>sprite_trajectory_dv</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>ctx</name><operator>-&gt;</operator><name>sprite_traj</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>==</operator> <name>AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>pic_param</name><operator>.</operator><name>backward_reference_picture</name></name> <operator>=</operator> <call><name>ff_vaapi_get_surface_id</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>!=</operator> <name>AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>pic_param</name><operator>.</operator><name>forward_reference_picture</name></name> <operator>=</operator> <call><name>ff_vaapi_get_surface_id</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>last_picture</name><operator>.</operator><name>f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>err</name> <operator>=</operator> <call><name>ff_vaapi_decode_make_param_buffer</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>pic</name></expr></argument>,
<argument><expr><name>VAPictureParameterBufferType</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>pic_param</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>pic_param</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>err</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><name><name>pic_param</name><operator>.</operator><name>vol_fields</name><operator>.</operator><name>bits</name><operator>.</operator><name>quant_type</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>VAIQMatrixBufferMPEG4</name></type> <name>iq_matrix</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>iq_matrix</name><operator>.</operator><name>load_intra_quant_mat</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>iq_matrix</name><operator>.</operator><name>load_non_intra_quant_mat</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">64</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>n</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>idsp</name><operator>.</operator><name>idct_permutation</name><index>[<expr><name><name>ff_zigzag_direct</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>iq_matrix</name><operator>.</operator><name>intra_quant_mat</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>intra_matrix</name><index>[<expr><name>n</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>iq_matrix</name><operator>.</operator><name>non_intra_quant_mat</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>inter_matrix</name><index>[<expr><name>n</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>err</name> <operator>=</operator> <call><name>ff_vaapi_decode_make_param_buffer</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>pic</name></expr></argument>,
<argument><expr><name>VAIQMatrixBufferType</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>iq_matrix</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>iq_matrix</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>err</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>

<label><name>fail</name>:</label>
<expr_stmt><expr><call><name>ff_vaapi_decode_cancel</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vaapi_mpeg4_end_frame</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><name><name>avctx</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VAAPIDecodePicture</name> <modifier>*</modifier></type><name>pic</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name><operator>-&gt;</operator><name>hwaccel_picture_private</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ff_vaapi_decode_issue</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>ff_mpeg_draw_horiz_band</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label><name>fail</name>:</label>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>vaapi_mpeg4_decode_slice</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><name><name>avctx</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VAAPIDecodePicture</name> <modifier>*</modifier></type><name>pic</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name><operator>-&gt;</operator><name>hwaccel_picture_private</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VASliceParameterBufferMPEG4</name></type> <name>slice_param</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>err</name></decl>;</decl_stmt>

<expr_stmt><expr><name>slice_param</name> <operator>=</operator> <operator>(</operator><name>VASliceParameterBufferMPEG4</name><operator>)</operator> <block>{
<expr><operator>.</operator><name>slice_data_size</name> <operator>=</operator> <name>size</name></expr>,
<expr><operator>.</operator><name>slice_data_offset</name> <operator>=</operator> <literal type="number">0</literal></expr>,
<expr><operator>.</operator><name>slice_data_flag</name> <operator>=</operator> <name>VA_SLICE_DATA_FLAG_ALL</name></expr>,
<expr><operator>.</operator><name>macroblock_offset</name> <operator>=</operator> <call><name>get_bits_count</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call> <operator>%</operator> <literal type="number">8</literal></expr>,
<expr><operator>.</operator><name>macroblock_number</name> <operator>=</operator> <literal type="number">0</literal></expr>,
<expr><operator>.</operator><name>quant_scale</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>qscale</name></name></expr>,
}</block></expr>;</expr_stmt>

<expr_stmt><expr><name>err</name> <operator>=</operator> <call><name>ff_vaapi_decode_make_slice_buffer</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>pic</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>slice_param</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>slice_param</name></expr></argument>)</argument_list></sizeof></expr></argument>,
<argument><expr><name>buffer</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>err</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ff_vaapi_decode_cancel</name><argument_list>(<argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_MPEG4_VAAPI_HWACCEL</name></expr></cpp:if>
<decl_stmt><decl><type><specifier>const</specifier> <name>AVHWAccel</name></type> <name>ff_mpeg4_vaapi_hwaccel</name> <init>= <expr><block>{
<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"mpeg4_vaapi"</literal></expr>,
<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>AVMEDIA_TYPE_VIDEO</name></expr>,
<expr><operator>.</operator><name>id</name> <operator>=</operator> <name>AV_CODEC_ID_MPEG4</name></expr>,
<expr><operator>.</operator><name>pix_fmt</name> <operator>=</operator> <name>AV_PIX_FMT_VAAPI</name></expr>,
<expr><operator>.</operator><name>start_frame</name> <operator>=</operator> <operator>&amp;</operator><name>vaapi_mpeg4_start_frame</name></expr>,
<expr><operator>.</operator><name>end_frame</name> <operator>=</operator> <operator>&amp;</operator><name>vaapi_mpeg4_end_frame</name></expr>,
<expr><operator>.</operator><name>decode_slice</name> <operator>=</operator> <operator>&amp;</operator><name>vaapi_mpeg4_decode_slice</name></expr>,
<expr><operator>.</operator><name>frame_priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>VAAPIDecodePicture</name></expr></argument>)</argument_list></sizeof></expr>,
<expr><operator>.</operator><name>init</name> <operator>=</operator> <operator>&amp;</operator><name>ff_vaapi_decode_init</name></expr>,
<expr><operator>.</operator><name>uninit</name> <operator>=</operator> <operator>&amp;</operator><name>ff_vaapi_decode_uninit</name></expr>,
<expr><operator>.</operator><name>frame_params</name> <operator>=</operator> <operator>&amp;</operator><name>ff_vaapi_common_frame_params</name></expr>,
<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>VAAPIDecodeContext</name></expr></argument>)</argument_list></sizeof></expr>,
<expr><operator>.</operator><name>caps_internal</name> <operator>=</operator> <name>HWACCEL_CAP_ASYNC_SAFE</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_H263_VAAPI_HWACCEL</name></expr></cpp:if>
<decl_stmt><decl><type><specifier>const</specifier> <name>AVHWAccel</name></type> <name>ff_h263_vaapi_hwaccel</name> <init>= <expr><block>{
<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"h263_vaapi"</literal></expr>,
<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>AVMEDIA_TYPE_VIDEO</name></expr>,
<expr><operator>.</operator><name>id</name> <operator>=</operator> <name>AV_CODEC_ID_H263</name></expr>,
<expr><operator>.</operator><name>pix_fmt</name> <operator>=</operator> <name>AV_PIX_FMT_VAAPI</name></expr>,
<expr><operator>.</operator><name>start_frame</name> <operator>=</operator> <operator>&amp;</operator><name>vaapi_mpeg4_start_frame</name></expr>,
<expr><operator>.</operator><name>end_frame</name> <operator>=</operator> <operator>&amp;</operator><name>vaapi_mpeg4_end_frame</name></expr>,
<expr><operator>.</operator><name>decode_slice</name> <operator>=</operator> <operator>&amp;</operator><name>vaapi_mpeg4_decode_slice</name></expr>,
<expr><operator>.</operator><name>frame_priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>VAAPIDecodePicture</name></expr></argument>)</argument_list></sizeof></expr>,
<expr><operator>.</operator><name>init</name> <operator>=</operator> <operator>&amp;</operator><name>ff_vaapi_decode_init</name></expr>,
<expr><operator>.</operator><name>uninit</name> <operator>=</operator> <operator>&amp;</operator><name>ff_vaapi_decode_uninit</name></expr>,
<expr><operator>.</operator><name>frame_params</name> <operator>=</operator> <operator>&amp;</operator><name>ff_vaapi_common_frame_params</name></expr>,
<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>VAAPIDecodeContext</name></expr></argument>)</argument_list></sizeof></expr>,
<expr><operator>.</operator><name>caps_internal</name> <operator>=</operator> <name>HWACCEL_CAP_ASYNC_SAFE</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
