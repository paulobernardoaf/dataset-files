<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\atrac1data.h">


























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_ATRAC1DATA_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_ATRAC1DATA_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bfu_amount_tab1</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">20</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">52</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bfu_amount_tab2</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">112</literal></expr>, <expr><literal type="number">176</literal></expr>, <expr><literal type="number">208</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bfu_amount_tab3</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">72</literal></expr>, <expr><literal type="number">108</literal></expr>, <expr><literal type="number">132</literal></expr>, <expr><literal type="number">156</literal></expr>}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>bfu_bands_t</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">52</literal></expr>}</block></expr></init></decl>;</decl_stmt>





<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>specs_per_bfu</name><index>[<expr><literal type="number">52</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, 
<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, 
<expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">20</literal></expr> 
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bfu_start_long</name><index>[<expr><literal type="number">52</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">56</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">72</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><literal type="number">86</literal></expr>, <expr><literal type="number">92</literal></expr>, <expr><literal type="number">98</literal></expr>, <expr><literal type="number">104</literal></expr>, <expr><literal type="number">110</literal></expr>, <expr><literal type="number">116</literal></expr>, <expr><literal type="number">122</literal></expr>,
<expr><literal type="number">128</literal></expr>, <expr><literal type="number">134</literal></expr>, <expr><literal type="number">140</literal></expr>, <expr><literal type="number">146</literal></expr>, <expr><literal type="number">152</literal></expr>, <expr><literal type="number">159</literal></expr>, <expr><literal type="number">166</literal></expr>, <expr><literal type="number">173</literal></expr>, <expr><literal type="number">180</literal></expr>, <expr><literal type="number">189</literal></expr>, <expr><literal type="number">198</literal></expr>, <expr><literal type="number">207</literal></expr>, <expr><literal type="number">216</literal></expr>, <expr><literal type="number">226</literal></expr>, <expr><literal type="number">236</literal></expr>, <expr><literal type="number">246</literal></expr>,
<expr><literal type="number">256</literal></expr>, <expr><literal type="number">268</literal></expr>, <expr><literal type="number">280</literal></expr>, <expr><literal type="number">292</literal></expr>, <expr><literal type="number">304</literal></expr>, <expr><literal type="number">316</literal></expr>, <expr><literal type="number">328</literal></expr>, <expr><literal type="number">340</literal></expr>, <expr><literal type="number">352</literal></expr>, <expr><literal type="number">372</literal></expr>, <expr><literal type="number">392</literal></expr>, <expr><literal type="number">412</literal></expr>, <expr><literal type="number">432</literal></expr>, <expr><literal type="number">452</literal></expr>, <expr><literal type="number">472</literal></expr>, <expr><literal type="number">492</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>bfu_start_short</name><index>[<expr><literal type="number">52</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">96</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">72</literal></expr>, <expr><literal type="number">104</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">44</literal></expr>, <expr><literal type="number">76</literal></expr>, <expr><literal type="number">108</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">52</literal></expr>, <expr><literal type="number">84</literal></expr>, <expr><literal type="number">116</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">122</literal></expr>,
<expr><literal type="number">128</literal></expr>, <expr><literal type="number">160</literal></expr>, <expr><literal type="number">192</literal></expr>, <expr><literal type="number">224</literal></expr>, <expr><literal type="number">134</literal></expr>, <expr><literal type="number">166</literal></expr>, <expr><literal type="number">198</literal></expr>, <expr><literal type="number">230</literal></expr>, <expr><literal type="number">141</literal></expr>, <expr><literal type="number">173</literal></expr>, <expr><literal type="number">205</literal></expr>, <expr><literal type="number">237</literal></expr>, <expr><literal type="number">150</literal></expr>, <expr><literal type="number">182</literal></expr>, <expr><literal type="number">214</literal></expr>, <expr><literal type="number">246</literal></expr>,
<expr><literal type="number">256</literal></expr>, <expr><literal type="number">288</literal></expr>, <expr><literal type="number">320</literal></expr>, <expr><literal type="number">352</literal></expr>, <expr><literal type="number">384</literal></expr>, <expr><literal type="number">416</literal></expr>, <expr><literal type="number">448</literal></expr>, <expr><literal type="number">480</literal></expr>, <expr><literal type="number">268</literal></expr>, <expr><literal type="number">300</literal></expr>, <expr><literal type="number">332</literal></expr>, <expr><literal type="number">364</literal></expr>, <expr><literal type="number">396</literal></expr>, <expr><literal type="number">428</literal></expr>, <expr><literal type="number">460</literal></expr>, <expr><literal type="number">492</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
