<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\aarch64\vp8dsp.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_AARCH64_VP8DSP_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_AARCH64_VP8DSP_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/vp8dsp.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP8_LF_Y</name><parameter_list>(<parameter><type><name>hv</name></type></parameter>, <parameter><type><name>inner</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_vp8_##hv##_loop_filter16##inner##_##opt(uint8_t *dst, ptrdiff_t stride, int flim_E, int flim_I, int hev_thresh)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP8_LF_UV</name><parameter_list>(<parameter><type><name>hv</name></type></parameter>, <parameter><type><name>inner</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_vp8_##hv##_loop_filter8uv##inner##_##opt(uint8_t *dstU, uint8_t *dstV, ptrdiff_t stride, int flim_E, int flim_I, int hev_thresh)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP8_LF_SIMPLE</name><parameter_list>(<parameter><type><name>hv</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_vp8_##hv##_loop_filter16_simple_##opt(uint8_t *dst, ptrdiff_t stride, int flim)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP8_LF_HV</name><parameter_list>(<parameter><type><name>inner</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>VP8_LF_Y(h, inner, opt); VP8_LF_Y(v, inner, opt); VP8_LF_UV(h, inner, opt); VP8_LF_UV(v, inner, opt)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP8_LF</name><parameter_list>(<parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>VP8_LF_HV(, opt); VP8_LF_HV(_inner, opt); VP8_LF_SIMPLE(h, opt); VP8_LF_SIMPLE(v, opt)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP8_MC</name><parameter_list>(<parameter><type><name>n</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_put_vp8_##n##_##opt(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int x, int y)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP8_EPEL</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>VP8_MC(pixels ##w, opt); VP8_MC(epel ##w ##_h4, opt); VP8_MC(epel ##w ##_h6, opt); VP8_MC(epel ##w ##_v4, opt); VP8_MC(epel ##w ##_h4v4, opt); VP8_MC(epel ##w ##_h6v4, opt); VP8_MC(epel ##w ##_v6, opt); VP8_MC(epel ##w ##_h4v6, opt); VP8_MC(epel ##w ##_h6v6, opt)</cpp:value></cpp:define>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP8_BILIN</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>VP8_MC(bilin ##w ##_h, opt); VP8_MC(bilin ##w ##_v, opt); VP8_MC(bilin ##w ##_hv, opt)</cpp:value></cpp:define>




<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
