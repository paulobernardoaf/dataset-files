<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\cbs_mpeg2.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_CBS_MPEG2_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_CBS_MPEG2_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/buffer.h"</cpp:file></cpp:include>


<enum>enum <block>{
<decl><name>MPEG2_START_PICTURE</name> <init>= <expr><literal type="number">0x00</literal></expr></init></decl>,
<decl><name>MPEG2_START_SLICE_MIN</name> <init>= <expr><literal type="number">0x01</literal></expr></init></decl>,
<decl><name>MPEG2_START_SLICE_MAX</name> <init>= <expr><literal type="number">0xaf</literal></expr></init></decl>,
<decl><name>MPEG2_START_USER_DATA</name> <init>= <expr><literal type="number">0xb2</literal></expr></init></decl>,
<decl><name>MPEG2_START_SEQUENCE_HEADER</name> <init>= <expr><literal type="number">0xb3</literal></expr></init></decl>,
<decl><name>MPEG2_START_SEQUENCE_ERROR</name> <init>= <expr><literal type="number">0xb4</literal></expr></init></decl>,
<decl><name>MPEG2_START_EXTENSION</name> <init>= <expr><literal type="number">0xb5</literal></expr></init></decl>,
<decl><name>MPEG2_START_SEQUENCE_END</name> <init>= <expr><literal type="number">0xb7</literal></expr></init></decl>,
<decl><name>MPEG2_START_GROUP</name> <init>= <expr><literal type="number">0xb8</literal></expr></init></decl>,
}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MPEG2_START_IS_SLICE</name><parameter_list>(<parameter><type><name>type</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((type) &gt;= MPEG2_START_SLICE_MIN &amp;&amp; (type) &lt;= MPEG2_START_SLICE_MAX)</cpp:value></cpp:define>



<enum>enum <block>{
<decl><name>MPEG2_EXTENSION_SEQUENCE</name> <init>= <expr><literal type="number">0x1</literal></expr></init></decl>,
<decl><name>MPEG2_EXTENSION_SEQUENCE_DISPLAY</name> <init>= <expr><literal type="number">0x2</literal></expr></init></decl>,
<decl><name>MPEG2_EXTENSION_QUANT_MATRIX</name> <init>= <expr><literal type="number">0x3</literal></expr></init></decl>,
<decl><name>MPEG2_EXTENSION_COPYRIGHT</name> <init>= <expr><literal type="number">0x4</literal></expr></init></decl>,
<decl><name>MPEG2_EXTENSION_SEQUENCE_SCALABLE</name> <init>= <expr><literal type="number">0x5</literal></expr></init></decl>,
<decl><name>MPEG2_EXTENSION_PICTURE_DISPLAY</name> <init>= <expr><literal type="number">0x7</literal></expr></init></decl>,
<decl><name>MPEG2_EXTENSION_PICTURE_CODING</name> <init>= <expr><literal type="number">0x8</literal></expr></init></decl>,
<decl><name>MPEG2_EXTENSION_PICTURE_SPATIAL_SCALABLE</name> <init>= <expr><literal type="number">0x9</literal></expr></init></decl>,
<decl><name>MPEG2_EXTENSION_PICTURE_TEMPORAL_SCALABLE</name> <init>= <expr><literal type="number">0xa</literal></expr></init></decl>,
<decl><name>MPEG2_EXTENSION_CAMERA_PARAMETERS</name> <init>= <expr><literal type="number">0xb</literal></expr></init></decl>,
<decl><name>MPEG2_EXTENSION_ITU_T</name> <init>= <expr><literal type="number">0xc</literal></expr></init></decl>,
}</block>;</enum>


<typedef>typedef <type><struct>struct <name>MPEG2RawSequenceHeader</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>sequence_header_code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>horizontal_size_value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>vertical_size_value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>aspect_ratio_information</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_rate_code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>bit_rate_value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>vbv_buffer_size_value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>constrained_parameters_flag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>load_intra_quantiser_matrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>intra_quantiser_matrix</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>load_non_intra_quantiser_matrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>non_intra_quantiser_matrix</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>MPEG2RawSequenceHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MPEG2RawUserData</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>user_data_start_code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>user_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>user_data_length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>user_data_ref</name></decl>;</decl_stmt>
}</block></struct></type> <name>MPEG2RawUserData</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MPEG2RawSequenceExtension</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>profile_and_level_indication</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>progressive_sequence</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>horizontal_size_extension</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>vertical_size_extension</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>bit_rate_extension</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>vbv_buffer_size_extension</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>low_delay</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_rate_extension_n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_rate_extension_d</name></decl>;</decl_stmt>
}</block></struct></type> <name>MPEG2RawSequenceExtension</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MPEG2RawSequenceDisplayExtension</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>video_format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>colour_description</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>colour_primaries</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>transfer_characteristics</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>matrix_coefficients</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>display_horizontal_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>display_vertical_size</name></decl>;</decl_stmt>
}</block></struct></type> <name>MPEG2RawSequenceDisplayExtension</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MPEG2RawGroupOfPicturesHeader</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>group_start_code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>time_code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>closed_gop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>broken_link</name></decl>;</decl_stmt>
}</block></struct></type> <name>MPEG2RawGroupOfPicturesHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MPEG2RawExtraInformation</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>extra_information</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>extra_information_ref</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>extra_information_length</name></decl>;</decl_stmt>
}</block></struct></type> <name>MPEG2RawExtraInformation</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MPEG2RawPictureHeader</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>picture_start_code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>temporal_reference</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>picture_coding_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>vbv_delay</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>full_pel_forward_vector</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>forward_f_code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>full_pel_backward_vector</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>backward_f_code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MPEG2RawExtraInformation</name></type> <name>extra_information_picture</name></decl>;</decl_stmt>
}</block></struct></type> <name>MPEG2RawPictureHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MPEG2RawPictureCodingExtension</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>f_code</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>intra_dc_precision</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>picture_structure</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>top_field_first</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_pred_frame_dct</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>concealment_motion_vectors</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>q_scale_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>intra_vlc_format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>alternate_scan</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>repeat_first_field</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_420_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>progressive_frame</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>composite_display_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>v_axis</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>field_sequence</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>sub_carrier</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>burst_amplitude</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>sub_carrier_phase</name></decl>;</decl_stmt>
}</block></struct></type> <name>MPEG2RawPictureCodingExtension</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MPEG2RawQuantMatrixExtension</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>load_intra_quantiser_matrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>intra_quantiser_matrix</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>load_non_intra_quantiser_matrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>non_intra_quantiser_matrix</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>load_chroma_intra_quantiser_matrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>chroma_intra_quantiser_matrix</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>load_chroma_non_intra_quantiser_matrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>chroma_non_intra_quantiser_matrix</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>MPEG2RawQuantMatrixExtension</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MPEG2RawPictureDisplayExtension</name> <block>{
<decl_stmt><decl><type><name>int16_t</name></type> <name><name>frame_centre_horizontal_offset</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name><name>frame_centre_vertical_offset</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>MPEG2RawPictureDisplayExtension</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MPEG2RawExtensionData</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>extension_start_code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>extension_start_code_identifier</name></decl>;</decl_stmt>

<union>union <block>{
<decl_stmt><decl><type><name>MPEG2RawSequenceExtension</name></type> <name>sequence</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MPEG2RawSequenceDisplayExtension</name></type> <name>sequence_display</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MPEG2RawQuantMatrixExtension</name></type> <name>quant_matrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MPEG2RawPictureCodingExtension</name></type> <name>picture_coding</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MPEG2RawPictureDisplayExtension</name></type> <name>picture_display</name></decl>;</decl_stmt>
}</block> <decl><name>data</name></decl>;</union>
}</block></struct></type> <name>MPEG2RawExtensionData</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MPEG2RawSliceHeader</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_vertical_position</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_vertical_position_extension</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>priority_breakpoint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>quantiser_scale_code</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_extension_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>intra_slice</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_picture_id_enable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>slice_picture_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>MPEG2RawExtraInformation</name></type> <name>extra_information_slice</name></decl>;</decl_stmt>
}</block></struct></type> <name>MPEG2RawSliceHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MPEG2RawSlice</name> <block>{
<decl_stmt><decl><type><name>MPEG2RawSliceHeader</name></type> <name>header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>data_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>data_bit_start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>data_ref</name></decl>;</decl_stmt>
}</block></struct></type> <name>MPEG2RawSlice</name>;</typedef>

<typedef>typedef <type><struct>struct <name>MPEG2RawSequenceEnd</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>sequence_end_code</name></decl>;</decl_stmt>
}</block></struct></type> <name>MPEG2RawSequenceEnd</name>;</typedef>


<typedef>typedef <type><struct>struct <name>CodedBitstreamMPEG2Context</name> <block>{

<decl_stmt><decl><type><name>uint16_t</name></type> <name>horizontal_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>vertical_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>scalable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>scalable_mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>progressive_sequence</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>number_of_frame_centre_offsets</name></decl>;</decl_stmt>
}</block></struct></type> <name>CodedBitstreamMPEG2Context</name>;</typedef>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
