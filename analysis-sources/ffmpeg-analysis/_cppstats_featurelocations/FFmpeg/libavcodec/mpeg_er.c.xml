<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mpeg_er.c">

















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"error_resilience.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpegvideo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpeg_er.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>void</name></type> <name>set_erpic</name><parameter_list>(<parameter><decl><type><name>ERPicture</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>Picture</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>dst</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>src</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>f</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>tf</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>f</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>f</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>tf</name></name> <operator>=</operator> <operator>&amp;</operator><name><name>src</name><operator>-&gt;</operator><name>tf</name></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>motion_val</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>motion_val</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>ref_index</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>ref_index</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>mb_type</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>mb_type</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>field_picture</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>field_picture</name></name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_mpeg_er_frame_start</name><parameter_list>(<parameter><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ERContext</name> <modifier>*</modifier></type><name>er</name> <init>= <expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>er</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>set_erpic</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>er</name><operator>-&gt;</operator><name>cur_pic</name></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>current_picture_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>set_erpic</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>er</name><operator>-&gt;</operator><name>next_pic</name></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>next_picture_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>set_erpic</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>er</name><operator>-&gt;</operator><name>last_pic</name></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>last_picture_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>pp_time</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>pp_time</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>pb_time</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>pb_time</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>quarter_sample</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>quarter_sample</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>partitioned_frame</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>partitioned_frame</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ff_er_frame_start</name><argument_list>(<argument><expr><name>er</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <name>void</name></type> <name>mpeg_er_decode_mb</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>opaque</name></expr></argument>, <argument><expr><name>int</name> <name>ref</name></expr></argument>, <argument><expr><name>int</name> <name>mv_dir</name></expr></argument>, <argument><expr><name>int</name> <name>mv_type</name></expr></argument>,
<argument><expr><call><name>int</name> <argument_list>(<argument><expr><operator>*</operator><name>mv</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></expr></argument>, <argument><expr><name>int</name> <name>mb_x</name></expr></argument>, <argument><expr><name>int</name> <name>mb_y</name></expr></argument>,
<argument><expr><name>int</name> <name>mb_intra</name></expr></argument>, <argument><expr><name>int</name> <name>mb_skipped</name></expr></argument>)</argument_list>
<block>{<block_content>
<decl_stmt><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><name>opaque</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv_dir</name></name> <operator>=</operator> <name>mv_dir</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv_type</name></name> <operator>=</operator> <name>mv_type</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mb_intra</name></name> <operator>=</operator> <name>mb_intra</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mb_skipped</name></name> <operator>=</operator> <name>mb_skipped</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>=</operator> <name>mb_x</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>=</operator> <name>mb_y</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mcsel</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name></name></expr></argument>, <argument><expr><name>mv</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>mv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ff_init_block_index</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_update_block_index</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>bdsp</name><operator>.</operator><name>clear_blocks</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>block</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>s</name><operator>-&gt;</operator><name>chroma_y_shift</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name><name>s</name><operator>-&gt;</operator><name>bdsp</name><operator>.</operator><name>clear_blocks</name></name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>block</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator>
<name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>*</operator> <literal type="number">16</literal> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>linesize</name></name> <operator>+</operator>
<name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>*</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator>
<name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>*</operator> <operator>(</operator><literal type="number">16</literal> <operator>&gt;&gt;</operator> <name><name>s</name><operator>-&gt;</operator><name>chroma_y_shift</name></name><operator>)</operator> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>+</operator>
<name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>*</operator> <operator>(</operator><literal type="number">16</literal> <operator>&gt;&gt;</operator> <name><name>s</name><operator>-&gt;</operator><name>chroma_x_shift</name></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>dest</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>current_picture</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+</operator>
<name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>*</operator> <operator>(</operator><literal type="number">16</literal> <operator>&gt;&gt;</operator> <name><name>s</name><operator>-&gt;</operator><name>chroma_y_shift</name></name><operator>)</operator> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>uvlinesize</name></name> <operator>+</operator>
<name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>*</operator> <operator>(</operator><literal type="number">16</literal> <operator>&gt;&gt;</operator> <name><name>s</name><operator>-&gt;</operator><name>chroma_x_shift</name></name><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ref</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_DEBUG</name></expr></argument>,
<argument><expr><literal type="string">"Interlaced error concealment is not fully implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>ff_mpv_reconstruct_mb</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt>

<function><type><name>int</name></type> <name>ff_mpeg_er_init</name><parameter_list>(<parameter><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ERContext</name> <modifier>*</modifier></type><name>er</name> <init>= <expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>er</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>mb_array_size</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>mb_height</name></name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_stride</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>avctx</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>avctx</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>mb_index2xy</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_index2xy</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>mb_num</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_num</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>mb_width</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_width</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>mb_height</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_height</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>mb_stride</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_stride</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>b8_stride</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>b8_stride</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>er_temp_buffer</name></name> <operator>=</operator> <call><name>av_malloc</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>mb_height</name></name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_stride</name></name> <operator>*</operator> <operator>(</operator><literal type="number">4</literal><operator>*</operator><sizeof>sizeof<argument_list>(<argument><expr><name>int</name></expr></argument>)</argument_list></sizeof> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>error_status_table</name></name> <operator>=</operator> <call><name>av_mallocz</name><argument_list>(<argument><expr><name>mb_array_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>er</name><operator>-&gt;</operator><name>er_temp_buffer</name></name> <operator>||</operator> <operator>!</operator><name><name>er</name><operator>-&gt;</operator><name>error_status_table</name></name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>fail</name>;</goto></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>mbskip_table</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mbskip_table</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>mbintra_table</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mbintra_table</name></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>dc_val</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>dc_val</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>dc_val</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>decode_mb</name></name> <operator>=</operator> <name>mpeg_er_decode_mb</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>er</name><operator>-&gt;</operator><name>opaque</name></name> <operator>=</operator> <name>s</name></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
<label><name>fail</name>:</label>
<expr_stmt><expr><call><name>av_freep</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>er</name><operator>-&gt;</operator><name>er_temp_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>av_freep</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>er</name><operator>-&gt;</operator><name>error_status_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
