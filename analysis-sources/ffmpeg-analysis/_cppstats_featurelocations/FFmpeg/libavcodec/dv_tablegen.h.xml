<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\dv_tablegen.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_DV_TABLEGEN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_DV_TABLEGEN_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dvdata.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_SMALL</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DV_VLC_MAP_RUN_SIZE</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DV_VLC_MAP_LEV_SIZE</name></cpp:macro> <cpp:value>23</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DV_VLC_MAP_RUN_SIZE</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DV_VLC_MAP_LEV_SIZE</name></cpp:macro> <cpp:value>512</cpp:value></cpp:define> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<typedef>typedef <type><struct>struct <name>dv_vlc_pair</name> <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>vlc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>size</name></decl>;</decl_stmt>
}</block></struct></type> <name>dv_vlc_pair</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_HARDCODED_TABLES</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dv_vlc_map_tableinit</name><parameter_list>()</parameter_list></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/dv_tables.h"</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<decl_stmt><decl><type><specifier>static</specifier> <name><name>struct</name> <name>dv_vlc_pair</name></name></type> <name><name>dv_vlc_map</name><index>[<expr><name>DV_VLC_MAP_RUN_SIZE</name></expr>]</index><index>[<expr><name>DV_VLC_MAP_LEV_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>av_cold</name> <name>void</name></type> <name>dv_vlc_map_tableinit</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>NB_DV_VLC</name> <operator>-</operator> <literal type="number">1</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>ff_dv_vlc_run</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;=</operator> <name>DV_VLC_MAP_RUN_SIZE</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_SMALL</name></expr></cpp:if>
<if_stmt><if>if <condition>(<expr><name><name>ff_dv_vlc_level</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&gt;=</operator> <name>DV_VLC_MAP_LEV_SIZE</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<if_stmt><if>if <condition>(<expr><name><name>dv_vlc_map</name><index>[<expr><name><name>ff_dv_vlc_run</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index><index>[<expr><name><name>ff_dv_vlc_level</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>size</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>dv_vlc_map</name><index>[<expr><name><name>ff_dv_vlc_run</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index><index>[<expr><name><name>ff_dv_vlc_level</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>vlc</name> <operator>=</operator>
<name><name>ff_dv_vlc_bits</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;&lt;</operator> <operator>(</operator><operator>!</operator><operator>!</operator><name><name>ff_dv_vlc_level</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dv_vlc_map</name><index>[<expr><name><name>ff_dv_vlc_run</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index><index>[<expr><name><name>ff_dv_vlc_level</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name><operator>.</operator><name>size</name> <operator>=</operator>
<name><name>ff_dv_vlc_len</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <operator>(</operator><operator>!</operator><operator>!</operator><name><name>ff_dv_vlc_level</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>DV_VLC_MAP_RUN_SIZE</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_SMALL</name></expr></cpp:if>
<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>DV_VLC_MAP_LEV_SIZE</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>dv_vlc_map</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>size</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>dv_vlc_map</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>vlc</name> <operator>=</operator> <name><name>dv_vlc_map</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>vlc</name> <operator>|</operator>
<operator>(</operator><name><name>dv_vlc_map</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>vlc</name> <operator>&lt;&lt;</operator>
<name><name>dv_vlc_map</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>size</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dv_vlc_map</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>size</name> <operator>=</operator> <name><name>dv_vlc_map</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>size</name> <operator>+</operator>
<name><name>dv_vlc_map</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>size</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>DV_VLC_MAP_LEV_SIZE</name> <operator>/</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>dv_vlc_map</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>size</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>dv_vlc_map</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>vlc</name> <operator>=</operator> <name><name>dv_vlc_map</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>vlc</name> <operator>|</operator>
<operator>(</operator><name><name>dv_vlc_map</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>vlc</name> <operator>&lt;&lt;</operator>
<name><name>dv_vlc_map</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>size</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dv_vlc_map</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>size</name> <operator>=</operator> <name><name>dv_vlc_map</name><index>[<expr><name>i</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>size</name> <operator>+</operator>
<name><name>dv_vlc_map</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>size</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>dv_vlc_map</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><operator>(</operator><operator>(</operator><name>uint16_t</name><operator>)</operator> <operator>(</operator><operator>-</operator><name>j</name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x1ff</literal></expr>]</index></name><operator>.</operator><name>vlc</name> <operator>=</operator> <name><name>dv_vlc_map</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>vlc</name> <operator>|</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dv_vlc_map</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><operator>(</operator><operator>(</operator><name>uint16_t</name><operator>)</operator> <operator>(</operator><operator>-</operator><name>j</name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x1ff</literal></expr>]</index></name><operator>.</operator><name>size</name> <operator>=</operator> <name><name>dv_vlc_map</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><name>size</name></expr>;</expr_stmt>
</block_content>}</block></for>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></for>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
