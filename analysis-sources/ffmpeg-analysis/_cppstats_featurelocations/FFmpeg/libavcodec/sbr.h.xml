<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\sbr.h">



























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_SBR_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_SBR_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fft.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"aacps.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sbrdsp.h"</cpp:file></cpp:include>

<typedef>typedef <type><name><name>struct</name> <name>AACContext</name></name></type> <name>AACContext</name>;</typedef>




<typedef>typedef <type><struct>struct <name>SpectrumParameters</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>bs_start_freq</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>bs_stop_freq</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>bs_xover_band</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>uint8_t</name></type> <name>bs_freq_scale</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>bs_alter_scale</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>bs_noise_bands</name></decl>;</decl_stmt>

}</block></struct></type> <name>SpectrumParameters</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SBR_SYNTHESIS_BUF_SIZE</name></cpp:macro> <cpp:value>((1280-128)*2)</cpp:value></cpp:define>




<typedef>typedef <type><struct>struct <name>SBRData</name> <block>{




<decl_stmt><decl><type><name>unsigned</name></type> <name>bs_frame_class</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>bs_add_harmonic_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AAC_SIGNE</name></type> <name>bs_num_env</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>bs_freq_res</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AAC_SIGNE</name></type> <name>bs_num_noise</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>bs_df_env</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>bs_df_noise</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>bs_invf_mode</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>bs_add_harmonic</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>bs_amp_res</name></decl>;</decl_stmt>






<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>INTFLOAT</name></expr></argument>, <argument><expr><name>synthesis_filterbank_samples</name></expr></argument>)</argument_list></call><index>[<expr><name>SBR_SYNTHESIS_BUF_SIZE</name></expr>]</index></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>INTFLOAT</name></expr></argument>, <argument><expr><name>analysis_filterbank_samples</name></expr></argument>)</argument_list></call> <index>[<expr><literal type="number">1312</literal></expr>]</index></expr>;</expr_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>synthesis_filterbank_samples_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>e_a</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>INTFLOAT</name></type> <name><name>bw_array</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>INTFLOAT</name></type> <name><name>W</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">32</literal></expr>]</index><index>[<expr><literal type="number">32</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>Ypos</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>INTFLOAT</name></expr></argument>, <argument><expr><name>Y</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">38</literal></expr>]</index><index>[<expr><literal type="number">64</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>AAC_FLOAT</name></expr></argument>, <argument><expr><name>g_temp</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">42</literal></expr>]</index><index>[<expr><literal type="number">48</literal></expr>]</index></expr>;</expr_stmt>
<decl_stmt><decl><type><name>AAC_FLOAT</name></type> <name><name>q_temp</name><index>[<expr><literal type="number">42</literal></expr>]</index><index>[<expr><literal type="number">48</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>s_indexmapped</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">48</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>env_facs_q</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">48</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AAC_FLOAT</name></type> <name><name>env_facs</name><index>[<expr><literal type="number">6</literal></expr>]</index><index>[<expr><literal type="number">48</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>noise_facs_q</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AAC_FLOAT</name></type> <name><name>noise_facs</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>t_env</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>t_env_num_env_old</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>t_q</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>f_indexnoise</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>f_indexsine</name></decl>;</decl_stmt>

}</block></struct></type> <name>SBRData</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>SpectralBandReplication</name></name></type> <name>SpectralBandReplication</name>;</typedef>




<typedef>typedef <type><struct>struct <name>AACSBRContext</name> <block>{
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>sbr_lf_gen</name>)<parameter_list>(<parameter><decl><type><name>AACContext</name> <modifier>*</modifier></type><name>ac</name></decl></parameter>, <parameter><decl><type><name>SpectralBandReplication</name> <modifier>*</modifier></type><name>sbr</name></decl></parameter>,
<parameter><decl><type><name>INTFLOAT</name></type> <name><name>X_low</name><index>[<expr><literal type="number">32</literal></expr>]</index><index>[<expr><literal type="number">40</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>INTFLOAT</name></type> <name><name>W</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">32</literal></expr>]</index><index>[<expr><literal type="number">32</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>buf_idx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>sbr_hf_assemble</name>)<parameter_list>(<parameter><decl><type><name>INTFLOAT</name></type> <name><name>Y1</name><index>[<expr><literal type="number">38</literal></expr>]</index><index>[<expr><literal type="number">64</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>INTFLOAT</name></type> <name><name>X_high</name><index>[<expr><literal type="number">64</literal></expr>]</index><index>[<expr><literal type="number">40</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><name>SpectralBandReplication</name> <modifier>*</modifier></type><name>sbr</name></decl></parameter>, <parameter><decl><type><name>SBRData</name> <modifier>*</modifier></type><name>ch_data</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>e_a</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>sbr_x_gen</name>)<parameter_list>(<parameter><decl><type><name>SpectralBandReplication</name> <modifier>*</modifier></type><name>sbr</name></decl></parameter>, <parameter><decl><type><name>INTFLOAT</name></type> <name><name>X</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">38</literal></expr>]</index><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>INTFLOAT</name></type> <name><name>Y0</name><index>[<expr><literal type="number">38</literal></expr>]</index><index>[<expr><literal type="number">64</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>INTFLOAT</name></type> <name><name>Y1</name><index>[<expr><literal type="number">38</literal></expr>]</index><index>[<expr><literal type="number">64</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>INTFLOAT</name></type> <name><name>X_low</name><index>[<expr><literal type="number">32</literal></expr>]</index><index>[<expr><literal type="number">40</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ch</name></decl></parameter>)</parameter_list>;</function_decl>
<macro><name>void</name> <argument_list>(<argument>*sbr_hf_inverse_filter</argument>)</argument_list></macro><expr_stmt><expr><operator>(</operator><name>SBRDSPContext</name> <operator>*</operator><name>dsp</name><operator>,</operator>
<call><name>INTFLOAT</name> <argument_list>(<argument><expr><operator>*</operator><name>alpha0</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index><operator>,</operator> <call><name>INTFLOAT</name> <argument_list>(<argument><expr><operator>*</operator><name>alpha1</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index><operator>,</operator>
<specifier>const</specifier> <name>INTFLOAT</name> <name><name>X_low</name><index>[<expr><literal type="number">32</literal></expr>]</index><index>[<expr><literal type="number">40</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>,</operator> <name>int</name> <name>k0</name><operator>)</operator></expr>;</expr_stmt>
}</block></struct></type> <name>AACSBRContext</name>;</typedef>




<struct>struct <name>SpectralBandReplication</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>sample_rate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ready_for_dequant</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>id_aac</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>reset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpectrumParameters</name></type> <name>spectrum_params</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bs_amp_res_header</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>unsigned</name></type> <name>bs_limiter_bands</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>bs_limiter_gains</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>bs_interpol_freq</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>bs_smoothing_mode</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>bs_coupling</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AAC_SIGNE</name></type> <name><name>k</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>AAC_SIGNE</name></type> <name><name>kx</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AAC_SIGNE</name></type> <name><name>m</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>kx_and_m_pushed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AAC_SIGNE</name></type> <name>n_master</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SBRData</name></type> <name><name>data</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PSContext</name></type> <name>ps</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AAC_SIGNE</name></type> <name><name>n</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AAC_SIGNE</name></type> <name>n_q</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AAC_SIGNE</name></type> <name>n_lim</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>f_master</name><index>[<expr><literal type="number">49</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>f_tablelow</name><index>[<expr><literal type="number">25</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>f_tablehigh</name><index>[<expr><literal type="number">49</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>f_tablenoise</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>f_tablelim</name><index>[<expr><literal type="number">30</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AAC_SIGNE</name></type> <name>num_patches</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>patch_num_subbands</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>patch_start_subband</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>INTFLOAT</name></expr></argument>, <argument><expr><name>X_low</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">32</literal></expr>]</index><index>[<expr><literal type="number">40</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>INTFLOAT</name></expr></argument>, <argument><expr><name>X_high</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">64</literal></expr>]</index><index>[<expr><literal type="number">40</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>INTFLOAT</name></expr></argument>, <argument><expr><name>X</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">38</literal></expr>]</index><index>[<expr><literal type="number">64</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>INTFLOAT</name></expr></argument>, <argument><expr><name>alpha0</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">64</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>INTFLOAT</name></expr></argument>, <argument><expr><name>alpha1</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">64</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></expr>;</expr_stmt>

<decl_stmt><decl><type><name>AAC_FLOAT</name></type> <name><name>e_origmapped</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">48</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AAC_FLOAT</name></type> <name><name>q_mapped</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">48</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>s_mapped</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">48</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AAC_FLOAT</name></type> <name><name>e_curr</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">48</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AAC_FLOAT</name></type> <name><name>q_m</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">48</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AAC_FLOAT</name></type> <name><name>s_m</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">48</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AAC_FLOAT</name></type> <name><name>gain</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">48</literal></expr>]</index></name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>INTFLOAT</name></expr></argument>, <argument><expr><name>qmf_filter_scratch</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">5</literal></expr>]</index><index>[<expr><literal type="number">64</literal></expr>]</index></expr>;</expr_stmt>
<decl_stmt><decl><type><name>FFTContext</name></type> <name>mdct_ana</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>FFTContext</name></type> <name>mdct</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SBRDSPContext</name></type> <name>dsp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AACSBRContext</name></type> <name>c</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
