<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\asv.c">
























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"asv.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bswapdsp.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_asv_scantab</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0x19</literal></expr>,
<expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x0A</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x0B</literal></expr>, <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">0x1A</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0x1B</literal></expr>,
<expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0x0C</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x0D</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0x21</literal></expr>, <expr><literal type="number">0x29</literal></expr>,
<expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x0E</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x0F</literal></expr>, <expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0x1C</literal></expr>, <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">0x1D</literal></expr>,
<expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0x2A</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0x2B</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x39</literal></expr>,
<expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x1E</literal></expr>, <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">0x1F</literal></expr>, <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">0x2C</literal></expr>, <expr><literal type="number">0x25</literal></expr>, <expr><literal type="number">0x2D</literal></expr>,
<expr><literal type="number">0x32</literal></expr>, <expr><literal type="number">0x3A</literal></expr>, <expr><literal type="number">0x33</literal></expr>, <expr><literal type="number">0x3B</literal></expr>, <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">0x2E</literal></expr>, <expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">0x2F</literal></expr>,
<expr><literal type="number">0x34</literal></expr>, <expr><literal type="number">0x3C</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0x3D</literal></expr>, <expr><literal type="number">0x36</literal></expr>, <expr><literal type="number">0x3E</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x3F</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_asv_ccp_tab</name><index>[<expr><literal type="number">17</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="number">0x2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x7</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0xB</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x3</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xD</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x5</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x9</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x1</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xE</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x6</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0xA</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x2</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xC</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x4</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x8</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x3</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xF</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, 
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_asv_level_tab</name><index>[<expr><literal type="number">7</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_asv_dc_ccp_tab</name><index>[<expr><literal type="number">8</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="number">0x1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0xD</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0xF</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0xC</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x5</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0xE</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x4</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x0</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_asv_ac_ccp_tab</name><index>[<expr><literal type="number">16</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x3B</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x0A</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x3A</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x3C</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x3D</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x1F</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x0B</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x0D</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x0C</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>ff_asv2_level_tab</name><index>[<expr><literal type="number">63</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="number">0x3F</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x2F</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x3B</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x2B</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x33</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x3D</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x2D</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x25</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x29</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x21</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x17</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x1B</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x1D</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x15</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x19</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x0F</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x0B</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x0D</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x0C</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x0A</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x0E</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x10</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x18</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x1C</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x12</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x1A</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x1E</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x38</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x24</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x34</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x2C</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x3C</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x32</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x2A</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x3A</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x36</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x2E</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0x3E</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_asv_common_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ASV1Context</name> <modifier>*</modifier><specifier>const</specifier></type> <name>a</name> <init>= <expr><name><name>avctx</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ff_bswapdsp_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>a</name><operator>-&gt;</operator><name>bbdsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>mb_width</name></name> <operator>=</operator> <operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>width</name></name> <operator>+</operator> <literal type="number">15</literal><operator>)</operator> <operator>/</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>mb_height</name></name> <operator>=</operator> <operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>height</name></name> <operator>+</operator> <literal type="number">15</literal><operator>)</operator> <operator>/</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>mb_width2</name></name> <operator>=</operator> <operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>width</name></name> <operator>+</operator> <literal type="number">0</literal><operator>)</operator> <operator>/</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>mb_height2</name></name> <operator>=</operator> <operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>height</name></name> <operator>+</operator> <literal type="number">0</literal><operator>)</operator> <operator>/</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>a</name><operator>-&gt;</operator><name>avctx</name></name> <operator>=</operator> <name>avctx</name></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
