<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\h264_levels.c">

















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h264_levels.h"</cpp:file></cpp:include>


<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>H264LevelDescriptor</name></type> <name><name>h264_levels</name><index>[]</index></name> <init>= <expr><block>{



<expr><block>{ <expr><literal type="string">"1"</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1485</literal></expr>, <expr><literal type="number">99</literal></expr>, <expr><literal type="number">396</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">175</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"1b"</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1485</literal></expr>, <expr><literal type="number">99</literal></expr>, <expr><literal type="number">396</literal></expr>, <expr><literal type="number">128</literal></expr>, <expr><literal type="number">350</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"1b"</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1485</literal></expr>, <expr><literal type="number">99</literal></expr>, <expr><literal type="number">396</literal></expr>, <expr><literal type="number">128</literal></expr>, <expr><literal type="number">350</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"1.1"</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">3000</literal></expr>, <expr><literal type="number">396</literal></expr>, <expr><literal type="number">900</literal></expr>, <expr><literal type="number">192</literal></expr>, <expr><literal type="number">500</literal></expr>, <expr><literal type="number">128</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"1.2"</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6000</literal></expr>, <expr><literal type="number">396</literal></expr>, <expr><literal type="number">2376</literal></expr>, <expr><literal type="number">384</literal></expr>, <expr><literal type="number">1000</literal></expr>, <expr><literal type="number">128</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"1.3"</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">11880</literal></expr>, <expr><literal type="number">396</literal></expr>, <expr><literal type="number">2376</literal></expr>, <expr><literal type="number">768</literal></expr>, <expr><literal type="number">2000</literal></expr>, <expr><literal type="number">128</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"2"</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">11880</literal></expr>, <expr><literal type="number">396</literal></expr>, <expr><literal type="number">2376</literal></expr>, <expr><literal type="number">2000</literal></expr>, <expr><literal type="number">2000</literal></expr>, <expr><literal type="number">128</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"2.1"</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">19800</literal></expr>, <expr><literal type="number">792</literal></expr>, <expr><literal type="number">4752</literal></expr>, <expr><literal type="number">4000</literal></expr>, <expr><literal type="number">4000</literal></expr>, <expr><literal type="number">256</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"2.2"</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">20250</literal></expr>, <expr><literal type="number">1620</literal></expr>, <expr><literal type="number">8100</literal></expr>, <expr><literal type="number">4000</literal></expr>, <expr><literal type="number">4000</literal></expr>, <expr><literal type="number">256</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"3"</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">40500</literal></expr>, <expr><literal type="number">1620</literal></expr>, <expr><literal type="number">8100</literal></expr>, <expr><literal type="number">10000</literal></expr>, <expr><literal type="number">10000</literal></expr>, <expr><literal type="number">256</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"3.1"</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">108000</literal></expr>, <expr><literal type="number">3600</literal></expr>, <expr><literal type="number">18000</literal></expr>, <expr><literal type="number">14000</literal></expr>, <expr><literal type="number">14000</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"3.2"</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">216000</literal></expr>, <expr><literal type="number">5120</literal></expr>, <expr><literal type="number">20480</literal></expr>, <expr><literal type="number">20000</literal></expr>, <expr><literal type="number">20000</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"4"</literal></expr>, <expr><literal type="number">40</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">245760</literal></expr>, <expr><literal type="number">8192</literal></expr>, <expr><literal type="number">32768</literal></expr>, <expr><literal type="number">20000</literal></expr>, <expr><literal type="number">25000</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"4.1"</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">245760</literal></expr>, <expr><literal type="number">8192</literal></expr>, <expr><literal type="number">32768</literal></expr>, <expr><literal type="number">50000</literal></expr>, <expr><literal type="number">62500</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"4.2"</literal></expr>, <expr><literal type="number">42</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">522240</literal></expr>, <expr><literal type="number">8704</literal></expr>, <expr><literal type="number">34816</literal></expr>, <expr><literal type="number">50000</literal></expr>, <expr><literal type="number">62500</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"5"</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">589824</literal></expr>, <expr><literal type="number">22080</literal></expr>, <expr><literal type="number">110400</literal></expr>, <expr><literal type="number">135000</literal></expr>, <expr><literal type="number">135000</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"5.1"</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">983040</literal></expr>, <expr><literal type="number">36864</literal></expr>, <expr><literal type="number">184320</literal></expr>, <expr><literal type="number">240000</literal></expr>, <expr><literal type="number">240000</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"5.2"</literal></expr>, <expr><literal type="number">52</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2073600</literal></expr>, <expr><literal type="number">36864</literal></expr>, <expr><literal type="number">184320</literal></expr>, <expr><literal type="number">240000</literal></expr>, <expr><literal type="number">240000</literal></expr>, <expr><literal type="number">512</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"6"</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4177920</literal></expr>, <expr><literal type="number">139264</literal></expr>, <expr><literal type="number">696320</literal></expr>, <expr><literal type="number">240000</literal></expr>, <expr><literal type="number">240000</literal></expr>, <expr><literal type="number">8192</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"6.1"</literal></expr>, <expr><literal type="number">61</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">8355840</literal></expr>, <expr><literal type="number">139264</literal></expr>, <expr><literal type="number">696320</literal></expr>, <expr><literal type="number">480000</literal></expr>, <expr><literal type="number">480000</literal></expr>, <expr><literal type="number">8192</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"6.2"</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16711680</literal></expr>, <expr><literal type="number">139264</literal></expr>, <expr><literal type="number">696320</literal></expr>, <expr><literal type="number">800000</literal></expr>, <expr><literal type="number">800000</literal></expr>, <expr><literal type="number">8192</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>


<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>profile_idc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cpb_br_vcl_factor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cpb_br_nal_factor</name></decl>;</decl_stmt>
}</block> <decl><name><name>h264_br_factors</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="number">66</literal></expr>, <expr><literal type="number">1000</literal></expr>, <expr><literal type="number">1200</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">77</literal></expr>, <expr><literal type="number">1000</literal></expr>, <expr><literal type="number">1200</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">88</literal></expr>, <expr><literal type="number">1000</literal></expr>, <expr><literal type="number">1200</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">100</literal></expr>, <expr><literal type="number">1250</literal></expr>, <expr><literal type="number">1500</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">110</literal></expr>, <expr><literal type="number">3000</literal></expr>, <expr><literal type="number">3600</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">122</literal></expr>, <expr><literal type="number">4000</literal></expr>, <expr><literal type="number">4800</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">244</literal></expr>, <expr><literal type="number">4000</literal></expr>, <expr><literal type="number">4800</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">44</literal></expr>, <expr><literal type="number">4000</literal></expr>, <expr><literal type="number">4800</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</struct>


<function><type><specifier>static</specifier> <name>int</name></type> <name>h264_get_br_factor</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>profile_idc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>h264_br_factors</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>h264_br_factors</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>profile_idc</name> <operator>==</operator> <name>profile_idc</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name><name>h264_br_factors</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>cpb_br_nal_factor</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>

<return>return <expr><literal type="number">1200</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>H264LevelDescriptor</name> <modifier>*</modifier></type><name>ff_h264_get_level</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>level_idc</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>constraint_set3_flag</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>h264_levels</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>h264_levels</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>level_idc</name> <operator>==</operator> <name>level_idc</name> <operator>&amp;&amp;</operator>
<name><name>h264_levels</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>constraint_set3_flag</name> <operator>==</operator> <name>constraint_set3_flag</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>&amp;</operator><name><name>h264_levels</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>H264LevelDescriptor</name> <modifier>*</modifier></type><name>ff_h264_guess_level</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>profile_idc</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name></type> <name>bitrate</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>framerate</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>max_dec_frame_buffering</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>width_mbs</name> <init>= <expr><operator>(</operator><name>width</name> <operator>+</operator> <literal type="number">15</literal><operator>)</operator> <operator>/</operator> <literal type="number">16</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>height_mbs</name> <init>= <expr><operator>(</operator><name>height</name> <operator>+</operator> <literal type="number">15</literal><operator>)</operator> <operator>/</operator> <literal type="number">16</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>no_cs3f</name> <init>= <expr><operator>!</operator><operator>(</operator><name>profile_idc</name> <operator>==</operator> <literal type="number">66</literal> <operator>||</operator>
<name>profile_idc</name> <operator>==</operator> <literal type="number">77</literal> <operator>||</operator>
<name>profile_idc</name> <operator>==</operator> <literal type="number">88</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>FF_ARRAY_ELEMS</name><argument_list>(<argument><expr><name>h264_levels</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>H264LevelDescriptor</name> <modifier>*</modifier></type><name>level</name> <init>= <expr><operator>&amp;</operator><name><name>h264_levels</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>level</name><operator>-&gt;</operator><name>constraint_set3_flag</name></name> <operator>&amp;&amp;</operator> <name>no_cs3f</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>bitrate</name> <operator>&gt;</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>level</name><operator>-&gt;</operator><name>max_br</name></name> <operator>*</operator> <call><name>h264_get_br_factor</name><argument_list>(<argument><expr><name>profile_idc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>width_mbs</name> <operator>*</operator> <name>height_mbs</name> <operator>&gt;</operator> <name><name>level</name><operator>-&gt;</operator><name>max_fs</name></name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>width_mbs</name> <operator>*</operator> <name>width_mbs</name> <operator>&gt;</operator> <literal type="number">8</literal> <operator>*</operator> <name><name>level</name><operator>-&gt;</operator><name>max_fs</name></name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>height_mbs</name> <operator>*</operator> <name>height_mbs</name> <operator>&gt;</operator> <literal type="number">8</literal> <operator>*</operator> <name><name>level</name><operator>-&gt;</operator><name>max_fs</name></name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>width_mbs</name> <operator>&amp;&amp;</operator> <name>height_mbs</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>max_dpb_frames</name> <init>=
<expr><call><name>FFMIN</name><argument_list>(<argument><expr><name><name>level</name><operator>-&gt;</operator><name>max_dpb_mbs</name></name> <operator>/</operator> <operator>(</operator><name>width_mbs</name> <operator>*</operator> <name>height_mbs</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>max_dec_frame_buffering</name> <operator>&gt;</operator> <name>max_dpb_frames</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>framerate</name> <operator>&gt;</operator> <operator>(</operator><name><name>level</name><operator>-&gt;</operator><name>max_mbps</name></name> <operator>/</operator> <operator>(</operator><name>width_mbs</name> <operator>*</operator> <name>height_mbs</name><operator>)</operator><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>level</name></expr>;</return>
</block_content>}</block></for>


<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>
</unit>
