<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mediacodec_surface.c">





















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;jni.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ffjni.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mediacodec_surface.h"</cpp:file></cpp:include>

<function><type><name>FFANativeWindow</name> <modifier>*</modifier></type><name>ff_mediacodec_surface_ref</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>surface</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>JNIEnv</name> <modifier>*</modifier></type><name>env</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>env</name> <operator>=</operator> <call><name>ff_jni_get_env</name><argument_list>(<argument><expr><name>log_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>env</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><call><name><operator>(</operator><operator>*</operator><name>env</name><operator>)</operator><operator>-&gt;</operator><name>NewGlobalRef</name></name><argument_list>(<argument><expr><name>env</name></expr></argument>, <argument><expr><name>surface</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>ff_mediacodec_surface_unref</name><parameter_list>(<parameter><decl><type><name>FFANativeWindow</name> <modifier>*</modifier></type><name>window</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>JNIEnv</name> <modifier>*</modifier></type><name>env</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>env</name> <operator>=</operator> <call><name>ff_jni_get_env</name><argument_list>(<argument><expr><name>log_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>env</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>AVERROR_EXTERNAL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name><operator>(</operator><operator>*</operator><name>env</name><operator>)</operator><operator>-&gt;</operator><name>DeleteGlobalRef</name></name><argument_list>(<argument><expr><name>env</name></expr></argument>, <argument><expr><name>window</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
