<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\sbrdsp.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_SBRDSP_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_SBRDSP_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"aac_defines.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/softfloat.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>SBRDSPContext</name> <block>{
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>sum64x5</name>)<parameter_list>(<parameter><decl><type><name>INTFLOAT</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>;</function_decl>
<macro><name>AAC_FLOAT</name> <argument_list>(<argument>*sum_square</argument>)</argument_list></macro><expr_stmt><expr><operator>(</operator><call><name>INTFLOAT</name> <argument_list>(<argument><expr><operator>*</operator><name>x</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index><operator>,</operator> <name>int</name> <name>n</name><operator>)</operator></expr>;</expr_stmt>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>neg_odd_64</name>)<parameter_list>(<parameter><decl><type><name>INTFLOAT</name> <modifier>*</modifier></type><name>x</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>qmf_pre_shuffle</name>)<parameter_list>(<parameter><decl><type><name>INTFLOAT</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>qmf_post_shuffle</name>)<parameter_list>(<parameter><decl><type><name>INTFLOAT</name></type> <name><name>W</name><index>[<expr><literal type="number">32</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>INTFLOAT</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>qmf_deint_neg</name>)<parameter_list>(<parameter><decl><type><name>INTFLOAT</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>INTFLOAT</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>qmf_deint_bfly</name>)<parameter_list>(<parameter><decl><type><name>INTFLOAT</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>INTFLOAT</name> <modifier>*</modifier></type><name>src0</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>INTFLOAT</name> <modifier>*</modifier></type><name>src1</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>autocorrelate</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>INTFLOAT</name></type> <name><name>x</name><index>[<expr><literal type="number">40</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>AAC_FLOAT</name></type> <name><name>phi</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>
<macro><name>void</name> <argument_list>(<argument>*hf_gen</argument>)</argument_list></macro><expr_stmt><expr><operator>(</operator><call><name>INTFLOAT</name> <argument_list>(<argument><expr><operator>*</operator><name>X_high</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index><operator>,</operator> <specifier>const</specifier> <call><name>INTFLOAT</name> <argument_list>(<argument><expr><operator>*</operator><name>X_low</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index><operator>,</operator>
<specifier>const</specifier> <name>INTFLOAT</name> <name><name>alpha0</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>,</operator> <specifier>const</specifier> <name>INTFLOAT</name> <name><name>alpha1</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>,</operator>
<name>INTFLOAT</name> <name>bw</name><operator>,</operator> <name>int</name> <name>start</name><operator>,</operator> <name>int</name> <name>end</name><operator>)</operator></expr>;</expr_stmt>
<macro><name>void</name> <argument_list>(<argument>*hf_g_filt</argument>)</argument_list></macro><expr_stmt><expr><operator>(</operator><call><name>INTFLOAT</name> <argument_list>(<argument><expr><operator>*</operator><name>Y</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index><operator>,</operator> <specifier>const</specifier> <call><name>INTFLOAT</name> <argument_list>(<argument><expr><operator>*</operator><name>X_high</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">40</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><operator>,</operator>
<specifier>const</specifier> <name>AAC_FLOAT</name> <operator>*</operator><name>g_filt</name><operator>,</operator> <name>int</name> <name>m_max</name><operator>,</operator> <name>intptr_t</name> <name>ixh</name><operator>)</operator></expr>;</expr_stmt>
<macro><name>void</name> <argument_list>(<argument>*hf_apply_noise[<literal type="number">4</literal>]</argument>)</argument_list></macro><expr_stmt><expr><operator>(</operator><call><name>INTFLOAT</name> <argument_list>(<argument><expr><operator>*</operator><name>Y</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">2</literal></expr>]</index><operator>,</operator> <specifier>const</specifier> <name>AAC_FLOAT</name> <operator>*</operator><name>s_m</name><operator>,</operator>
<specifier>const</specifier> <name>AAC_FLOAT</name> <operator>*</operator><name>q_filt</name><operator>,</operator> <name>int</name> <name>noise</name><operator>,</operator>
<name>int</name> <name>kx</name><operator>,</operator> <name>int</name> <name>m_max</name><operator>)</operator></expr>;</expr_stmt>
}</block></struct></type> <name>SBRDSPContext</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>INTFLOAT</name></type> <name>AAC_RENAME</name><argument_list>(<argument><expr><name>ff_sbr_noise_table</name></expr></argument>)</argument_list>[][2]</decl>;</decl_stmt>

<function_decl><type><name>void</name> <name>AAC_RENAME</name></type>(<name>ff_sbrdsp_init</name>)<parameter_list>(<parameter><decl><type><name>SBRDSPContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_sbrdsp_init_arm</name><parameter_list>(<parameter><decl><type><name>SBRDSPContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_sbrdsp_init_aarch64</name><parameter_list>(<parameter><decl><type><name>SBRDSPContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_sbrdsp_init_x86</name><parameter_list>(<parameter><decl><type><name>SBRDSPContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_sbrdsp_init_mips</name><parameter_list>(<parameter><decl><type><name>SBRDSPContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
