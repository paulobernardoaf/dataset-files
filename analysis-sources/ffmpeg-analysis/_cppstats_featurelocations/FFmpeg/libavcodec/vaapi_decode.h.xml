<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\vaapi_decode.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_VAAPI_DECODE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_VAAPI_DECODE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;va/va.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/frame.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/hwcontext.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/hwcontext_vaapi.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"version.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_STRUCT_VAAPI_CONTEXT</name></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vaapi.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>VASurfaceID</name></type> <name>ff_vaapi_get_surface_id</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>uintptr_t</name><operator>)</operator><name><name>pic</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

<enum>enum <block>{
<decl><name>MAX_PARAM_BUFFERS</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,
}</block>;</enum>

<typedef>typedef <type><struct>struct <name>VAAPIDecodePicture</name> <block>{
<decl_stmt><decl><type><name>VASurfaceID</name></type> <name>output_surface</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_param_buffers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VABufferID</name></type> <name><name>param_buffers</name><index>[<expr><name>MAX_PARAM_BUFFERS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_slices</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VABufferID</name> <modifier>*</modifier></type><name>slice_buffers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>slices_allocated</name></decl>;</decl_stmt>
}</block></struct></type> <name>VAAPIDecodePicture</name>;</typedef>

<typedef>typedef <type><struct>struct <name>VAAPIDecodeContext</name> <block>{
<decl_stmt><decl><type><name>VAConfigID</name></type> <name>va_config</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VAContextID</name></type> <name>va_context</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_STRUCT_VAAPI_CONTEXT</name></expr></cpp:if>
<decl_stmt><decl><type><name>FF_DISABLE_DEPRECATION_WARNINGS</name>
<name>int</name></type> <name>have_old_context</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>vaapi_context</name></name> <modifier>*</modifier></type><name>old_context</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>device_ref</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>FF_ENABLE_DEPRECATION_WARNINGS</name>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<name>AVHWDeviceContext</name> <modifier>*</modifier></type><name>device</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVVAAPIDeviceContext</name> <modifier>*</modifier></type><name>hwctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVHWFramesContext</name> <modifier>*</modifier></type><name>frames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVVAAPIFramesContext</name> <modifier>*</modifier></type><name>hwfc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>surface_format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>surface_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VASurfaceAttrib</name></type> <name>pixel_format_attribute</name></decl>;</decl_stmt>
}</block></struct></type> <name>VAAPIDecodeContext</name>;</typedef>


<function_decl><type><name>int</name></type> <name>ff_vaapi_decode_make_param_buffer</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,
<parameter><decl><type><name>VAAPIDecodePicture</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_vaapi_decode_make_slice_buffer</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,
<parameter><decl><type><name>VAAPIDecodePicture</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>params_data</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>params_size</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>slice_data</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>slice_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_vaapi_decode_issue</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,
<parameter><decl><type><name>VAAPIDecodePicture</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_vaapi_decode_cancel</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,
<parameter><decl><type><name>VAAPIDecodePicture</name> <modifier>*</modifier></type><name>pic</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_vaapi_decode_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_vaapi_decode_uninit</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_vaapi_common_frame_params</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,
<parameter><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>hw_frames_ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
