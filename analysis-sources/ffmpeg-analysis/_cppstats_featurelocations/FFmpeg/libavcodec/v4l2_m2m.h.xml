<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\v4l2_m2m.h">






















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_V4L2_M2M_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_V4L2_M2M_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;semaphore.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dirent.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;linux/videodev2.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"v4l2_context.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>container_of</name><parameter_list>(<parameter><type><name>ptr</name></type></parameter>, <parameter><type><name>type</name></type></parameter>, <parameter><type><name>member</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>({ const __typeof__(((type *)0)-&gt;member ) *__mptr = (ptr); (type *)((char *)__mptr - offsetof(type,member) );})</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>V4L_M2M_DEFAULT_OPTS</name></cpp:macro> <cpp:value>{ "num_output_buffers", "Number of buffers in the output context",OFFSET(num_output_buffers), AV_OPT_TYPE_INT, { .i64 = 16 }, 6, INT_MAX, FLAGS }</cpp:value></cpp:define>



<typedef>typedef <type><struct>struct <name>V4L2m2mContext</name> <block>{
<decl_stmt><decl><type><name>char</name></type> <name><name>devname</name><index>[<expr><name>PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>fd</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>V4L2Context</name></type> <name>capture</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>V4L2Context</name></type> <name>output</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sem_t</name></type> <name>refsync</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>atomic_uint</name></type> <name>refcount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>reinit</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>draining</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVPacket</name></type> <name>buf_pkt</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>self_ref</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl>;</decl_stmt>
}</block></struct></type> <name>V4L2m2mContext</name>;</typedef>

<typedef>typedef <type><struct>struct <name>V4L2m2mPriv</name> <block>{
<decl_stmt><decl><type><name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>V4L2m2mContext</name> <modifier>*</modifier></type><name>context</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>context_ref</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_output_buffers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>num_capture_buffers</name></decl>;</decl_stmt>
}</block></struct></type> <name>V4L2m2mPriv</name>;</typedef>









<function_decl><type><name>int</name></type> <name>ff_v4l2_m2m_create_context</name><parameter_list>(<parameter><decl><type><name>V4L2m2mPriv</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>, <parameter><decl><type><name>V4L2m2mContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>ff_v4l2_m2m_codec_init</name><parameter_list>(<parameter><decl><type><name>V4L2m2mPriv</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>ff_v4l2_m2m_codec_end</name><parameter_list>(<parameter><decl><type><name>V4L2m2mPriv</name> <modifier>*</modifier></type><name>priv</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>ff_v4l2_m2m_codec_reinit</name><parameter_list>(<parameter><decl><type><name>V4L2m2mContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>ff_v4l2_m2m_codec_full_reinit</name><parameter_list>(<parameter><decl><type><name>V4L2m2mContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
