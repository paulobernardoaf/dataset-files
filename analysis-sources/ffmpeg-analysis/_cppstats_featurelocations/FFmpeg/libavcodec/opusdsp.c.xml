<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\opusdsp.c">

















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"opusdsp.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>void</name></type> <name>postfilter_c</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>period</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>gains</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>float</name></type> <name>g0</name> <init>= <expr><name><name>gains</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>float</name></type> <name>g1</name> <init>= <expr><name><name>gains</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>float</name></type> <name>g2</name> <init>= <expr><name><name>gains</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>x4</name> <init>= <expr><name><name>data</name><index>[<expr><operator>-</operator><name>period</name> <operator>-</operator> <literal type="number">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>x3</name> <init>= <expr><name><name>data</name><index>[<expr><operator>-</operator><name>period</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>x2</name> <init>= <expr><name><name>data</name><index>[<expr><operator>-</operator><name>period</name> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>x1</name> <init>= <expr><name><name>data</name><index>[<expr><operator>-</operator><name>period</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>len</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>float</name></type> <name>x0</name> <init>= <expr><name><name>data</name><index>[<expr><name>i</name> <operator>-</operator> <name>period</name> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>data</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+=</operator> <name>g0</name> <operator>*</operator> <name>x2</name> <operator>+</operator>
<name>g1</name> <operator>*</operator> <operator>(</operator><name>x1</name> <operator>+</operator> <name>x3</name><operator>)</operator> <operator>+</operator>
<name>g2</name> <operator>*</operator> <operator>(</operator><name>x0</name> <operator>+</operator> <name>x4</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>x4</name> <operator>=</operator> <name>x3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>x3</name> <operator>=</operator> <name>x2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>x2</name> <operator>=</operator> <name>x1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>x1</name> <operator>=</operator> <name>x0</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>float</name></type> <name>deemphasis_c</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>coeff</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>len</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name>coeff</name> <operator>=</operator> <name><name>y</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>x</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <name>coeff</name><operator>*</operator><name>CELT_EMPH_COEFF</name></expr>;</expr_stmt></block_content></block></for>

<return>return <expr><name>coeff</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_opus_dsp_init</name><parameter_list>(<parameter><decl><type><name>OpusDSP</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>postfilter</name></name> <operator>=</operator> <name>postfilter_c</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx</name><operator>-&gt;</operator><name>deemphasis</name></name> <operator>=</operator> <name>deemphasis_c</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ARCH_X86</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_opus_dsp_init_x86</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>ARCH_AARCH64</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_opus_dsp_init_aarch64</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>
</unit>
