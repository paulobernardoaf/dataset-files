<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\ttadsp.c">

















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ttadsp.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>void</name></type> <name>tta_filter_process_c</name><parameter_list>(<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>qm</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>dx</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>dl</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>error</name></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>shift</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>round</name></decl></parameter>)</parameter_list> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>*</operator><name>error</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>-=</operator> <name><name>dx</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>-=</operator> <name><name>dx</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>-=</operator> <name><name>dx</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>-=</operator> <name><name>dx</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>-=</operator> <name><name>dx</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>-=</operator> <name><name>dx</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>-=</operator> <name><name>dx</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>-=</operator> <name><name>dx</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>*</operator><name>error</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+=</operator> <name><name>dx</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+=</operator> <name><name>dx</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+=</operator> <name><name>dx</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>+=</operator> <name><name>dx</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>+=</operator> <name><name>dx</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>+=</operator> <name><name>dx</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>+=</operator> <name><name>dx</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>qm</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>+=</operator> <name><name>dx</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>round</name> <operator>+=</operator> <name><name>dl</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>*</operator> <name><name>qm</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name><name>dl</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>*</operator> <name><name>qm</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name><name>dl</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>*</operator> <name><name>qm</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+</operator> <name><name>dl</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>*</operator> <name><name>qm</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>+</operator>
<name><name>dl</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>*</operator> <name><name>qm</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>+</operator> <name><name>dl</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>*</operator> <name><name>qm</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>+</operator> <name><name>dl</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>*</operator> <name><name>qm</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>+</operator> <name><name>dl</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>*</operator> <name><name>qm</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dx</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>dx</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>dx</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>dx</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>dx</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>dx</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>dx</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>dx</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dl</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>dl</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>dl</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>dl</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>dl</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>dl</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>dl</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>dl</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dx</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>dl</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">30</literal><operator>)</operator> <operator>|</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dx</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>dl</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">30</literal><operator>)</operator> <operator>|</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dx</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>dl</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">30</literal><operator>)</operator> <operator>|</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dx</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><name><name>dl</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <literal type="number">30</literal><operator>)</operator> <operator>|</operator> <literal type="number">4</literal><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>error</name> <operator>=</operator> <operator>*</operator><name>in</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>in</name> <operator>+=</operator> <operator>(</operator><name>round</name> <operator>&gt;&gt;</operator> <name>shift</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dl</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <operator>-</operator><name><name>dl</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>dl</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <operator>-</operator><name><name>dl</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dl</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <operator>*</operator><name>in</name> <operator>-</operator> <name><name>dl</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>dl</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <operator>*</operator><name>in</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dl</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>+=</operator> <name><name>dl</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt><expr><name><name>dl</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>+=</operator> <name><name>dl</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_ttadsp_init</name><parameter_list>(<parameter><decl><type><name>TTADSPContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>filter_process</name></name> <operator>=</operator> <name>tta_filter_process_c</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ARCH_X86</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_ttadsp_init_x86</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>
</unit>
