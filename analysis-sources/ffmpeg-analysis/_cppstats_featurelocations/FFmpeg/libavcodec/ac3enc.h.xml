<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\ac3enc.h">


























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_AC3ENC_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_AC3ENC_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/float_dsp.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ac3.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ac3dsp.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fft.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mathops.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"me_cmp.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"put_bits.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"audiodsp.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CONFIG_AC3ENC_FLOAT</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CONFIG_AC3ENC_FLOAT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OFFSET</name><parameter_list>(<parameter><type><name>param</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>offsetof(AC3EncodeContext, options.param)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_PARAM</name></cpp:macro> <cpp:value>(AV_OPT_FLAG_AUDIO_PARAM | AV_OPT_FLAG_ENCODING_PARAM)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_TYPE_AC3_FIXED</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_TYPE_AC3</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_TYPE_EAC3</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_AC3ENC_FLOAT</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3_NAME</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ff_ac3_float_ ##x</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAC_COEF</name><parameter_list>(<parameter><type><name>d</name></type></parameter>,<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((d)+=(a)*(b))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COEF_MIN</name></cpp:macro> <cpp:value>(-16777215.0/16777216.0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COEF_MAX</name></cpp:macro> <cpp:value>( 16777215.0/16777216.0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NEW_CPL_COORD_THRESHOLD</name></cpp:macro> <cpp:value>0.03</cpp:value></cpp:define>
<typedef>typedef <type><name>float</name></type> <name>SampleType</name>;</typedef>
<typedef>typedef <type><name>float</name></type> <name>CoefType</name>;</typedef>
<typedef>typedef <type><name>float</name></type> <name>CoefSumType</name>;</typedef>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3_NAME</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ff_ac3_fixed_ ##x</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAC_COEF</name><parameter_list>(<parameter><type><name>d</name></type></parameter>,<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>MAC64(d,a,b)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COEF_MIN</name></cpp:macro> <cpp:value>-16777215</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COEF_MAX</name></cpp:macro> <cpp:value>16777215</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NEW_CPL_COORD_THRESHOLD</name></cpp:macro> <cpp:value>503317</cpp:value></cpp:define>
<typedef>typedef <type><name>int16_t</name></type> <name>SampleType</name>;</typedef>
<typedef>typedef <type><name>int32_t</name></type> <name>CoefType</name>;</typedef>
<typedef>typedef <type><name>int64_t</name></type> <name>CoefSumType</name>;</typedef>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_NONE</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_AUTO</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_OFF</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_ON</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_NOT_INDICATED</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_MODE_ON</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_MODE_OFF</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_DSUREX_DPLIIZ</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_LARGE_ROOM</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_SMALL_ROOM</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_DOWNMIX_LTRT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_DOWNMIX_LORO</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_DOWNMIX_DPLII</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_ADCONV_STANDARD</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AC3ENC_OPT_ADCONV_HDCD</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>





<typedef>typedef <type><struct>struct <name>AC3EncOptions</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>dialogue_level</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bitstream_mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>center_mix_level</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>surround_mix_level</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dolby_surround_mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>audio_production_info</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>mixing_level</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>room_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>copyright</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>original</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>extended_bsi_1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>preferred_stereo_downmix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>ltrt_center_mix_level</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>ltrt_surround_mix_level</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>loro_center_mix_level</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>loro_surround_mix_level</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>extended_bsi_2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dolby_surround_ex_mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dolby_headphone_mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ad_converter_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>eac3_mixing_metadata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>eac3_info_metadata</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>allow_per_frame_metadata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>stereo_rematrixing</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>channel_coupling</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cpl_start</name></decl>;</decl_stmt>
}</block></struct></type> <name>AC3EncOptions</name>;</typedef>




<typedef>typedef <type><struct>struct <name>AC3Block</name> <block>{
<decl_stmt><decl><type><name>CoefType</name> <modifier>*</modifier><modifier>*</modifier></type><name>mdct_coef</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int32_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>fixed_coef</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>exp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>grouped_exp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>psd</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>band_psd</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>mask</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint16_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>qmant</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>cpl_coord_exp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>cpl_coord_mant</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>coeff_shift</name><index>[<expr><name>AC3_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name>new_rematrixing_strategy</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_rematrixing_bands</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>rematrixing_flags</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>new_cpl_strategy</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>cpl_in_use</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>channel_in_cpl</name><index>[<expr><name>AC3_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_cpl_channels</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>new_cpl_coords</name><index>[<expr><name>AC3_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>cpl_master_exp</name><index>[<expr><name>AC3_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>new_snr_offsets</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>new_cpl_leak</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name><name>end_freq</name><index>[<expr><name>AC3_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
}</block></struct></type> <name>AC3Block</name>;</typedef>




<typedef>typedef <type><struct>struct <name>AC3EncodeContext</name> <block>{
<decl_stmt><decl><type><name>AVClass</name> <modifier>*</modifier></type><name>av_class</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AC3EncOptions</name></type> <name>options</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>PutBitContext</name></type> <name>pb</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AudioDSPContext</name></type> <name>adsp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFloatDSPContext</name> <modifier>*</modifier></type><name>fdsp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MECmpContext</name></type> <name>mecc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AC3DSPContext</name></type> <name>ac3dsp</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>FFTContext</name></type> <name>mdct</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>SampleType</name> <modifier>*</modifier></type><name>mdct_window</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AC3Block</name></type> <name><name>blocks</name><index>[<expr><name>AC3_MAX_BLOCKS</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>fixed_point</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>eac3</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>bitstream_id</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>bitstream_mode</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>bit_rate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>sample_rate</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>num_blks_code</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_blocks</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>frame_size_min</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>frame_size</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>frame_size_code</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>crc_inv</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>bits_written</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int64_t</name></type> <name>samples_written</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>fbw_channels</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>channels</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>lfe_on</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>lfe_channel</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>has_center</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>has_surround</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>channel_mode</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>channel_map</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>center_mix_level</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>surround_mix_level</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>ltrt_center_mix_level</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>ltrt_surround_mix_level</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>loro_center_mix_level</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>loro_surround_mix_level</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>cutoff</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>bandwidth_code</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name><name>start_freq</name><index>[<expr><name>AC3_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>cpl_end_freq</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>cpl_on</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>cpl_enabled</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_cpl_subbands</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_cpl_bands</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>cpl_band_sizes</name><index>[<expr><name>AC3_MAX_CPL_BANDS</name></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>rematrixing_enabled</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>int</name></type> <name>slow_gain_code</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>slow_decay_code</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>fast_decay_code</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>db_per_bit_code</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>floor_code</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AC3BitAllocParameters</name></type> <name>bit_alloc</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>coarse_snr_offset</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name><name>fast_gain_code</name><index>[<expr><name>AC3_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name><name>fine_snr_offset</name><index>[<expr><name>AC3_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>frame_bits_fixed</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>frame_bits</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>exponent_bits</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>SampleType</name> <modifier>*</modifier></type><name>windowed_samples</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SampleType</name> <modifier>*</modifier><modifier>*</modifier></type><name>planar_samples</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>bap_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>bap1_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CoefType</name> <modifier>*</modifier></type><name>mdct_coef_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>fixed_coef_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>exp_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>grouped_exp_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>psd_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>band_psd_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>mask_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>qmant_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>cpl_coord_exp_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>cpl_coord_mant_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>exp_strategy</name><index>[<expr><name>AC3_MAX_CHANNELS</name></expr>]</index><index>[<expr><name>AC3_MAX_BLOCKS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>frame_exp_strategy</name><index>[<expr><name>AC3_MAX_CHANNELS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>use_frame_exp_strategy</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>exp_ref_block</name><index>[<expr><name>AC3_MAX_CHANNELS</name></expr>]</index><index>[<expr><name>AC3_MAX_BLOCKS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name><name>ref_bap</name> <index>[<expr><name>AC3_MAX_CHANNELS</name></expr>]</index><index>[<expr><name>AC3_MAX_BLOCKS</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>ref_bap_set</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>warned_alternate_bitstream</name></decl>;</decl_stmt>


<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>mdct_end</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AC3EncodeContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>mdct_init</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AC3EncodeContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>allocate_sample_buffers</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AC3EncodeContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>output_frame_header</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AC3EncodeContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>AC3EncodeContext</name>;</typedef>


<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>uint64_t</name></type> <name><name>ff_ac3_channel_layouts</name><index>[<expr><literal type="number">19</literal></expr>]</index></name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> <name>ff_ac3_encode_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_ac3_float_encode_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_ac3_encode_close</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_ac3_validate_metadata</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ac3_adjust_frame_size</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ac3_compute_coupling_strategy</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ac3_apply_rematrixing</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ac3_process_exponents</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_ac3_compute_bit_allocation</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ac3_group_exponents</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ac3_quantize_mantissas</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ac3_output_frame</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ff_ac3_fixed_mdct_end</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_ac3_float_mdct_end</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_ac3_fixed_mdct_init</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_ac3_float_mdct_init</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>ff_ac3_fixed_allocate_sample_buffers</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_ac3_float_allocate_sample_buffers</name><parameter_list>(<parameter><decl><type><name>AC3EncodeContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_ac3_fixed_encode_frame</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>avpkt</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>got_packet_ptr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_ac3_float_encode_frame</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>avpkt</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>got_packet_ptr</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
