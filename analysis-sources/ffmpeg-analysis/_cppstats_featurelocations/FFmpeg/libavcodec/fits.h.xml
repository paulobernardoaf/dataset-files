<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\fits.h">




















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_FITS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_FITS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;inttypes.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/dict.h"</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <name>FITSHeaderState</name> <block>{
<decl><name>STATE_SIMPLE</name></decl>,
<decl><name>STATE_XTENSION</name></decl>,
<decl><name>STATE_BITPIX</name></decl>,
<decl><name>STATE_NAXIS</name></decl>,
<decl><name>STATE_NAXIS_N</name></decl>,
<decl><name>STATE_PCOUNT</name></decl>,
<decl><name>STATE_GCOUNT</name></decl>,
<decl><name>STATE_REST</name></decl>,
}</block></enum></type> <name>FITSHeaderState</name>;</typedef>




<typedef>typedef <type><struct>struct <name>FITSHeader</name> <block>{
<decl_stmt><decl><type><name>FITSHeaderState</name></type> <name>state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>naxis_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bitpix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>blank</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>blank_found</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>naxis</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>naxisn</name><index>[<expr><literal type="number">999</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pcount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>gcount</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>groups</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>rgb</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>image_extension</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>bscale</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>bzero</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>data_min_found</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>data_min</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>data_max_found</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>data_max</name></decl>;</decl_stmt>
}</block></struct></type> <name>FITSHeader</name>;</typedef>








<function_decl><type><name>int</name></type> <name>avpriv_fits_header_init</name><parameter_list>(<parameter><decl><type><name>FITSHeader</name> <modifier>*</modifier></type><name>header</name></decl></parameter>, <parameter><decl><type><name>FITSHeaderState</name></type> <name>state</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>avpriv_fits_header_parse_line</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>avcl</name></decl></parameter>, <parameter><decl><type><name>FITSHeader</name> <modifier>*</modifier></type><name>header</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>line</name><index>[<expr><literal type="number">80</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier><modifier>*</modifier></type><name>metadata</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
