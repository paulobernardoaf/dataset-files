<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mpeg4video.c">





















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpegutils.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpegvideo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpeg4video.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpeg4data.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>ff_mpeg4_static_rl_table_store</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal> <operator>*</operator> <name>MAX_RUN</name> <operator>+</operator> <name>MAX_LEVEL</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>ff_mpeg4_get_video_packet_prefix_length</name><parameter_list>(<parameter><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>pict_type</name></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>AV_PICTURE_TYPE_I</name></expr>:</case>
<return>return <expr><literal type="number">16</literal></expr>;</return>
<case>case <expr><name>AV_PICTURE_TYPE_P</name></expr>:</case>
<case>case <expr><name>AV_PICTURE_TYPE_S</name></expr>:</case>
<return>return <expr><name><name>s</name><operator>-&gt;</operator><name>f_code</name></name> <operator>+</operator> <literal type="number">15</literal></expr>;</return>
<case>case <expr><name>AV_PICTURE_TYPE_B</name></expr>:</case>
<return>return <expr><call><name>FFMAX3</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>f_code</name></name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>b_code</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">15</literal></expr>;</return>
<default>default:</default>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_mpeg4_clean_buffers</name><parameter_list>(<parameter><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>c_wrap</name></decl>, <decl><type ref="prev"/><name>c_xy</name></decl>, <decl><type ref="prev"/><name>l_wrap</name></decl>, <decl><type ref="prev"/><name>l_xy</name></decl>;</decl_stmt>

<expr_stmt><expr><name>l_wrap</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>b8_stride</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_xy</name> <operator>=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <name>l_wrap</name> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>*</operator> <literal type="number">2</literal> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>c_wrap</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_stride</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>c_xy</name> <operator>=</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <name>c_wrap</name> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>


<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>ac_val</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name>l_xy</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>l_wrap</name> <operator>*</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>ac_val</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name>c_xy</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>c_wrap</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>ac_val</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+</operator> <name>c_xy</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>c_wrap</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <literal type="number">16</literal> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>last_mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator>
<name><name>s</name><operator>-&gt;</operator><name>last_mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator>
<name><name>s</name><operator>-&gt;</operator><name>last_mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator>
<name><name>s</name><operator>-&gt;</operator><name>last_mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tab_size</name></cpp:macro> <cpp:value>((signed)FF_ARRAY_ELEMS(s-&gt;direct_scale_mv[0]))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tab_bias</name></cpp:macro> <cpp:value>(tab_size / 2)</cpp:value></cpp:define>


<function><type><name>void</name></type> <name>ff_mpeg4_init_direct_mv</name><parameter_list>(<parameter><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>tab_size</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>direct_scale_mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>i</name> <operator>-</operator> <name>tab_bias</name><operator>)</operator> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>pb_time</name></name> <operator>/</operator> <name><name>s</name><operator>-&gt;</operator><name>pp_time</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>direct_scale_mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>i</name> <operator>-</operator> <name>tab_bias</name><operator>)</operator> <operator>*</operator> <operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>pb_time</name></name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>pp_time</name></name><operator>)</operator> <operator>/</operator>
<name><name>s</name><operator>-&gt;</operator><name>pp_time</name></name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>ff_mpeg4_set_one_direct_mv</name><parameter_list>(<parameter><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>xy</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>block_index</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>time_pp</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>pp_time</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>time_pb</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>pb_time</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>p_mx</name></decl>, <decl><type ref="prev"/><name>p_my</name></decl>;</decl_stmt>

<expr_stmt><expr><name>p_mx</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>motion_val</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>xy</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>unsigned</name><operator>)</operator><operator>(</operator><name>p_mx</name> <operator>+</operator> <name>tab_bias</name><operator>)</operator> <operator>&lt;</operator> <name>tab_size</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>direct_scale_mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>p_mx</name> <operator>+</operator> <name>tab_bias</name></expr>]</index></name> <operator>+</operator> <name>mx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name>mx</name></expr> ?</condition><then> <expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>-</operator> <name>p_mx</name></expr>
</then><else>: <expr><name><name>s</name><operator>-&gt;</operator><name>direct_scale_mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>p_mx</name> <operator>+</operator> <name>tab_bias</name></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>p_mx</name> <operator>*</operator> <name>time_pb</name> <operator>/</operator> <name>time_pp</name> <operator>+</operator> <name>mx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name>mx</name></expr> ?</condition><then> <expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>-</operator> <name>p_mx</name></expr>
</then><else>: <expr><name>p_mx</name> <operator>*</operator> <operator>(</operator><name>time_pb</name> <operator>-</operator> <name>time_pp</name><operator>)</operator> <operator>/</operator> <name>time_pp</name></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>p_my</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>motion_val</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>xy</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>unsigned</name><operator>)</operator><operator>(</operator><name>p_my</name> <operator>+</operator> <name>tab_bias</name><operator>)</operator> <operator>&lt;</operator> <name>tab_size</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>direct_scale_mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>p_my</name> <operator>+</operator> <name>tab_bias</name></expr>]</index></name> <operator>+</operator> <name>my</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name>my</name></expr> ?</condition><then> <expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>-</operator> <name>p_my</name></expr>
</then><else>: <expr><name><name>s</name><operator>-&gt;</operator><name>direct_scale_mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>p_my</name> <operator>+</operator> <name>tab_bias</name></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>p_my</name> <operator>*</operator> <name>time_pb</name> <operator>/</operator> <name>time_pp</name> <operator>+</operator> <name>my</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name>my</name></expr> ?</condition><then> <expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>-</operator> <name>p_my</name></expr>
</then><else>: <expr><name>p_my</name> <operator>*</operator> <operator>(</operator><name>time_pb</name> <operator>-</operator> <name>time_pp</name><operator>)</operator> <operator>/</operator> <name>time_pp</name></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>tab_size</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>tab_bias</name></cpp:undef>




<function><type><name>int</name></type> <name>ff_mpeg4_set_direct_mv</name><parameter_list>(<parameter><decl><type><name>MpegEncContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>mb_index</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>mb_x</name></name> <operator>+</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_y</name></name> <operator>*</operator> <name><name>s</name><operator>-&gt;</operator><name>mb_stride</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>colocated_mb_type</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>mb_type</name><index>[<expr><name>mb_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>time_pp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>time_pb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>




<if_stmt><if>if <condition>(<expr><call><name>IS_8X8</name><argument_list>(<argument><expr><name>colocated_mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv_type</name></name> <operator>=</operator> <name>MV_TYPE_8X8</name></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_mpeg4_set_one_direct_mv</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>, <argument><expr><name>my</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<return>return <expr><name>MB_TYPE_DIRECT2</name> <operator>|</operator> <name>MB_TYPE_8x8</name> <operator>|</operator> <name>MB_TYPE_L0L1</name></expr>;</return>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>IS_INTERLACED</name><argument_list>(<argument><expr><name>colocated_mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv_type</name></name> <operator>=</operator> <name>MV_TYPE_FIELD</name></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>field_select</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>next_picture</name><operator>.</operator><name>ref_index</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">4</literal> <operator>*</operator> <name>mb_index</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>field_select</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>field_select</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>field_select</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>top_field_first</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>time_pp</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>pp_field_time</name></name> <operator>-</operator> <name>field_select</name> <operator>+</operator> <name>i</name></expr>;</expr_stmt>
<expr_stmt><expr><name>time_pb</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>pb_field_time</name></name> <operator>-</operator> <name>field_select</name> <operator>+</operator> <name>i</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>time_pp</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>pp_field_time</name></name> <operator>+</operator> <name>field_select</name> <operator>-</operator> <name>i</name></expr>;</expr_stmt>
<expr_stmt><expr><name>time_pb</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>pb_field_time</name></name> <operator>+</operator> <name>field_select</name> <operator>-</operator> <name>i</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>p_field_mv_table</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>mb_index</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>*</operator>
<name>time_pb</name> <operator>/</operator> <name>time_pp</name> <operator>+</operator> <name>mx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>p_field_mv_table</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>mb_index</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>*</operator>
<name>time_pb</name> <operator>/</operator> <name>time_pp</name> <operator>+</operator> <name>my</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name>mx</name></expr> ?</condition><then> <expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>-</operator>
<name><name>s</name><operator>-&gt;</operator><name>p_field_mv_table</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>mb_index</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>
</then><else>: <expr><name><name>s</name><operator>-&gt;</operator><name>p_field_mv_table</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>mb_index</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>*</operator>
<operator>(</operator><name>time_pb</name> <operator>-</operator> <name>time_pp</name><operator>)</operator> <operator>/</operator> <name>time_pp</name></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name>my</name></expr> ?</condition><then> <expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>-</operator>
<name><name>s</name><operator>-&gt;</operator><name>p_field_mv_table</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>mb_index</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>
</then><else>: <expr><name><name>s</name><operator>-&gt;</operator><name>p_field_mv_table</name><index>[<expr><name>i</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>mb_index</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>*</operator>
<operator>(</operator><name>time_pb</name> <operator>-</operator> <name>time_pp</name><operator>)</operator> <operator>/</operator> <name>time_pp</name></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></for>
<return>return <expr><name>MB_TYPE_DIRECT2</name> <operator>|</operator> <name>MB_TYPE_16x8</name> <operator>|</operator>
<name>MB_TYPE_L0L1</name> <operator>|</operator> <name>MB_TYPE_INTERLACED</name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ff_mpeg4_set_one_direct_mv</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>, <argument><expr><name>my</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator>
<name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator>
<name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator>
<name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator>
<name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator>
<name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator>
<name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator>
<name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator>
<name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>mv</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>s</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>workaround_bugs</name></name> <operator>&amp;</operator> <name>FF_BUG_DIRECT_BLOCKSIZE</name><operator>)</operator> <operator>||</operator>
<operator>!</operator><name><name>s</name><operator>-&gt;</operator><name>quarter_sample</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv_type</name></name> <operator>=</operator> <name>MV_TYPE_16X16</name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>mv_type</name></name> <operator>=</operator> <name>MV_TYPE_8X8</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<return>return <expr><name>MB_TYPE_DIRECT2</name> <operator>|</operator> <name>MB_TYPE_16x16</name> <operator>|</operator> <name>MB_TYPE_L0L1</name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>
</unit>
