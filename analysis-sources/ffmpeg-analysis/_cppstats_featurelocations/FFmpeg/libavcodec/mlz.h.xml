<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mlz.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_MLZ_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_MLZ_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"get_bits.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CODE_UNSET</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CODE_BIT_INIT</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIC_INDEX_INIT</name></cpp:macro> <cpp:value>512</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIC_INDEX_MAX</name></cpp:macro> <cpp:value>32768</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FLUSH_CODE</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FREEZE_CODE</name></cpp:macro> <cpp:value>257</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FIRST_CODE</name></cpp:macro> <cpp:value>258</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_CODE</name></cpp:macro> <cpp:value>32767</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TABLE_SIZE</name></cpp:macro> <cpp:value>35023</cpp:value></cpp:define> 



<typedef>typedef <type><struct>struct <name>MLZDict</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>string_code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>parent_code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>char_code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>match_len</name></decl>;</decl_stmt>
}</block></struct></type> <name>MLZDict</name>;</typedef>



<typedef>typedef <type><struct>struct <name>MLZ</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>dic_code_bit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>current_dic_index_max</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>bump_code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>flush_code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>next_code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>freeze_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>MLZDict</name><modifier>*</modifier></type> <name>dict</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>context</name></decl>;</decl_stmt>
}</block></struct></type> <name>MLZ</name>;</typedef>



<function_decl><type><name>void</name></type> <name>ff_mlz_init_dict</name><parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>context</name></decl></parameter>, <parameter><decl><type><name>MLZ</name> <modifier>*</modifier></type><name>mlz</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>void</name></type> <name>ff_mlz_flush_dict</name><parameter_list>(<parameter><decl><type><name>MLZ</name> <modifier>*</modifier></type><name>dict</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>int</name></type> <name>ff_mlz_decompression</name><parameter_list>(<parameter><decl><type><name>MLZ</name><modifier>*</modifier></type> <name>mlz</name></decl></parameter>, <parameter><decl><type><name>GetBitContext</name><modifier>*</modifier></type> <name>gb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>buff</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
