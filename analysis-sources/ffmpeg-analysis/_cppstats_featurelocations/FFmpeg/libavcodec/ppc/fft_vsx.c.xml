<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\ppc\fft_vsx.c">
























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/cpu.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/ppc/util_altivec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/fft.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/fft-internal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fft_vsx.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_VSX</name></expr></cpp:if>

<function><type><specifier>static</specifier> <name>void</name></type> <name>fft32_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft16_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft8_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft8_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_32</name></expr></argument>,<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>fft64_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft32_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft16_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft16_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_64</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft128_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft64_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft32_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft32_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">96</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_128</name></expr></argument>,<argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft256_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft128_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft64_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft64_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">192</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_256</name></expr></argument>,<argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft512_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft256_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft128_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft128_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">384</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_512</name></expr></argument>,<argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft1024_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft512_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft256_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft256_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">768</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_1024</name></expr></argument>,<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft2048_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft1024_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft512_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft512_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">1536</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_2048</name></expr></argument>,<argument><expr><literal type="number">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft4096_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft2048_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft1024_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">2048</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft1024_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">3072</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_4096</name></expr></argument>, <argument><expr><literal type="number">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft8192_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft4096_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft2048_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft2048_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">6144</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_8192</name></expr></argument>,<argument><expr><literal type="number">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft16384_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft8192_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft4096_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">8192</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft4096_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">12288</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_16384</name></expr></argument>,<argument><expr><literal type="number">2048</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft32768_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft16384_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft8192_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">16384</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft8192_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">24576</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_32768</name></expr></argument>,<argument><expr><literal type="number">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft65536_vsx_interleave</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft32768_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft16384_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">32768</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft16384_vsx_interleave</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">49152</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx_interleave</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_65536</name></expr></argument>,<argument><expr><literal type="number">8192</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>fft32_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft16_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft8_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft8_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_32</name></expr></argument>,<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>fft64_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft32_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft16_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft16_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_64</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft128_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft64_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft32_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft32_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">96</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_128</name></expr></argument>,<argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft256_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft128_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft64_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft64_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">192</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_256</name></expr></argument>,<argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft512_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft256_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft128_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft128_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">384</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_512</name></expr></argument>,<argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft1024_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft512_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft256_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft256_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">768</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_1024</name></expr></argument>,<argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft2048_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft1024_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft512_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft512_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">1536</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_2048</name></expr></argument>,<argument><expr><literal type="number">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft4096_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft2048_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft1024_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">2048</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft1024_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">3072</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_4096</name></expr></argument>, <argument><expr><literal type="number">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft8192_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft4096_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft2048_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft2048_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">6144</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_8192</name></expr></argument>,<argument><expr><literal type="number">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft16384_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft8192_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft4096_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">8192</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft4096_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">12288</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_16384</name></expr></argument>,<argument><expr><literal type="number">2048</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft32768_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft16384_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft8192_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">16384</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft8192_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">24576</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_32768</name></expr></argument>,<argument><expr><literal type="number">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>void</name></type> <name>fft65536_vsx</name><parameter_list>(<parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>fft32768_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft16384_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">32768</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fft16384_vsx</name><argument_list>(<argument><expr><name>z</name><operator>+</operator><literal type="number">49152</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>pass_vsx</name><argument_list>(<argument><expr><name>z</name></expr></argument>,<argument><expr><name>ff_cos_65536</name></expr></argument>,<argument><expr><literal type="number">8192</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<expr_stmt><expr><specifier>static</specifier> <call><call><name>void</name> <argument_list>(<argument><expr><operator>*</operator> <specifier>const</specifier> <name><name>fft_dispatch_vsx</name><index>[]</index></name></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>FFTComplex</name><operator>*</operator></expr></argument>)</argument_list></call> <operator>=</operator> <block>{
<expr><name>fft4_vsx</name></expr>, <expr><name>fft8_vsx</name></expr>, <expr><name>fft16_vsx</name></expr>, <expr><name>fft32_vsx</name></expr>, <expr><name>fft64_vsx</name></expr>, <expr><name>fft128_vsx</name></expr>, <expr><name>fft256_vsx</name></expr>, <expr><name>fft512_vsx</name></expr>, <expr><name>fft1024_vsx</name></expr>,
<expr><name>fft2048_vsx</name></expr>, <expr><name>fft4096_vsx</name></expr>, <expr><name>fft8192_vsx</name></expr>, <expr><name>fft16384_vsx</name></expr>, <expr><name>fft32768_vsx</name></expr>, <expr><name>fft65536_vsx</name></expr>,
}</block></expr>;</expr_stmt>
<expr_stmt><expr><specifier>static</specifier> <call><call><name>void</name> <argument_list>(<argument><expr><operator>*</operator> <specifier>const</specifier> <name><name>fft_dispatch_vsx_interleave</name><index>[]</index></name></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>FFTComplex</name><operator>*</operator></expr></argument>)</argument_list></call> <operator>=</operator> <block>{
<expr><name>fft4_vsx_interleave</name></expr>, <expr><name>fft8_vsx_interleave</name></expr>, <expr><name>fft16_vsx_interleave</name></expr>, <expr><name>fft32_vsx_interleave</name></expr>, <expr><name>fft64_vsx_interleave</name></expr>,
<expr><name>fft128_vsx_interleave</name></expr>, <expr><name>fft256_vsx_interleave</name></expr>, <expr><name>fft512_vsx_interleave</name></expr>, <expr><name>fft1024_vsx_interleave</name></expr>,
<expr><name>fft2048_vsx_interleave</name></expr>, <expr><name>fft4096_vsx_interleave</name></expr>, <expr><name>fft8192_vsx_interleave</name></expr>, <expr><name>fft16384_vsx_interleave</name></expr>, <expr><name>fft32768_vsx_interleave</name></expr>, <expr><name>fft65536_vsx_interleave</name></expr>,
}</block></expr>;</expr_stmt>
<function><type><name>void</name></type> <name>ff_fft_calc_interleave_vsx</name><parameter_list>(<parameter><decl><type><name>FFTContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>fft_dispatch_vsx_interleave</name><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>nbits</name></name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>(</operator><name>z</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><name>void</name></type> <name>ff_fft_calc_vsx</name><parameter_list>(<parameter><decl><type><name>FFTContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>FFTComplex</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>fft_dispatch_vsx</name><index>[<expr><name><name>s</name><operator>-&gt;</operator><name>nbits</name></name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>(</operator><name>z</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
