<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\ppc\hevcdsp_template.c">



















<decl_stmt><decl><type><specifier>static</specifier> <name>void</name></type> <name>FUNC</name><argument_list>(<argument><expr><name>ff_hevc_idct_4x4</name></expr></argument>, <argument><expr><name>BIT_DEPTH</name></expr></argument>)</argument_list><argument_list>(<argument><expr><name>int16_t</name> <operator>*</operator><name>coeffs</name></expr></argument>, <argument><expr><name>int</name> <name>col_limit</name></expr></argument>)</argument_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>shift</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>shift2</name> <init>= <expr><literal type="number">20</literal> <operator>-</operator> <name>BIT_DEPTH</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vec_s16</name></type> <name>src_01</name></decl>, <decl><type ref="prev"/><name>src_23</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vec_s32</name></type> <name><name>res</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>vec_s16</name></type> <name><name>res_packed</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><name>src_01</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>coeffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_23</name> <operator>=</operator> <call><name>vec_ld</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>coeffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>transform4x4</name><argument_list>(<argument><expr><name>src_01</name></expr></argument>, <argument><expr><name>src_23</name></expr></argument>, <argument><expr><name>res</name></expr></argument>, <argument><expr><name>shift</name></expr></argument>, <argument><expr><name>coeffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_01</name> <operator>=</operator> <call><name>vec_packs</name><argument_list>(<argument><expr><name><name>res</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>res</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_23</name> <operator>=</operator> <call><name>vec_packs</name><argument_list>(<argument><expr><name><name>res</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>res</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>scale</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>res_packed</name></expr></argument>, <argument><expr><name>shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_01</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name><name>res_packed</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>res_packed</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>mask</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_23</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name><name>res_packed</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>res_packed</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>mask</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>transform4x4</name><argument_list>(<argument><expr><name>src_01</name></expr></argument>, <argument><expr><name>src_23</name></expr></argument>, <argument><expr><name>res</name></expr></argument>, <argument><expr><name>shift2</name></expr></argument>, <argument><expr><name>coeffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>scale</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>res_packed</name></expr></argument>, <argument><expr><name>shift2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_01</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name><name>res_packed</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>res_packed</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>mask</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_23</name> <operator>=</operator> <call><name>vec_perm</name><argument_list>(<argument><expr><name><name>res_packed</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>res_packed</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>mask</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>src_01</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>coeffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>vec_st</name><argument_list>(<argument><expr><name>src_23</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>coeffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt>
</unit>
