<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\synth_filter.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fft.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dcadct.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dcamath.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"synth_filter.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>void</name></type> <name>synth_filter_float</name><parameter_list>(<parameter><decl><type><name>FFTContext</name> <modifier>*</modifier></type><name>imdct</name></decl></parameter>,
<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>synth_buf_ptr</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>synth_buf_offset</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name><name>synth_buf2</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name></type> <name><name>window</name><index>[<expr><literal type="number">512</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name><name>out</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name></type> <name><name>in</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>scale</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>float</name> <modifier>*</modifier></type><name>synth_buf</name> <init>= <expr><name>synth_buf_ptr</name> <operator>+</operator> <operator>*</operator><name>synth_buf_offset</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name><name>imdct</name><operator>-&gt;</operator><name>imdct_half</name></name><argument_list>(<argument><expr><name>imdct</name></expr></argument>, <argument><expr><name>synth_buf</name></expr></argument>, <argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>float</name></type> <name>a</name> <init>= <expr><name><name>synth_buf2</name><index>[<expr><name>i</name></expr> ]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>b</name> <init>= <expr><name><name>synth_buf2</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">16</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>c</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>d</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">512</literal> <operator>-</operator> <operator>*</operator><name>synth_buf_offset</name></expr>;</condition> <incr><expr><name>j</name> <operator>+=</operator> <literal type="number">64</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>a</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name> <operator>*</operator> <operator>(</operator><operator>-</operator><name><name>synth_buf</name><index>[<expr><literal type="number">15</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>b</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">16</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator> <name><name>synth_buf</name><index>[ <expr><name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>c</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">16</literal> <operator>+</operator> <name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>d</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">48</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">31</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
<for>for <control>( <init>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">512</literal></expr>;</condition> <incr><expr><name>j</name> <operator>+=</operator> <literal type="number">64</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>a</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name> <operator>*</operator> <operator>(</operator><operator>-</operator><name><name>synth_buf</name><index>[<expr><literal type="number">15</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">512</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>b</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">16</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator> <name><name>synth_buf</name><index>[ <expr><name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">512</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>c</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">16</literal> <operator>+</operator> <name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">512</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>d</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">48</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">31</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">512</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name><name>out</name><index>[<expr><name>i</name></expr> ]</index></name> <operator>=</operator> <name>a</name> <operator>*</operator> <name>scale</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>out</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">16</literal></expr>]</index></name> <operator>=</operator> <name>b</name> <operator>*</operator> <name>scale</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>synth_buf2</name><index>[<expr><name>i</name></expr> ]</index></name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>synth_buf2</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">16</literal></expr>]</index></name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><operator>*</operator><name>synth_buf_offset</name> <operator>=</operator> <operator>(</operator><operator>*</operator><name>synth_buf_offset</name> <operator>-</operator> <literal type="number">32</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">511</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>synth_filter_float_64</name><parameter_list>(<parameter><decl><type><name>FFTContext</name> <modifier>*</modifier></type><name>imdct</name></decl></parameter>,
<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>synth_buf_ptr</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>synth_buf_offset</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name><name>synth_buf2</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name></type> <name><name>window</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name><name>out</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name></type> <name><name>in</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>scale</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>float</name> <modifier>*</modifier></type><name>synth_buf</name> <init>= <expr><name>synth_buf_ptr</name> <operator>+</operator> <operator>*</operator><name>synth_buf_offset</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name><name>imdct</name><operator>-&gt;</operator><name>imdct_half</name></name><argument_list>(<argument><expr><name>imdct</name></expr></argument>, <argument><expr><name>synth_buf</name></expr></argument>, <argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">32</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>float</name></type> <name>a</name> <init>= <expr><name><name>synth_buf2</name><index>[<expr><name>i</name></expr> ]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>b</name> <init>= <expr><name><name>synth_buf2</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>c</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>d</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">1024</literal> <operator>-</operator> <operator>*</operator><name>synth_buf_offset</name></expr>;</condition> <incr><expr><name>j</name> <operator>+=</operator> <literal type="number">128</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>a</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name> <operator>*</operator> <operator>(</operator><operator>-</operator><name><name>synth_buf</name><index>[<expr><literal type="number">31</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>b</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator> <name><name>synth_buf</name><index>[ <expr><name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>c</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">64</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">32</literal> <operator>+</operator> <name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>d</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">96</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">63</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
<for>for <control>( <init>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">1024</literal></expr>;</condition> <incr><expr><name>j</name> <operator>+=</operator> <literal type="number">128</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>a</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name> <operator>*</operator> <operator>(</operator><operator>-</operator><name><name>synth_buf</name><index>[<expr><literal type="number">31</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">1024</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>b</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator> <name><name>synth_buf</name><index>[ <expr><name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">1024</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>c</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">64</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">32</literal> <operator>+</operator> <name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">1024</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>d</name> <operator>+=</operator> <name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">96</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">63</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">1024</literal></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name><name>out</name><index>[<expr><name>i</name></expr> ]</index></name> <operator>=</operator> <name>a</name> <operator>*</operator> <name>scale</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>out</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name> <operator>=</operator> <name>b</name> <operator>*</operator> <name>scale</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>synth_buf2</name><index>[<expr><name>i</name></expr> ]</index></name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>synth_buf2</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><operator>*</operator><name>synth_buf_offset</name> <operator>=</operator> <operator>(</operator><operator>*</operator><name>synth_buf_offset</name> <operator>-</operator> <literal type="number">64</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">1023</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>synth_filter_fixed</name><parameter_list>(<parameter><decl><type><name>DCADCTContext</name> <modifier>*</modifier></type><name>imdct</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>synth_buf_ptr</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>synth_buf_offset</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name><name>synth_buf2</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name><name>window</name><index>[<expr><literal type="number">512</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name><name>out</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name><name>in</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>synth_buf</name> <init>= <expr><name>synth_buf_ptr</name> <operator>+</operator> <operator>*</operator><name>synth_buf_offset</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>imdct</name><operator>-&gt;</operator><name>imdct_half</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>(</operator><name>synth_buf</name><operator>,</operator> <name>in</name><operator>)</operator></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int64_t</name></type> <name>a</name> <init>= <expr><name><name>synth_buf2</name><index>[<expr><name>i</name></expr> ]</index></name> <operator>*</operator> <operator>(</operator><call><name>INT64_C</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>b</name> <init>= <expr><name><name>synth_buf2</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">16</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator><call><name>INT64_C</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>c</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>d</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">512</literal> <operator>-</operator> <operator>*</operator><name>synth_buf_offset</name></expr>;</condition> <incr><expr><name>j</name> <operator>+=</operator> <literal type="number">64</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>a</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[ <expr><name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>b</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">16</literal></expr>]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">15</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>c</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">16</literal> <operator>+</operator> <name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>d</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">48</literal></expr>]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">31</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>
<for>for <control>( <init>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">512</literal></expr>;</condition> <incr><expr><name>j</name> <operator>+=</operator> <literal type="number">64</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>a</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[ <expr><name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">512</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>b</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">16</literal></expr>]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">15</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">512</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>c</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">16</literal> <operator>+</operator> <name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">512</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>d</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">48</literal></expr>]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">31</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">512</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name><name>out</name><index>[<expr><name>i</name></expr> ]</index></name> <operator>=</operator> <call><name>clip23</name><argument_list>(<argument><expr><call><name>norm21</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>out</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">16</literal></expr>]</index></name> <operator>=</operator> <call><name>clip23</name><argument_list>(<argument><expr><call><name>norm21</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>synth_buf2</name><index>[<expr><name>i</name></expr> ]</index></name> <operator>=</operator> <call><name>norm21</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>synth_buf2</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">16</literal></expr>]</index></name> <operator>=</operator> <call><name>norm21</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><operator>*</operator><name>synth_buf_offset</name> <operator>=</operator> <operator>(</operator><operator>*</operator><name>synth_buf_offset</name> <operator>-</operator> <literal type="number">32</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">511</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>synth_filter_fixed_64</name><parameter_list>(<parameter><decl><type><name>DCADCTContext</name> <modifier>*</modifier></type><name>imdct</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>synth_buf_ptr</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>synth_buf_offset</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name><name>synth_buf2</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name><name>window</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name><name>out</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name><name>in</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name> <modifier>*</modifier></type><name>synth_buf</name> <init>= <expr><name>synth_buf_ptr</name> <operator>+</operator> <operator>*</operator><name>synth_buf_offset</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>imdct</name><operator>-&gt;</operator><name>imdct_half</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>(</operator><name>synth_buf</name><operator>,</operator> <name>in</name><operator>)</operator></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">32</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int64_t</name></type> <name>a</name> <init>= <expr><name><name>synth_buf2</name><index>[<expr><name>i</name></expr> ]</index></name> <operator>*</operator> <operator>(</operator><call><name>INT64_C</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>&lt;&lt;</operator> <literal type="number">20</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>b</name> <init>= <expr><name><name>synth_buf2</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name> <operator>*</operator> <operator>(</operator><call><name>INT64_C</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>&lt;&lt;</operator> <literal type="number">20</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>c</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>d</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">1024</literal> <operator>-</operator> <operator>*</operator><name>synth_buf_offset</name></expr>;</condition> <incr><expr><name>j</name> <operator>+=</operator> <literal type="number">128</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>a</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[ <expr><name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>b</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">31</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>c</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">64</literal></expr>]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">32</literal> <operator>+</operator> <name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>d</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">96</literal></expr>]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">63</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>
<for>for <control>( <init>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <literal type="number">1024</literal></expr>;</condition> <incr><expr><name>j</name> <operator>+=</operator> <literal type="number">128</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>a</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name></expr> ]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[ <expr><name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">1024</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>b</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">31</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">1024</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>c</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">64</literal></expr>]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">32</literal> <operator>+</operator> <name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">1024</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>d</name> <operator>+=</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name><name>window</name><index>[<expr><name>i</name> <operator>+</operator> <name>j</name> <operator>+</operator> <literal type="number">96</literal></expr>]</index></name> <operator>*</operator> <name><name>synth_buf</name><index>[<expr><literal type="number">63</literal> <operator>-</operator> <name>i</name> <operator>+</operator> <name>j</name> <operator>-</operator> <literal type="number">1024</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name><name>out</name><index>[<expr><name>i</name></expr> ]</index></name> <operator>=</operator> <call><name>clip23</name><argument_list>(<argument><expr><call><name>norm20</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>out</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name> <operator>=</operator> <call><name>clip23</name><argument_list>(<argument><expr><call><name>norm20</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>synth_buf2</name><index>[<expr><name>i</name></expr> ]</index></name> <operator>=</operator> <call><name>norm20</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>synth_buf2</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">32</literal></expr>]</index></name> <operator>=</operator> <call><name>norm20</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><operator>*</operator><name>synth_buf_offset</name> <operator>=</operator> <operator>(</operator><operator>*</operator><name>synth_buf_offset</name> <operator>-</operator> <literal type="number">64</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">1023</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_synth_filter_init</name><parameter_list>(<parameter><decl><type><name>SynthFilterContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>synth_filter_float</name></name> <operator>=</operator> <name>synth_filter_float</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>synth_filter_float_64</name></name> <operator>=</operator> <name>synth_filter_float_64</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>synth_filter_fixed</name></name> <operator>=</operator> <name>synth_filter_fixed</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>synth_filter_fixed_64</name></name> <operator>=</operator> <name>synth_filter_fixed_64</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ARCH_AARCH64</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_synth_filter_init_aarch64</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_ARM</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_synth_filter_init_arm</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>ARCH_X86</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_synth_filter_init_x86</name><argument_list>(<argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>
</unit>
