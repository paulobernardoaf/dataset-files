<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\cavsdec.c">


























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/avassert.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"get_bits.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"golomb.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cavs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpeg12data.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>mv_scan</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{
<expr><name>MV_FWD_X0</name></expr>, <expr><name>MV_FWD_X1</name></expr>,
<expr><name>MV_FWD_X2</name></expr>, <expr><name>MV_FWD_X3</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>cbp_tab</name><index>[<expr><literal type="number">64</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="number">63</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">31</literal></expr>, <expr><literal type="number">63</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">47</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">14</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">13</literal></expr>, <expr><literal type="number">47</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">11</literal></expr>, <expr><literal type="number">13</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">14</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">11</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">10</literal></expr>, <expr><literal type="number">12</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">5</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">61</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">48</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">55</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">59</literal></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">62</literal></expr>, <expr><literal type="number">61</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">55</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">59</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">29</literal></expr>, <expr><literal type="number">62</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">45</literal></expr>, <expr><literal type="number">29</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">51</literal></expr>, <expr><literal type="number">27</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">23</literal></expr>, <expr><literal type="number">23</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">39</literal></expr>, <expr><literal type="number">19</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">27</literal></expr>, <expr><literal type="number">30</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">46</literal></expr>, <expr><literal type="number">28</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">53</literal></expr>, <expr><literal type="number">9</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">30</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">43</literal></expr>, <expr><literal type="number">60</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">37</literal></expr>, <expr><literal type="number">21</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">60</literal></expr>, <expr><literal type="number">44</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">26</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">21</literal></expr>, <expr><literal type="number">51</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">28</literal></expr>, <expr><literal type="number">35</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">19</literal></expr>, <expr><literal type="number">18</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">35</literal></expr>, <expr><literal type="number">20</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">42</literal></expr>, <expr><literal type="number">24</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">26</literal></expr>, <expr><literal type="number">53</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">44</literal></expr>, <expr><literal type="number">17</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">32</literal></expr>, <expr><literal type="number">37</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">58</literal></expr>, <expr><literal type="number">39</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">24</literal></expr>, <expr><literal type="number">45</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">20</literal></expr>, <expr><literal type="number">58</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">17</literal></expr>, <expr><literal type="number">43</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">18</literal></expr>, <expr><literal type="number">42</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">48</literal></expr>, <expr><literal type="number">46</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">22</literal></expr>, <expr><literal type="number">36</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">33</literal></expr>, <expr><literal type="number">33</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">25</literal></expr>, <expr><literal type="number">34</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">49</literal></expr>, <expr><literal type="number">40</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">40</literal></expr>, <expr><literal type="number">52</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">36</literal></expr>, <expr><literal type="number">49</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">34</literal></expr>, <expr><literal type="number">50</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">50</literal></expr>, <expr><literal type="number">56</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">52</literal></expr>, <expr><literal type="number">25</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">54</literal></expr>, <expr><literal type="number">22</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">41</literal></expr>, <expr><literal type="number">54</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">56</literal></expr>, <expr><literal type="number">57</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">38</literal></expr>, <expr><literal type="number">41</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">57</literal></expr>, <expr><literal type="number">38</literal></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>scan3x3</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>dequant_shift</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">14</literal></expr>,
<expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">13</literal></expr>,
<expr><literal type="number">13</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>,
<expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>,
<expr><literal type="number">11</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>,
<expr><literal type="number">10</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>,
<expr><literal type="number">9</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,
<expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>dequant_mul</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">32768</literal></expr>, <expr><literal type="number">36061</literal></expr>, <expr><literal type="number">38968</literal></expr>, <expr><literal type="number">42495</literal></expr>, <expr><literal type="number">46341</literal></expr>, <expr><literal type="number">50535</literal></expr>, <expr><literal type="number">55437</literal></expr>, <expr><literal type="number">60424</literal></expr>,
<expr><literal type="number">32932</literal></expr>, <expr><literal type="number">35734</literal></expr>, <expr><literal type="number">38968</literal></expr>, <expr><literal type="number">42495</literal></expr>, <expr><literal type="number">46177</literal></expr>, <expr><literal type="number">50535</literal></expr>, <expr><literal type="number">55109</literal></expr>, <expr><literal type="number">59933</literal></expr>,
<expr><literal type="number">65535</literal></expr>, <expr><literal type="number">35734</literal></expr>, <expr><literal type="number">38968</literal></expr>, <expr><literal type="number">42577</literal></expr>, <expr><literal type="number">46341</literal></expr>, <expr><literal type="number">50617</literal></expr>, <expr><literal type="number">55027</literal></expr>, <expr><literal type="number">60097</literal></expr>,
<expr><literal type="number">32809</literal></expr>, <expr><literal type="number">35734</literal></expr>, <expr><literal type="number">38968</literal></expr>, <expr><literal type="number">42454</literal></expr>, <expr><literal type="number">46382</literal></expr>, <expr><literal type="number">50576</literal></expr>, <expr><literal type="number">55109</literal></expr>, <expr><literal type="number">60056</literal></expr>,
<expr><literal type="number">65535</literal></expr>, <expr><literal type="number">35734</literal></expr>, <expr><literal type="number">38968</literal></expr>, <expr><literal type="number">42495</literal></expr>, <expr><literal type="number">46320</literal></expr>, <expr><literal type="number">50515</literal></expr>, <expr><literal type="number">55109</literal></expr>, <expr><literal type="number">60076</literal></expr>,
<expr><literal type="number">65535</literal></expr>, <expr><literal type="number">35744</literal></expr>, <expr><literal type="number">38968</literal></expr>, <expr><literal type="number">42495</literal></expr>, <expr><literal type="number">46341</literal></expr>, <expr><literal type="number">50535</literal></expr>, <expr><literal type="number">55099</literal></expr>, <expr><literal type="number">60087</literal></expr>,
<expr><literal type="number">65535</literal></expr>, <expr><literal type="number">35734</literal></expr>, <expr><literal type="number">38973</literal></expr>, <expr><literal type="number">42500</literal></expr>, <expr><literal type="number">46341</literal></expr>, <expr><literal type="number">50535</literal></expr>, <expr><literal type="number">55109</literal></expr>, <expr><literal type="number">60097</literal></expr>,
<expr><literal type="number">32771</literal></expr>, <expr><literal type="number">35734</literal></expr>, <expr><literal type="number">38965</literal></expr>, <expr><literal type="number">42497</literal></expr>, <expr><literal type="number">46341</literal></expr>, <expr><literal type="number">50535</literal></expr>, <expr><literal type="number">55109</literal></expr>, <expr><literal type="number">60099</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EOB</name></cpp:macro> <cpp:value>0, 0, 0</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>dec_2dvlc</name></name></type> <name><name>intra_dec</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><name>EOB</name></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">0</literal></expr>, 
<expr><literal type="number">23</literal></expr>, 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">1</literal></expr>, 
<expr><literal type="number">15</literal></expr>, 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">10</literal></expr>, 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal> <operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">4</literal></expr>, 
<expr><literal type="number">7</literal></expr>, 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>,<expr><literal type="number">18</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">7</literal></expr>, 
<expr><literal type="number">5</literal></expr>, 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">21</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">21</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">10</literal></expr>, 
<expr><literal type="number">3</literal></expr>, 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">21</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">21</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">22</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">22</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">23</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">23</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">24</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">24</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">25</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">25</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">26</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">26</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><name>INT_MAX</name></expr>, 
<expr><literal type="number">2</literal></expr>, 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>dec_2dvlc</name></name></type> <name><name>inter_dec</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><name>EOB</name></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><literal type="number">3</literal></expr>, 
<expr><literal type="number">0</literal></expr>, 
<expr><literal type="number">26</literal></expr> 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">1</literal></expr>, 
<expr><literal type="number">19</literal></expr> 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">14</literal></expr> 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>,<expr><literal type="number">10</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">3</literal></expr>, 
<expr><literal type="number">10</literal></expr> 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">6</literal></expr>, 
<expr><literal type="number">7</literal></expr> 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">9</literal></expr>, 
<expr><literal type="number">5</literal></expr> 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">21</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">21</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><name>INT_MAX</name></expr>, 
<expr><literal type="number">4</literal></expr> 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name><name>struct</name> <name>dec_2dvlc</name></name></type> <name><name>chroma_dec</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><name>EOB</name></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">0</literal></expr>, 
<expr><literal type="number">25</literal></expr> 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">0</literal></expr>, 
<expr><literal type="number">1</literal></expr>, 
<expr><literal type="number">20</literal></expr> 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>,<expr><literal type="number">10</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">1</literal></expr>, 
<expr><literal type="number">2</literal></expr>, 
<expr><literal type="number">11</literal></expr> 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{<expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">1</literal></expr>, 
<expr><literal type="number">4</literal></expr>, 
<expr><literal type="number">8</literal></expr> 
}</block></expr>,
<expr><block>{
<expr><block>{ 
<expr><block>{ <expr><name>EOB</name></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">8</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">12</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">14</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">15</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">17</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>, <expr><block>{ <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
}</block></expr>,

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> }</block></expr>,
<expr><literal type="number">0</literal></expr>, 
<expr><name>INT_MAX</name></expr>, 
<expr><literal type="number">5</literal></expr>, 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>EOB</name></cpp:undef>







<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>store_mvs</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>col_mv</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbidx</name></name> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>col_mv</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbidx</name></name> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X1</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>col_mv</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbidx</name></name> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator> <literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X2</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>col_mv</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbidx</name></name> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X3</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>mv_pred_direct</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>cavs_vector</name> <modifier>*</modifier></type><name>pmv_fw</name></decl></parameter>,
<parameter><decl><type><name>cavs_vector</name> <modifier>*</modifier></type><name>col_mv</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>cavs_vector</name> <modifier>*</modifier></type><name>pmv_bw</name> <init>= <expr><name>pmv_fw</name> <operator>+</operator> <name>MV_BWD_OFFS</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>den</name> <init>= <expr><name><name>h</name><operator>-&gt;</operator><name>direct_den</name><index>[<expr><name><name>col_mv</name><operator>-&gt;</operator><name>ref</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>m</name> <init>= <expr><call><name>FF_SIGNBIT</name><argument_list>(<argument><expr><name><name>col_mv</name><operator>-&gt;</operator><name>x</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>pmv_fw</name><operator>-&gt;</operator><name>dist</name></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>pmv_bw</name><operator>-&gt;</operator><name>dist</name></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>pmv_fw</name><operator>-&gt;</operator><name>ref</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>pmv_bw</name><operator>-&gt;</operator><name>ref</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>pmv_fw</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><operator>(</operator><name>den</name> <operator>+</operator> <operator>(</operator><name>den</name> <operator>*</operator> <name><name>col_mv</name><operator>-&gt;</operator><name>x</name></name> <operator>*</operator> <name><name>pmv_fw</name><operator>-&gt;</operator><name>dist</name></name> <operator>^</operator> <name>m</name><operator>)</operator> <operator>-</operator> <name>m</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">14</literal><operator>)</operator> <operator>^</operator> <name>m</name><operator>)</operator> <operator>-</operator> <name>m</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>pmv_bw</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <name>m</name> <operator>-</operator> <operator>(</operator><operator>(</operator><operator>(</operator><name>den</name> <operator>+</operator> <operator>(</operator><name>den</name> <operator>*</operator> <name><name>col_mv</name><operator>-&gt;</operator><name>x</name></name> <operator>*</operator> <name><name>pmv_bw</name><operator>-&gt;</operator><name>dist</name></name> <operator>^</operator> <name>m</name><operator>)</operator> <operator>-</operator> <name>m</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">14</literal><operator>)</operator> <operator>^</operator> <name>m</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>m</name> <operator>=</operator> <call><name>FF_SIGNBIT</name><argument_list>(<argument><expr><name><name>col_mv</name><operator>-&gt;</operator><name>y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>pmv_fw</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <operator>(</operator><operator>(</operator><operator>(</operator><name>den</name> <operator>+</operator> <operator>(</operator><name>den</name> <operator>*</operator> <name><name>col_mv</name><operator>-&gt;</operator><name>y</name></name> <operator>*</operator> <name><name>pmv_fw</name><operator>-&gt;</operator><name>dist</name></name> <operator>^</operator> <name>m</name><operator>)</operator> <operator>-</operator> <name>m</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">14</literal><operator>)</operator> <operator>^</operator> <name>m</name><operator>)</operator> <operator>-</operator> <name>m</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>pmv_bw</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <name>m</name> <operator>-</operator> <operator>(</operator><operator>(</operator><operator>(</operator><name>den</name> <operator>+</operator> <operator>(</operator><name>den</name> <operator>*</operator> <name><name>col_mv</name><operator>-&gt;</operator><name>y</name></name> <operator>*</operator> <name><name>pmv_bw</name><operator>-&gt;</operator><name>dist</name></name> <operator>^</operator> <name>m</name><operator>)</operator> <operator>-</operator> <name>m</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">14</literal><operator>)</operator> <operator>^</operator> <name>m</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>mv_pred_sym</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>cavs_vector</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>cavs_block</name></name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>cavs_vector</name> <modifier>*</modifier></type><name>dst</name> <init>= <expr><name>src</name> <operator>+</operator> <name>MV_BWD_OFFS</name></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>x</name></name> <operator>=</operator> <operator>-</operator><operator>(</operator><operator>(</operator><name><name>src</name><operator>-&gt;</operator><name>x</name></name> <operator>*</operator> <name><name>h</name><operator>-&gt;</operator><name>sym_factor</name></name> <operator>+</operator> <literal type="number">256</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">9</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>y</name></name> <operator>=</operator> <operator>-</operator><operator>(</operator><operator>(</operator><name><name>src</name><operator>-&gt;</operator><name>y</name></name> <operator>*</operator> <name><name>h</name><operator>-&gt;</operator><name>sym_factor</name></name> <operator>+</operator> <literal type="number">256</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">9</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>ref</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>dist</name></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>set_mvs</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>








<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>get_ue_code</name><parameter_list>(<parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>order</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name></type> <name>ret</name> <init>= <expr><call><name>get_ue_golomb</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&gt;=</operator> <operator>(</operator><operator>(</operator><literal type="number">1U</literal><operator>&lt;&lt;</operator><literal type="number">31</literal><operator>)</operator><operator>&gt;&gt;</operator><name>order</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"get_ue_code: value too larger\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>order</name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>(</operator><name>ret</name><operator>&lt;&lt;</operator><name>order</name><operator>)</operator> <operator>+</operator> <call><name>get_bits</name><argument_list>(<argument><expr><name>gb</name></expr></argument>, <argument><expr><name>order</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>dequant</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>level_buf</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>run_buf</name></decl></parameter>,
<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mul</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>shift</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>coeff_num</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>round</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <operator>(</operator><name>shift</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pos</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>scantab</name> <init>= <expr><name><name>h</name><operator>-&gt;</operator><name>scantable</name><operator>.</operator><name>permutated</name></name></expr></init></decl>;</decl_stmt>


<while>while <condition>(<expr><operator>--</operator><name>coeff_num</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>pos</name> <operator>+=</operator> <name><name>run_buf</name><index>[<expr><name>coeff_num</name></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>pos</name> <operator>&gt;</operator> <literal type="number">63</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>,
<argument><expr><literal type="string">"position out of block bounds at pic %d MB(%d,%d)\n"</literal></expr></argument>,
<argument><expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>poc</name></name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>mbx</name></name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>mby</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>dst</name><index>[<expr><name><name>scantab</name><index>[<expr><name>pos</name></expr>]</index></name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>level_buf</name><index>[<expr><name>coeff_num</name></expr>]</index></name> <operator>*</operator> <name>mul</name> <operator>+</operator> <name>round</name><operator>)</operator> <operator>&gt;&gt;</operator> <name>shift</name></expr>;</expr_stmt>
</block_content>}</block></while>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>










<function><type><specifier>static</specifier> <name>int</name></type> <name>decode_residual_block</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>dec_2dvlc</name></name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>esc_golomb_order</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>qp</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>esc_code</name></decl>, <decl><type ref="prev"/><name>level</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>ret</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>level_code</name></decl>, <decl><type ref="prev"/><name>run</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name><name>level_buf</name><index>[<expr><literal type="number">65</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>run_buf</name><index>[<expr><literal type="number">65</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>block</name> <init>= <expr><name><name>h</name><operator>-&gt;</operator><name>block</name></name></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">65</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>level_code</name> <operator>=</operator> <call><name>get_ue_code</name><argument_list>(<argument><expr><name>gb</name></expr></argument>, <argument><expr><name><name>r</name><operator>-&gt;</operator><name>golomb_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>level_code</name> <operator>&gt;=</operator> <name>ESCAPE_CODE</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>run</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>level_code</name> <operator>-</operator> <name>ESCAPE_CODE</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>run</name> <operator>&gt;</operator> <literal type="number">64</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"run %d is too large\n"</literal></expr></argument>, <argument><expr><name>run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>esc_code</name> <operator>=</operator> <call><name>get_ue_code</name><argument_list>(<argument><expr><name>gb</name></expr></argument>, <argument><expr><name>esc_golomb_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>esc_code</name> <argument_list type="generic">&lt; <argument><expr><literal type="number">0</literal> <operator>||</operator> <name>esc_code</name></expr></argument> &gt;</argument_list></name> <literal type="number">32767</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"esc_code invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>level</name> <operator>=</operator> <name>esc_code</name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>run</name> <operator>&gt;</operator> <name><name>r</name><operator>-&gt;</operator><name>max_run</name></name></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><name><name>r</name><operator>-&gt;</operator><name>level_add</name><index>[<expr><name>run</name></expr>]</index></name></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>
<while>while <condition>(<expr><name>level</name> <operator>&gt;</operator> <name><name>r</name><operator>-&gt;</operator><name>inc_limit</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>r</name><operator>++</operator></expr>;</expr_stmt></block_content></block></while>
<expr_stmt><expr><name>mask</name> <operator>=</operator> <operator>-</operator><operator>(</operator><name>level_code</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>level</name> <operator>=</operator> <operator>(</operator><name>level</name> <operator>^</operator> <name>mask</name><operator>)</operator> <operator>-</operator> <name>mask</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>level</name> <operator>=</operator> <name><name>r</name><operator>-&gt;</operator><name>rltab</name><index>[<expr><name>level_code</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>level</name></expr>)</condition><block type="pseudo"><block_content> 
<break>break;</break></block_content></block></if></if_stmt>
<expr_stmt><expr><name>run</name> <operator>=</operator> <name><name>r</name><operator>-&gt;</operator><name>rltab</name><index>[<expr><name>level_code</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>r</name> <operator>+=</operator> <name><name>r</name><operator>-&gt;</operator><name>rltab</name><index>[<expr><name>level_code</name></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name><name>level_buf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>level</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>run_buf</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>run</name></expr>;</expr_stmt>
</block_content>}</block></for>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>dequant</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>level_buf</name></expr></argument>, <argument><expr><name>run_buf</name></expr></argument>, <argument><expr><name>block</name></expr></argument>, <argument><expr><name><name>dequant_mul</name><index>[<expr><name>qp</name></expr>]</index></name></expr></argument>,
<argument><expr><name><name>dequant_shift</name><index>[<expr><name>qp</name></expr>]</index></name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name><name>h</name><operator>-&gt;</operator><name>cdsp</name><operator>.</operator><name>cavs_idct8_add</name></name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>block</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name><name>h</name><operator>-&gt;</operator><name>bdsp</name><operator>.</operator><name>clear_block</name></name><argument_list>(<argument><expr><name>block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>decode_residual_chroma</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cbp</name></name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>decode_residual_block</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><name>chroma_dec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><name><name>ff_cavs_chroma_qp</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>qp</name></name></expr>]</index></name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>cu</name></name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>c_stride</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cbp</name></name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">5</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><call><name>decode_residual_block</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><name>chroma_dec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><name><name>ff_cavs_chroma_qp</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>qp</name></name></expr>]</index></name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>cv</name></name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>c_stride</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>decode_residual_inter</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>block</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>cbp</name> <init>= <expr><call><name>get_ue_golomb</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>cbp</name> <operator>&gt;</operator> <literal type="number">63U</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"illegal inter cbp %d\n"</literal></expr></argument>, <argument><expr><name>cbp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>cbp</name></name> <operator>=</operator> <name><name>cbp_tab</name><index>[<expr><name>cbp</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cbp</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>qp_fixed</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>qp</name></name> <operator>=</operator> <operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>qp</name></name> <operator>+</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><call><name>get_se_golomb</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&amp;</operator> <literal type="number">63</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<for>for <control>(<init><expr><name>block</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>block</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>block</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cbp</name></name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <name>block</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>decode_residual_block</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><name>inter_dec</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>qp</name></name></expr></argument>,
<argument><expr><name><name>h</name><operator>-&gt;</operator><name>cy</name></name> <operator>+</operator> <name><name>h</name><operator>-&gt;</operator><name>luma_scan</name><index>[<expr><name>block</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>l_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>
<expr_stmt><expr><call><name>decode_residual_chroma</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>







<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>set_mv_intra</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name></expr>]</index></name> <operator>=</operator> <name>ff_cavs_intra_mv</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>set_mvs</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name></expr>]</index></name></expr></argument>, <argument><expr><name>BLK_16X16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_BWD_X0</name></expr>]</index></name> <operator>=</operator> <name>ff_cavs_intra_mv</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>set_mvs</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_BWD_X0</name></expr>]</index></name></expr></argument>, <argument><expr><name>BLK_16X16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>!=</operator> <name>AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>col_type_base</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbidx</name></name></expr>]</index></name> <operator>=</operator> <name>I_8X8</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>decode_mb_i</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cbp_code</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name> <init>= <expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>pred_mode_uv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>block</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>top</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>left</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>d</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ff_cavs_init_mb</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<for>for <control>(<init><expr><name>block</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>block</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>block</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>nA</name></decl>, <decl><type ref="prev"/><name>nB</name></decl>, <decl><type ref="prev"/><name>predpred</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pos</name> <init>= <expr><name><name>scan3x3</name><index>[<expr><name>block</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>nA</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>pred_mode_Y</name><index>[<expr><name>pos</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>nB</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>pred_mode_Y</name><index>[<expr><name>pos</name> <operator>-</operator> <literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>predpred</name> <operator>=</operator> <call><name>FFMIN</name><argument_list>(<argument><expr><name>nA</name></expr></argument>, <argument><expr><name>nB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>predpred</name> <operator>==</operator> <name>NOT_AVAIL</name></expr>)</condition><block type="pseudo"><block_content> 
<expr_stmt><expr><name>predpred</name> <operator>=</operator> <name>INTRA_L_LP</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>get_bits1</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>rem_mode</name> <init>= <expr><call><name>get_bits</name><argument_list>(<argument><expr><name>gb</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>predpred</name> <operator>=</operator> <name>rem_mode</name> <operator>+</operator> <operator>(</operator><name>rem_mode</name> <operator>&gt;=</operator> <name>predpred</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred_mode_Y</name><index>[<expr><name>pos</name></expr>]</index></name> <operator>=</operator> <name>predpred</name></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name>pred_mode_uv</name> <operator>=</operator> <call><name>get_ue_golomb</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>pred_mode_uv</name> <operator>&gt;</operator> <literal type="number">6</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"illegal intra chroma pred mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ff_cavs_modify_mb_i</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pred_mode_uv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>==</operator> <name>AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>cbp_code</name> <operator>=</operator> <call><name>get_ue_golomb</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>cbp_code</name> <operator>&gt;</operator> <literal type="number">63U</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"illegal intra cbp\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>cbp</name></name> <operator>=</operator> <name><name>cbp_tab</name><index>[<expr><name>cbp_code</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cbp</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>qp_fixed</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>qp</name></name> <operator>=</operator> <operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>qp</name></name> <operator>+</operator> <operator>(</operator><name>unsigned</name><operator>)</operator><call><name>get_se_golomb</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&amp;</operator> <literal type="number">63</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> 


<for>for <control>(<init><expr><name>block</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>block</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>block</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>d</name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>cy</name></name> <operator>+</operator> <name><name>h</name><operator>-&gt;</operator><name>luma_scan</name><index>[<expr><name>block</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_cavs_load_intra_pred_luma</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>top</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>left</name></expr></argument>, <argument><expr><name>block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>intra_pred_l</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>pred_mode_Y</name><index>[<expr><name><name>scan3x3</name><index>[<expr><name>block</name></expr>]</index></name></expr>]</index></name></expr>]</index></name>
<operator>(</operator><name>d</name><operator>,</operator> <name>top</name><operator>,</operator> <name>left</name><operator>,</operator> <name><name>h</name><operator>-&gt;</operator><name>l_stride</name></name><operator>)</operator></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cbp</name></name> <operator>&amp;</operator> <operator>(</operator><literal type="number">1</literal><operator>&lt;&lt;</operator><name>block</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>decode_residual_block</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>gb</name></expr></argument>, <argument><expr><name>intra_dec</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>qp</name></name></expr></argument>, <argument><expr><name>d</name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>l_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>


<expr_stmt><expr><call><name>ff_cavs_load_intra_pred_chroma</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>intra_pred_c</name><index>[<expr><name>pred_mode_uv</name></expr>]</index></name><operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>cu</name></name><operator>,</operator> <operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>top_border_u</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbx</name></name> <operator>*</operator> <literal type="number">10</literal></expr>]</index></name><operator>,</operator>
<name><name>h</name><operator>-&gt;</operator><name>left_border_u</name></name><operator>,</operator> <name><name>h</name><operator>-&gt;</operator><name>c_stride</name></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>intra_pred_c</name><index>[<expr><name>pred_mode_uv</name></expr>]</index></name><operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>cv</name></name><operator>,</operator> <operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>top_border_v</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbx</name></name> <operator>*</operator> <literal type="number">10</literal></expr>]</index></name><operator>,</operator>
<name><name>h</name><operator>-&gt;</operator><name>left_border_v</name></name><operator>,</operator> <name><name>h</name><operator>-&gt;</operator><name>c_stride</name></name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>decode_residual_chroma</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>ff_cavs_filter</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>I_8X8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>set_mv_intra</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>set_intra_mode_default</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>stream_revision</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred_mode_Y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>pred_mode_Y</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <name>NOT_AVAIL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>top_pred_Y</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbx</name></name> <operator>*</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>top_pred_Y</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbx</name></name> <operator>*</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>NOT_AVAIL</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pred_mode_Y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>pred_mode_Y</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <name>INTRA_L_LP</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>top_pred_Y</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbx</name></name> <operator>*</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>top_pred_Y</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbx</name></name> <operator>*</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>INTRA_L_LP</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>decode_mb_p</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>cavs_mb</name></name></type> <name>mb_type</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name> <init>= <expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>ref</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ff_cavs_init_mb</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<switch>switch <condition>(<expr><name>mb_type</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>P_SKIP</name></expr>:</case>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X0</name></expr></argument>, <argument><expr><name>MV_FWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_PSKIP</name></expr></argument>, <argument><expr><name>BLK_16X16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>P_16X16</name></expr>:</case>
<expr_stmt><expr><name><name>ref</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>ref_flag</name></name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>get_bits1</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X0</name></expr></argument>, <argument><expr><name>MV_FWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_MEDIAN</name></expr></argument>, <argument><expr><name>BLK_16X16</name></expr></argument>, <argument><expr><name><name>ref</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>P_16X8</name></expr>:</case>
<expr_stmt><expr><name><name>ref</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>ref_flag</name></name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>get_bits1</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ref</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>ref_flag</name></name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>get_bits1</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X0</name></expr></argument>, <argument><expr><name>MV_FWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_TOP</name></expr></argument>, <argument><expr><name>BLK_16X8</name></expr></argument>, <argument><expr><name><name>ref</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X2</name></expr></argument>, <argument><expr><name>MV_FWD_A1</name></expr></argument>, <argument><expr><name>MV_PRED_LEFT</name></expr></argument>, <argument><expr><name>BLK_16X8</name></expr></argument>, <argument><expr><name><name>ref</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>P_8X16</name></expr>:</case>
<expr_stmt><expr><name><name>ref</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>ref_flag</name></name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>get_bits1</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ref</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>ref_flag</name></name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>get_bits1</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X0</name></expr></argument>, <argument><expr><name>MV_FWD_B3</name></expr></argument>, <argument><expr><name>MV_PRED_LEFT</name></expr></argument>, <argument><expr><name>BLK_8X16</name></expr></argument>, <argument><expr><name><name>ref</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X1</name></expr></argument>, <argument><expr><name>MV_FWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_TOPRIGHT</name></expr></argument>, <argument><expr><name>BLK_8X16</name></expr></argument>, <argument><expr><name><name>ref</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>P_8X8</name></expr>:</case>
<expr_stmt><expr><name><name>ref</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>ref_flag</name></name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>get_bits1</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ref</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>ref_flag</name></name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>get_bits1</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ref</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>ref_flag</name></name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>get_bits1</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ref</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>ref_flag</name></name></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>get_bits1</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X0</name></expr></argument>, <argument><expr><name>MV_FWD_B3</name></expr></argument>, <argument><expr><name>MV_PRED_MEDIAN</name></expr></argument>, <argument><expr><name>BLK_8X8</name></expr></argument>, <argument><expr><name><name>ref</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X1</name></expr></argument>, <argument><expr><name>MV_FWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_MEDIAN</name></expr></argument>, <argument><expr><name>BLK_8X8</name></expr></argument>, <argument><expr><name><name>ref</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X2</name></expr></argument>, <argument><expr><name>MV_FWD_X1</name></expr></argument>, <argument><expr><name>MV_PRED_MEDIAN</name></expr></argument>, <argument><expr><name>BLK_8X8</name></expr></argument>, <argument><expr><name><name>ref</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X3</name></expr></argument>, <argument><expr><name>MV_FWD_X0</name></expr></argument>, <argument><expr><name>MV_PRED_MEDIAN</name></expr></argument>, <argument><expr><name>BLK_8X8</name></expr></argument>, <argument><expr><name><name>ref</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></switch>
<expr_stmt><expr><call><name>ff_cavs_inter</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>set_intra_mode_default</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>store_mvs</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>mb_type</name> <operator>!=</operator> <name>P_SKIP</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>decode_residual_inter</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>ff_cavs_filter</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>col_type_base</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbidx</name></name></expr>]</index></name> <operator>=</operator> <name>mb_type</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>decode_mb_b</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>cavs_mb</name></name></type> <name>mb_type</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>block</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>cavs_sub_mb</name></name></type> <name><name>sub_type</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ff_cavs_init_mb</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name></expr>]</index></name> <operator>=</operator> <name>ff_cavs_dir_mv</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>set_mvs</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name></expr>]</index></name></expr></argument>, <argument><expr><name>BLK_16X16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_BWD_X0</name></expr>]</index></name> <operator>=</operator> <name>ff_cavs_dir_mv</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>set_mvs</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_BWD_X0</name></expr>]</index></name></expr></argument>, <argument><expr><name>BLK_16X16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<switch>switch <condition>(<expr><name>mb_type</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>B_SKIP</name></expr>:</case>
<case>case <expr><name>B_DIRECT</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>col_type_base</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbidx</name></name></expr>]</index></name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X0</name></expr></argument>, <argument><expr><name>MV_FWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_BSKIP</name></expr></argument>, <argument><expr><name>BLK_16X16</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_BWD_X0</name></expr></argument>, <argument><expr><name>MV_BWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_BSKIP</name></expr></argument>, <argument><expr><name>BLK_16X16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else<block type="pseudo"><block_content>

<for>for <control>(<init><expr><name>block</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>block</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>block</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mv_pred_direct</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name><name>mv_scan</name><index>[<expr><name>block</name></expr>]</index></name></expr>]</index></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>col_mv</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbidx</name></name> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator> <name>block</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></else></if_stmt>
<break>break;</break>
<case>case <expr><name>B_FWD_16X16</name></expr>:</case>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X0</name></expr></argument>, <argument><expr><name>MV_FWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_MEDIAN</name></expr></argument>, <argument><expr><name>BLK_16X16</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>B_SYM_16X16</name></expr>:</case>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X0</name></expr></argument>, <argument><expr><name>MV_FWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_MEDIAN</name></expr></argument>, <argument><expr><name>BLK_16X16</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mv_pred_sym</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name></expr>]</index></name></expr></argument>, <argument><expr><name>BLK_16X16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>B_BWD_16X16</name></expr>:</case>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_BWD_X0</name></expr></argument>, <argument><expr><name>MV_BWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_MEDIAN</name></expr></argument>, <argument><expr><name>BLK_16X16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>B_8X8</name></expr>:</case>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TMP_UNUSED_INX</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<expr_stmt><expr><name>flags</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>block</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>block</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>block</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>sub_type</name><index>[<expr><name>block</name></expr>]</index></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<for>for <control>(<init><expr><name>block</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>block</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>block</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<switch>switch <condition>(<expr><name><name>sub_type</name><index>[<expr><name>block</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>B_SUB_DIRECT</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>col_type_base</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbidx</name></name></expr>]</index></name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if<condition>(<expr><name>flags</name><operator>==</operator><literal type="number">0</literal></expr>)</condition> <block>{<block_content>


<if_stmt><if>if<condition>(<expr><name>block</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>TMP_UNUSED_INX</name></expr> ]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name></expr> ]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>TMP_UNUSED_INX</name> <operator>+</operator> <name>MV_BWD_OFFS</name></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name> <operator>+</operator> <name>MV_BWD_OFFS</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X0</name></expr></argument>, <argument><expr><name>MV_FWD_C2</name></expr></argument>,
<argument><expr><name>MV_PRED_BSKIP</name></expr></argument>, <argument><expr><name>BLK_8X8</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X0</name><operator>+</operator><name>MV_BWD_OFFS</name></expr></argument>,
<argument><expr><name>MV_FWD_C2</name><operator>+</operator><name>MV_BWD_OFFS</name></expr></argument>,
<argument><expr><name>MV_PRED_BSKIP</name></expr></argument>, <argument><expr><name>BLK_8X8</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>block</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>flags</name> <operator>=</operator> <name><name>mv_scan</name><index>[<expr><name>block</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>flags</name></expr> ]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name></expr> ]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>flags</name> <operator>+</operator> <name>MV_BWD_OFFS</name></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name> <operator>+</operator> <name>MV_BWD_OFFS</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name></expr> ]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>TMP_UNUSED_INX</name></expr> ]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name> <operator>+</operator> <name>MV_BWD_OFFS</name></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>TMP_UNUSED_INX</name> <operator>+</operator> <name>MV_BWD_OFFS</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>flags</name> <operator>=</operator> <name>MV_FWD_X0</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name><name>mv_scan</name><index>[<expr><name>block</name></expr>]</index></name></expr> ]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>flags</name></expr> ]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name><name>mv_scan</name><index>[<expr><name>block</name></expr>]</index></name> <operator>+</operator> <name>MV_BWD_OFFS</name></expr>]</index></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>flags</name> <operator>+</operator> <name>MV_BWD_OFFS</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mv_pred_direct</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name><name>mv_scan</name><index>[<expr><name>block</name></expr>]</index></name></expr>]</index></name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>col_mv</name><index>[<expr><name><name>h</name><operator>-&gt;</operator><name>mbidx</name></name> <operator>*</operator> <literal type="number">4</literal> <operator>+</operator> <name>block</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<break>break;</break>
<case>case <expr><name>B_SUB_FWD</name></expr>:</case>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name><name>mv_scan</name><index>[<expr><name>block</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>mv_scan</name><index>[<expr><name>block</name></expr>]</index></name> <operator>-</operator> <literal type="number">3</literal></expr></argument>,
<argument><expr><name>MV_PRED_MEDIAN</name></expr></argument>, <argument><expr><name>BLK_8X8</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>B_SUB_SYM</name></expr>:</case>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name><name>mv_scan</name><index>[<expr><name>block</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>mv_scan</name><index>[<expr><name>block</name></expr>]</index></name> <operator>-</operator> <literal type="number">3</literal></expr></argument>,
<argument><expr><name>MV_PRED_MEDIAN</name></expr></argument>, <argument><expr><name>BLK_8X8</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mv_pred_sym</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name><name>mv_scan</name><index>[<expr><name>block</name></expr>]</index></name></expr>]</index></name></expr></argument>, <argument><expr><name>BLK_8X8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
</block_content>}</block></for>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>TMP_UNUSED_INX</name></cpp:undef>
<for>for <control>(<init><expr><name>block</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>block</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>block</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>sub_type</name><index>[<expr><name>block</name></expr>]</index></name> <operator>==</operator> <name>B_SUB_BWD</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name><name>mv_scan</name><index>[<expr><name>block</name></expr>]</index></name> <operator>+</operator> <name>MV_BWD_OFFS</name></expr></argument>,
<argument><expr><name><name>mv_scan</name><index>[<expr><name>block</name></expr>]</index></name> <operator>+</operator> <name>MV_BWD_OFFS</name> <operator>-</operator> <literal type="number">3</literal></expr></argument>,
<argument><expr><name>MV_PRED_MEDIAN</name></expr></argument>, <argument><expr><name>BLK_8X8</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></for>
<break>break;</break>
<default>default:</default>
<if_stmt><if>if <condition>(<expr><name>mb_type</name> <operator>&lt;=</operator> <name>B_SYM_16X16</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"Invalid mb_type %d in B frame\n"</literal></expr></argument>, <argument><expr><name>mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>av_assert2</name><argument_list>(<argument><expr><name>mb_type</name> <operator>&lt;</operator> <name>B_8X8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>flags</name> <operator>=</operator> <name><name>ff_cavs_partition_flags</name><index>[<expr><name>mb_type</name></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>mb_type</name> <operator>&amp;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content> 
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>FWD0</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X0</name></expr></argument>, <argument><expr><name>MV_FWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_TOP</name></expr></argument>, <argument><expr><name>BLK_16X8</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>SYM0</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mv_pred_sym</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name></expr>]</index></name></expr></argument>, <argument><expr><name>BLK_16X8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>FWD1</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X2</name></expr></argument>, <argument><expr><name>MV_FWD_A1</name></expr></argument>, <argument><expr><name>MV_PRED_LEFT</name></expr></argument>, <argument><expr><name>BLK_16X8</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>SYM1</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mv_pred_sym</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X2</name></expr>]</index></name></expr></argument>, <argument><expr><name>BLK_16X8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>BWD0</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_BWD_X0</name></expr></argument>, <argument><expr><name>MV_BWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_TOP</name></expr></argument>, <argument><expr><name>BLK_16X8</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>BWD1</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_BWD_X2</name></expr></argument>, <argument><expr><name>MV_BWD_A1</name></expr></argument>, <argument><expr><name>MV_PRED_LEFT</name></expr></argument>, <argument><expr><name>BLK_16X8</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content> 
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>FWD0</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X0</name></expr></argument>, <argument><expr><name>MV_FWD_B3</name></expr></argument>, <argument><expr><name>MV_PRED_LEFT</name></expr></argument>, <argument><expr><name>BLK_8X16</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>SYM0</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mv_pred_sym</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X0</name></expr>]</index></name></expr></argument>, <argument><expr><name>BLK_8X16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>FWD1</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_FWD_X1</name></expr></argument>, <argument><expr><name>MV_FWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_TOPRIGHT</name></expr></argument>, <argument><expr><name>BLK_8X16</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>SYM1</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>mv_pred_sym</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>mv</name><index>[<expr><name>MV_FWD_X1</name></expr>]</index></name></expr></argument>, <argument><expr><name>BLK_8X16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>BWD0</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_BWD_X0</name></expr></argument>, <argument><expr><name>MV_BWD_B3</name></expr></argument>, <argument><expr><name>MV_PRED_LEFT</name></expr></argument>, <argument><expr><name>BLK_8X16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>BWD1</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_cavs_mv</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>MV_BWD_X1</name></expr></argument>, <argument><expr><name>MV_BWD_C2</name></expr></argument>, <argument><expr><name>MV_PRED_TOPRIGHT</name></expr></argument>, <argument><expr><name>BLK_8X16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></switch>
<expr_stmt><expr><call><name>ff_cavs_inter</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>set_intra_mode_default</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>mb_type</name> <operator>!=</operator> <name>B_SKIP</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>decode_residual_inter</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>ff_cavs_filter</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>







<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>decode_slice_header</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>stc</name></name> <operator>&gt;</operator> <literal type="number">0xAF</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"unexpected start code 0x%02x\n"</literal></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>stc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>stc</name></name> <operator>&gt;=</operator> <name><name>h</name><operator>-&gt;</operator><name>mb_height</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"stc 0x%02x is too large\n"</literal></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>stc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mby</name></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>stc</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mbidx</name></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>mby</name></name> <operator>*</operator> <name><name>h</name><operator>-&gt;</operator><name>mb_width</name></name></expr>;</expr_stmt>


<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;=</operator> <operator>~</operator><operator>(</operator><name>B_AVAIL</name> <operator>|</operator> <name>C_AVAIL</name><operator>)</operator></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>pic_qp_fixed</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>qp_fixed</name></name> <operator>=</operator> <call><name>get_bits1</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>qp</name></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><name>gb</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>!=</operator> <name>AV_PICTURE_TYPE_I</name><operator>)</operator> <operator>||</operator>
<operator>(</operator><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>pic_structure</name></name> <operator>&amp;&amp;</operator> <name><name>h</name><operator>-&gt;</operator><name>mby</name></name> <operator>&gt;=</operator> <name><name>h</name><operator>-&gt;</operator><name>mb_width</name></name> <operator>/</operator> <literal type="number">2</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<if_stmt><if>if <condition>(<expr><call><name>get_bits1</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> 
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>,
<argument><expr><literal type="string">"weighted prediction not yet supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>check_for_slice</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>GetBitContext</name> <modifier>*</modifier></type><name>gb</name> <init>= <expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>align</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>mbx</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name>align</name> <operator>=</operator> <operator>(</operator><operator>-</operator><call><name>get_bits_count</name><argument_list>(<argument><expr><name>gb</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&amp;</operator> <literal type="number">7</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>align</name> <operator>&amp;&amp;</operator> <operator>(</operator><call><name>show_bits</name><argument_list>(<argument><expr><name>gb</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0x80</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>align</name> <operator>=</operator> <literal type="number">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><call><name>show_bits_long</name><argument_list>(<argument><expr><name>gb</name></expr></argument>, <argument><expr><literal type="number">24</literal> <operator>+</operator> <name>align</name></expr></argument>)</argument_list></call> <operator>&amp;</operator> <literal type="number">0xFFFFFF</literal><operator>)</operator> <operator>==</operator> <literal type="number">0x000001</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>skip_bits_long</name><argument_list>(<argument><expr><name>gb</name></expr></argument>, <argument><expr><literal type="number">24</literal> <operator>+</operator> <name>align</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>stc</name></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><name>gb</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>stc</name></name> <operator>&gt;=</operator> <name><name>h</name><operator>-&gt;</operator><name>mb_height</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>decode_slice_header</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>







<function><type><specifier>static</specifier> <name>int</name></type> <name>decode_pic</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>skip_count</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>cavs_mb</name></name></type> <name>mb_type</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>top_qp</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"No sequence header decoded yet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>av_frame_unref</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>skip_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>stc</name></name> <operator>==</operator> <name>PIC_PB_START_CODE</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call> <operator>+</operator> <name>AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>&gt;</operator> <name>AV_PICTURE_TYPE_B</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"illegal picture type\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>||</operator>
<operator>(</operator><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&amp;&amp;</operator> <name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>==</operator> <name>AV_PICTURE_TYPE_B</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>=</operator> <name>AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>get_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>skip_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>low_delay</name></name> <operator>||</operator> <operator>!</operator><operator>(</operator><call><name>show_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>)</argument_list></call> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>stream_revision</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><call><name>show_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call> <operator>&amp;</operator> <literal type="number">3</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>stream_revision</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>stream_revision</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>skip_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> 
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ff_get_buffer</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>==</operator> <name>AV_PICTURE_TYPE_B</name></expr> ?</condition><then>
<expr><literal type="number">0</literal></expr> </then><else>: <expr><name>AV_GET_BUFFER_FLAG_REF</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>edge_emu_buffer</name></name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>alloc_size</name> <init>= <expr><call><name>FFALIGN</name><argument_list>(<argument><expr><call><name>FFABS</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>linesize</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">32</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>edge_emu_buffer</name></name> <operator>=</operator> <call><name>av_mallocz</name><argument_list>(<argument><expr><name>alloc_size</name> <operator>*</operator> <literal type="number">2</literal> <operator>*</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>edge_emu_buffer</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>ff_cavs_init_pic</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>poc</name></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call> <operator>*</operator> <literal type="number">2</literal></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>!=</operator> <name>AV_PICTURE_TYPE_B</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>poc</name></name> <operator>-</operator> <name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>poc</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">511</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>poc</name> <operator>-</operator> <name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>poc</name></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">511</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>poc</name></name> <operator>-</operator> <name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>poc</name><operator>)</operator> <operator>&amp;</operator> <literal type="number">511</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>scale_den</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr> ?</condition><then> <expr><literal type="number">512</literal><operator>/</operator><name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>scale_den</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> ?</condition><then> <expr><literal type="number">512</literal><operator>/</operator><name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>==</operator> <name>AV_PICTURE_TYPE_B</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>sym_factor</name></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>*</operator> <name><name>h</name><operator>-&gt;</operator><name>scale_den</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>FFABS</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>sym_factor</name></name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">32768</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"sym_factor %d too large\n"</literal></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>sym_factor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>direct_den</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr> ?</condition><then> <expr><literal type="number">16384</literal> <operator>/</operator> <name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>direct_den</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <ternary><condition><expr><name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> ?</condition><then> <expr><literal type="number">16384</literal> <operator>/</operator> <name><name>h</name><operator>-&gt;</operator><name>dist</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>low_delay</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>get_ue_golomb</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> 
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>progressive</name></name> <operator>=</operator> <call><name>get_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pic_structure</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>progressive</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pic_structure</name></name> <operator>=</operator> <call><name>get_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>pic_structure</name></name> <operator>&amp;&amp;</operator> <name><name>h</name><operator>-&gt;</operator><name>stc</name></name> <operator>==</operator> <name>PIC_PB_START_CODE</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>skip_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> 
<expr_stmt><expr><call><name>skip_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>skip_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>pic_qp_fixed</name></name> <operator>=</operator>
<name><name>h</name><operator>-&gt;</operator><name>qp_fixed</name></name> <operator>=</operator> <call><name>get_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>qp</name></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>==</operator> <name>AV_PICTURE_TYPE_I</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>progressive</name></name> <operator>&amp;&amp;</operator> <operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>pic_structure</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>skip_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>skip_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>==</operator> <name>AV_PICTURE_TYPE_B</name> <operator>&amp;&amp;</operator> <name><name>h</name><operator>-&gt;</operator><name>pic_structure</name></name> <operator>==</operator> <literal type="number">1</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>ref_flag</name></name> <operator>=</operator> <call><name>get_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>skip_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>skip_mode_flag</name></name> <operator>=</operator> <call><name>get_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>loop_filter_disable</name></name> <operator>=</operator> <call><name>get_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>loop_filter_disable</name></name> <operator>&amp;&amp;</operator> <call><name>get_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>alpha_offset</name></name> <operator>=</operator> <call><name>get_se_golomb</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>beta_offset</name></name> <operator>=</operator> <call><name>get_se_golomb</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>( <expr><name><name>h</name><operator>-&gt;</operator><name>alpha_offset</name></name> <operator>&lt;</operator> <operator>-</operator><literal type="number">64</literal> <operator>||</operator> <name><name>h</name><operator>-&gt;</operator><name>alpha_offset</name></name> <operator>&gt;</operator> <literal type="number">64</literal>
<operator>||</operator> <name><name>h</name><operator>-&gt;</operator> <name>beta_offset</name></name> <operator>&lt;</operator> <operator>-</operator><literal type="number">64</literal> <operator>||</operator> <name><name>h</name><operator>-&gt;</operator> <name>beta_offset</name></name> <operator>&gt;</operator> <literal type="number">64</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>alpha_offset</name></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>beta_offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>alpha_offset</name></name> <operator>=</operator> <name><name>h</name><operator>-&gt;</operator><name>beta_offset</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>==</operator> <name>AV_PICTURE_TYPE_I</name></expr>)</condition> <block>{<block_content>
<do>do <block>{<block_content>
<expr_stmt><expr><call><name>check_for_slice</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>decode_mb_i</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
</block_content>}</block> while <condition>(<expr><call><name>ff_cavs_next_mb</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>==</operator> <name>AV_PICTURE_TYPE_P</name></expr>)</condition> <block>{<block_content>
<do>do <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>check_for_slice</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>skip_count</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>skip_mode_flag</name></name> <operator>&amp;&amp;</operator> <operator>(</operator><name>skip_count</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>get_bits_left</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>AVERROR_INVALIDDATA</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>skip_count</name> <operator>=</operator> <call><name>get_ue_golomb</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>skip_mode_flag</name></name> <operator>&amp;&amp;</operator> <name>skip_count</name><operator>--</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>decode_mb_p</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>P_SKIP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>get_bits_left</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>AVERROR_INVALIDDATA</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>mb_type</name> <operator>=</operator> <call><name>get_ue_golomb</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call> <operator>+</operator> <name>P_SKIP</name> <operator>+</operator> <name><name>h</name><operator>-&gt;</operator><name>skip_mode_flag</name></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>mb_type</name> <operator>&gt;</operator> <name>P_8X8</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>decode_mb_i</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>mb_type</name> <operator>-</operator> <name>P_8X8</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>decode_mb_p</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
</block_content>}</block> while <condition>(<expr><call><name>ff_cavs_next_mb</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>
</block_content>}</block></if> <else>else <block>{<block_content> 
<do>do <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>check_for_slice</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>skip_count</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>skip_mode_flag</name></name> <operator>&amp;&amp;</operator> <operator>(</operator><name>skip_count</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>get_bits_left</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>AVERROR_INVALIDDATA</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>skip_count</name> <operator>=</operator> <call><name>get_ue_golomb</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>skip_mode_flag</name></name> <operator>&amp;&amp;</operator> <name>skip_count</name><operator>--</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>decode_mb_b</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>B_SKIP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>get_bits_left</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>AVERROR_INVALIDDATA</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>mb_type</name> <operator>=</operator> <call><name>get_ue_golomb</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call> <operator>+</operator> <name>B_SKIP</name> <operator>+</operator> <name><name>h</name><operator>-&gt;</operator><name>skip_mode_flag</name></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>mb_type</name> <operator>&gt;</operator> <name>B_8X8</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>decode_mb_i</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>mb_type</name> <operator>-</operator> <name>B_8X8</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>decode_mb_b</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
</block_content>}</block> while <condition>(<expr><call><name>ff_cavs_next_mb</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>emms_c</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&gt;=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>!=</operator> <name>AV_PICTURE_TYPE_B</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_frame_unref</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FFSWAP</name><argument_list>(<argument><expr><name>AVSFrame</name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>cur</name></name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FFSWAP</name><argument_list>(<argument><expr><name>AVSFrame</name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>







<function><type><specifier>static</specifier> <name>int</name></type> <name>decode_seq_header</name><parameter_list>(<parameter><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>frame_rate_code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>, <decl><type ref="prev"/><name>height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>profile</name></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>level</name></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>skip_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name>width</name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>height</name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>width</name></name> <operator>||</operator> <name><name>h</name><operator>-&gt;</operator><name>height</name></name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>width</name></name> <operator>!=</operator> <name>width</name> <operator>||</operator> <name><name>h</name><operator>-&gt;</operator><name>height</name></name> <operator>!=</operator> <name>height</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>avpriv_report_missing_feature</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>,
<argument><expr><literal type="string">"Width/height changing in CAVS"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_PATCHWELCOME</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>width</name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>||</operator> <name>height</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"Dimensions invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>skip_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>skip_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>aspect_ratio</name></name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>frame_rate_code</name> <operator>=</operator> <call><name>get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>frame_rate_code</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name>frame_rate_code</name> <operator>&gt;</operator> <literal type="number">13</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_WARNING</name></expr></argument>,
<argument><expr><literal type="string">"frame_rate_code %d is invalid\n"</literal></expr></argument>, <argument><expr><name>frame_rate_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>frame_rate_code</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>skip_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>skip_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>skip_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>low_delay</name></name> <operator>=</operator> <call><name>get_bits1</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ff_set_dimensions</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>width</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>width</name></name> <operator>=</operator> <name>width</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>height</name></name> <operator>=</operator> <name>height</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mb_width</name></name> <operator>=</operator> <operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>width</name></name> <operator>+</operator> <literal type="number">15</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>mb_height</name></name> <operator>=</operator> <operator>(</operator><name><name>h</name><operator>-&gt;</operator><name>height</name></name> <operator>+</operator> <literal type="number">15</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name><operator>-&gt;</operator><name>framerate</name></name> <operator>=</operator> <name><name>ff_mpeg12_frame_rate_tab</name><index>[<expr><name>frame_rate_code</name></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>top_qp</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>ff_cavs_init_top_lines</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>cavs_flush</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type> <name>avctx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name> <init>= <expr><name><name>avctx</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>got_keyframe</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>cavs_decode_frame</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>got_frame</name></decl></parameter>,
<parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>avpkt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>AVSContext</name> <modifier>*</modifier></type><name>h</name> <init>= <expr><name><name>avctx</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buf</name> <init>= <expr><name><name>avpkt</name><operator>-&gt;</operator><name>data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>buf_size</name> <init>= <expr><name><name>avpkt</name><operator>-&gt;</operator><name>size</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>stc</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>input_size</name></decl>, <decl><type ref="prev"/><name>ret</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buf_end</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buf_ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>frame_start</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>buf_size</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>low_delay</name></name> <operator>&amp;&amp;</operator> <name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>got_frame</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>av_frame_move_ref</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>stc</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>buf_ptr</name> <operator>=</operator> <name>buf</name></expr>;</expr_stmt>
<expr_stmt><expr><name>buf_end</name> <operator>=</operator> <name>buf</name> <operator>+</operator> <name>buf_size</name></expr>;</expr_stmt>
<for>for<control>(<init>;</init><condition>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>buf_ptr</name> <operator>=</operator> <call><name>avpriv_find_start_code</name><argument_list>(<argument><expr><name>buf_ptr</name></expr></argument>, <argument><expr><name>buf_end</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>stc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>stc</name> <operator>&amp;</operator> <literal type="number">0xFFFFFE00</literal><operator>)</operator> <operator>||</operator> <name>buf_ptr</name> <operator>==</operator> <name>buf_end</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>stc</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>avctx</name></name></expr></argument>, <argument><expr><name>AV_LOG_WARNING</name></expr></argument>, <argument><expr><literal type="string">"no frame decoded\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><call><name>FFMAX</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>buf_ptr</name> <operator>-</operator> <name>buf</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>input_size</name> <operator>=</operator> <operator>(</operator><name>buf_end</name> <operator>-</operator> <name>buf_ptr</name><operator>)</operator> <operator>*</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<switch>switch <condition>(<expr><name>stc</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>CAVS_START_CODE</name></expr>:</case>
<expr_stmt><expr><call><name>init_get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><name>buf_ptr</name></expr></argument>, <argument><expr><name>input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>decode_seq_header</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>PIC_I_START_CODE</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>got_keyframe</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_frame_unref</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>av_frame_unref</name><argument_list>(<argument><expr><name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>got_keyframe</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<case>case <expr><name>PIC_PB_START_CODE</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><name>frame_start</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name>frame_start</name> <operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>*</operator><name>got_frame</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>av_frame_unref</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>got_frame</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>got_keyframe</name></name></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>init_get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><name>buf_ptr</name></expr></argument>, <argument><expr><name>input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>stc</name></name> <operator>=</operator> <name>stc</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>decode_pic</name><argument_list>(<argument><expr><name>h</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>got_frame</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name><operator>-&gt;</operator><name>pict_type</name></name> <operator>!=</operator> <name>AV_PICTURE_TYPE_B</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>low_delay</name></name></expr>]</index></name><operator>.</operator><name><name>f</name><operator>-&gt;</operator><name>data</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>av_frame_ref</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>DPB</name><index>[<expr><operator>!</operator><name><name>h</name><operator>-&gt;</operator><name>low_delay</name></name></expr>]</index></name><operator>.</operator><name>f</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>got_frame</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>av_frame_move_ref</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name><name>h</name><operator>-&gt;</operator><name>cur</name><operator>.</operator><name>f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<break>break;</break>
<case>case <expr><name>EXT_START_CODE</name></expr>:</case>

<break>break;</break>
<case>case <expr><name>USER_START_CODE</name></expr>:</case>

<break>break;</break>
<default>default:</default>
<if_stmt><if>if <condition>(<expr><name>stc</name> <operator>&lt;=</operator> <name>SLICE_MAX_START_CODE</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>init_get_bits</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>, <argument><expr><name>buf_ptr</name></expr></argument>, <argument><expr><name>input_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>decode_slice_header</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>h</name><operator>-&gt;</operator><name>gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
</block_content>}</block></switch>
</block_content>}</block></for>
</block_content>}</block></function>

<decl_stmt><decl><type><name>AVCodec</name></type> <name>ff_cavs_decoder</name> <init>= <expr><block>{
<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"cavs"</literal></expr>,
<expr><operator>.</operator><name>long_name</name> <operator>=</operator> <call><name>NULL_IF_CONFIG_SMALL</name><argument_list>(<argument><expr><literal type="string">"Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)"</literal></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>AVMEDIA_TYPE_VIDEO</name></expr>,
<expr><operator>.</operator><name>id</name> <operator>=</operator> <name>AV_CODEC_ID_CAVS</name></expr>,
<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>AVSContext</name></expr></argument>)</argument_list></sizeof></expr>,
<expr><operator>.</operator><name>init</name> <operator>=</operator> <name>ff_cavs_init</name></expr>,
<expr><operator>.</operator><name>close</name> <operator>=</operator> <name>ff_cavs_end</name></expr>,
<expr><operator>.</operator><name>decode</name> <operator>=</operator> <name>cavs_decode_frame</name></expr>,
<expr><operator>.</operator><name>capabilities</name> <operator>=</operator> <name>AV_CODEC_CAP_DR1</name> <operator>|</operator> <name>AV_CODEC_CAP_DELAY</name></expr>,
<expr><operator>.</operator><name>flush</name> <operator>=</operator> <name>cavs_flush</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
</unit>
