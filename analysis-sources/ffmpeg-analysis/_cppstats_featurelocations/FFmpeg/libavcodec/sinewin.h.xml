<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\sinewin.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_SINEWIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_SINEWIN_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mem.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/aac_defines.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_HARDCODED_TABLES</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SINETABLE_CONST</name></cpp:macro> <cpp:value>const</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SINETABLE_CONST</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>USE_FIXED</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>USE_FIXED</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SINETABLE</name><parameter_list>(<parameter><type><name>size</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>SINETABLE_CONST DECLARE_ALIGNED(32, INTFLOAT, AAC_RENAME(ff_sine_##size))[size]</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SINETABLE120960</name><parameter_list>(<parameter><type><name>size</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>DECLARE_ALIGNED(32, INTFLOAT, AAC_RENAME(ff_sine_##size))[size]</cpp:value></cpp:define>







<function_decl><type><name>void</name> <name>AAC_RENAME</name></type>(<name>ff_sine_window_init</name>)<parameter_list>(<parameter><decl><type><name>INTFLOAT</name> <modifier>*</modifier></type><name>window</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name> <name>AAC_RENAME</name></type>(<name>ff_init_ff_sine_windows</name>)<parameter_list>(<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>)</parameter_list>;</function_decl>

<extern>extern SINETABLE( 32</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SINETABLE( 64</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SINETABLE120960(120</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SINETABLE( 128</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SINETABLE( 256</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SINETABLE( 512</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SINETABLE120960(960</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SINETABLE(1024</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SINETABLE(2048</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SINETABLE(4096</extern>)<empty_stmt>;</empty_stmt>
<extern>extern SINETABLE(8192</extern>)<empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>SINETABLE_CONST</name> <name>INTFLOAT</name> <modifier>*</modifier> <specifier>const</specifier></type> <name>AAC_RENAME</name><argument_list>(<argument><expr><name>ff_sine_windows</name></expr></argument>)</argument_list>[16]</decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
