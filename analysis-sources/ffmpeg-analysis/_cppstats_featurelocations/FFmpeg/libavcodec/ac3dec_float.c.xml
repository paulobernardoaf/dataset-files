<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\ac3dec_float.c">




























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ac3dec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"eac3dec.c"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ac3dec.c"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVOption</name></type> <name><name>options</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"cons_noisegen"</literal></expr>, <expr><literal type="string">"enable consistent noise generation"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>consistent_noise_generation</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>PAR</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"drc_scale"</literal></expr>, <expr><literal type="string">"percentage of dynamic range compression to apply"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>drc_scale</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">1.0</literal></expr>}</block></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">6.0</literal></expr>, <expr><name>PAR</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"heavy_compr"</literal></expr>, <expr><literal type="string">"enable heavy dynamic range compression"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>heavy_compression</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>PAR</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"target_level"</literal></expr>, <expr><literal type="string">"target level in -dBFS (0 not applied)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>target_level</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">31</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>PAR</name></expr> }</block></expr>,

<expr><block>{<expr><literal type="string">"dmix_mode"</literal></expr>, <expr><literal type="string">"Preferred Stereo Downmix Mode"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>preferred_stereo_downmix</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="string">"dmix_mode"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ltrt_cmixlev"</literal></expr>, <expr><literal type="string">"Lt/Rt Center Mix Level"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>ltrt_center_mix_level</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <operator>-</operator><literal type="number">1.0</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1.0</literal></expr>, <expr><literal type="number">2.0</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ltrt_surmixlev"</literal></expr>, <expr><literal type="string">"Lt/Rt Surround Mix Level"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>ltrt_surround_mix_level</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <operator>-</operator><literal type="number">1.0</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1.0</literal></expr>, <expr><literal type="number">2.0</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"loro_cmixlev"</literal></expr>, <expr><literal type="string">"Lo/Ro Center Mix Level"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>loro_center_mix_level</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <operator>-</operator><literal type="number">1.0</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1.0</literal></expr>, <expr><literal type="number">2.0</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"loro_surmixlev"</literal></expr>, <expr><literal type="string">"Lo/Ro Surround Mix Level"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>loro_surround_mix_level</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name> <operator>=</operator> <operator>-</operator><literal type="number">1.0</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1.0</literal></expr>, <expr><literal type="number">2.0</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,

<expr><block>{ <expr><name>NULL</name></expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVClass</name></type> <name>ac3_decoder_class</name> <init>= <expr><block>{
<expr><operator>.</operator><name>class_name</name> <operator>=</operator> <literal type="string">"AC3 decoder"</literal></expr>,
<expr><operator>.</operator><name>item_name</name> <operator>=</operator> <name>av_default_item_name</name></expr>,
<expr><operator>.</operator><name>option</name> <operator>=</operator> <name>options</name></expr>,
<expr><operator>.</operator><name>version</name> <operator>=</operator> <name>LIBAVUTIL_VERSION_INT</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodec</name></type> <name>ff_ac3_decoder</name> <init>= <expr><block>{
<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"ac3"</literal></expr>,
<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>AVMEDIA_TYPE_AUDIO</name></expr>,
<expr><operator>.</operator><name>id</name> <operator>=</operator> <name>AV_CODEC_ID_AC3</name></expr>,
<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof <argument_list>(<argument><expr><name>AC3DecodeContext</name></expr></argument>)</argument_list></sizeof></expr>,
<expr><operator>.</operator><name>init</name> <operator>=</operator> <name>ac3_decode_init</name></expr>,
<expr><operator>.</operator><name>close</name> <operator>=</operator> <name>ac3_decode_end</name></expr>,
<expr><operator>.</operator><name>decode</name> <operator>=</operator> <name>ac3_decode_frame</name></expr>,
<expr><operator>.</operator><name>capabilities</name> <operator>=</operator> <name>AV_CODEC_CAP_DR1</name></expr>,
<expr><operator>.</operator><name>long_name</name> <operator>=</operator> <call><name>NULL_IF_CONFIG_SMALL</name><argument_list>(<argument><expr><literal type="string">"ATSC A/52A (AC-3)"</literal></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name>sample_fmts</name> <operator>=</operator> <operator>(</operator><specifier>const</specifier> enum <name><name>AVSampleFormat</name><index>[]</index></name><operator>)</operator> <block>{ <expr><name>AV_SAMPLE_FMT_FLTP</name></expr>,
<expr><name>AV_SAMPLE_FMT_NONE</name></expr> }</block></expr>,
<expr><operator>.</operator><name>priv_class</name> <operator>=</operator> <operator>&amp;</operator><name>ac3_decoder_class</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_EAC3_DECODER</name></expr></cpp:if>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVClass</name></type> <name>eac3_decoder_class</name> <init>= <expr><block>{
<expr><operator>.</operator><name>class_name</name> <operator>=</operator> <literal type="string">"E-AC3 decoder"</literal></expr>,
<expr><operator>.</operator><name>item_name</name> <operator>=</operator> <name>av_default_item_name</name></expr>,
<expr><operator>.</operator><name>option</name> <operator>=</operator> <name>options</name></expr>,
<expr><operator>.</operator><name>version</name> <operator>=</operator> <name>LIBAVUTIL_VERSION_INT</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodec</name></type> <name>ff_eac3_decoder</name> <init>= <expr><block>{
<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"eac3"</literal></expr>,
<expr><operator>.</operator><name>type</name> <operator>=</operator> <name>AVMEDIA_TYPE_AUDIO</name></expr>,
<expr><operator>.</operator><name>id</name> <operator>=</operator> <name>AV_CODEC_ID_EAC3</name></expr>,
<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof <argument_list>(<argument><expr><name>AC3DecodeContext</name></expr></argument>)</argument_list></sizeof></expr>,
<expr><operator>.</operator><name>init</name> <operator>=</operator> <name>ac3_decode_init</name></expr>,
<expr><operator>.</operator><name>close</name> <operator>=</operator> <name>ac3_decode_end</name></expr>,
<expr><operator>.</operator><name>decode</name> <operator>=</operator> <name>ac3_decode_frame</name></expr>,
<expr><operator>.</operator><name>capabilities</name> <operator>=</operator> <name>AV_CODEC_CAP_DR1</name></expr>,
<expr><operator>.</operator><name>long_name</name> <operator>=</operator> <call><name>NULL_IF_CONFIG_SMALL</name><argument_list>(<argument><expr><literal type="string">"ATSC A/52B (AC-3, E-AC-3)"</literal></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name>sample_fmts</name> <operator>=</operator> <operator>(</operator><specifier>const</specifier> enum <name><name>AVSampleFormat</name><index>[]</index></name><operator>)</operator> <block>{ <expr><name>AV_SAMPLE_FMT_FLTP</name></expr>,
<expr><name>AV_SAMPLE_FMT_NONE</name></expr> }</block></expr>,
<expr><operator>.</operator><name>priv_class</name> <operator>=</operator> <operator>&amp;</operator><name>eac3_decoder_class</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
