<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mips\wmv2dsp_mmi.c">





















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/avassert.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"constants.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"wmv2dsp_mips.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mips/mmiutils.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>W0</name></cpp:macro> <cpp:value>2048</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>W1</name></cpp:macro> <cpp:value>2841</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>W2</name></cpp:macro> <cpp:value>2676</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>W3</name></cpp:macro> <cpp:value>2408</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>W4</name></cpp:macro> <cpp:value>2048</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>W5</name></cpp:macro> <cpp:value>1609</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>W6</name></cpp:macro> <cpp:value>1108</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>W7</name></cpp:macro> <cpp:value>565</cpp:value></cpp:define> 

<function><type><specifier>static</specifier> <name>void</name></type> <name>wmv2_idct_row_mmi</name><parameter_list>(<parameter><decl><type><name>short</name> <modifier>*</modifier></type> <name>b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>s1</name></decl>, <decl><type ref="prev"/><name>s2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>a0</name></decl>, <decl><type ref="prev"/><name>a1</name></decl>, <decl><type ref="prev"/><name>a2</name></decl>, <decl><type ref="prev"/><name>a3</name></decl>, <decl><type ref="prev"/><name>a4</name></decl>, <decl><type ref="prev"/><name>a5</name></decl>, <decl><type ref="prev"/><name>a6</name></decl>, <decl><type ref="prev"/><name>a7</name></decl>;</decl_stmt>


<expr_stmt><expr><name>a0</name> <operator>=</operator> <name>W0</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name>W0</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>a1</name> <operator>=</operator> <name>W1</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name>W7</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>a2</name> <operator>=</operator> <name>W2</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+</operator> <name>W6</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>a3</name> <operator>=</operator> <name>W3</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>-</operator> <name>W5</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>a4</name> <operator>=</operator> <name>W0</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>-</operator> <name>W0</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>a5</name> <operator>=</operator> <name>W5</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>+</operator> <name>W3</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>a6</name> <operator>=</operator> <name>W6</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>-</operator> <name>W2</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>a7</name> <operator>=</operator> <name>W7</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>-</operator> <name>W1</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>


<expr_stmt><expr><name>s1</name> <operator>=</operator> <operator>(</operator><literal type="number">181</literal> <operator>*</operator> <operator>(</operator><name>a1</name> <operator>-</operator> <name>a5</name> <operator>+</operator> <name>a7</name> <operator>-</operator> <name>a3</name><operator>)</operator> <operator>+</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt> 
<expr_stmt><expr><name>s2</name> <operator>=</operator> <operator>(</operator><literal type="number">181</literal> <operator>*</operator> <operator>(</operator><name>a1</name> <operator>-</operator> <name>a5</name> <operator>-</operator> <name>a7</name> <operator>+</operator> <name>a3</name><operator>)</operator> <operator>+</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>


<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a0</name> <operator>+</operator> <name>a2</name> <operator>+</operator> <name>a1</name> <operator>+</operator> <name>a5</name> <operator>+</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a4</name> <operator>+</operator> <name>a6</name> <operator>+</operator> <name>s1</name> <operator>+</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a4</name> <operator>-</operator> <name>a6</name> <operator>+</operator> <name>s2</name> <operator>+</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a0</name> <operator>-</operator> <name>a2</name> <operator>+</operator> <name>a7</name> <operator>+</operator> <name>a3</name> <operator>+</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a0</name> <operator>-</operator> <name>a2</name> <operator>-</operator> <name>a7</name> <operator>-</operator> <name>a3</name> <operator>+</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a4</name> <operator>-</operator> <name>a6</name> <operator>-</operator> <name>s2</name> <operator>+</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a4</name> <operator>+</operator> <name>a6</name> <operator>-</operator> <name>s1</name> <operator>+</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a0</name> <operator>+</operator> <name>a2</name> <operator>-</operator> <name>a1</name> <operator>-</operator> <name>a5</name> <operator>+</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>wmv2_idct_col_mmi</name><parameter_list>(<parameter><decl><type><name>short</name> <modifier>*</modifier></type> <name>b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>s1</name></decl>, <decl><type ref="prev"/><name>s2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>a0</name></decl>, <decl><type ref="prev"/><name>a1</name></decl>, <decl><type ref="prev"/><name>a2</name></decl>, <decl><type ref="prev"/><name>a3</name></decl>, <decl><type ref="prev"/><name>a4</name></decl>, <decl><type ref="prev"/><name>a5</name></decl>, <decl><type ref="prev"/><name>a6</name></decl>, <decl><type ref="prev"/><name>a7</name></decl>;</decl_stmt>


<expr_stmt><expr><name>a0</name> <operator>=</operator> <operator>(</operator><name>W0</name> <operator>*</operator> <name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name>W0</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">32</literal></expr>]</index></name> <operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>a1</name> <operator>=</operator> <operator>(</operator><name>W1</name> <operator>*</operator> <name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name> <operator>+</operator> <name>W7</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">56</literal></expr>]</index></name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>a2</name> <operator>=</operator> <operator>(</operator><name>W2</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <operator>+</operator> <name>W6</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">48</literal></expr>]</index></name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>a3</name> <operator>=</operator> <operator>(</operator><name>W3</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">40</literal></expr>]</index></name> <operator>-</operator> <name>W5</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">24</literal></expr>]</index></name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>a4</name> <operator>=</operator> <operator>(</operator><name>W0</name> <operator>*</operator> <name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name> <operator>-</operator> <name>W0</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">32</literal></expr>]</index></name> <operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>a5</name> <operator>=</operator> <operator>(</operator><name>W5</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">40</literal></expr>]</index></name> <operator>+</operator> <name>W3</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">24</literal></expr>]</index></name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>a6</name> <operator>=</operator> <operator>(</operator><name>W6</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <operator>-</operator> <name>W2</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">48</literal></expr>]</index></name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>a7</name> <operator>=</operator> <operator>(</operator><name>W7</name> <operator>*</operator> <name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name> <operator>-</operator> <name>W1</name> <operator>*</operator> <name><name>b</name><index>[<expr><literal type="number">56</literal></expr>]</index></name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>s1</name> <operator>=</operator> <operator>(</operator><literal type="number">181</literal> <operator>*</operator> <operator>(</operator><name>a1</name> <operator>-</operator> <name>a5</name> <operator>+</operator> <name>a7</name> <operator>-</operator> <name>a3</name><operator>)</operator> <operator>+</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>s2</name> <operator>=</operator> <operator>(</operator><literal type="number">181</literal> <operator>*</operator> <operator>(</operator><name>a1</name> <operator>-</operator> <name>a5</name> <operator>-</operator> <name>a7</name> <operator>+</operator> <name>a3</name><operator>)</operator> <operator>+</operator> <literal type="number">128</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>


<expr_stmt><expr><name><name>b</name><index>[ <expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a0</name> <operator>+</operator> <name>a2</name> <operator>+</operator> <name>a1</name> <operator>+</operator> <name>a5</name> <operator>+</operator> <literal type="number">8192</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">14</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[ <expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a4</name> <operator>+</operator> <name>a6</name> <operator>+</operator> <name>s1</name> <operator>+</operator> <literal type="number">8192</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">14</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a4</name> <operator>-</operator> <name>a6</name> <operator>+</operator> <name>s2</name> <operator>+</operator> <literal type="number">8192</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">14</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">24</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a0</name> <operator>-</operator> <name>a2</name> <operator>+</operator> <name>a7</name> <operator>+</operator> <name>a3</name> <operator>+</operator> <literal type="number">8192</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">14</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">32</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a0</name> <operator>-</operator> <name>a2</name> <operator>-</operator> <name>a7</name> <operator>-</operator> <name>a3</name> <operator>+</operator> <literal type="number">8192</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">14</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">40</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a4</name> <operator>-</operator> <name>a6</name> <operator>-</operator> <name>s2</name> <operator>+</operator> <literal type="number">8192</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">14</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">48</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a4</name> <operator>+</operator> <name>a6</name> <operator>-</operator> <name>s1</name> <operator>+</operator> <literal type="number">8192</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">14</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">56</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>a0</name> <operator>+</operator> <name>a2</name> <operator>-</operator> <name>a1</name> <operator>-</operator> <name>a5</name> <operator>+</operator> <literal type="number">8192</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">14</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_wmv2_idct_add_mmi</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dest</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>line_size</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>block</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name><name>ftmp</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">64</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">8</literal></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>wmv2_idct_row_mmi</name><argument_list>(<argument><expr><name>block</name> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">8</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>wmv2_idct_col_mmi</name><argument_list>(<argument><expr><name>block</name> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<asm>__asm__ <specifier>volatile</specifier> (
"xor %[ftmp0], %[ftmp0], %[ftmp0] \n\t"


MMI_LDC1(%[ftmp1], %[block], 0x00)
MMI_LDC1(%[ftmp2], %[block], 0x08)
MMI_LDC1(%[ftmp3], %[block], 0x10)
MMI_LDC1(%[ftmp4], %[block], 0x18)
MMI_LDC1(%[ftmp5], %[block], 0x20)
MMI_LDC1(%[ftmp6], %[block], 0x28)
MMI_LDC1(%[ftmp7], %[block], 0x30)
MMI_LDC1(%[ftmp8], %[block], 0x38)

MMI_LDC1(%[ftmp9], %[dest], 0x00)
"punpckhbh %[ftmp10], %[ftmp9], %[ftmp0] \n\t"
"punpcklbh %[ftmp9], %[ftmp9], %[ftmp0] \n\t"
"paddh %[ftmp1], %[ftmp1], %[ftmp9] \n\t"
"paddh %[ftmp2], %[ftmp2], %[ftmp10] \n\t"
"packushb %[ftmp1], %[ftmp1], %[ftmp2] \n\t"
MMI_SDC1(%[ftmp1], %[dest], 0x00)
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"

MMI_LDC1(%[ftmp9], %[dest], 0x00)
"punpckhbh %[ftmp10], %[ftmp9], %[ftmp0] \n\t"
"punpcklbh %[ftmp9], %[ftmp9], %[ftmp0] \n\t"
"paddh %[ftmp3], %[ftmp3], %[ftmp9] \n\t"
"paddh %[ftmp4], %[ftmp4], %[ftmp10] \n\t"
"packushb %[ftmp3], %[ftmp3], %[ftmp4] \n\t"
MMI_SDC1(%[ftmp3], %[dest], 0x00)
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"

MMI_LDC1(%[ftmp9], %[dest], 0x00)
"punpckhbh %[ftmp10], %[ftmp9], %[ftmp0] \n\t"
"punpcklbh %[ftmp9], %[ftmp9], %[ftmp0] \n\t"
"paddh %[ftmp5], %[ftmp5], %[ftmp9] \n\t"
"paddh %[ftmp6], %[ftmp6], %[ftmp10] \n\t"
"packushb %[ftmp5], %[ftmp5], %[ftmp6] \n\t"
MMI_SDC1(%[ftmp5], %[dest], 0x00)
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"

MMI_LDC1(%[ftmp9], %[dest], 0x00)
"punpckhbh %[ftmp10], %[ftmp9], %[ftmp0] \n\t"
"punpcklbh %[ftmp9], %[ftmp9], %[ftmp0] \n\t"
"paddh %[ftmp7], %[ftmp7], %[ftmp9] \n\t"
"paddh %[ftmp8], %[ftmp8], %[ftmp10] \n\t"
"packushb %[ftmp7], %[ftmp7], %[ftmp8] \n\t"
MMI_SDC1(%[ftmp7], %[dest], 0x00)

PTR_ADDIU "%[block], %[block], 0x40 \n\t"
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"


MMI_LDC1(%[ftmp1], %[block], 0x00)
MMI_LDC1(%[ftmp2], %[block], 0x08)
MMI_LDC1(%[ftmp3], %[block], 0x10)
MMI_LDC1(%[ftmp4], %[block], 0x18)
MMI_LDC1(%[ftmp5], %[block], 0x20)
MMI_LDC1(%[ftmp6], %[block], 0x28)
MMI_LDC1(%[ftmp7], %[block], 0x30)
MMI_LDC1(%[ftmp8], %[block], 0x38)

MMI_LDC1(%[ftmp9], %[dest], 0x00)
"punpckhbh %[ftmp10], %[ftmp9], %[ftmp0] \n\t"
"punpcklbh %[ftmp9], %[ftmp9], %[ftmp0] \n\t"
"paddh %[ftmp1], %[ftmp1], %[ftmp9] \n\t"
"paddh %[ftmp2], %[ftmp2], %[ftmp10] \n\t"
"packushb %[ftmp1], %[ftmp1], %[ftmp2] \n\t"
MMI_SDC1(%[ftmp1], %[dest], 0x00)
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"

MMI_LDC1(%[ftmp9], %[dest], 0x00)
"punpckhbh %[ftmp10], %[ftmp9], %[ftmp0] \n\t"
"punpcklbh %[ftmp9], %[ftmp9], %[ftmp0] \n\t"
"paddh %[ftmp3], %[ftmp3], %[ftmp9] \n\t"
"paddh %[ftmp4], %[ftmp4], %[ftmp10] \n\t"
"packushb %[ftmp3], %[ftmp3], %[ftmp4] \n\t"
MMI_SDC1(%[ftmp3], %[dest], 0x00)
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"

MMI_LDC1(%[ftmp9], %[dest], 0x00)
"punpckhbh %[ftmp10], %[ftmp9], %[ftmp0] \n\t"
"punpcklbh %[ftmp9], %[ftmp9], %[ftmp0] \n\t"
"paddh %[ftmp5], %[ftmp5], %[ftmp9] \n\t"
"paddh %[ftmp6], %[ftmp6], %[ftmp10] \n\t"
"packushb %[ftmp5], %[ftmp5], %[ftmp6] \n\t"
MMI_SDC1(%[ftmp5], %[dest], 0x00)
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"

MMI_LDC1(%[ftmp9], %[dest], 0x00)
"punpckhbh %[ftmp10], %[ftmp9], %[ftmp0] \n\t"
"punpcklbh %[ftmp9], %[ftmp9], %[ftmp0] \n\t"
"paddh %[ftmp7], %[ftmp7], %[ftmp9] \n\t"
"paddh %[ftmp8], %[ftmp8], %[ftmp10] \n\t"
"packushb %[ftmp7], %[ftmp7], %[ftmp8] \n\t"
MMI_SDC1(%[ftmp7], %[dest], 0x00)
: [ftmp0]"=&amp;f"(ftmp[0]), [ftmp1]"=&amp;f"(ftmp[1]),
[ftmp2]"=&amp;f"(ftmp[2]), [ftmp3]"=&amp;f"(ftmp[3]),
[ftmp4]"=&amp;f"(ftmp[4]), [ftmp5]"=&amp;f"(ftmp[5]),
[ftmp6]"=&amp;f"(ftmp[6]), [ftmp7]"=&amp;f"(ftmp[7]),
[ftmp8]"=&amp;f"(ftmp[8]), [ftmp9]"=&amp;f"(ftmp[9]),
[ftmp10]"=&amp;f"(ftmp[10]),
[block]"+&amp;r"(block), [dest]"+&amp;r"(dest)
: [line_size]"r"((mips_reg)line_size)
: "memory"
);</asm>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_wmv2_idct_put_mmi</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dest</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>line_size</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>block</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name><name>ftmp</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">64</literal></expr>;</condition> <incr><expr><name>i</name> <operator>+=</operator> <literal type="number">8</literal></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>wmv2_idct_row_mmi</name><argument_list>(<argument><expr><name>block</name> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">8</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>wmv2_idct_col_mmi</name><argument_list>(<argument><expr><name>block</name> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<asm>__asm__ <specifier>volatile</specifier> (

MMI_LDC1(%[ftmp0], %[block], 0x00)
MMI_LDC1(%[ftmp1], %[block], 0x08)
MMI_LDC1(%[ftmp2], %[block], 0x10)
MMI_LDC1(%[ftmp3], %[block], 0x18)
MMI_LDC1(%[ftmp4], %[block], 0x20)
MMI_LDC1(%[ftmp5], %[block], 0x28)
MMI_LDC1(%[ftmp6], %[block], 0x30)
MMI_LDC1(%[ftmp7], %[block], 0x38)
"packushb %[ftmp0], %[ftmp0], %[ftmp1] \n\t"
"packushb %[ftmp2], %[ftmp2], %[ftmp3] \n\t"
"packushb %[ftmp4], %[ftmp4], %[ftmp5] \n\t"
"packushb %[ftmp6], %[ftmp6], %[ftmp7] \n\t"
MMI_SDC1(%[ftmp0], %[dest], 0x00)
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"
MMI_SDC1(%[ftmp2], %[dest], 0x00)
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"
MMI_SDC1(%[ftmp4], %[dest], 0x00)
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"
MMI_SDC1(%[ftmp6], %[dest], 0x00)

PTR_ADDIU "%[block], %[block], 0x40 \n\t"
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"


MMI_LDC1(%[ftmp0], %[block], 0x00)
MMI_LDC1(%[ftmp1], %[block], 0x08)
MMI_LDC1(%[ftmp2], %[block], 0x10)
MMI_LDC1(%[ftmp3], %[block], 0x18)
MMI_LDC1(%[ftmp4], %[block], 0x20)
MMI_LDC1(%[ftmp5], %[block], 0x28)
MMI_LDC1(%[ftmp6], %[block], 0x30)
MMI_LDC1(%[ftmp7], %[block], 0x38)
"packushb %[ftmp0], %[ftmp0], %[ftmp1] \n\t"
"packushb %[ftmp2], %[ftmp2], %[ftmp3] \n\t"
"packushb %[ftmp4], %[ftmp4], %[ftmp5] \n\t"
"packushb %[ftmp6], %[ftmp6], %[ftmp7] \n\t"
MMI_SDC1(%[ftmp0], %[dest], 0x00)
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"
MMI_SDC1(%[ftmp2], %[dest], 0x00)
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"
MMI_SDC1(%[ftmp4], %[dest], 0x00)
PTR_ADDU "%[dest], %[dest], %[line_size] \n\t"
MMI_SDC1(%[ftmp6], %[dest], 0x00)
: [ftmp0]"=&amp;f"(ftmp[0]), [ftmp1]"=&amp;f"(ftmp[1]),
[ftmp2]"=&amp;f"(ftmp[2]), [ftmp3]"=&amp;f"(ftmp[3]),
[ftmp4]"=&amp;f"(ftmp[4]), [ftmp5]"=&amp;f"(ftmp[5]),
[ftmp6]"=&amp;f"(ftmp[6]), [ftmp7]"=&amp;f"(ftmp[7]),
[block]"+&amp;r"(block), [dest]"+&amp;r"(dest)
: [line_size]"r"((mips_reg)line_size)
: "memory"
);</asm>
</block_content>}</block></function>
</unit>
