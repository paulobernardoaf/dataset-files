<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mips\vp9_lpf_msa.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/vp9dsp.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mips/generic_macros_msa.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vp9dsp_mips.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP9_LPF_FILTER4_4W</name><parameter_list>(<parameter><type><name>p1_in</name></type></parameter>, <parameter><type><name>p0_in</name></type></parameter>, <parameter><type><name>q0_in</name></type></parameter>, <parameter><type><name>q1_in</name></type></parameter>, <parameter><type><name>mask_in</name></type></parameter>, <parameter><type><name>hev_in</name></type></parameter>, <parameter><type><name>p1_out</name></type></parameter>, <parameter><type><name>p0_out</name></type></parameter>, <parameter><type><name>q0_out</name></type></parameter>, <parameter><type><name>q1_out</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ v16i8 p1_m, p0_m, q0_m, q1_m, q0_sub_p0, filt, filt1, filt2; const v16i8 cnst4b = __msa_ldi_b(4); const v16i8 cnst3b = __msa_ldi_b(3); p1_m = (v16i8) __msa_xori_b(p1_in, 0x80); p0_m = (v16i8) __msa_xori_b(p0_in, 0x80); q0_m = (v16i8) __msa_xori_b(q0_in, 0x80); q1_m = (v16i8) __msa_xori_b(q1_in, 0x80); filt = __msa_subs_s_b(p1_m, q1_m); filt = filt &amp; (v16i8) hev_in; q0_sub_p0 = __msa_subs_s_b(q0_m, p0_m); filt = __msa_adds_s_b(filt, q0_sub_p0); filt = __msa_adds_s_b(filt, q0_sub_p0); filt = __msa_adds_s_b(filt, q0_sub_p0); filt = filt &amp; (v16i8) mask_in; filt1 = __msa_adds_s_b(filt, cnst4b); filt1 &gt;&gt;= 3; filt2 = __msa_adds_s_b(filt, cnst3b); filt2 &gt;&gt;= 3; q0_m = __msa_subs_s_b(q0_m, filt1); q0_out = __msa_xori_b((v16u8) q0_m, 0x80); p0_m = __msa_adds_s_b(p0_m, filt2); p0_out = __msa_xori_b((v16u8) p0_m, 0x80); filt = __msa_srari_b(filt1, 1); hev_in = __msa_xori_b((v16u8) hev_in, 0xff); filt = filt &amp; (v16i8) hev_in; q1_m = __msa_subs_s_b(q1_m, filt); q1_out = __msa_xori_b((v16u8) q1_m, 0x80); p1_m = __msa_adds_s_b(p1_m, filt); p1_out = __msa_xori_b((v16u8) p1_m, 0x80); }</cpp:value></cpp:define>










































<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP9_FLAT4</name><parameter_list>(<parameter><type><name>p3_in</name></type></parameter>, <parameter><type><name>p2_in</name></type></parameter>, <parameter><type><name>p0_in</name></type></parameter>, <parameter><type><name>q0_in</name></type></parameter>, <parameter><type><name>q2_in</name></type></parameter>, <parameter><type><name>q3_in</name></type></parameter>, <parameter><type><name>flat_out</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ v16u8 tmp, p2_a_sub_p0, q2_a_sub_q0, p3_a_sub_p0, q3_a_sub_q0; v16u8 zero_in = { 0 }; tmp = __msa_ori_b(zero_in, 1); p2_a_sub_p0 = __msa_asub_u_b(p2_in, p0_in); q2_a_sub_q0 = __msa_asub_u_b(q2_in, q0_in); p3_a_sub_p0 = __msa_asub_u_b(p3_in, p0_in); q3_a_sub_q0 = __msa_asub_u_b(q3_in, q0_in); p2_a_sub_p0 = __msa_max_u_b(p2_a_sub_p0, q2_a_sub_q0); flat_out = __msa_max_u_b(p2_a_sub_p0, flat_out); p3_a_sub_p0 = __msa_max_u_b(p3_a_sub_p0, q3_a_sub_q0); flat_out = __msa_max_u_b(p3_a_sub_p0, flat_out); flat_out = (tmp &lt; (v16u8) flat_out); flat_out = __msa_xori_b(flat_out, 0xff); flat_out = flat_out &amp; (mask); }</cpp:value></cpp:define>




















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP9_FLAT5</name><parameter_list>(<parameter><type><name>p7_in</name></type></parameter>, <parameter><type><name>p6_in</name></type></parameter>, <parameter><type><name>p5_in</name></type></parameter>, <parameter><type><name>p4_in</name></type></parameter>, <parameter><type><name>p0_in</name></type></parameter>, <parameter><type><name>q0_in</name></type></parameter>, <parameter><type><name>q4_in</name></type></parameter>, <parameter><type><name>q5_in</name></type></parameter>, <parameter><type><name>q6_in</name></type></parameter>, <parameter><type><name>q7_in</name></type></parameter>, <parameter><type><name>flat_in</name></type></parameter>, <parameter><type><name>flat2_out</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ v16u8 tmp, zero_in = { 0 }; v16u8 p4_a_sub_p0, q4_a_sub_q0, p5_a_sub_p0, q5_a_sub_q0; v16u8 p6_a_sub_p0, q6_a_sub_q0, p7_a_sub_p0, q7_a_sub_q0; tmp = __msa_ori_b(zero_in, 1); p4_a_sub_p0 = __msa_asub_u_b(p4_in, p0_in); q4_a_sub_q0 = __msa_asub_u_b(q4_in, q0_in); p5_a_sub_p0 = __msa_asub_u_b(p5_in, p0_in); q5_a_sub_q0 = __msa_asub_u_b(q5_in, q0_in); p6_a_sub_p0 = __msa_asub_u_b(p6_in, p0_in); q6_a_sub_q0 = __msa_asub_u_b(q6_in, q0_in); p7_a_sub_p0 = __msa_asub_u_b(p7_in, p0_in); q7_a_sub_q0 = __msa_asub_u_b(q7_in, q0_in); p4_a_sub_p0 = __msa_max_u_b(p4_a_sub_p0, q4_a_sub_q0); flat2_out = __msa_max_u_b(p5_a_sub_p0, q5_a_sub_q0); flat2_out = __msa_max_u_b(p4_a_sub_p0, flat2_out); p6_a_sub_p0 = __msa_max_u_b(p6_a_sub_p0, q6_a_sub_q0); flat2_out = __msa_max_u_b(p6_a_sub_p0, flat2_out); p7_a_sub_p0 = __msa_max_u_b(p7_a_sub_p0, q7_a_sub_q0); flat2_out = __msa_max_u_b(p7_a_sub_p0, flat2_out); flat2_out = (tmp &lt; (v16u8) flat2_out); flat2_out = __msa_xori_b(flat2_out, 0xff); flat2_out = flat2_out &amp; flat_in; }</cpp:value></cpp:define>





























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP9_FILTER8</name><parameter_list>(<parameter><type><name>p3_in</name></type></parameter>, <parameter><type><name>p2_in</name></type></parameter>, <parameter><type><name>p1_in</name></type></parameter>, <parameter><type><name>p0_in</name></type></parameter>, <parameter><type><name>q0_in</name></type></parameter>, <parameter><type><name>q1_in</name></type></parameter>, <parameter><type><name>q2_in</name></type></parameter>, <parameter><type><name>q3_in</name></type></parameter>, <parameter><type><name>p2_filt8_out</name></type></parameter>, <parameter><type><name>p1_filt8_out</name></type></parameter>, <parameter><type><name>p0_filt8_out</name></type></parameter>, <parameter><type><name>q0_filt8_out</name></type></parameter>, <parameter><type><name>q1_filt8_out</name></type></parameter>, <parameter><type><name>q2_filt8_out</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ v8u16 tmp0, tmp1, tmp2; tmp2 = p2_in + p1_in + p0_in; tmp0 = p3_in &lt;&lt; 1; tmp0 = tmp0 + tmp2 + q0_in; tmp1 = tmp0 + p3_in + p2_in; p2_filt8_out = (v8i16) __msa_srari_h((v8i16) tmp1, 3); tmp1 = tmp0 + p1_in + q1_in; p1_filt8_out = (v8i16) __msa_srari_h((v8i16) tmp1, 3); tmp1 = q2_in + q1_in + q0_in; tmp2 = tmp2 + tmp1; tmp0 = tmp2 + (p0_in); tmp0 = tmp0 + (p3_in); p0_filt8_out = (v8i16) __msa_srari_h((v8i16) tmp0, 3); tmp0 = q2_in + q3_in; tmp0 = p0_in + tmp1 + tmp0; tmp1 = q3_in + q3_in; tmp1 = tmp1 + tmp0; q2_filt8_out = (v8i16) __msa_srari_h((v8i16) tmp1, 3); tmp0 = tmp2 + q3_in; tmp1 = tmp0 + q0_in; q0_filt8_out = (v8i16) __msa_srari_h((v8i16) tmp1, 3); tmp1 = tmp0 - p2_in; tmp0 = q1_in + q3_in; tmp1 = tmp0 + tmp1; q1_filt8_out = (v8i16) __msa_srari_h((v8i16) tmp1, 3); }</cpp:value></cpp:define>






































<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LPF_MASK_HEV</name><parameter_list>(<parameter><type><name>p3_in</name></type></parameter>, <parameter><type><name>p2_in</name></type></parameter>, <parameter><type><name>p1_in</name></type></parameter>, <parameter><type><name>p0_in</name></type></parameter>, <parameter><type><name>q0_in</name></type></parameter>, <parameter><type><name>q1_in</name></type></parameter>, <parameter><type><name>q2_in</name></type></parameter>, <parameter><type><name>q3_in</name></type></parameter>, <parameter><type><name>limit_in</name></type></parameter>, <parameter><type><name>b_limit_in</name></type></parameter>, <parameter><type><name>thresh_in</name></type></parameter>, <parameter><type><name>hev_out</name></type></parameter>, <parameter><type><name>mask_out</name></type></parameter>, <parameter><type><name>flat_out</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ v16u8 p3_asub_p2_m, p2_asub_p1_m, p1_asub_p0_m, q1_asub_q0_m; v16u8 p1_asub_q1_m, p0_asub_q0_m, q3_asub_q2_m, q2_asub_q1_m; p3_asub_p2_m = __msa_asub_u_b(p3_in, p2_in); p2_asub_p1_m = __msa_asub_u_b(p2_in, p1_in); p1_asub_p0_m = __msa_asub_u_b(p1_in, p0_in); q1_asub_q0_m = __msa_asub_u_b(q1_in, q0_in); q2_asub_q1_m = __msa_asub_u_b(q2_in, q1_in); q3_asub_q2_m = __msa_asub_u_b(q3_in, q2_in); p0_asub_q0_m = __msa_asub_u_b(p0_in, q0_in); p1_asub_q1_m = __msa_asub_u_b(p1_in, q1_in); flat_out = __msa_max_u_b(p1_asub_p0_m, q1_asub_q0_m); hev_out = thresh_in &lt; (v16u8) flat_out; p0_asub_q0_m = __msa_adds_u_b(p0_asub_q0_m, p0_asub_q0_m); p1_asub_q1_m &gt;&gt;= 1; p0_asub_q0_m = __msa_adds_u_b(p0_asub_q0_m, p1_asub_q1_m); mask_out = b_limit_in &lt; p0_asub_q0_m; mask_out = __msa_max_u_b(flat_out, mask_out); p3_asub_p2_m = __msa_max_u_b(p3_asub_p2_m, p2_asub_p1_m); mask_out = __msa_max_u_b(p3_asub_p2_m, mask_out); q2_asub_q1_m = __msa_max_u_b(q2_asub_q1_m, q3_asub_q2_m); mask_out = __msa_max_u_b(q2_asub_q1_m, mask_out); mask_out = limit_in &lt; (v16u8) mask_out; mask_out = __msa_xori_b(mask_out, 0xff); }</cpp:value></cpp:define>





































<function><type><name>void</name></type> <name>ff_loop_filter_v_4_8_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>p1_d</name></decl>, <decl><type ref="prev"/><name>p0_d</name></decl>, <decl><type ref="prev"/><name>q0_d</name></decl>, <decl><type ref="prev"/><name>q1_d</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>flat</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>, <decl><type ref="prev"/><name>p1_out</name></decl>, <decl><type ref="prev"/><name>p0_out</name></decl>, <decl><type ref="prev"/><name>q0_out</name></decl>, <decl><type ref="prev"/><name>q1_out</name></decl>;</decl_stmt>


<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>,
<argument><expr><name>q1_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>p1_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p1_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p0_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>q0_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>q1_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD4</name><argument_list>(<argument><expr><name>p1_d</name></expr></argument>, <argument><expr><name>p0_d</name></expr></argument>, <argument><expr><name>q0_d</name></expr></argument>, <argument><expr><name>q1_d</name></expr></argument>, <argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>ff_loop_filter_v_44_16_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>flat</name></decl>, <decl><type ref="prev"/><name>thresh0</name></decl>, <decl><type ref="prev"/><name>b_limit0</name></decl>, <decl><type ref="prev"/><name>limit0</name></decl>, <decl><type ref="prev"/><name>thresh1</name></decl>, <decl><type ref="prev"/><name>b_limit1</name></decl>, <decl><type ref="prev"/><name>limit1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>


<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>thresh1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>thresh0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>thresh1</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>thresh0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_limit0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>b_limit1</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>b_limit0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>limit0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>limit1</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>limit0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit0</name></expr></argument>, <argument><expr><name>b_limit0</name></expr></argument>, <argument><expr><name>thresh0</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_v_8_8_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>p2_d</name></decl>, <decl><type ref="prev"/><name>p1_d</name></decl>, <decl><type ref="prev"/><name>p0_d</name></decl>, <decl><type ref="prev"/><name>q0_d</name></decl>, <decl><type ref="prev"/><name>q1_d</name></decl>, <decl><type ref="prev"/><name>q2_d</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>flat</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p2_out</name></decl>, <decl><type ref="prev"/><name>p1_out</name></decl>, <decl><type ref="prev"/><name>p0_out</name></decl>, <decl><type ref="prev"/><name>q0_out</name></decl>, <decl><type ref="prev"/><name>q1_out</name></decl>, <decl><type ref="prev"/><name>q2_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filter8</name></decl>, <decl><type ref="prev"/><name>p1_filter8</name></decl>, <decl><type ref="prev"/><name>p0_filter8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filter8</name></decl>, <decl><type ref="prev"/><name>q1_filter8</name></decl>, <decl><type ref="prev"/><name>q2_filter8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_r</name></decl>, <decl><type ref="prev"/><name>p2_r</name></decl>, <decl><type ref="prev"/><name>p1_r</name></decl>, <decl><type ref="prev"/><name>p0_r</name></decl>, <decl><type ref="prev"/><name>q3_r</name></decl>, <decl><type ref="prev"/><name>q2_r</name></decl>, <decl><type ref="prev"/><name>q1_r</name></decl>, <decl><type ref="prev"/><name>q0_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FLAT4</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>,
<argument><expr><name>q1_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>flat</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>p1_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p1_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p0_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>q0_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>q1_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD4</name><argument_list>(<argument><expr><name>p1_d</name></expr></argument>, <argument><expr><name>p0_d</name></expr></argument>, <argument><expr><name>q0_d</name></expr></argument>, <argument><expr><name>q1_d</name></expr></argument>, <argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>,
<argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>, <argument><expr><name>p2_filter8</name></expr></argument>,
<argument><expr><name>p1_filter8</name></expr></argument>, <argument><expr><name>p0_filter8</name></expr></argument>, <argument><expr><name>q0_filter8</name></expr></argument>, <argument><expr><name>q1_filter8</name></expr></argument>, <argument><expr><name>q2_filter8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>PCKEV_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2_filter8</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1_filter8</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0_filter8</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0_filter8</name></expr></argument>, <argument><expr><name>p2_filter8</name></expr></argument>, <argument><expr><name>p1_filter8</name></expr></argument>, <argument><expr><name>p0_filter8</name></expr></argument>,
<argument><expr><name>q0_filter8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1_filter8</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2_filter8</name></expr></argument>, <argument><expr><name>q1_filter8</name></expr></argument>, <argument><expr><name>q2_filter8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p2_filter8</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p1_filter8</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p0_filter8</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q0_filter8</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q1_filter8</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q2_filter8</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>p2_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p2_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p1_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p0_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>q0_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>q1_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>q2_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal> <operator>*</operator> <name>pitch</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD4</name><argument_list>(<argument><expr><name>p2_d</name></expr></argument>, <argument><expr><name>p1_d</name></expr></argument>, <argument><expr><name>p0_d</name></expr></argument>, <argument><expr><name>q0_d</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>q1_d</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>q2_d</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_v_88_16_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p2_out</name></decl>, <decl><type ref="prev"/><name>p1_out</name></decl>, <decl><type ref="prev"/><name>p0_out</name></decl>, <decl><type ref="prev"/><name>q0_out</name></decl>, <decl><type ref="prev"/><name>q1_out</name></decl>, <decl><type ref="prev"/><name>q2_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>flat</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>tmp</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_r</name></decl>, <decl><type ref="prev"/><name>p2_r</name></decl>, <decl><type ref="prev"/><name>p1_r</name></decl>, <decl><type ref="prev"/><name>p0_r</name></decl>, <decl><type ref="prev"/><name>q0_r</name></decl>, <decl><type ref="prev"/><name>q1_r</name></decl>, <decl><type ref="prev"/><name>q2_r</name></decl>, <decl><type ref="prev"/><name>q3_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_l</name></decl>, <decl><type ref="prev"/><name>p2_l</name></decl>, <decl><type ref="prev"/><name>p1_l</name></decl>, <decl><type ref="prev"/><name>p0_l</name></decl>, <decl><type ref="prev"/><name>q0_l</name></decl>, <decl><type ref="prev"/><name>q1_l</name></decl>, <decl><type ref="prev"/><name>q2_l</name></decl>, <decl><type ref="prev"/><name>q3_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_r</name></decl>, <decl><type ref="prev"/><name>p1_filt8_r</name></decl>, <decl><type ref="prev"/><name>p0_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_r</name></decl>, <decl><type ref="prev"/><name>q1_filt8_r</name></decl>, <decl><type ref="prev"/><name>q2_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_l</name></decl>, <decl><type ref="prev"/><name>p1_filt8_l</name></decl>, <decl><type ref="prev"/><name>p0_filt8_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_l</name></decl>, <decl><type ref="prev"/><name>q1_filt8_l</name></decl>, <decl><type ref="prev"/><name>q2_filt8_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>tmp</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>thresh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>tmp</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>b_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>tmp</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FLAT4</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>,
<argument><expr><name>q1_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>,
<argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>,
<argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p3_l</name></expr></argument>, <argument><expr><name>p2_l</name></expr></argument>, <argument><expr><name>p1_l</name></expr></argument>,
<argument><expr><name>p0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q0_l</name></expr></argument>, <argument><expr><name>q1_l</name></expr></argument>, <argument><expr><name>q2_l</name></expr></argument>,
<argument><expr><name>q3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_l</name></expr></argument>, <argument><expr><name>p2_l</name></expr></argument>, <argument><expr><name>p1_l</name></expr></argument>, <argument><expr><name>p0_l</name></expr></argument>, <argument><expr><name>q0_l</name></expr></argument>, <argument><expr><name>q1_l</name></expr></argument>, <argument><expr><name>q2_l</name></expr></argument>, <argument><expr><name>q3_l</name></expr></argument>, <argument><expr><name>p2_filt8_l</name></expr></argument>,
<argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>, <argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>PCKEV_B4_SH</name><argument_list>(<argument><expr><name>p2_filt8_l</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>,
<argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>,
<argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>,
<argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal> <operator>*</operator> <name>pitch</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>p2_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB2</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q2_out</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_v_84_16_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p2_out</name></decl>, <decl><type ref="prev"/><name>p1_out</name></decl>, <decl><type ref="prev"/><name>p0_out</name></decl>, <decl><type ref="prev"/><name>q0_out</name></decl>, <decl><type ref="prev"/><name>q1_out</name></decl>, <decl><type ref="prev"/><name>q2_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>flat</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>tmp</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_r</name></decl>, <decl><type ref="prev"/><name>p2_r</name></decl>, <decl><type ref="prev"/><name>p1_r</name></decl>, <decl><type ref="prev"/><name>p0_r</name></decl>, <decl><type ref="prev"/><name>q0_r</name></decl>, <decl><type ref="prev"/><name>q1_r</name></decl>, <decl><type ref="prev"/><name>q2_r</name></decl>, <decl><type ref="prev"/><name>q3_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_r</name></decl>, <decl><type ref="prev"/><name>p1_filt8_r</name></decl>, <decl><type ref="prev"/><name>p0_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_r</name></decl>, <decl><type ref="prev"/><name>q1_filt8_r</name></decl>, <decl><type ref="prev"/><name>q2_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>tmp</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>thresh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>tmp</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>b_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>tmp</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FLAT4</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>,
<argument><expr><name>q1_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>flat</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>,
<argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>,
<argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>PCKEV_B4_SH</name><argument_list>(<argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>,
<argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>,
<argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>,
<argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal> <operator>*</operator> <name>pitch</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>p2_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB2</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q2_out</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_v_48_16_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p2_out</name></decl>, <decl><type ref="prev"/><name>p1_out</name></decl>, <decl><type ref="prev"/><name>p0_out</name></decl>, <decl><type ref="prev"/><name>q0_out</name></decl>, <decl><type ref="prev"/><name>q1_out</name></decl>, <decl><type ref="prev"/><name>q2_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>flat</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>tmp</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_l</name></decl>, <decl><type ref="prev"/><name>p2_l</name></decl>, <decl><type ref="prev"/><name>p1_l</name></decl>, <decl><type ref="prev"/><name>p0_l</name></decl>, <decl><type ref="prev"/><name>q0_l</name></decl>, <decl><type ref="prev"/><name>q1_l</name></decl>, <decl><type ref="prev"/><name>q2_l</name></decl>, <decl><type ref="prev"/><name>q3_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_l</name></decl>, <decl><type ref="prev"/><name>p1_filt8_l</name></decl>, <decl><type ref="prev"/><name>p0_filt8_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_l</name></decl>, <decl><type ref="prev"/><name>q1_filt8_l</name></decl>, <decl><type ref="prev"/><name>q2_filt8_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>tmp</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>thresh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>tmp</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>b_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>tmp</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FLAT4</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>,
<argument><expr><name>q1_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>flat</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_insve_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>flat</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p3_l</name></expr></argument>, <argument><expr><name>p2_l</name></expr></argument>, <argument><expr><name>p1_l</name></expr></argument>,
<argument><expr><name>p0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q0_l</name></expr></argument>, <argument><expr><name>q1_l</name></expr></argument>, <argument><expr><name>q2_l</name></expr></argument>,
<argument><expr><name>q3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_l</name></expr></argument>, <argument><expr><name>p2_l</name></expr></argument>, <argument><expr><name>p1_l</name></expr></argument>, <argument><expr><name>p0_l</name></expr></argument>, <argument><expr><name>q0_l</name></expr></argument>, <argument><expr><name>q1_l</name></expr></argument>, <argument><expr><name>q2_l</name></expr></argument>, <argument><expr><name>q3_l</name></expr></argument>, <argument><expr><name>p2_filt8_l</name></expr></argument>,
<argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>, <argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>PCKEV_B4_SH</name><argument_list>(<argument><expr><name>p2_filt8_l</name></expr></argument>, <argument><expr><name>p2_filt8_l</name></expr></argument>, <argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p1_filt8_l</name></expr></argument>,
<argument><expr><name>p0_filt8_l</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>,
<argument><expr><name>p2_filt8_l</name></expr></argument>, <argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>,
<argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p2_filt8_l</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p1_filt8_l</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p0_filt8_l</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q0_filt8_l</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q1_filt8_l</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q2_filt8_l</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal> <operator>*</operator> <name>pitch</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>p2_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB2</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q2_out</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>vp9_hz_lpf_t4_and_t8_16w</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>filter48</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p2_out</name></decl>, <decl><type ref="prev"/><name>p1_out</name></decl>, <decl><type ref="prev"/><name>p0_out</name></decl>, <decl><type ref="prev"/><name>q0_out</name></decl>, <decl><type ref="prev"/><name>q1_out</name></decl>, <decl><type ref="prev"/><name>q2_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>flat</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_r</name></decl>, <decl><type ref="prev"/><name>p2_r</name></decl>, <decl><type ref="prev"/><name>p1_r</name></decl>, <decl><type ref="prev"/><name>p0_r</name></decl>, <decl><type ref="prev"/><name>q0_r</name></decl>, <decl><type ref="prev"/><name>q1_r</name></decl>, <decl><type ref="prev"/><name>q2_r</name></decl>, <decl><type ref="prev"/><name>q3_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_l</name></decl>, <decl><type ref="prev"/><name>p2_l</name></decl>, <decl><type ref="prev"/><name>p1_l</name></decl>, <decl><type ref="prev"/><name>p0_l</name></decl>, <decl><type ref="prev"/><name>q0_l</name></decl>, <decl><type ref="prev"/><name>q1_l</name></decl>, <decl><type ref="prev"/><name>q2_l</name></decl>, <decl><type ref="prev"/><name>q3_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_r</name></decl>, <decl><type ref="prev"/><name>p1_filt8_r</name></decl>, <decl><type ref="prev"/><name>p0_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_r</name></decl>, <decl><type ref="prev"/><name>q1_filt8_r</name></decl>, <decl><type ref="prev"/><name>q2_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_l</name></decl>, <decl><type ref="prev"/><name>p1_filt8_l</name></decl>, <decl><type ref="prev"/><name>p0_filt8_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_l</name></decl>, <decl><type ref="prev"/><name>q1_filt8_l</name></decl>, <decl><type ref="prev"/><name>q2_filt8_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FLAT4</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>,
<argument><expr><name>q1_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>,
<argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>,
<argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p3_l</name></expr></argument>, <argument><expr><name>p2_l</name></expr></argument>, <argument><expr><name>p1_l</name></expr></argument>,
<argument><expr><name>p0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q0_l</name></expr></argument>, <argument><expr><name>q1_l</name></expr></argument>, <argument><expr><name>q2_l</name></expr></argument>,
<argument><expr><name>q3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_l</name></expr></argument>, <argument><expr><name>p2_l</name></expr></argument>, <argument><expr><name>p1_l</name></expr></argument>, <argument><expr><name>p0_l</name></expr></argument>, <argument><expr><name>q0_l</name></expr></argument>, <argument><expr><name>q1_l</name></expr></argument>, <argument><expr><name>q2_l</name></expr></argument>, <argument><expr><name>q3_l</name></expr></argument>, <argument><expr><name>p2_filt8_l</name></expr></argument>,
<argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>, <argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>PCKEV_B4_SH</name><argument_list>(<argument><expr><name>p2_filt8_l</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>,
<argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>,
<argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>,
<argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>p2_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>filter48</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter48</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB2</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q2_out</name></expr></argument>, <argument><expr><name>filter48</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter48</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>flat</name></expr></argument>, <argument><expr><name>filter48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vp9_hz_lpf_t16_16w</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>filter48</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>flat</name></decl>, <decl><type ref="prev"/><name>flat2</name></decl>, <decl><type ref="prev"/><name>filter8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p7</name></decl>, <decl><type ref="prev"/><name>p6</name></decl>, <decl><type ref="prev"/><name>p5</name></decl>, <decl><type ref="prev"/><name>p4</name></decl>, <decl><type ref="prev"/><name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q4</name></decl>, <decl><type ref="prev"/><name>q5</name></decl>, <decl><type ref="prev"/><name>q6</name></decl>, <decl><type ref="prev"/><name>q7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p7_r_in</name></decl>, <decl><type ref="prev"/><name>p6_r_in</name></decl>, <decl><type ref="prev"/><name>p5_r_in</name></decl>, <decl><type ref="prev"/><name>p4_r_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_r_in</name></decl>, <decl><type ref="prev"/><name>p2_r_in</name></decl>, <decl><type ref="prev"/><name>p1_r_in</name></decl>, <decl><type ref="prev"/><name>p0_r_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>q7_r_in</name></decl>, <decl><type ref="prev"/><name>q6_r_in</name></decl>, <decl><type ref="prev"/><name>q5_r_in</name></decl>, <decl><type ref="prev"/><name>q4_r_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>q3_r_in</name></decl>, <decl><type ref="prev"/><name>q2_r_in</name></decl>, <decl><type ref="prev"/><name>q1_r_in</name></decl>, <decl><type ref="prev"/><name>q0_r_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p7_l_in</name></decl>, <decl><type ref="prev"/><name>p6_l_in</name></decl>, <decl><type ref="prev"/><name>p5_l_in</name></decl>, <decl><type ref="prev"/><name>p4_l_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_l_in</name></decl>, <decl><type ref="prev"/><name>p2_l_in</name></decl>, <decl><type ref="prev"/><name>p1_l_in</name></decl>, <decl><type ref="prev"/><name>p0_l_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>q7_l_in</name></decl>, <decl><type ref="prev"/><name>q6_l_in</name></decl>, <decl><type ref="prev"/><name>q5_l_in</name></decl>, <decl><type ref="prev"/><name>q4_l_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>q3_l_in</name></decl>, <decl><type ref="prev"/><name>q2_l_in</name></decl>, <decl><type ref="prev"/><name>q1_l_in</name></decl>, <decl><type ref="prev"/><name>q0_l_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0_r</name></decl>, <decl><type ref="prev"/><name>tmp1_r</name></decl>, <decl><type ref="prev"/><name>tmp0_l</name></decl>, <decl><type ref="prev"/><name>tmp1_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>l_out</name></decl>, <decl><type ref="prev"/><name>r_out</name></decl>;</decl_stmt>

<expr_stmt><expr><name>flat</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">96</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">8</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FLAT5</name><argument_list>(<argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>filter48</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal> <operator>*</operator> <name>pitch</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB2</name><argument_list>(<argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">7</literal> <operator>*</operator> <name>pitch</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p7_r_in</name></expr></argument>, <argument><expr><name>p6_r_in</name></expr></argument>, <argument><expr><name>p5_r_in</name></expr></argument>, <argument><expr><name>p4_r_in</name></expr></argument>,
<argument><expr><name>p3_r_in</name></expr></argument>, <argument><expr><name>p2_r_in</name></expr></argument>, <argument><expr><name>p1_r_in</name></expr></argument>, <argument><expr><name>p0_r_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q0_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p7_r_in</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>p6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>=</operator> <name>p6_r_in</name> <operator>+</operator> <name>p5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p7_l_in</name></expr></argument>, <argument><expr><name>p6_l_in</name></expr></argument>,
<argument><expr><name>p5_l_in</name></expr></argument>, <argument><expr><name>p4_l_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p3_l_in</name></expr></argument>, <argument><expr><name>p2_l_in</name></expr></argument>,
<argument><expr><name>p1_l_in</name></expr></argument>, <argument><expr><name>p0_l_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p7_l_in</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>p6_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q0_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>=</operator> <name>p6_l_in</name> <operator>+</operator> <name>p5_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>p4_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>p3_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>p2_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>p1_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>p0_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p6</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p6</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>p6</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>q1_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p5_r_in</name> <operator>-</operator> <name>p6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q1_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p5_l_in</name> <operator>-</operator> <name>p6_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q1_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p5</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p5</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>p5</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>q2_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p4_r_in</name> <operator>-</operator> <name>p5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q2_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p4_l_in</name> <operator>-</operator> <name>p5_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q2_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p4</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>p4</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>q3_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p3_r_in</name> <operator>-</operator> <name>p4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q3_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p3_l_in</name> <operator>-</operator> <name>p4_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q3_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p3</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>q4_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p2_r_in</name> <operator>-</operator> <name>p3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q4_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p2_l_in</name> <operator>-</operator> <name>p3_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q4_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>q5_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p1_r_in</name> <operator>-</operator> <name>p2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q5_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p1_l_in</name> <operator>-</operator> <name>p2_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q5_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>q6_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p0_r_in</name> <operator>-</operator> <name>p1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q6_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p0_l_in</name> <operator>-</operator> <name>p1_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q6_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>q7_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>p0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>q7_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>p0_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q0_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>q0_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q1_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p6_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>q1_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q2_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p5_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>q2_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q3_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p4_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q3</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q3</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>q3</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>q3_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q4_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p3_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q4</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>q4</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>q4_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q5_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p2_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q5</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q5</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>q5</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>q5_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q6_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p1_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q6</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q6</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>q6</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_v_16_16_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name> <name><name>filter48</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">8</literal></expr>]</index></name></type> <name>ALLOC_ALIGNED</name><argument_list>(<argument><expr><name>ALIGNMENT</name></expr></argument>)</argument_list></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>early_exit</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>early_exit</name> <operator>=</operator> <call><name>vp9_hz_lpf_t4_and_t8_16w</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>filter48</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>,
<argument><expr><name>b_limit_ptr</name></expr></argument>, <argument><expr><name>limit_ptr</name></expr></argument>, <argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>early_exit</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>vp9_hz_lpf_t16_16w</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>filter48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_v_16_8_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>p2_d</name></decl>, <decl><type ref="prev"/><name>p1_d</name></decl>, <decl><type ref="prev"/><name>p0_d</name></decl>, <decl><type ref="prev"/><name>q0_d</name></decl>, <decl><type ref="prev"/><name>q1_d</name></decl>, <decl><type ref="prev"/><name>q2_d</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>dword0</name></decl>, <decl><type ref="prev"/><name>dword1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>flat2</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>flat</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>, <decl><type ref="prev"/><name>p7</name></decl>, <decl><type ref="prev"/><name>p6</name></decl>, <decl><type ref="prev"/><name>p5</name></decl>, <decl><type ref="prev"/><name>p4</name></decl>, <decl><type ref="prev"/><name>q4</name></decl>, <decl><type ref="prev"/><name>q5</name></decl>, <decl><type ref="prev"/><name>q6</name></decl>, <decl><type ref="prev"/><name>q7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p2_out</name></decl>, <decl><type ref="prev"/><name>p1_out</name></decl>, <decl><type ref="prev"/><name>p0_out</name></decl>, <decl><type ref="prev"/><name>q0_out</name></decl>, <decl><type ref="prev"/><name>q1_out</name></decl>, <decl><type ref="prev"/><name>q2_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p0_filter16</name></decl>, <decl><type ref="prev"/><name>p1_filter16</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filter8</name></decl>, <decl><type ref="prev"/><name>p1_filter8</name></decl>, <decl><type ref="prev"/><name>p0_filter8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filter8</name></decl>, <decl><type ref="prev"/><name>q1_filter8</name></decl>, <decl><type ref="prev"/><name>q2_filter8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p7_r</name></decl>, <decl><type ref="prev"/><name>p6_r</name></decl>, <decl><type ref="prev"/><name>p5_r</name></decl>, <decl><type ref="prev"/><name>p4_r</name></decl>, <decl><type ref="prev"/><name>q7_r</name></decl>, <decl><type ref="prev"/><name>q6_r</name></decl>, <decl><type ref="prev"/><name>q5_r</name></decl>, <decl><type ref="prev"/><name>q4_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_r</name></decl>, <decl><type ref="prev"/><name>p2_r</name></decl>, <decl><type ref="prev"/><name>p1_r</name></decl>, <decl><type ref="prev"/><name>p0_r</name></decl>, <decl><type ref="prev"/><name>q3_r</name></decl>, <decl><type ref="prev"/><name>q2_r</name></decl>, <decl><type ref="prev"/><name>q1_r</name></decl>, <decl><type ref="prev"/><name>q0_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>;</decl_stmt>


<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FLAT4</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>,
<argument><expr><name>q1_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>flat</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>p1_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p1_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p0_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>q0_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>q1_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD4</name><argument_list>(<argument><expr><name>p1_d</name></expr></argument>, <argument><expr><name>p0_d</name></expr></argument>, <argument><expr><name>q0_d</name></expr></argument>, <argument><expr><name>q1_d</name></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal> <operator>*</operator> <name>pitch</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>,
<argument><expr><name>q1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>,
<argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>,
<argument><expr><name>p2_filter8</name></expr></argument>, <argument><expr><name>p1_filter8</name></expr></argument>, <argument><expr><name>p0_filter8</name></expr></argument>, <argument><expr><name>q0_filter8</name></expr></argument>,
<argument><expr><name>q1_filter8</name></expr></argument>, <argument><expr><name>q2_filter8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>PCKEV_B4_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2_filter8</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1_filter8</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0_filter8</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0_filter8</name></expr></argument>, <argument><expr><name>p2_filter8</name></expr></argument>, <argument><expr><name>p1_filter8</name></expr></argument>, <argument><expr><name>p0_filter8</name></expr></argument>,
<argument><expr><name>q0_filter8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1_filter8</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2_filter8</name></expr></argument>, <argument><expr><name>q1_filter8</name></expr></argument>,
<argument><expr><name>q2_filter8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p2_filter8</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p1_filter8</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p0_filter8</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q0_filter8</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q1_filter8</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q2_filter8</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">8</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_FLAT5</name><argument_list>(<argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>p2_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p2_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p1_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p0_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>q0_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>q1_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2_d</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>q2_out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD4</name><argument_list>(<argument><expr><name>p2_d</name></expr></argument>, <argument><expr><name>p1_d</name></expr></argument>, <argument><expr><name>p0_d</name></expr></argument>, <argument><expr><name>q0_d</name></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <literal type="number">3</literal> <operator>*</operator> <name>pitch</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>q1_d</name></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>q2_d</name></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>, <argument><expr><name>p7_r</name></expr></argument>, <argument><expr><name>p6_r</name></expr></argument>, <argument><expr><name>p5_r</name></expr></argument>, <argument><expr><name>p4_r</name></expr></argument>,
<argument><expr><name>q4_r</name></expr></argument>, <argument><expr><name>q5_r</name></expr></argument>, <argument><expr><name>q6_r</name></expr></argument>, <argument><expr><name>q7_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <name>p7_r</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>-=</operator> <name>p7_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>+=</operator> <name>p6_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>+=</operator> <name>q0_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">7</literal> <operator>*</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <name>p6_r</name> <operator>+</operator> <name>p5_r</name> <operator>+</operator> <name>p4_r</name> <operator>+</operator> <name>p3_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <operator>(</operator><name>p2_r</name> <operator>+</operator> <name>p1_r</name> <operator>+</operator> <name>p0_r</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp0</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <name>p5_r</name> <operator>-</operator> <name>p6_r</name> <operator>+</operator> <name>q1_r</name> <operator>-</operator> <name>p7_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp0</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_UB</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>,
<argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword0</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p0_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword1</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p1_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword0</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword1</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <name>p4_r</name> <operator>-</operator> <name>p5_r</name> <operator>+</operator> <name>q2_r</name> <operator>-</operator> <name>p7_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <name>p3_r</name> <operator>-</operator> <name>p4_r</name> <operator>+</operator> <name>q3_r</name> <operator>-</operator> <name>p7_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp0</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_UB</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>,
<argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword0</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p0_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword1</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p1_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword0</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword1</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <name>p2_r</name> <operator>-</operator> <name>p3_r</name> <operator>+</operator> <name>q4_r</name> <operator>-</operator> <name>p7_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <name>p1_r</name> <operator>-</operator> <name>p2_r</name> <operator>+</operator> <name>q5_r</name> <operator>-</operator> <name>p7_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp0</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_UB</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>,
<argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p2_out</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword0</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p0_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword1</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p1_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword0</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword1</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <operator>(</operator><name>p0_r</name> <operator>-</operator> <name>p1_r</name><operator>)</operator> <operator>+</operator> <operator>(</operator><name>q6_r</name> <operator>-</operator> <name>p7_r</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <operator>(</operator><name>q7_r</name> <operator>-</operator> <name>p0_r</name><operator>)</operator> <operator>+</operator> <operator>(</operator><name>q0_r</name> <operator>-</operator> <name>p7_r</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp0</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_UB</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>,
<argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword0</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p0_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword1</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p1_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword0</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword1</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <name>q7_r</name> <operator>-</operator> <name>q0_r</name> <operator>+</operator> <name>q1_r</name> <operator>-</operator> <name>p6_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <name>q7_r</name> <operator>-</operator> <name>q1_r</name> <operator>+</operator> <name>q2_r</name> <operator>-</operator> <name>p5_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp0</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_UB</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>,
<argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q2_out</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword0</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p0_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword1</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p1_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword0</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword1</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <operator>(</operator><name>q7_r</name> <operator>-</operator> <name>q2_r</name><operator>)</operator> <operator>+</operator> <operator>(</operator><name>q3_r</name> <operator>-</operator> <name>p4_r</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <operator>(</operator><name>q7_r</name> <operator>-</operator> <name>q3_r</name><operator>)</operator> <operator>+</operator> <operator>(</operator><name>q4_r</name> <operator>-</operator> <name>p3_r</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp0</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_UB</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>,
<argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q3</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q4</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword0</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p0_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword1</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p1_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword0</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword1</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <operator>(</operator><name>q7_r</name> <operator>-</operator> <name>q4_r</name><operator>)</operator> <operator>+</operator> <operator>(</operator><name>q5_r</name> <operator>-</operator> <name>p2_r</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <operator>(</operator><name>q7_r</name> <operator>-</operator> <name>q5_r</name><operator>)</operator> <operator>+</operator> <operator>(</operator><name>q6_r</name> <operator>-</operator> <name>p1_r</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp0</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>+=</operator> <name>tmp2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_UB</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>,
<argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q5</name></expr></argument>, <argument><expr><name>p0_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_filter16</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q6</name></expr></argument>, <argument><expr><name>p1_filter16</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword0</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p0_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dword1</name> <operator>=</operator> <call><name>__msa_copy_u_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>p1_filter16</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword0</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>pitch</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD</name><argument_list>(<argument><expr><name>dword1</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_h_4_8_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>flat</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">4</literal><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TRANSPOSE8x8_UB_UB</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>,
<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_h_44_16_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>flat</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>thresh0</name></decl>, <decl><type ref="prev"/><name>b_limit0</name></decl>, <decl><type ref="prev"/><name>limit0</name></decl>, <decl><type ref="prev"/><name>thresh1</name></decl>, <decl><type ref="prev"/><name>b_limit1</name></decl>, <decl><type ref="prev"/><name>limit1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>row0</name></decl>, <decl><type ref="prev"/><name>row1</name></decl>, <decl><type ref="prev"/><name>row2</name></decl>, <decl><type ref="prev"/><name>row3</name></decl>, <decl><type ref="prev"/><name>row4</name></decl>, <decl><type ref="prev"/><name>row5</name></decl>, <decl><type ref="prev"/><name>row6</name></decl>, <decl><type ref="prev"/><name>row7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>row8</name></decl>, <decl><type ref="prev"/><name>row9</name></decl>, <decl><type ref="prev"/><name>row10</name></decl>, <decl><type ref="prev"/><name>row11</name></decl>, <decl><type ref="prev"/><name>row12</name></decl>, <decl><type ref="prev"/><name>row13</name></decl>, <decl><type ref="prev"/><name>row14</name></decl>, <decl><type ref="prev"/><name>row15</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>tmp4</name></decl>, <decl><type ref="prev"/><name>tmp5</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>row0</name></expr></argument>, <argument><expr><name>row1</name></expr></argument>, <argument><expr><name>row2</name></expr></argument>, <argument><expr><name>row3</name></expr></argument>, <argument><expr><name>row4</name></expr></argument>, <argument><expr><name>row5</name></expr></argument>, <argument><expr><name>row6</name></expr></argument>, <argument><expr><name>row7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">4</literal> <operator>+</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>,
<argument><expr><name>row8</name></expr></argument>, <argument><expr><name>row9</name></expr></argument>, <argument><expr><name>row10</name></expr></argument>, <argument><expr><name>row11</name></expr></argument>, <argument><expr><name>row12</name></expr></argument>, <argument><expr><name>row13</name></expr></argument>, <argument><expr><name>row14</name></expr></argument>, <argument><expr><name>row15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TRANSPOSE16x8_UB_UB</name><argument_list>(<argument><expr><name>row0</name></expr></argument>, <argument><expr><name>row1</name></expr></argument>, <argument><expr><name>row2</name></expr></argument>, <argument><expr><name>row3</name></expr></argument>, <argument><expr><name>row4</name></expr></argument>, <argument><expr><name>row5</name></expr></argument>, <argument><expr><name>row6</name></expr></argument>, <argument><expr><name>row7</name></expr></argument>,
<argument><expr><name>row8</name></expr></argument>, <argument><expr><name>row9</name></expr></argument>, <argument><expr><name>row10</name></expr></argument>, <argument><expr><name>row11</name></expr></argument>, <argument><expr><name>row12</name></expr></argument>, <argument><expr><name>row13</name></expr></argument>, <argument><expr><name>row14</name></expr></argument>, <argument><expr><name>row15</name></expr></argument>,
<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>thresh1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>thresh0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>thresh1</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>thresh0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_limit0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>b_limit1</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>b_limit0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>limit0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>limit1</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>limit0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit0</name></expr></argument>, <argument><expr><name>b_limit0</name></expr></argument>, <argument><expr><name>thresh0</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_SH</name><argument_list>(<argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal> <operator>*</operator> <name>pitch</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_h_8_8_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p1_out</name></decl>, <decl><type ref="prev"/><name>p0_out</name></decl>, <decl><type ref="prev"/><name>q0_out</name></decl>, <decl><type ref="prev"/><name>q1_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>flat</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_r</name></decl>, <decl><type ref="prev"/><name>p2_r</name></decl>, <decl><type ref="prev"/><name>p1_r</name></decl>, <decl><type ref="prev"/><name>p0_r</name></decl>, <decl><type ref="prev"/><name>q0_r</name></decl>, <decl><type ref="prev"/><name>q1_r</name></decl>, <decl><type ref="prev"/><name>q2_r</name></decl>, <decl><type ref="prev"/><name>q3_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_r</name></decl>, <decl><type ref="prev"/><name>p1_filt8_r</name></decl>, <decl><type ref="prev"/><name>p0_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_r</name></decl>, <decl><type ref="prev"/><name>q1_filt8_r</name></decl>, <decl><type ref="prev"/><name>q2_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>;</decl_stmt>


<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TRANSPOSE8x8_UB_UB</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>,
<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_FLAT4</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>,
<argument><expr><name>q1_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>flat</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>,
<argument><expr><name>q3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>,
<argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_B4_SH</name><argument_list>(<argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_r</name></expr></argument>,
<argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>,
<argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>,
<argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p2</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec4</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_h_88_16_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>temp_src</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p1_out</name></decl>, <decl><type ref="prev"/><name>p0_out</name></decl>, <decl><type ref="prev"/><name>q0_out</name></decl>, <decl><type ref="prev"/><name>q1_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>flat</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>row4</name></decl>, <decl><type ref="prev"/><name>row5</name></decl>, <decl><type ref="prev"/><name>row6</name></decl>, <decl><type ref="prev"/><name>row7</name></decl>, <decl><type ref="prev"/><name>row12</name></decl>, <decl><type ref="prev"/><name>row13</name></decl>, <decl><type ref="prev"/><name>row14</name></decl>, <decl><type ref="prev"/><name>row15</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_r</name></decl>, <decl><type ref="prev"/><name>p2_r</name></decl>, <decl><type ref="prev"/><name>p1_r</name></decl>, <decl><type ref="prev"/><name>p0_r</name></decl>, <decl><type ref="prev"/><name>q0_r</name></decl>, <decl><type ref="prev"/><name>q1_r</name></decl>, <decl><type ref="prev"/><name>q2_r</name></decl>, <decl><type ref="prev"/><name>q3_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_l</name></decl>, <decl><type ref="prev"/><name>p2_l</name></decl>, <decl><type ref="prev"/><name>p1_l</name></decl>, <decl><type ref="prev"/><name>p0_l</name></decl>, <decl><type ref="prev"/><name>q0_l</name></decl>, <decl><type ref="prev"/><name>q1_l</name></decl>, <decl><type ref="prev"/><name>q2_l</name></decl>, <decl><type ref="prev"/><name>q3_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_r</name></decl>, <decl><type ref="prev"/><name>p1_filt8_r</name></decl>, <decl><type ref="prev"/><name>p0_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_r</name></decl>, <decl><type ref="prev"/><name>q1_filt8_r</name></decl>, <decl><type ref="prev"/><name>q2_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_l</name></decl>, <decl><type ref="prev"/><name>p1_filt8_l</name></decl>, <decl><type ref="prev"/><name>p0_filt8_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_l</name></decl>, <decl><type ref="prev"/><name>q1_filt8_l</name></decl>, <decl><type ref="prev"/><name>q2_filt8_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>

<expr_stmt><expr><name>temp_src</name> <operator>=</operator> <name>src</name> <operator>-</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>temp_src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>row4</name></expr></argument>, <argument><expr><name>row5</name></expr></argument>, <argument><expr><name>row6</name></expr></argument>, <argument><expr><name>row7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>temp_src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>temp_src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>row12</name></expr></argument>, <argument><expr><name>row13</name></expr></argument>, <argument><expr><name>row14</name></expr></argument>, <argument><expr><name>row15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>TRANSPOSE16x8_UB_UB</name><argument_list>(<argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>row4</name></expr></argument>, <argument><expr><name>row5</name></expr></argument>, <argument><expr><name>row6</name></expr></argument>, <argument><expr><name>row7</name></expr></argument>,
<argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>row12</name></expr></argument>, <argument><expr><name>row13</name></expr></argument>, <argument><expr><name>row14</name></expr></argument>, <argument><expr><name>row15</name></expr></argument>,
<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>vec0</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>thresh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>vec0</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>b_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>vec0</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_FLAT4</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>,
<argument><expr><name>q1_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_SH</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal> <operator>*</operator> <name>pitch</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>,
<argument><expr><name>q3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>,
<argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p3_l</name></expr></argument>, <argument><expr><name>p2_l</name></expr></argument>, <argument><expr><name>p1_l</name></expr></argument>,
<argument><expr><name>p0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q0_l</name></expr></argument>, <argument><expr><name>q1_l</name></expr></argument>, <argument><expr><name>q2_l</name></expr></argument>,
<argument><expr><name>q3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_l</name></expr></argument>, <argument><expr><name>p2_l</name></expr></argument>, <argument><expr><name>p1_l</name></expr></argument>, <argument><expr><name>p0_l</name></expr></argument>, <argument><expr><name>q0_l</name></expr></argument>, <argument><expr><name>q1_l</name></expr></argument>, <argument><expr><name>q2_l</name></expr></argument>, <argument><expr><name>q3_l</name></expr></argument>, <argument><expr><name>p2_filt8_l</name></expr></argument>,
<argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>, <argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>PCKEV_B4_SH</name><argument_list>(<argument><expr><name>p2_filt8_l</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>,
<argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>,
<argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>,
<argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p2</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_SH</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_B2_SH</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec7</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec5</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_h_84_16_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>temp_src</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p1_out</name></decl>, <decl><type ref="prev"/><name>p0_out</name></decl>, <decl><type ref="prev"/><name>q0_out</name></decl>, <decl><type ref="prev"/><name>q1_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>flat</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>row4</name></decl>, <decl><type ref="prev"/><name>row5</name></decl>, <decl><type ref="prev"/><name>row6</name></decl>, <decl><type ref="prev"/><name>row7</name></decl>, <decl><type ref="prev"/><name>row12</name></decl>, <decl><type ref="prev"/><name>row13</name></decl>, <decl><type ref="prev"/><name>row14</name></decl>, <decl><type ref="prev"/><name>row15</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_r</name></decl>, <decl><type ref="prev"/><name>p2_r</name></decl>, <decl><type ref="prev"/><name>p1_r</name></decl>, <decl><type ref="prev"/><name>p0_r</name></decl>, <decl><type ref="prev"/><name>q0_r</name></decl>, <decl><type ref="prev"/><name>q1_r</name></decl>, <decl><type ref="prev"/><name>q2_r</name></decl>, <decl><type ref="prev"/><name>q3_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_r</name></decl>, <decl><type ref="prev"/><name>p1_filt8_r</name></decl>, <decl><type ref="prev"/><name>p0_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_r</name></decl>, <decl><type ref="prev"/><name>q1_filt8_r</name></decl>, <decl><type ref="prev"/><name>q2_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>

<expr_stmt><expr><name>temp_src</name> <operator>=</operator> <name>src</name> <operator>-</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>temp_src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>row4</name></expr></argument>, <argument><expr><name>row5</name></expr></argument>, <argument><expr><name>row6</name></expr></argument>, <argument><expr><name>row7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>temp_src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>temp_src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>row12</name></expr></argument>, <argument><expr><name>row13</name></expr></argument>, <argument><expr><name>row14</name></expr></argument>, <argument><expr><name>row15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>TRANSPOSE16x8_UB_UB</name><argument_list>(<argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>row4</name></expr></argument>, <argument><expr><name>row5</name></expr></argument>, <argument><expr><name>row6</name></expr></argument>, <argument><expr><name>row7</name></expr></argument>,
<argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>row12</name></expr></argument>, <argument><expr><name>row13</name></expr></argument>, <argument><expr><name>row14</name></expr></argument>, <argument><expr><name>row15</name></expr></argument>,
<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>vec0</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>thresh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>vec0</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>b_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>vec0</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_FLAT4</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>,
<argument><expr><name>q1_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>flat</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_SH</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal> <operator>*</operator> <name>pitch</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>,
<argument><expr><name>q3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>,
<argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>PCKEV_B4_SH</name><argument_list>(<argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>,
<argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>,
<argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>,
<argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p2</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_SH</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_B2_SH</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec7</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec5</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_h_48_16_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>temp_src</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p1_out</name></decl>, <decl><type ref="prev"/><name>p0_out</name></decl>, <decl><type ref="prev"/><name>q0_out</name></decl>, <decl><type ref="prev"/><name>q1_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>flat</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>row4</name></decl>, <decl><type ref="prev"/><name>row5</name></decl>, <decl><type ref="prev"/><name>row6</name></decl>, <decl><type ref="prev"/><name>row7</name></decl>, <decl><type ref="prev"/><name>row12</name></decl>, <decl><type ref="prev"/><name>row13</name></decl>, <decl><type ref="prev"/><name>row14</name></decl>, <decl><type ref="prev"/><name>row15</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_l</name></decl>, <decl><type ref="prev"/><name>p2_l</name></decl>, <decl><type ref="prev"/><name>p1_l</name></decl>, <decl><type ref="prev"/><name>p0_l</name></decl>, <decl><type ref="prev"/><name>q0_l</name></decl>, <decl><type ref="prev"/><name>q1_l</name></decl>, <decl><type ref="prev"/><name>q2_l</name></decl>, <decl><type ref="prev"/><name>q3_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_l</name></decl>, <decl><type ref="prev"/><name>p1_filt8_l</name></decl>, <decl><type ref="prev"/><name>p0_filt8_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_l</name></decl>, <decl><type ref="prev"/><name>q1_filt8_l</name></decl>, <decl><type ref="prev"/><name>q2_filt8_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>

<expr_stmt><expr><name>temp_src</name> <operator>=</operator> <name>src</name> <operator>-</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>temp_src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>row4</name></expr></argument>, <argument><expr><name>row5</name></expr></argument>, <argument><expr><name>row6</name></expr></argument>, <argument><expr><name>row7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>temp_src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>temp_src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>row12</name></expr></argument>, <argument><expr><name>row13</name></expr></argument>, <argument><expr><name>row14</name></expr></argument>, <argument><expr><name>row15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>TRANSPOSE16x8_UB_UB</name><argument_list>(<argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>row4</name></expr></argument>, <argument><expr><name>row5</name></expr></argument>, <argument><expr><name>row6</name></expr></argument>, <argument><expr><name>row7</name></expr></argument>,
<argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>row12</name></expr></argument>, <argument><expr><name>row13</name></expr></argument>, <argument><expr><name>row14</name></expr></argument>, <argument><expr><name>row15</name></expr></argument>,
<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>vec0</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>thresh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>vec0</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>b_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>vec0</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_FLAT4</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>,
<argument><expr><name>q1_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>flat</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_insve_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>flat</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_SH</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal> <operator>*</operator> <name>pitch</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p3_l</name></expr></argument>, <argument><expr><name>p2_l</name></expr></argument>, <argument><expr><name>p1_l</name></expr></argument>,
<argument><expr><name>p0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q0_l</name></expr></argument>, <argument><expr><name>q1_l</name></expr></argument>, <argument><expr><name>q2_l</name></expr></argument>,
<argument><expr><name>q3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_l</name></expr></argument>, <argument><expr><name>p2_l</name></expr></argument>, <argument><expr><name>p1_l</name></expr></argument>, <argument><expr><name>p0_l</name></expr></argument>, <argument><expr><name>q0_l</name></expr></argument>, <argument><expr><name>q1_l</name></expr></argument>, <argument><expr><name>q2_l</name></expr></argument>, <argument><expr><name>q3_l</name></expr></argument>, <argument><expr><name>p2_filt8_l</name></expr></argument>,
<argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>, <argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>PCKEV_B4_SH</name><argument_list>(<argument><expr><name>p2_filt8_l</name></expr></argument>, <argument><expr><name>p2_filt8_l</name></expr></argument>, <argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p1_filt8_l</name></expr></argument>,
<argument><expr><name>p0_filt8_l</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>,
<argument><expr><name>p2_filt8_l</name></expr></argument>, <argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>,
<argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p2</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p2_filt8_l</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p1_filt8_l</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p0_filt8_l</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q0_filt8_l</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q1_filt8_l</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q2_filt8_l</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_SH</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_B2_SH</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec7</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec5</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vp9_transpose_16x8_to_8x16</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>input</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>in_pitch</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>out_pitch</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p7_org</name></decl>, <decl><type ref="prev"/><name>p6_org</name></decl>, <decl><type ref="prev"/><name>p5_org</name></decl>, <decl><type ref="prev"/><name>p4_org</name></decl>, <decl><type ref="prev"/><name>p3_org</name></decl>, <decl><type ref="prev"/><name>p2_org</name></decl>, <decl><type ref="prev"/><name>p1_org</name></decl>, <decl><type ref="prev"/><name>p0_org</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>tmp4</name></decl>, <decl><type ref="prev"/><name>tmp5</name></decl>, <decl><type ref="prev"/><name>tmp6</name></decl>, <decl><type ref="prev"/><name>tmp7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p7</name></decl>, <decl><type ref="prev"/><name>p6</name></decl>, <decl><type ref="prev"/><name>p5</name></decl>, <decl><type ref="prev"/><name>p4</name></decl>, <decl><type ref="prev"/><name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q4</name></decl>, <decl><type ref="prev"/><name>q5</name></decl>, <decl><type ref="prev"/><name>q6</name></decl>, <decl><type ref="prev"/><name>q7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>zeros</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>in_pitch</name></expr></argument>,
<argument><expr><name>p7_org</name></expr></argument>, <argument><expr><name>p6_org</name></expr></argument>, <argument><expr><name>p5_org</name></expr></argument>, <argument><expr><name>p4_org</name></expr></argument>, <argument><expr><name>p3_org</name></expr></argument>, <argument><expr><name>p2_org</name></expr></argument>, <argument><expr><name>p1_org</name></expr></argument>, <argument><expr><name>p0_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TRANSPOSE8x8_UB_UB</name><argument_list>(<argument><expr><name>p7_org</name></expr></argument>, <argument><expr><name>p6_org</name></expr></argument>, <argument><expr><name>p5_org</name></expr></argument>, <argument><expr><name>p4_org</name></expr></argument>, <argument><expr><name>p3_org</name></expr></argument>, <argument><expr><name>p2_org</name></expr></argument>, <argument><expr><name>p1_org</name></expr></argument>,
<argument><expr><name>p0_org</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>p5_org</name></expr></argument>, <argument><expr><name>p7_org</name></expr></argument>, <argument><expr><name>p4_org</name></expr></argument>, <argument><expr><name>p6_org</name></expr></argument>, <argument><expr><name>p1_org</name></expr></argument>, <argument><expr><name>p3_org</name></expr></argument>, <argument><expr><name>p0_org</name></expr></argument>, <argument><expr><name>p2_org</name></expr></argument>,
<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_W2_UB</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_W2_UB</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_UB</name><argument_list>(<argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>output</name></expr></argument>, <argument><expr><name>out_pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>output</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>out_pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>, <argument><expr><name>output</name></expr></argument>, <argument><expr><name>out_pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vp9_transpose_8x16_to_16x8</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>input</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>in_pitch</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>out_pitch</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p7_o</name></decl>, <decl><type ref="prev"/><name>p6_o</name></decl>, <decl><type ref="prev"/><name>p5_o</name></decl>, <decl><type ref="prev"/><name>p4_o</name></decl>, <decl><type ref="prev"/><name>p3_o</name></decl>, <decl><type ref="prev"/><name>p2_o</name></decl>, <decl><type ref="prev"/><name>p1_o</name></decl>, <decl><type ref="prev"/><name>p0_o</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p7</name></decl>, <decl><type ref="prev"/><name>p6</name></decl>, <decl><type ref="prev"/><name>p5</name></decl>, <decl><type ref="prev"/><name>p4</name></decl>, <decl><type ref="prev"/><name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q4</name></decl>, <decl><type ref="prev"/><name>q5</name></decl>, <decl><type ref="prev"/><name>q6</name></decl>, <decl><type ref="prev"/><name>q7</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>in_pitch</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>input</name> <operator>+</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>in_pitch</name><operator>)</operator></expr></argument>, <argument><expr><name>in_pitch</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE16x8_UB_UB</name><argument_list>(<argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>,
<argument><expr><name>q6</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>, <argument><expr><name>p7_o</name></expr></argument>, <argument><expr><name>p6_o</name></expr></argument>, <argument><expr><name>p5_o</name></expr></argument>, <argument><expr><name>p4_o</name></expr></argument>, <argument><expr><name>p3_o</name></expr></argument>, <argument><expr><name>p2_o</name></expr></argument>, <argument><expr><name>p1_o</name></expr></argument>, <argument><expr><name>p0_o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>p7_o</name></expr></argument>, <argument><expr><name>p6_o</name></expr></argument>, <argument><expr><name>p5_o</name></expr></argument>, <argument><expr><name>p4_o</name></expr></argument>, <argument><expr><name>p3_o</name></expr></argument>, <argument><expr><name>p2_o</name></expr></argument>, <argument><expr><name>p1_o</name></expr></argument>, <argument><expr><name>p0_o</name></expr></argument>, <argument><expr><name>output</name></expr></argument>, <argument><expr><name>out_pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>vp9_transpose_16x16</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>input</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>in_pitch</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>out_pitch</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>row0</name></decl>, <decl><type ref="prev"/><name>row1</name></decl>, <decl><type ref="prev"/><name>row2</name></decl>, <decl><type ref="prev"/><name>row3</name></decl>, <decl><type ref="prev"/><name>row4</name></decl>, <decl><type ref="prev"/><name>row5</name></decl>, <decl><type ref="prev"/><name>row6</name></decl>, <decl><type ref="prev"/><name>row7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>row8</name></decl>, <decl><type ref="prev"/><name>row9</name></decl>, <decl><type ref="prev"/><name>row10</name></decl>, <decl><type ref="prev"/><name>row11</name></decl>, <decl><type ref="prev"/><name>row12</name></decl>, <decl><type ref="prev"/><name>row13</name></decl>, <decl><type ref="prev"/><name>row14</name></decl>, <decl><type ref="prev"/><name>row15</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp4</name></decl>, <decl><type ref="prev"/><name>tmp5</name></decl>, <decl><type ref="prev"/><name>tmp6</name></decl>, <decl><type ref="prev"/><name>tmp7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p7</name></decl>, <decl><type ref="prev"/><name>p6</name></decl>, <decl><type ref="prev"/><name>p5</name></decl>, <decl><type ref="prev"/><name>p4</name></decl>, <decl><type ref="prev"/><name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q4</name></decl>, <decl><type ref="prev"/><name>q5</name></decl>, <decl><type ref="prev"/><name>q6</name></decl>, <decl><type ref="prev"/><name>q7</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>in_pitch</name></expr></argument>, <argument><expr><name>row0</name></expr></argument>, <argument><expr><name>row1</name></expr></argument>, <argument><expr><name>row2</name></expr></argument>, <argument><expr><name>row3</name></expr></argument>, <argument><expr><name>row4</name></expr></argument>, <argument><expr><name>row5</name></expr></argument>, <argument><expr><name>row6</name></expr></argument>, <argument><expr><name>row7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>input</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>in_pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>in_pitch</name></expr></argument>,
<argument><expr><name>row8</name></expr></argument>, <argument><expr><name>row9</name></expr></argument>, <argument><expr><name>row10</name></expr></argument>, <argument><expr><name>row11</name></expr></argument>, <argument><expr><name>row12</name></expr></argument>, <argument><expr><name>row13</name></expr></argument>, <argument><expr><name>row14</name></expr></argument>, <argument><expr><name>row15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TRANSPOSE16x8_UB_UB</name><argument_list>(<argument><expr><name>row0</name></expr></argument>, <argument><expr><name>row1</name></expr></argument>, <argument><expr><name>row2</name></expr></argument>, <argument><expr><name>row3</name></expr></argument>, <argument><expr><name>row4</name></expr></argument>, <argument><expr><name>row5</name></expr></argument>, <argument><expr><name>row6</name></expr></argument>, <argument><expr><name>row7</name></expr></argument>,
<argument><expr><name>row8</name></expr></argument>, <argument><expr><name>row9</name></expr></argument>, <argument><expr><name>row10</name></expr></argument>, <argument><expr><name>row11</name></expr></argument>, <argument><expr><name>row12</name></expr></argument>, <argument><expr><name>row13</name></expr></argument>, <argument><expr><name>row14</name></expr></argument>, <argument><expr><name>row15</name></expr></argument>,
<argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<expr_stmt><expr><name>q7</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvod_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row8</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q6</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvod_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row9</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q5</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvod_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row10</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q4</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvod_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row11</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q3</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvod_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row12</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvod_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row13</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvod_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row14</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvod_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row15</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>row7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVEV_B2_SH</name><argument_list>(<argument><expr><name>q7</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp4</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvod_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q6</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp5</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvod_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp6</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvod_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp7</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvod_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVEV_H2_SW</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_w</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q4</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvod_w</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <operator>(</operator><name>v4i32</name><operator>)</operator> <call><name>__msa_ilvod_h</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <operator>(</operator><name>v4i32</name><operator>)</operator> <call><name>__msa_ilvod_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>q7</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>q5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_w</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q6</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvod_w</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVEV_H2_SW</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_w</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q5</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvod_w</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <operator>(</operator><name>v4i32</name><operator>)</operator> <call><name>__msa_ilvod_h</name><argument_list>(<argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <operator>(</operator><name>v4i32</name><operator>)</operator> <call><name>__msa_ilvod_h</name><argument_list>(<argument><expr><name>tmp7</name></expr></argument>, <argument><expr><name>tmp6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q3</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_w</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q7</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvod_w</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>output</name></expr></argument>, <argument><expr><name>out_pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>output</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>out_pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>, <argument><expr><name>output</name></expr></argument>, <argument><expr><name>out_pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>vp9_vt_lpf_t4_and_t8_8w</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>filter48</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src_org</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>pitch_org</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p2_out</name></decl>, <decl><type ref="prev"/><name>p1_out</name></decl>, <decl><type ref="prev"/><name>p0_out</name></decl>, <decl><type ref="prev"/><name>q0_out</name></decl>, <decl><type ref="prev"/><name>q1_out</name></decl>, <decl><type ref="prev"/><name>q2_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>flat</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_r</name></decl>, <decl><type ref="prev"/><name>p2_r</name></decl>, <decl><type ref="prev"/><name>p1_r</name></decl>, <decl><type ref="prev"/><name>p0_r</name></decl>, <decl><type ref="prev"/><name>q0_r</name></decl>, <decl><type ref="prev"/><name>q1_r</name></decl>, <decl><type ref="prev"/><name>q2_r</name></decl>, <decl><type ref="prev"/><name>q3_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_r</name></decl>, <decl><type ref="prev"/><name>p1_filt8_r</name></decl>, <decl><type ref="prev"/><name>p0_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_r</name></decl>, <decl><type ref="prev"/><name>q1_filt8_r</name></decl>, <decl><type ref="prev"/><name>q2_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>;</decl_stmt>


<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <literal type="number">16</literal><operator>)</operator></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_FLAT4</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>,
<argument><expr><name>q1_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>flat</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvr_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><operator>(</operator><name>src_org</name> <operator>-</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>, <argument><expr><name>pitch_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>,
<argument><expr><name>q3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>,
<argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p2_r</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>p2_filt8_r</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>p2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_r</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>p1_filt8_r</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>p1_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_r</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>p0_filt8_r</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>p0_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_r</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q0_filt8_r</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q0_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_r</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q1_filt8_r</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q1_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2_r</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q2_filt8_r</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p2_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p1_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p0_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q0_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q1_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q2_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>p2_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>filter48</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter48</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB2</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q2_out</name></expr></argument>, <argument><expr><name>filter48</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter48</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>flat</name></expr></argument>, <argument><expr><name>filter48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>vp9_vt_lpf_t16_8w</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src_org</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>filter48</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filter8</name></decl>, <decl><type ref="prev"/><name>flat</name></decl>, <decl><type ref="prev"/><name>flat2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p7</name></decl>, <decl><type ref="prev"/><name>p6</name></decl>, <decl><type ref="prev"/><name>p5</name></decl>, <decl><type ref="prev"/><name>p4</name></decl>, <decl><type ref="prev"/><name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q4</name></decl>, <decl><type ref="prev"/><name>q5</name></decl>, <decl><type ref="prev"/><name>q6</name></decl>, <decl><type ref="prev"/><name>q7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p7_r_in</name></decl>, <decl><type ref="prev"/><name>p6_r_in</name></decl>, <decl><type ref="prev"/><name>p5_r_in</name></decl>, <decl><type ref="prev"/><name>p4_r_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_r_in</name></decl>, <decl><type ref="prev"/><name>p2_r_in</name></decl>, <decl><type ref="prev"/><name>p1_r_in</name></decl>, <decl><type ref="prev"/><name>p0_r_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>q7_r_in</name></decl>, <decl><type ref="prev"/><name>q6_r_in</name></decl>, <decl><type ref="prev"/><name>q5_r_in</name></decl>, <decl><type ref="prev"/><name>q4_r_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>q3_r_in</name></decl>, <decl><type ref="prev"/><name>q2_r_in</name></decl>, <decl><type ref="prev"/><name>q1_r_in</name></decl>, <decl><type ref="prev"/><name>q0_r_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0_r</name></decl>, <decl><type ref="prev"/><name>tmp1_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>r_out</name></decl>;</decl_stmt>

<expr_stmt><expr><name>flat</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">6</literal> <operator>*</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">8</literal> <operator>*</operator> <literal type="number">16</literal><operator>)</operator></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_FLAT5</name><argument_list>(<argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>filter48</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_org</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src_org</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><operator>(</operator><name>src_org</name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_org</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src_org</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><operator>(</operator><name>src_org</name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">7</literal> <operator>*</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p7_r_in</name></expr></argument>, <argument><expr><name>p6_r_in</name></expr></argument>, <argument><expr><name>p5_r_in</name></expr></argument>, <argument><expr><name>p4_r_in</name></expr></argument>,
<argument><expr><name>p3_r_in</name></expr></argument>, <argument><expr><name>p2_r_in</name></expr></argument>, <argument><expr><name>p1_r_in</name></expr></argument>, <argument><expr><name>p0_r_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p7_r_in</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>p6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>=</operator> <name>p6_r_in</name> <operator>+</operator> <name>p5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p6</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p6</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>p6</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q1_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p5_r_in</name> <operator>-</operator> <name>p6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p5</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p5</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>p5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q2_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p4_r_in</name> <operator>-</operator> <name>p5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p4</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>p4</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q3_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p3_r_in</name> <operator>-</operator> <name>p4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p3</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q4_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p2_r_in</name> <operator>-</operator> <name>p3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q5_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p1_r_in</name> <operator>-</operator> <name>p2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q6_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p0_r_in</name> <operator>-</operator> <name>p1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q7_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>p0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q3</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q3</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>q3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q4</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>q4</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q5</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q5</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>q5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q6</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q6</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D1</name><argument_list>(<argument><expr><name>q6</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_h_16_8_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>early_exit</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <name><name>transposed_input</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">24</literal></expr>]</index></name></type> <name>ALLOC_ALIGNED</name><argument_list>(<argument><expr><name>ALIGNMENT</name></expr></argument>)</argument_list></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>filter48</name> <init>= <expr><operator>&amp;</operator><name><name>transposed_input</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">16</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vp9_transpose_16x8_to_8x16</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><name>transposed_input</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>early_exit</name> <operator>=</operator> <call><name>vp9_vt_lpf_t4_and_t8_8w</name><argument_list>(<argument><expr><operator>(</operator><name>transposed_input</name> <operator>+</operator> <literal type="number">16</literal> <operator>*</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>filter48</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>,
<argument><expr><name>b_limit_ptr</name></expr></argument>, <argument><expr><name>limit_ptr</name></expr></argument>, <argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>early_exit</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>early_exit</name> <operator>=</operator> <call><name>vp9_vt_lpf_t16_8w</name><argument_list>(<argument><expr><operator>(</operator><name>transposed_input</name> <operator>+</operator> <literal type="number">16</literal> <operator>*</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>filter48</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>early_exit</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>vp9_transpose_8x16_to_16x8</name><argument_list>(<argument><expr><name>transposed_input</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>vp9_vt_lpf_t4_and_t8_16w</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>filter48</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src_org</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p2_out</name></decl>, <decl><type ref="prev"/><name>p1_out</name></decl>, <decl><type ref="prev"/><name>p0_out</name></decl>, <decl><type ref="prev"/><name>q0_out</name></decl>, <decl><type ref="prev"/><name>q1_out</name></decl>, <decl><type ref="prev"/><name>q2_out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>flat</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>hev</name></decl>, <decl><type ref="prev"/><name>thresh</name></decl>, <decl><type ref="prev"/><name>b_limit</name></decl>, <decl><type ref="prev"/><name>limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_r</name></decl>, <decl><type ref="prev"/><name>p2_r</name></decl>, <decl><type ref="prev"/><name>p1_r</name></decl>, <decl><type ref="prev"/><name>p0_r</name></decl>, <decl><type ref="prev"/><name>q0_r</name></decl>, <decl><type ref="prev"/><name>q1_r</name></decl>, <decl><type ref="prev"/><name>q2_r</name></decl>, <decl><type ref="prev"/><name>q3_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_l</name></decl>, <decl><type ref="prev"/><name>p2_l</name></decl>, <decl><type ref="prev"/><name>p1_l</name></decl>, <decl><type ref="prev"/><name>p0_l</name></decl>, <decl><type ref="prev"/><name>q0_l</name></decl>, <decl><type ref="prev"/><name>q1_l</name></decl>, <decl><type ref="prev"/><name>q2_l</name></decl>, <decl><type ref="prev"/><name>q3_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_r</name></decl>, <decl><type ref="prev"/><name>p1_filt8_r</name></decl>, <decl><type ref="prev"/><name>p0_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_r</name></decl>, <decl><type ref="prev"/><name>q1_filt8_r</name></decl>, <decl><type ref="prev"/><name>q2_filt8_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>p2_filt8_l</name></decl>, <decl><type ref="prev"/><name>p1_filt8_l</name></decl>, <decl><type ref="prev"/><name>p0_filt8_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>q0_filt8_l</name></decl>, <decl><type ref="prev"/><name>q1_filt8_l</name></decl>, <decl><type ref="prev"/><name>q2_filt8_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>;</decl_stmt>


<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <literal type="number">16</literal><operator>)</operator></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>thresh</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b_limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>b_limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>limit</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_fill_b</name><argument_list>(<argument><expr><name>limit_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>LPF_MASK_HEV</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>limit</name></expr></argument>, <argument><expr><name>b_limit</name></expr></argument>, <argument><expr><name>thresh</name></expr></argument>,
<argument><expr><name>hev</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_FLAT4</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_LPF_FILTER4_4W</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>hev</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>,
<argument><expr><name>q1_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_SH</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_org</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src_org</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src_org</name> <operator>+</operator> <literal type="number">8</literal> <operator>*</operator> <name>pitch</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>,
<argument><expr><name>q3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_r</name></expr></argument>, <argument><expr><name>p2_r</name></expr></argument>, <argument><expr><name>p1_r</name></expr></argument>, <argument><expr><name>p0_r</name></expr></argument>, <argument><expr><name>q0_r</name></expr></argument>, <argument><expr><name>q1_r</name></expr></argument>, <argument><expr><name>q2_r</name></expr></argument>, <argument><expr><name>q3_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>,
<argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p3_l</name></expr></argument>, <argument><expr><name>p2_l</name></expr></argument>, <argument><expr><name>p1_l</name></expr></argument>,
<argument><expr><name>p0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q0_l</name></expr></argument>, <argument><expr><name>q1_l</name></expr></argument>, <argument><expr><name>q2_l</name></expr></argument>,
<argument><expr><name>q3_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_FILTER8</name><argument_list>(<argument><expr><name>p3_l</name></expr></argument>, <argument><expr><name>p2_l</name></expr></argument>, <argument><expr><name>p1_l</name></expr></argument>, <argument><expr><name>p0_l</name></expr></argument>, <argument><expr><name>q0_l</name></expr></argument>, <argument><expr><name>q1_l</name></expr></argument>, <argument><expr><name>q2_l</name></expr></argument>, <argument><expr><name>q3_l</name></expr></argument>, <argument><expr><name>p2_filt8_l</name></expr></argument>,
<argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>, <argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>PCKEV_B4_SH</name><argument_list>(<argument><expr><name>p2_filt8_l</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_l</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>, <argument><expr><name>p0_filt8_l</name></expr></argument>,
<argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_l</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>, <argument><expr><name>p2_filt8_r</name></expr></argument>, <argument><expr><name>p1_filt8_r</name></expr></argument>,
<argument><expr><name>p0_filt8_r</name></expr></argument>, <argument><expr><name>q0_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>q1_filt8_l</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>, <argument><expr><name>q2_filt8_l</name></expr></argument>, <argument><expr><name>q2_filt8_r</name></expr></argument>, <argument><expr><name>q1_filt8_r</name></expr></argument>,
<argument><expr><name>q2_filt8_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>p2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>p0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q0_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q0_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q1_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2_out</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>q2_filt8_r</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>p2_out</name></expr></argument>, <argument><expr><name>p1_out</name></expr></argument>, <argument><expr><name>p0_out</name></expr></argument>, <argument><expr><name>q0_out</name></expr></argument>, <argument><expr><name>filter48</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter48</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB2</name><argument_list>(<argument><expr><name>q1_out</name></expr></argument>, <argument><expr><name>q2_out</name></expr></argument>, <argument><expr><name>filter48</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter48</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>flat</name></expr></argument>, <argument><expr><name>filter48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int32_t</name></type> <name>vp9_vt_lpf_t16_16w</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src_org</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>filter48</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>flat</name></decl>, <decl><type ref="prev"/><name>flat2</name></decl>, <decl><type ref="prev"/><name>filter8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>zero</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>p7</name></decl>, <decl><type ref="prev"/><name>p6</name></decl>, <decl><type ref="prev"/><name>p5</name></decl>, <decl><type ref="prev"/><name>p4</name></decl>, <decl><type ref="prev"/><name>p3</name></decl>, <decl><type ref="prev"/><name>p2</name></decl>, <decl><type ref="prev"/><name>p1</name></decl>, <decl><type ref="prev"/><name>p0</name></decl>, <decl><type ref="prev"/><name>q0</name></decl>, <decl><type ref="prev"/><name>q1</name></decl>, <decl><type ref="prev"/><name>q2</name></decl>, <decl><type ref="prev"/><name>q3</name></decl>, <decl><type ref="prev"/><name>q4</name></decl>, <decl><type ref="prev"/><name>q5</name></decl>, <decl><type ref="prev"/><name>q6</name></decl>, <decl><type ref="prev"/><name>q7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p7_r_in</name></decl>, <decl><type ref="prev"/><name>p6_r_in</name></decl>, <decl><type ref="prev"/><name>p5_r_in</name></decl>, <decl><type ref="prev"/><name>p4_r_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_r_in</name></decl>, <decl><type ref="prev"/><name>p2_r_in</name></decl>, <decl><type ref="prev"/><name>p1_r_in</name></decl>, <decl><type ref="prev"/><name>p0_r_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>q7_r_in</name></decl>, <decl><type ref="prev"/><name>q6_r_in</name></decl>, <decl><type ref="prev"/><name>q5_r_in</name></decl>, <decl><type ref="prev"/><name>q4_r_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>q3_r_in</name></decl>, <decl><type ref="prev"/><name>q2_r_in</name></decl>, <decl><type ref="prev"/><name>q1_r_in</name></decl>, <decl><type ref="prev"/><name>q0_r_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p7_l_in</name></decl>, <decl><type ref="prev"/><name>p6_l_in</name></decl>, <decl><type ref="prev"/><name>p5_l_in</name></decl>, <decl><type ref="prev"/><name>p4_l_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>p3_l_in</name></decl>, <decl><type ref="prev"/><name>p2_l_in</name></decl>, <decl><type ref="prev"/><name>p1_l_in</name></decl>, <decl><type ref="prev"/><name>p0_l_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>q7_l_in</name></decl>, <decl><type ref="prev"/><name>q6_l_in</name></decl>, <decl><type ref="prev"/><name>q5_l_in</name></decl>, <decl><type ref="prev"/><name>q4_l_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>q3_l_in</name></decl>, <decl><type ref="prev"/><name>q2_l_in</name></decl>, <decl><type ref="prev"/><name>q1_l_in</name></decl>, <decl><type ref="prev"/><name>q0_l_in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0_r</name></decl>, <decl><type ref="prev"/><name>tmp1_r</name></decl>, <decl><type ref="prev"/><name>tmp0_l</name></decl>, <decl><type ref="prev"/><name>tmp1_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>l_out</name></decl>, <decl><type ref="prev"/><name>r_out</name></decl>;</decl_stmt>

<expr_stmt><expr><name>flat</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">6</literal> <operator>*</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">8</literal> <operator>*</operator> <literal type="number">16</literal><operator>)</operator></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q3</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_FLAT5</name><argument_list>(<argument><expr><name>p7</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>q4</name></expr></argument>, <argument><expr><name>q5</name></expr></argument>, <argument><expr><name>q6</name></expr></argument>, <argument><expr><name>q7</name></expr></argument>, <argument><expr><name>flat</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>__msa_test_bz_v</name><argument_list>(<argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>filter48</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>q2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_SH</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_SH</name><argument_list>(<argument><expr><name>p1</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>q0</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_H2_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVRL_B2_SH</name><argument_list>(<argument><expr><name>q2</name></expr></argument>, <argument><expr><name>q1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_org</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src_org</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><operator>(</operator><name>src_org</name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_org</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src_org</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><operator>(</operator><name>src_org</name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_org</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src_org</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><operator>(</operator><name>src_org</name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_org</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>pitch</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>vec7</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>src_org</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_H4</name><argument_list>(<argument><expr><name>vec5</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><operator>(</operator><name>src_org</name> <operator>+</operator> <literal type="number">4</literal><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">7</literal> <operator>*</operator> <literal type="number">16</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B8_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>,
<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p7_r_in</name></expr></argument>, <argument><expr><name>p6_r_in</name></expr></argument>, <argument><expr><name>p5_r_in</name></expr></argument>, <argument><expr><name>p4_r_in</name></expr></argument>,
<argument><expr><name>p3_r_in</name></expr></argument>, <argument><expr><name>p2_r_in</name></expr></argument>, <argument><expr><name>p1_r_in</name></expr></argument>, <argument><expr><name>p0_r_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p7_r_in</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>p6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>=</operator> <name>p6_r_in</name> <operator>+</operator> <name>p5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>p0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p6</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p5</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p4</name></expr></argument>, <argument><expr><name>p7_l_in</name></expr></argument>, <argument><expr><name>p6_l_in</name></expr></argument>,
<argument><expr><name>p5_l_in</name></expr></argument>, <argument><expr><name>p4_l_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_UH</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p3</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p2</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p1</name></expr></argument>, <argument><expr><name>zero</name></expr></argument>, <argument><expr><name>p0</name></expr></argument>, <argument><expr><name>p3_l_in</name></expr></argument>, <argument><expr><name>p2_l_in</name></expr></argument>,
<argument><expr><name>p1_l_in</name></expr></argument>, <argument><expr><name>p0_l_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q0_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p7_l_in</name> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>p6_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q0_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>=</operator> <name>p6_l_in</name> <operator>+</operator> <name>p5_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>p4_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>p3_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>p2_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>p1_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>p0_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p6</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p6</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>p6</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q1_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p5_r_in</name> <operator>-</operator> <name>p6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q1_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p5_l_in</name> <operator>-</operator> <name>p6_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q1_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p5</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p5</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>p5</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q2_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p4_r_in</name> <operator>-</operator> <name>p5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q2_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p4_l_in</name> <operator>-</operator> <name>p5_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q2_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p4</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>p4</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q3_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p3_r_in</name> <operator>-</operator> <name>p4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q3_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p3_l_in</name> <operator>-</operator> <name>p4_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q3_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p3</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>p3</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q4_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p2_r_in</name> <operator>-</operator> <name>p3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q4_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p2_l_in</name> <operator>-</operator> <name>p3_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q4_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q5_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p1_r_in</name> <operator>-</operator> <name>p2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q5_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p1_l_in</name> <operator>-</operator> <name>p2_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q5_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <operator>(</operator><name>tmp1_l</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q6_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>p0_r_in</name> <operator>-</operator> <name>p1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q6_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>p0_l_in</name> <operator>-</operator> <name>p1_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q6_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>q7_r_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvr_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>p0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p7_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q7_l_in</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_ilvl_b</name><argument_list>(<argument><expr><name>zero</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>q7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>p0_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q0_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p7_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q0_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>q0_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q1_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p6_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>filter48</name> <operator>+</operator> <literal type="number">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>q1_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q2_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p5_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filter8</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>filter8</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>q2_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q3_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p4_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q3</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q3</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>q3</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p3_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>q3_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q4_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p3_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q4</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q4</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>q4</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q4_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p2_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>q4_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q5_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p2_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q5</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q5</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>q5</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>tmp0_r</name> <operator>=</operator> <name>q7_r_in</name> <operator>-</operator> <name>q5_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>+=</operator> <name>q6_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_r</name> <operator>-=</operator> <name>p1_r_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_r</name> <operator>+=</operator> <name>tmp0_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_r</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>=</operator> <name>q7_l_in</name> <operator>-</operator> <name>q5_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>+=</operator> <name>q6_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_l</name> <operator>-=</operator> <name>p1_l_in</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_l</name> <operator>+=</operator> <name>tmp0_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>l_out</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_l</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_out</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>l_out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>r_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q6</name> <operator>=</operator> <call><name>__msa_bmnz_v</name><argument_list>(<argument><expr><name>q6</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>r_out</name></expr></argument>, <argument><expr><name>flat2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>q6</name></expr></argument>, <argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_loop_filter_h_16_16_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>pitch</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>b_limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>limit_ptr</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>thresh_ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>early_exit</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <name><name>transposed_input</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">24</literal></expr>]</index></name></type> <name>ALLOC_ALIGNED</name><argument_list>(<argument><expr><name>ALIGNMENT</name></expr></argument>)</argument_list></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>filter48</name> <init>= <expr><operator>&amp;</operator><name><name>transposed_input</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">16</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>vp9_transpose_16x16</name><argument_list>(<argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>transposed_input</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>early_exit</name> <operator>=</operator> <call><name>vp9_vt_lpf_t4_and_t8_16w</name><argument_list>(<argument><expr><operator>(</operator><name>transposed_input</name> <operator>+</operator> <literal type="number">16</literal> <operator>*</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>filter48</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>,
<argument><expr><name>b_limit_ptr</name></expr></argument>, <argument><expr><name>limit_ptr</name></expr></argument>, <argument><expr><name>thresh_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>early_exit</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>early_exit</name> <operator>=</operator> <call><name>vp9_vt_lpf_t16_16w</name><argument_list>(<argument><expr><operator>(</operator><name>transposed_input</name> <operator>+</operator> <literal type="number">16</literal> <operator>*</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>pitch</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>filter48</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>early_exit</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>vp9_transpose_16x16</name><argument_list>(<argument><expr><name>transposed_input</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><operator>(</operator><name>src</name> <operator>-</operator> <literal type="number">8</literal><operator>)</operator></expr></argument>, <argument><expr><name>pitch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>
</unit>
