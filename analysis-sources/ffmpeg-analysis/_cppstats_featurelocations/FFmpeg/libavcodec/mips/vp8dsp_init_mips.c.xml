<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mips\vp8dsp_init_mips.c">

























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/vp8dsp.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vp8dsp_mips.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP8_MC_MIPS_FUNC</name><parameter_list>(<parameter><type><name>IDX</name></type></parameter>, <parameter><type><name>SIZE</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>dsp-&gt;put_vp8_epel_pixels_tab[IDX][0][1] = ff_put_vp8_epel##SIZE##_h4_msa; dsp-&gt;put_vp8_epel_pixels_tab[IDX][0][2] = ff_put_vp8_epel##SIZE##_h6_msa; dsp-&gt;put_vp8_epel_pixels_tab[IDX][1][0] = ff_put_vp8_epel##SIZE##_v4_msa; dsp-&gt;put_vp8_epel_pixels_tab[IDX][1][1] = ff_put_vp8_epel##SIZE##_h4v4_msa; dsp-&gt;put_vp8_epel_pixels_tab[IDX][1][2] = ff_put_vp8_epel##SIZE##_h6v4_msa; dsp-&gt;put_vp8_epel_pixels_tab[IDX][2][0] = ff_put_vp8_epel##SIZE##_v6_msa; dsp-&gt;put_vp8_epel_pixels_tab[IDX][2][1] = ff_put_vp8_epel##SIZE##_h4v6_msa; dsp-&gt;put_vp8_epel_pixels_tab[IDX][2][2] = ff_put_vp8_epel##SIZE##_h6v6_msa</cpp:value></cpp:define>

















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP8_BILINEAR_MC_MIPS_FUNC</name><parameter_list>(<parameter><type><name>IDX</name></type></parameter>, <parameter><type><name>SIZE</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>dsp-&gt;put_vp8_bilinear_pixels_tab[IDX][0][1] = ff_put_vp8_bilinear##SIZE##_h_msa; dsp-&gt;put_vp8_bilinear_pixels_tab[IDX][0][2] = ff_put_vp8_bilinear##SIZE##_h_msa; dsp-&gt;put_vp8_bilinear_pixels_tab[IDX][1][0] = ff_put_vp8_bilinear##SIZE##_v_msa; dsp-&gt;put_vp8_bilinear_pixels_tab[IDX][1][1] = ff_put_vp8_bilinear##SIZE##_hv_msa; dsp-&gt;put_vp8_bilinear_pixels_tab[IDX][1][2] = ff_put_vp8_bilinear##SIZE##_hv_msa; dsp-&gt;put_vp8_bilinear_pixels_tab[IDX][2][0] = ff_put_vp8_bilinear##SIZE##_v_msa; dsp-&gt;put_vp8_bilinear_pixels_tab[IDX][2][1] = ff_put_vp8_bilinear##SIZE##_hv_msa; dsp-&gt;put_vp8_bilinear_pixels_tab[IDX][2][2] = ff_put_vp8_bilinear##SIZE##_hv_msa</cpp:value></cpp:define>

















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP8_MC_MIPS_COPY</name><parameter_list>(<parameter><type><name>IDX</name></type></parameter>, <parameter><type><name>SIZE</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>dsp-&gt;put_vp8_epel_pixels_tab[IDX][0][0] = ff_put_vp8_pixels##SIZE##_msa; dsp-&gt;put_vp8_bilinear_pixels_tab[IDX][0][0] = ff_put_vp8_pixels##SIZE##_msa;</cpp:value></cpp:define>





<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_MSA</name></expr></cpp:if>
<function><type><specifier>static</specifier> <name>av_cold</name> <name>void</name></type> <name>vp8dsp_init_msa</name><parameter_list>(<parameter><decl><type><name>VP8DSPContext</name> <modifier>*</modifier></type><name>dsp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_luma_dc_wht</name></name> <operator>=</operator> <name>ff_vp8_luma_dc_wht_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_idct_add</name></name> <operator>=</operator> <name>ff_vp8_idct_add_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_idct_dc_add</name></name> <operator>=</operator> <name>ff_vp8_idct_dc_add_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_idct_dc_add4y</name></name> <operator>=</operator> <name>ff_vp8_idct_dc_add4y_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_idct_dc_add4uv</name></name> <operator>=</operator> <name>ff_vp8_idct_dc_add4uv_msa</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP8_MC_MIPS_FUNC</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP8_MC_MIPS_FUNC</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP8_MC_MIPS_FUNC</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP8_BILINEAR_MC_MIPS_FUNC</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP8_BILINEAR_MC_MIPS_FUNC</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP8_BILINEAR_MC_MIPS_FUNC</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP8_MC_MIPS_COPY</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP8_MC_MIPS_COPY</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_v_loop_filter16y</name></name> <operator>=</operator> <name>ff_vp8_v_loop_filter16_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_h_loop_filter16y</name></name> <operator>=</operator> <name>ff_vp8_h_loop_filter16_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_v_loop_filter8uv</name></name> <operator>=</operator> <name>ff_vp8_v_loop_filter8uv_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_h_loop_filter8uv</name></name> <operator>=</operator> <name>ff_vp8_h_loop_filter8uv_msa</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_v_loop_filter16y_inner</name></name> <operator>=</operator> <name>ff_vp8_v_loop_filter16_inner_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_h_loop_filter16y_inner</name></name> <operator>=</operator> <name>ff_vp8_h_loop_filter16_inner_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_v_loop_filter8uv_inner</name></name> <operator>=</operator> <name>ff_vp8_v_loop_filter8uv_inner_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_h_loop_filter8uv_inner</name></name> <operator>=</operator> <name>ff_vp8_h_loop_filter8uv_inner_msa</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_v_loop_filter_simple</name></name> <operator>=</operator> <name>ff_vp8_v_loop_filter_simple_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_h_loop_filter_simple</name></name> <operator>=</operator> <name>ff_vp8_h_loop_filter_simple_msa</name></expr>;</expr_stmt>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_MMI</name></expr></cpp:if>
<function><type><specifier>static</specifier> <name>av_cold</name> <name>void</name></type> <name>vp8dsp_init_mmi</name><parameter_list>(<parameter><decl><type><name>VP8DSPContext</name> <modifier>*</modifier></type><name>dsp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_luma_dc_wht</name></name> <operator>=</operator> <name>ff_vp8_luma_dc_wht_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_luma_dc_wht_dc</name></name> <operator>=</operator> <name>ff_vp8_luma_dc_wht_dc_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_idct_add</name></name> <operator>=</operator> <name>ff_vp8_idct_add_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_idct_dc_add</name></name> <operator>=</operator> <name>ff_vp8_idct_dc_add_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_idct_dc_add4y</name></name> <operator>=</operator> <name>ff_vp8_idct_dc_add4y_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_idct_dc_add4uv</name></name> <operator>=</operator> <name>ff_vp8_idct_dc_add4uv_mmi</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel16_h4_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel16_h6_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel16_v4_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel16_h4v4_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel16_h6v4_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel16_v6_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel16_h4v6_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel16_h6v6_mmi</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel8_h4_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel8_h6_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel8_v4_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel8_h4v4_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel8_h6v4_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel8_v6_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel8_h4v6_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel8_h6v6_mmi</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel4_h4_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel4_h6_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel4_v4_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel4_h4v4_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel4_h6v4_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel4_v6_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel4_h4v6_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_epel4_h6v6_mmi</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear16_h_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear16_h_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear16_v_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear16_hv_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear16_hv_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear16_v_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear16_hv_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear16_hv_mmi</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear8_h_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear8_h_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear8_v_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear8_hv_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear8_hv_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear8_v_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear8_hv_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear8_hv_mmi</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear4_h_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear4_h_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear4_v_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear4_hv_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear4_hv_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear4_v_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear4_hv_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_bilinear4_hv_mmi</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_pixels16_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_pixels16_mmi</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_epel_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_pixels8_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>put_vp8_bilinear_pixels_tab</name><index>[<expr><literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>ff_put_vp8_pixels8_mmi</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_v_loop_filter16y</name></name> <operator>=</operator> <name>ff_vp8_v_loop_filter16_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_h_loop_filter16y</name></name> <operator>=</operator> <name>ff_vp8_h_loop_filter16_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_v_loop_filter8uv</name></name> <operator>=</operator> <name>ff_vp8_v_loop_filter8uv_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_h_loop_filter8uv</name></name> <operator>=</operator> <name>ff_vp8_h_loop_filter8uv_mmi</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_v_loop_filter16y_inner</name></name> <operator>=</operator> <name>ff_vp8_v_loop_filter16_inner_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_h_loop_filter16y_inner</name></name> <operator>=</operator> <name>ff_vp8_h_loop_filter16_inner_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_v_loop_filter8uv_inner</name></name> <operator>=</operator> <name>ff_vp8_v_loop_filter8uv_inner_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_h_loop_filter8uv_inner</name></name> <operator>=</operator> <name>ff_vp8_h_loop_filter8uv_inner_mmi</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_v_loop_filter_simple</name></name> <operator>=</operator> <name>ff_vp8_v_loop_filter_simple_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>vp8_h_loop_filter_simple</name></name> <operator>=</operator> <name>ff_vp8_h_loop_filter_simple_mmi</name></expr>;</expr_stmt>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_vp8dsp_init_mips</name><parameter_list>(<parameter><decl><type><name>VP8DSPContext</name> <modifier>*</modifier></type><name>dsp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_MMI</name></expr></cpp:if>
<expr_stmt><expr><call><name>vp8dsp_init_mmi</name><argument_list>(<argument><expr><name>dsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_MSA</name></expr></cpp:if>
<expr_stmt><expr><call><name>vp8dsp_init_msa</name><argument_list>(<argument><expr><name>dsp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</block_content>}</block></function>
</unit>
