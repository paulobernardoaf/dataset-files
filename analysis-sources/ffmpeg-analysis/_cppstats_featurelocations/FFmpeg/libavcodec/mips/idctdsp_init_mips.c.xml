<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mips\idctdsp_init_mips.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"idctdsp_mips.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"xvididct_mips.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_MSA</name></expr></cpp:if>
<function><type><specifier>static</specifier> <name>av_cold</name> <name>void</name></type> <name>idctdsp_init_msa</name><parameter_list>(<parameter><decl><type><name>IDCTDSPContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>high_bit_depth</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>lowres</name></name> <operator>!=</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>lowres</name></name> <operator>!=</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>lowres</name></name> <operator>!=</operator> <literal type="number">3</literal><operator>)</operator> <operator>&amp;&amp;</operator>
<operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>bits_per_raw_sample</name></name> <operator>!=</operator> <literal type="number">10</literal><operator>)</operator> <operator>&amp;&amp;</operator>
<operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>bits_per_raw_sample</name></name> <operator>!=</operator> <literal type="number">12</literal><operator>)</operator> <operator>&amp;&amp;</operator>
<operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>idct_algo</name></name> <operator>==</operator> <name>FF_IDCT_AUTO</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_put</name></name> <operator>=</operator> <name>ff_simple_idct_put_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_add</name></name> <operator>=</operator> <name>ff_simple_idct_add_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name></name> <operator>=</operator> <name>ff_simple_idct_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>perm_type</name></name> <operator>=</operator> <name>FF_IDCT_PERM_NONE</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_pixels_clamped</name></name> <operator>=</operator> <name>ff_put_pixels_clamped_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_signed_pixels_clamped</name></name> <operator>=</operator> <name>ff_put_signed_pixels_clamped_msa</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_pixels_clamped</name></name> <operator>=</operator> <name>ff_add_pixels_clamped_msa</name></expr>;</expr_stmt>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_MMI</name></expr></cpp:if>
<function><type><specifier>static</specifier> <name>av_cold</name> <name>void</name></type> <name>idctdsp_init_mmi</name><parameter_list>(<parameter><decl><type><name>IDCTDSPContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>high_bit_depth</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>lowres</name></name> <operator>!=</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>lowres</name></name> <operator>!=</operator> <literal type="number">2</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>lowres</name></name> <operator>!=</operator> <literal type="number">3</literal><operator>)</operator> <operator>&amp;&amp;</operator>
<operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>bits_per_raw_sample</name></name> <operator>!=</operator> <literal type="number">10</literal><operator>)</operator> <operator>&amp;&amp;</operator>
<operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>bits_per_raw_sample</name></name> <operator>!=</operator> <literal type="number">12</literal><operator>)</operator> <operator>&amp;&amp;</operator>
<operator>(</operator><operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>idct_algo</name></name> <operator>==</operator> <name>FF_IDCT_AUTO</name><operator>)</operator> <operator>||</operator> <operator>(</operator><name><name>avctx</name><operator>-&gt;</operator><name>idct_algo</name></name> <operator>==</operator> <name>FF_IDCT_SIMPLE</name><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_put</name></name> <operator>=</operator> <name>ff_simple_idct_put_8_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct_add</name></name> <operator>=</operator> <name>ff_simple_idct_add_8_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>idct</name></name> <operator>=</operator> <name>ff_simple_idct_8_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>perm_type</name></name> <operator>=</operator> <name>FF_IDCT_PERM_NONE</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_pixels_clamped</name></name> <operator>=</operator> <name>ff_put_pixels_clamped_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>add_pixels_clamped</name></name> <operator>=</operator> <name>ff_add_pixels_clamped_mmi</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>put_signed_pixels_clamped</name></name> <operator>=</operator> <name>ff_put_signed_pixels_clamped_mmi</name></expr>;</expr_stmt>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_idctdsp_init_mips</name><parameter_list>(<parameter><decl><type><name>IDCTDSPContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>high_bit_depth</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_MMI</name></expr></cpp:if>
<expr_stmt><expr><call><name>idctdsp_init_mmi</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>high_bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_MSA</name></expr></cpp:if>
<expr_stmt><expr><call><name>idctdsp_init_msa</name><argument_list>(<argument><expr><name>c</name></expr></argument>, <argument><expr><name>avctx</name></expr></argument>, <argument><expr><name>high_bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</block_content>}</block></function>
</unit>
