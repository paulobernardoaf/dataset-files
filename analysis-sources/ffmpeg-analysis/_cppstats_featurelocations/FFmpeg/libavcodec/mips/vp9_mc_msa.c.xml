<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mips\vp9_mc_msa.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/vp9dsp.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mips/generic_macros_msa.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vp9dsp_mips.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name></type> <name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>,

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">20</literal></expr>,

<expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">28</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int8_t</name></type> <name><name>vp9_bilinear_filters_msa</name><index>[<expr><literal type="number">15</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr><literal type="number">120</literal></expr>, <expr><literal type="number">8</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">112</literal></expr>, <expr><literal type="number">16</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">104</literal></expr>, <expr><literal type="number">24</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">96</literal></expr>, <expr><literal type="number">32</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">88</literal></expr>, <expr><literal type="number">40</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">80</literal></expr>, <expr><literal type="number">48</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">72</literal></expr>, <expr><literal type="number">56</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">56</literal></expr>, <expr><literal type="number">72</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">48</literal></expr>, <expr><literal type="number">80</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">40</literal></expr>, <expr><literal type="number">88</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">32</literal></expr>, <expr><literal type="number">96</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">24</literal></expr>, <expr><literal type="number">104</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">16</literal></expr>, <expr><literal type="number">112</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">8</literal></expr>, <expr><literal type="number">120</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FILT_8TAP_DPADD_S_H</name><parameter_list>(<parameter><type><name>vec0</name></type></parameter>, <parameter><type><name>vec1</name></type></parameter>, <parameter><type><name>vec2</name></type></parameter>, <parameter><type><name>vec3</name></type></parameter>, <parameter><type><name>filt0</name></type></parameter>, <parameter><type><name>filt1</name></type></parameter>, <parameter><type><name>filt2</name></type></parameter>, <parameter><type><name>filt3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>( { v8i16 tmp0, tmp1; tmp0 = __msa_dotp_s_h((v16i8) vec0, (v16i8) filt0); tmp0 = __msa_dpadd_s_h(tmp0, (v16i8) vec1, (v16i8) filt1); tmp1 = __msa_dotp_s_h((v16i8) vec2, (v16i8) filt2); tmp1 = __msa_dpadd_s_h(tmp1, (v16i8) vec3, (v16i8) filt3); tmp0 = __msa_adds_s_h(tmp0, tmp1); tmp0; } )</cpp:value></cpp:define>













<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HORIZ_8TAP_FILT</name><parameter_list>(<parameter><type><name>src0</name></type></parameter>, <parameter><type><name>src1</name></type></parameter>, <parameter><type><name>mask0</name></type></parameter>, <parameter><type><name>mask1</name></type></parameter>, <parameter><type><name>mask2</name></type></parameter>, <parameter><type><name>mask3</name></type></parameter>, <parameter><type><name>filt_h0</name></type></parameter>, <parameter><type><name>filt_h1</name></type></parameter>, <parameter><type><name>filt_h2</name></type></parameter>, <parameter><type><name>filt_h3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>( { v16i8 vec0_m, vec1_m, vec2_m, vec3_m; v8i16 hz_out_m; VSHF_B4_SB(src0, src1, mask0, mask1, mask2, mask3, vec0_m, vec1_m, vec2_m, vec3_m); hz_out_m = FILT_8TAP_DPADD_S_H(vec0_m, vec1_m, vec2_m, vec3_m, filt_h0, filt_h1, filt_h2, filt_h3); hz_out_m = __msa_srari_h(hz_out_m, 7); hz_out_m = __msa_sat_s_h(hz_out_m, 7); hz_out_m; } )</cpp:value></cpp:define>
















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HORIZ_8TAP_4WID_4VECS_FILT</name><parameter_list>(<parameter><type><name>src0</name></type></parameter>, <parameter><type><name>src1</name></type></parameter>, <parameter><type><name>src2</name></type></parameter>, <parameter><type><name>src3</name></type></parameter>, <parameter><type><name>mask0</name></type></parameter>, <parameter><type><name>mask1</name></type></parameter>, <parameter><type><name>mask2</name></type></parameter>, <parameter><type><name>mask3</name></type></parameter>, <parameter><type><name>filt0</name></type></parameter>, <parameter><type><name>filt1</name></type></parameter>, <parameter><type><name>filt2</name></type></parameter>, <parameter><type><name>filt3</name></type></parameter>, <parameter><type><name>out0</name></type></parameter>, <parameter><type><name>out1</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ v16i8 vec0_m, vec1_m, vec2_m, vec3_m, vec4_m, vec5_m, vec6_m, vec7_m; v8i16 res0_m, res1_m, res2_m, res3_m; VSHF_B2_SB(src0, src1, src2, src3, mask0, mask0, vec0_m, vec1_m); DOTP_SB2_SH(vec0_m, vec1_m, filt0, filt0, res0_m, res1_m); VSHF_B2_SB(src0, src1, src2, src3, mask1, mask1, vec2_m, vec3_m); DPADD_SB2_SH(vec2_m, vec3_m, filt1, filt1, res0_m, res1_m); VSHF_B2_SB(src0, src1, src2, src3, mask2, mask2, vec4_m, vec5_m); DOTP_SB2_SH(vec4_m, vec5_m, filt2, filt2, res2_m, res3_m); VSHF_B2_SB(src0, src1, src2, src3, mask3, mask3, vec6_m, vec7_m); DPADD_SB2_SH(vec6_m, vec7_m, filt3, filt3, res2_m, res3_m); ADDS_SH2_SH(res0_m, res2_m, res1_m, res3_m, out0, out1); }</cpp:value></cpp:define>


















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HORIZ_8TAP_8WID_4VECS_FILT</name><parameter_list>(<parameter><type><name>src0</name></type></parameter>, <parameter><type><name>src1</name></type></parameter>, <parameter><type><name>src2</name></type></parameter>, <parameter><type><name>src3</name></type></parameter>, <parameter><type><name>mask0</name></type></parameter>, <parameter><type><name>mask1</name></type></parameter>, <parameter><type><name>mask2</name></type></parameter>, <parameter><type><name>mask3</name></type></parameter>, <parameter><type><name>filt0</name></type></parameter>, <parameter><type><name>filt1</name></type></parameter>, <parameter><type><name>filt2</name></type></parameter>, <parameter><type><name>filt3</name></type></parameter>, <parameter><type><name>out0</name></type></parameter>, <parameter><type><name>out1</name></type></parameter>, <parameter><type><name>out2</name></type></parameter>, <parameter><type><name>out3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ v16i8 vec0_m, vec1_m, vec2_m, vec3_m, vec4_m, vec5_m, vec6_m, vec7_m; v8i16 res0_m, res1_m, res2_m, res3_m, res4_m, res5_m, res6_m, res7_m; VSHF_B2_SB(src0, src0, src1, src1, mask0, mask0, vec0_m, vec1_m); VSHF_B2_SB(src2, src2, src3, src3, mask0, mask0, vec2_m, vec3_m); DOTP_SB4_SH(vec0_m, vec1_m, vec2_m, vec3_m, filt0, filt0, filt0, filt0, res0_m, res1_m, res2_m, res3_m); VSHF_B2_SB(src0, src0, src1, src1, mask2, mask2, vec0_m, vec1_m); VSHF_B2_SB(src2, src2, src3, src3, mask2, mask2, vec2_m, vec3_m); DOTP_SB4_SH(vec0_m, vec1_m, vec2_m, vec3_m, filt2, filt2, filt2, filt2, res4_m, res5_m, res6_m, res7_m); VSHF_B2_SB(src0, src0, src1, src1, mask1, mask1, vec4_m, vec5_m); VSHF_B2_SB(src2, src2, src3, src3, mask1, mask1, vec6_m, vec7_m); DPADD_SB4_SH(vec4_m, vec5_m, vec6_m, vec7_m, filt1, filt1, filt1, filt1, res0_m, res1_m, res2_m, res3_m); VSHF_B2_SB(src0, src0, src1, src1, mask3, mask3, vec4_m, vec5_m); VSHF_B2_SB(src2, src2, src3, src3, mask3, mask3, vec6_m, vec7_m); DPADD_SB4_SH(vec4_m, vec5_m, vec6_m, vec7_m, filt3, filt3, filt3, filt3, res4_m, res5_m, res6_m, res7_m); ADDS_SH4_SH(res0_m, res4_m, res1_m, res5_m, res2_m, res6_m, res3_m, res7_m, out0, out1, out2, out3); }</cpp:value></cpp:define>



























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PCKEV_XORI128_AVG_ST_UB</name><parameter_list>(<parameter><type><name>in0</name></type></parameter>, <parameter><type><name>in1</name></type></parameter>, <parameter><type><name>dst</name></type></parameter>, <parameter><type><name>pdst</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ v16u8 tmp_m; tmp_m = PCKEV_XORI128_UB(in1, in0); tmp_m = __msa_aver_u_b(tmp_m, (v16u8) dst); ST_UB(tmp_m, (pdst)); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PCKEV_AVG_ST_UB</name><parameter_list>(<parameter><type><name>in0</name></type></parameter>, <parameter><type><name>in1</name></type></parameter>, <parameter><type><name>dst</name></type></parameter>, <parameter><type><name>pdst</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ v16u8 tmp_m; tmp_m = (v16u8) __msa_pckev_b((v16i8) in0, (v16i8) in1); tmp_m = __msa_aver_u_b(tmp_m, (v16u8) dst); ST_UB(tmp_m, (pdst)); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PCKEV_AVG_ST8x4_UB</name><parameter_list>(<parameter><type><name>in0</name></type></parameter>, <parameter><type><name>in1</name></type></parameter>, <parameter><type><name>in2</name></type></parameter>, <parameter><type><name>in3</name></type></parameter>, <parameter><type><name>dst0</name></type></parameter>, <parameter><type><name>dst1</name></type></parameter>, <parameter><type><name>pdst</name></type></parameter>, <parameter><type><name>stride</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ v16u8 tmp0_m, tmp1_m; uint8_t *pdst_m = (uint8_t *) (pdst); PCKEV_B2_UB(in1, in0, in3, in2, tmp0_m, tmp1_m); AVER_UB2_UB(tmp0_m, dst0, tmp1_m, dst1, tmp0_m, tmp1_m); ST_D4(tmp0_m, tmp1_m, 0, 1, 0, 1, pdst_m, stride); }</cpp:value></cpp:define>










<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_4x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_4WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>,
<argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_4x8_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16i8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_4WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>,
<argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_4WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>,
<argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_4w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_8t_4x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">8</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_8t_4x8_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_8x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_8WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>,
<argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>,
<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_8x8mult_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_8WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>,
<argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>,
<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_8w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_8t_8x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_8t_8x8mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>,
<argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_16w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_8WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>,
<argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>,
<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_32w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_8WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>,
<argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>,
<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_8WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>,
<argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>,
<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_64w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_8WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>,
<argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,
<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">56</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_8WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>,
<argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,
<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_8t_4w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>, <decl><type ref="prev"/><name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10998</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out10</name></decl>, <decl><type ref="prev"/><name>out32</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>,
<argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D3_SB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>,
<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,
<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out10</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out32</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src2110</name> <operator>=</operator> <name>src6554</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4332</name> <operator>=</operator> <name>src8776</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src6554</name> <operator>=</operator> <name>src10998</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src6</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_8t_8w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>,
<argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,
<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src54_r</name> <operator>=</operator> <name>src98_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src65_r</name> <operator>=</operator> <name>src109_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src6</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_8t_16w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>, <decl><type ref="prev"/><name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src76_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src98_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>, <decl><type ref="prev"/><name>src65_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>src109_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out0_l</name></decl>, <decl><type ref="prev"/><name>out1_l</name></decl>, <decl><type ref="prev"/><name>out2_l</name></decl>, <decl><type ref="prev"/><name>out3_l</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>,
<argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>,
<argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,
<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>,
<argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>src98_l</name></expr></argument>, <argument><expr><name>src109_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_l</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_l</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_l</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src98_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_l</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>src109_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_UB</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>,
<argument><expr><name>out3_r</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src54_r</name> <operator>=</operator> <name>src98_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src65_r</name> <operator>=</operator> <name>src109_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src10_l</name> <operator>=</operator> <name>src54_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_l</name> <operator>=</operator> <name>src76_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src54_l</name> <operator>=</operator> <name>src98_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_l</name> <operator>=</operator> <name>src65_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_l</name> <operator>=</operator> <name>src87_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src65_l</name> <operator>=</operator> <name>src109_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src6</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_8t_16w_mult_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>width</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_tmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst_tmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>, <decl><type ref="prev"/><name>cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>, <decl><type ref="prev"/><name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src76_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src98_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>, <decl><type ref="prev"/><name>src65_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>src109_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out0_l</name></decl>, <decl><type ref="prev"/><name>out1_l</name></decl>, <decl><type ref="prev"/><name>out2_l</name></decl>, <decl><type ref="prev"/><name>out3_l</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>width</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>src_tmp</name> <operator>=</operator> <name>src</name></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_tmp</name> <operator>=</operator> <name>dst</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>,
<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,
<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>,
<argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>src98_l</name></expr></argument>, <argument><expr><name>src109_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_l</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_l</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_l</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src98_l</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_l</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>src109_l</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_UB</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>,
<argument><expr><name>out3_r</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst_tmp</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src54_r</name> <operator>=</operator> <name>src98_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src65_r</name> <operator>=</operator> <name>src109_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src10_l</name> <operator>=</operator> <name>src54_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_l</name> <operator>=</operator> <name>src76_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src54_l</name> <operator>=</operator> <name>src98_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_l</name> <operator>=</operator> <name>src65_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_l</name> <operator>=</operator> <name>src87_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src65_l</name> <operator>=</operator> <name>src109_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src6</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_8t_32w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>common_vt_8t_16w_mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>,
<argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_8t_64w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>common_vt_8t_16w_mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>,
<argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_8ht_8vt_4w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>filt_hz0</name></decl>, <decl><type ref="prev"/><name>filt_hz1</name></decl>, <decl><type ref="prev"/><name>filt_hz2</name></decl>, <decl><type ref="prev"/><name>filt_hz3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>hz_out9</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>, <decl><type ref="prev"/><name>out4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>filt_vt0</name></decl>, <decl><type ref="prev"/><name>filt_vt1</name></decl>, <decl><type ref="prev"/><name>filt_vt2</name></decl>, <decl><type ref="prev"/><name>filt_vt3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B2_SH</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>, <argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVEV_B2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out5</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out7</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out5</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out7</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>,
<argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out9</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out9</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out7</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out4</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out9</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>out4</name></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>,
<argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <name>hz_out9</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <name>out2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <name>out3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <name>out4</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_8ht_8vt_8w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>filt_hz0</name></decl>, <decl><type ref="prev"/><name>filt_hz1</name></decl>, <decl><type ref="prev"/><name>filt_hz2</name></decl>, <decl><type ref="prev"/><name>filt_hz3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>filt_vt0</name></decl>, <decl><type ref="prev"/><name>filt_vt1</name></decl>, <decl><type ref="prev"/><name>filt_vt2</name></decl>, <decl><type ref="prev"/><name>filt_vt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>hz_out9</name></decl>, <decl><type ref="prev"/><name>hz_out10</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>, <decl><type ref="prev"/><name>out4</name></decl>, <decl><type ref="prev"/><name>out5</name></decl>, <decl><type ref="prev"/><name>out6</name></decl>, <decl><type ref="prev"/><name>out7</name></decl>, <decl><type ref="prev"/><name>out8</name></decl>, <decl><type ref="prev"/><name>out9</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>, <argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVEV_B2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_SH</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_SH</name><argument_list>(<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out7</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>,
<argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out7</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>,
<argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out9</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out8</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out9</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>out8</name></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>,
<argument><expr><name>filt_vt1</name></expr></argument>, <argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out10</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out9</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out10</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><name>out9</name></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>,
<argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <name>hz_out10</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <name>out2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <name>out3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <name>out8</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out4</name> <operator>=</operator> <name>out6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out5</name> <operator>=</operator> <name>out7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out6</name> <operator>=</operator> <name>out9</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_8ht_8vt_16w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>multiple8_cnt</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_8ht_8vt_8w_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter_horiz</name></expr></argument>,
<argument><expr><name>filter_vert</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_8ht_8vt_32w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>multiple8_cnt</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_8ht_8vt_8w_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter_horiz</name></expr></argument>,
<argument><expr><name>filter_vert</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_8ht_8vt_64w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>multiple8_cnt</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">8</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_8ht_8vt_8w_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter_horiz</name></expr></argument>,
<argument><expr><name>filter_vert</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_and_aver_dst_4x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>res</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_4WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>,
<argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_and_aver_dst_4x8_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_4WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>,
<argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_4WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>,
<argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_UB</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_UB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_and_aver_dst_4w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_8t_and_aver_dst_4x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">8</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_8t_and_aver_dst_4x8_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_and_aver_dst_8w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HORIZ_8TAP_8WID_4VECS_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>,
<argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>,
<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CONVERT_UB_AVG_ST8x4_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>,
<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_and_aver_dst_16w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>, <decl><type ref="prev"/><name>vec12</name></decl>, <decl><type ref="prev"/><name>vec13</name></decl>, <decl><type ref="prev"/><name>vec14</name></decl>, <decl><type ref="prev"/><name>vec15</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B4_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>,
<argument><expr><name>vec12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B4_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>,
<argument><expr><name>vec13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B4_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>,
<argument><expr><name>vec14</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B4_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>,
<argument><expr><name>vec15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>,
<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>,
<argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>,
<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec12</name></expr></argument>, <argument><expr><name>vec13</name></expr></argument>, <argument><expr><name>vec14</name></expr></argument>, <argument><expr><name>vec15</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,
<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ADDS_SH4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>,
<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_XORI128_AVG_ST_UB</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_XORI128_AVG_ST_UB</name><argument_list>(<argument><expr><name>out3</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_and_aver_dst_32w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>, <decl><type ref="prev"/><name>vec12</name></decl>, <decl><type ref="prev"/><name>vec13</name></decl>, <decl><type ref="prev"/><name>vec14</name></decl>, <decl><type ref="prev"/><name>vec15</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B4_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>,
<argument><expr><name>vec12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B4_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>,
<argument><expr><name>vec13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B4_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>,
<argument><expr><name>vec14</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B4_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>,
<argument><expr><name>vec15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>,
<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>,
<argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>,
<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec12</name></expr></argument>, <argument><expr><name>vec13</name></expr></argument>, <argument><expr><name>vec14</name></expr></argument>, <argument><expr><name>vec15</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,
<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ADDS_SH4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>,
<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_XORI128_AVG_ST_UB</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_XORI128_AVG_ST_UB</name><argument_list>(<argument><expr><name>out3</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_8t_and_aver_dst_64w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>, <decl><type ref="prev"/><name>cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>, <decl><type ref="prev"/><name>vec12</name></decl>, <decl><type ref="prev"/><name>vec13</name></decl>, <decl><type ref="prev"/><name>vec14</name></decl>, <decl><type ref="prev"/><name>vec15</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>cnt</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>;</condition> <incr><expr><operator>++</operator><name>cnt</name></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>src</name><index>[<expr><name>cnt</name> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>src</name><index>[<expr><literal type="number">16</literal> <operator>+</operator> <operator>(</operator><name>cnt</name> <operator>&lt;&lt;</operator> <literal type="number">5</literal><operator>)</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>src</name><index>[<expr><literal type="number">24</literal> <operator>+</operator> <operator>(</operator><name>cnt</name> <operator>&lt;&lt;</operator> <literal type="number">5</literal><operator>)</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B4_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>,
<argument><expr><name>vec12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B4_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>,
<argument><expr><name>vec13</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B4_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>,
<argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec14</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B4_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>,
<argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>vec15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>,
<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec12</name></expr></argument>, <argument><expr><name>vec13</name></expr></argument>, <argument><expr><name>vec14</name></expr></argument>, <argument><expr><name>vec15</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>,
<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ADDS_SH4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>,
<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>dst</name><index>[<expr><name>cnt</name> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_XORI128_AVG_ST_UB</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>dst</name><index>[<expr><name>cnt</name> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_XORI128_AVG_ST_UB</name><argument_list>(<argument><expr><name>out3</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>dst</name><index>[<expr><literal type="number">16</literal> <operator>+</operator> <operator>(</operator><name>cnt</name> <operator>&lt;&lt;</operator> <literal type="number">5</literal><operator>)</operator></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_8t_and_aver_dst_4w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>, <decl><type ref="prev"/><name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10998</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out10</name></decl>, <decl><type ref="prev"/><name>out32</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>,
<argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D3_SB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>,
<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B3_128_SB</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,
<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out10</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out32</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>src10998</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src2110</name> <operator>=</operator> <name>src6554</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4332</name> <operator>=</operator> <name>src8776</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src6554</name> <operator>=</operator> <name>src10998</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src6</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_8t_and_aver_dst_8w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>,
<argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,
<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CONVERT_UB_AVG_ST8x4_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>,
<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src54_r</name> <operator>=</operator> <name>src98_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src65_r</name> <operator>=</operator> <name>src109_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src6</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_8t_and_aver_dst_16w_mult_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>width</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_tmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst_tmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>, <decl><type ref="prev"/><name>cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>, <decl><type ref="prev"/><name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src76_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src98_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>, <decl><type ref="prev"/><name>src65_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>src109_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>filt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out0_l</name></decl>, <decl><type ref="prev"/><name>out1_l</name></decl>, <decl><type ref="prev"/><name>out2_l</name></decl>, <decl><type ref="prev"/><name>out3_l</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>width</name> <operator>&gt;&gt;</operator> <literal type="number">4</literal><operator>)</operator></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>src_tmp</name> <operator>=</operator> <name>src</name></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_tmp</name> <operator>=</operator> <name>dst</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>,
<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_tmp</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst_tmp</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,
<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>,
<argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>src98_l</name></expr></argument>, <argument><expr><name>src109_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_l</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_l</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_l</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src98_l</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_l</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>src109_l</name></expr></argument>,
<argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>, <argument><expr><name>filt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_UB</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>,
<argument><expr><name>out3_r</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>,
<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst_tmp</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src54_r</name> <operator>=</operator> <name>src98_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src65_r</name> <operator>=</operator> <name>src109_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src10_l</name> <operator>=</operator> <name>src54_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_l</name> <operator>=</operator> <name>src76_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src54_l</name> <operator>=</operator> <name>src98_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_l</name> <operator>=</operator> <name>src65_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_l</name> <operator>=</operator> <name>src87_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src65_l</name> <operator>=</operator> <name>src109_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src6</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_8t_and_aver_dst_16w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>common_vt_8t_and_aver_dst_16w_mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_8t_and_aver_dst_32w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>common_vt_8t_and_aver_dst_16w_mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_8t_and_aver_dst_64w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>common_vt_8t_and_aver_dst_16w_mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_8ht_8vt_and_aver_dst_4w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>res</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>filt_hz0</name></decl>, <decl><type ref="prev"/><name>filt_hz1</name></decl>, <decl><type ref="prev"/><name>filt_hz2</name></decl>, <decl><type ref="prev"/><name>filt_hz3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>hz_out9</name></decl>, <decl><type ref="prev"/><name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>filt_vt0</name></decl>, <decl><type ref="prev"/><name>filt_vt1</name></decl>, <decl><type ref="prev"/><name>filt_vt2</name></decl>, <decl><type ref="prev"/><name>filt_vt3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B2_SH</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>, <argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVEV_B2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out5</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out7</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out5</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec3</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out7</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res0</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>,
<argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out9</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out9</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out7</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec4</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out9</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res1</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>,
<argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <name>hz_out9</name></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <name>vec2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>vec1</name> <operator>=</operator> <name>vec3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>vec2</name> <operator>=</operator> <name>vec4</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_8ht_8vt_and_aver_dst_8w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>filt_hz0</name></decl>, <decl><type ref="prev"/><name>filt_hz1</name></decl>, <decl><type ref="prev"/><name>filt_hz2</name></decl>, <decl><type ref="prev"/><name>filt_hz3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>, <decl><type ref="prev"/><name>filt_vt0</name></decl>, <decl><type ref="prev"/><name>filt_vt1</name></decl>, <decl><type ref="prev"/><name>filt_vt2</name></decl>, <decl><type ref="prev"/><name>filt_vt3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>hz_out9</name></decl>, <decl><type ref="prev"/><name>hz_out10</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>, <decl><type ref="prev"/><name>out4</name></decl>, <decl><type ref="prev"/><name>out5</name></decl>, <decl><type ref="prev"/><name>out6</name></decl>, <decl><type ref="prev"/><name>out7</name></decl>, <decl><type ref="prev"/><name>out8</name></decl>, <decl><type ref="prev"/><name>out9</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><literal type="number">3</literal> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SB</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>mask1</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask2</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">6</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB7</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">7</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B7_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>filt_hz0</name></expr></argument>,
<argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SPLATI_H4_SH</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>, <argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVEV_B2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_SH</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_SH</name><argument_list>(<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out7</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>,
<argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out7</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out8</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>,
<argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out9</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out8</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out9</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>out8</name></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>,
<argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out10</name> <operator>=</operator> <call><name>HORIZ_8TAP_FILT</name><argument_list>(<argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>filt_hz0</name></expr></argument>, <argument><expr><name>filt_hz1</name></expr></argument>, <argument><expr><name>filt_hz2</name></expr></argument>, <argument><expr><name>filt_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out9</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out10</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>FILT_8TAP_DPADD_S_H</name><argument_list>(<argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><name>out9</name></expr></argument>, <argument><expr><name>filt_vt0</name></expr></argument>, <argument><expr><name>filt_vt1</name></expr></argument>,
<argument><expr><name>filt_vt2</name></expr></argument>, <argument><expr><name>filt_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CONVERT_UB_AVG_ST8x4_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>,
<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <name>hz_out10</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <name>out2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <name>out3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <name>out8</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out4</name> <operator>=</operator> <name>out6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out5</name> <operator>=</operator> <name>out7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out6</name> <operator>=</operator> <name>out9</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_8ht_8vt_and_aver_dst_16w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>multiple8_cnt</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_8ht_8vt_and_aver_dst_8w_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter_horiz</name></expr></argument>, <argument><expr><name>filter_vert</name></expr></argument>,
<argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_8ht_8vt_and_aver_dst_32w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>multiple8_cnt</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_8ht_8vt_and_aver_dst_8w_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter_horiz</name></expr></argument>, <argument><expr><name>filter_vert</name></expr></argument>,
<argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_8ht_8vt_and_aver_dst_64w_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>multiple8_cnt</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">8</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_8ht_8vt_and_aver_dst_8w_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter_horiz</name></expr></argument>, <argument><expr><name>filter_vert</name></expr></argument>,
<argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_2t_4x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_UB</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W2</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W2</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_2t_4x8_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_SB</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W2</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W2</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W2</name><argument_list>(<argument><expr><name>res2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W2</name><argument_list>(<argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">6</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_4h_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_2t_4x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">8</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_2t_4x8_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_2t_8x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_2t_8x8mult_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">16</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_8h_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_2t_8x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_2t_8x8mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>,
<argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_16h_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>, <decl><type ref="prev"/><name>out4</name></decl>, <decl><type ref="prev"/><name>out5</name></decl>, <decl><type ref="prev"/><name>out6</name></decl>, <decl><type ref="prev"/><name>out7</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<for>for <control>(<init>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_32h_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>, <decl><type ref="prev"/><name>out4</name></decl>, <decl><type ref="prev"/><name>out5</name></decl>, <decl><type ref="prev"/><name>out6</name></decl>, <decl><type ref="prev"/><name>out7</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src6</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src7</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src5</name> <operator>=</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_64h_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>, <decl><type ref="prev"/><name>out4</name></decl>, <decl><type ref="prev"/><name>out5</name></decl>, <decl><type ref="prev"/><name>out6</name></decl>, <decl><type ref="prev"/><name>out7</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src6</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src7</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">56</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B3_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_2t_4x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,
<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src2110</name> <operator>=</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_2t_4x8_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src8</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D4_SB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>,
<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_4v_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_vt_2t_4x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">8</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_vt_2t_4x8_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_2t_8x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_2t_8x8mult_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,
<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_UB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>,
<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_8v_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_vt_2t_8x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>common_vt_2t_8x8mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>filter</name></expr></argument>,
<argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_16v_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src4</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_32v_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src5</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal> <operator>+</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src5</name> <operator>=</operator> <name>src9</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_64v_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src11</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>tmp4</name></decl>, <decl><type ref="prev"/><name>tmp5</name></decl>, <decl><type ref="prev"/><name>tmp6</name></decl>, <decl><type ref="prev"/><name>tmp7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal> <operator>+</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">32</literal> <operator>+</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">48</literal> <operator>+</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src6</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src9</name> <operator>=</operator> <name>src11</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_2ht_2vt_4x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt_vt</name></decl>, <decl><type ref="prev"/><name>filt_hz</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_hz</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_vt</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_pckod_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>hz_out4</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>hz_out2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W2</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W2</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_2ht_2vt_4x8_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt_hz</name></decl>, <decl><type ref="prev"/><name>filt_vt</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_hz</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_vt</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>src8</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B3_UH</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_pckod_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>hz_out8</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>hz_out6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>,
<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_SB</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W2</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W2</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W2</name><argument_list>(<argument><expr><name>res2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W2</name><argument_list>(<argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">6</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_4hv_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_2ht_2vt_4x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter_horiz</name></expr></argument>, <argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">8</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_2ht_2vt_4x8_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter_horiz</name></expr></argument>, <argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_2ht_2vt_8x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt_hz</name></decl>, <decl><type ref="prev"/><name>filt_vt</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_hz</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_vt</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec2</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec3</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_2ht_2vt_8x8mult_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt_hz</name></decl>, <decl><type ref="prev"/><name>filt_vt</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>tmp4</name></decl>, <decl><type ref="prev"/><name>tmp5</name></decl>, <decl><type ref="prev"/><name>tmp6</name></decl>, <decl><type ref="prev"/><name>tmp7</name></decl>, <decl><type ref="prev"/><name>tmp8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_hz</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_vt</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp4</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp5</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp6</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp7</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp8</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><name>tmp8</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH4_UH</name><argument_list>(<argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><name>tmp8</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>tmp8</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_8hv_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_2ht_2vt_8x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter_horiz</name></expr></argument>, <argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_2ht_2vt_8x8mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter_horiz</name></expr></argument>, <argument><expr><name>filter_vert</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_16hv_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt_hz</name></decl>, <decl><type ref="prev"/><name>filt_vt</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_hz</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_vt</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_ST_SB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_32hv_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>multiple8_cnt</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ff_put_bilin_16hv_msa</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_bilin_64hv_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>multiple8_cnt</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ff_put_bilin_16hv_msa</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_2t_and_aver_dst_4x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>res</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>vec3</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_2t_and_aver_dst_4x8_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>,
<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_UB</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>,
<argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_UB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_4h_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_2t_and_aver_dst_4x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">8</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_2t_and_aver_dst_4x8_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_2t_and_aver_dst_8x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST8x4_UB</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hz_2t_and_aver_dst_8x8mult_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>,
<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST8x4_UB</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>,
<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST8x4_UB</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">16</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>,
<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST8x4_UB</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>,
<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST8x4_UB</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_8h_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_2t_and_aver_dst_8x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>common_hz_2t_and_aver_dst_8x8mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_16h_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>,
<argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>,
<argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>res7</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>-</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>,
<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>,
<argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>res7</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_32h_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src6</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src7</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src5</name> <operator>=</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">16</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>res7</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">16</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_64h_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>, <decl><type ref="prev"/><name>out4</name></decl>, <decl><type ref="prev"/><name>out5</name></decl>, <decl><type ref="prev"/><name>out6</name></decl>, <decl><type ref="prev"/><name>out7</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <name>height</name></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src7</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">56</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B3_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_UB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>out3</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out4</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>out7</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_2t_and_aver_dst_4x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>out</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src4</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,
<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_UB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_2t_and_aver_dst_4x8_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>src8</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D4_UB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>,
<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_4v_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_vt_2t_and_aver_dst_4x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">8</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_vt_2t_and_aver_dst_4x8_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_2t_and_aver_dst_8x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST8x4_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_vt_2t_and_aver_dst_8x8mult_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>,
<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_UB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>,
<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST8x4_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST8x4_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_8v_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_vt_2t_and_aver_dst_8x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>common_vt_2t_and_aver_dst_8x8mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter</name></expr></argument>, <argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_16v_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src4</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_32v_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal> <operator>+</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal> <operator>+</operator> <literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal> <operator>+</operator> <literal type="number">3</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src5</name> <operator>=</operator> <name>src9</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_64v_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>, <decl><type ref="prev"/><name>src11</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>tmp4</name></decl>, <decl><type ref="prev"/><name>tmp5</name></decl>, <decl><type ref="prev"/><name>tmp6</name></decl>, <decl><type ref="prev"/><name>tmp7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>filt</name></decl>;</decl_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB2</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">48</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp7</name></expr></argument>, <argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal> <operator>+</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">32</literal> <operator>+</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B2_UB</name><argument_list>(<argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B2_UB</name><argument_list>(<argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><operator>(</operator><name>dst</name> <operator>+</operator> <literal type="number">48</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp7</name></expr></argument>, <argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">48</literal> <operator>+</operator> <name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src6</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src9</name> <operator>=</operator> <name>src11</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_2ht_2vt_and_aver_dst_4x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt_hz</name></decl>, <decl><type ref="prev"/><name>filt_vt</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_hz</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_UH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_vt</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_sldi_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out2</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_pckod_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>hz_out4</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>hz_out2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_2ht_2vt_and_aver_dst_4x8_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt_hz</name></decl>, <decl><type ref="prev"/><name>filt_vt</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_hz</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_vt</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>src8</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B3_UH</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <operator>(</operator><name>v8u16</name><operator>)</operator> <call><name>__msa_pckod_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>hz_out8</name></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>hz_out6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB4_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>,
<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_4hv_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_2ht_2vt_and_aver_dst_4x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter_horiz</name></expr></argument>, <argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">8</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_2ht_2vt_and_aver_dst_4x8_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter_horiz</name></expr></argument>, <argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_2ht_2vt_and_aver_dst_8x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt_hz</name></decl>, <decl><type ref="prev"/><name>filt_vt</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_hz</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_vt</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec2</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec3</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH4_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST8x4_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>common_hv_2ht_2vt_and_aver_dst_8x8mult_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt_hz</name></decl>, <decl><type ref="prev"/><name>filt_vt</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_hz</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_vt</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vec0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_ilvev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out0</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_dotp_u_h</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST8x4_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_8hv_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_2ht_2vt_and_aver_dst_8x4_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter_horiz</name></expr></argument>, <argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>common_hv_2ht_2vt_and_aver_dst_8x8mult_msa</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>,
<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>,
<argument><expr><name>filter_horiz</name></expr></argument>, <argument><expr><name>filter_vert</name></expr></argument>,
<argument><expr><name>height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_16hv_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_horiz</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>mx</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int8_t</name> <modifier>*</modifier></type><name>filter_vert</name> <init>= <expr><name><name>vp9_bilinear_filters_msa</name><index>[<expr><name>my</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>filt_hz</name></decl>, <decl><type ref="prev"/><name>filt_vt</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8u16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>filt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mask</name> <operator>=</operator> <call><name>LD_SB</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>mc_filt_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_horiz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_hz</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>filter_vert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt_vt</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_splati_h</name><argument_list>(<argument><expr><name>filt</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>HORIZ_2TAP_FILT_UH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask</name></expr></argument>, <argument><expr><name>filt_hz</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_B2_UB</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DOTP_UB2_UH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>filt_vt</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_UH2_UH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_AVG_ST_UB</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_32hv_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>multiple8_cnt</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ff_avg_bilin_16hv_msa</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_bilin_64hv_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>my</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>multiple8_cnt</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ff_avg_bilin_16hv_msa</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>height</name></expr></argument>, <argument><expr><name>mx</name></expr></argument>, <argument><expr><name>my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>copy_width8_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>, <decl><type ref="prev"/><name>out4</name></decl>, <decl><type ref="prev"/><name>out5</name></decl>, <decl><type ref="prev"/><name>out6</name></decl>, <decl><type ref="prev"/><name>out7</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>height</name> <operator>%</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD4</name><argument_list>(<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>height</name> <operator>%</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>/</operator> <literal type="number">4</literal><operator>)</operator></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SD4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>copy_width16_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">8</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">16</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">32</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>height</name> <operator>%</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>copy_width32_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>height</name> <operator>%</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>,
<argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>,
<argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>height</name> <operator>%</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>copy_width64_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>, <decl><type ref="prev"/><name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>, <decl><type ref="prev"/><name>src13</name></decl>, <decl><type ref="prev"/><name>src14</name></decl>, <decl><type ref="prev"/><name>src15</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>, <argument><expr><name>src15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>, <argument><expr><name>src15</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>avg_width4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>src1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">8</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">4</literal> <operator>*</operator> <name>src_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>avg_width8_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>, <decl><type ref="prev"/><name>tp4</name></decl>, <decl><type ref="prev"/><name>tp5</name></decl>, <decl><type ref="prev"/><name>tp6</name></decl>, <decl><type ref="prev"/><name>tp7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <operator>(</operator><name>height</name> <operator>%</operator> <literal type="number">8</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal><operator>)</operator></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">4</literal> <operator>*</operator> <name>src_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>tp4</name></expr></argument>, <argument><expr><name>tp5</name></expr></argument>, <argument><expr><name>tp6</name></expr></argument>, <argument><expr><name>tp7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">4</literal> <operator>*</operator> <name>src_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp4</name></expr></argument>, <argument><expr><name>tp5</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp6</name></expr></argument>, <argument><expr><name>tp7</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp4</name></expr></argument>, <argument><expr><name>tp5</name></expr></argument>, <argument><expr><name>tp6</name></expr></argument>, <argument><expr><name>tp7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp4</name></expr></argument>, <argument><expr><name>tp5</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp6</name></expr></argument>, <argument><expr><name>tp7</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>,
<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">4</literal> <operator>==</operator> <name>height</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>avg_width16_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <operator>(</operator><name>height</name> <operator>%</operator> <literal type="number">8</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>/</operator> <literal type="number">8</literal><operator>)</operator></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>,
<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>,
<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <operator>(</operator><name>height</name> <operator>%</operator> <literal type="number">4</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>/</operator> <literal type="number">4</literal><operator>)</operator></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>,
<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>avg_width32_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst_dup</name> <init>= <expr><name>dst</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>, <decl><type ref="prev"/><name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>, <decl><type ref="prev"/><name>src13</name></decl>, <decl><type ref="prev"/><name>src14</name></decl>, <decl><type ref="prev"/><name>src15</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst8</name></decl>, <decl><type ref="prev"/><name>dst9</name></decl>, <decl><type ref="prev"/><name>dst10</name></decl>, <decl><type ref="prev"/><name>dst11</name></decl>, <decl><type ref="prev"/><name>dst12</name></decl>, <decl><type ref="prev"/><name>dst13</name></decl>, <decl><type ref="prev"/><name>dst14</name></decl>, <decl><type ref="prev"/><name>dst15</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <operator>(</operator><name>height</name> <operator>%</operator> <literal type="number">8</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>/</operator> <literal type="number">8</literal><operator>)</operator></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst_dup</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst_dup</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_dup</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst_dup</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst8</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst12</name></expr></argument>, <argument><expr><name>dst14</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst_dup</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst9</name></expr></argument>, <argument><expr><name>dst11</name></expr></argument>, <argument><expr><name>dst13</name></expr></argument>, <argument><expr><name>dst15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_dup</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>,
<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>,
<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>dst8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>dst9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>dst11</name></expr></argument>,
<argument><expr><name>dst8</name></expr></argument>, <argument><expr><name>dst9</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src12</name></expr></argument>, <argument><expr><name>dst12</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>dst13</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>, <argument><expr><name>dst14</name></expr></argument>, <argument><expr><name>src15</name></expr></argument>, <argument><expr><name>dst15</name></expr></argument>,
<argument><expr><name>dst12</name></expr></argument>, <argument><expr><name>dst13</name></expr></argument>, <argument><expr><name>dst14</name></expr></argument>, <argument><expr><name>dst15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst8</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst12</name></expr></argument>, <argument><expr><name>dst14</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst9</name></expr></argument>, <argument><expr><name>dst11</name></expr></argument>, <argument><expr><name>dst13</name></expr></argument>, <argument><expr><name>dst15</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <operator>(</operator><name>height</name> <operator>%</operator> <literal type="number">4</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>/</operator> <literal type="number">4</literal><operator>)</operator></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>src_stride</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>src_stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst_dup</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst_dup</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_dup</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>,
<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>,
<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><name>dst_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>dst_stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>avg_width64_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst_dup</name> <init>= <expr><name>dst</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>, <decl><type ref="prev"/><name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>, <decl><type ref="prev"/><name>src13</name></decl>, <decl><type ref="prev"/><name>src14</name></decl>, <decl><type ref="prev"/><name>src15</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst8</name></decl>, <decl><type ref="prev"/><name>dst9</name></decl>, <decl><type ref="prev"/><name>dst10</name></decl>, <decl><type ref="prev"/><name>dst11</name></decl>, <decl><type ref="prev"/><name>dst12</name></decl>, <decl><type ref="prev"/><name>dst13</name></decl>, <decl><type ref="prev"/><name>dst14</name></decl>, <decl><type ref="prev"/><name>dst15</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>cnt</name> <operator>=</operator> <operator>(</operator><name>height</name> <operator>/</operator> <literal type="number">4</literal><operator>)</operator></expr>;</init> <condition><expr><name>cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>, <argument><expr><name>src15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>src_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst_dup</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_dup</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst_dup</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_dup</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst_dup</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>dst8</name></expr></argument>, <argument><expr><name>dst9</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_dup</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst_dup</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>dst12</name></expr></argument>, <argument><expr><name>dst13</name></expr></argument>, <argument><expr><name>dst14</name></expr></argument>, <argument><expr><name>dst15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_dup</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>,
<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>,
<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>dst8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>dst9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>dst11</name></expr></argument>,
<argument><expr><name>dst8</name></expr></argument>, <argument><expr><name>dst9</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src12</name></expr></argument>, <argument><expr><name>dst12</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>dst13</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>, <argument><expr><name>dst14</name></expr></argument>, <argument><expr><name>src15</name></expr></argument>, <argument><expr><name>dst15</name></expr></argument>,
<argument><expr><name>dst12</name></expr></argument>, <argument><expr><name>dst13</name></expr></argument>, <argument><expr><name>dst14</name></expr></argument>, <argument><expr><name>dst15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst8</name></expr></argument>, <argument><expr><name>dst9</name></expr></argument>, <argument><expr><name>dst10</name></expr></argument>, <argument><expr><name>dst11</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst12</name></expr></argument>, <argument><expr><name>dst13</name></expr></argument>, <argument><expr><name>dst14</name></expr></argument>, <argument><expr><name>dst15</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>dst_stride</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int8_t</name></type> <name><name>vp9_subpel_filters_msa</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">15</literal></expr>]</index><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{
<expr><index>[<expr><name>FILTER_8TAP_REGULAR</name></expr>]</index> <operator>=</operator> <block>{
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">126</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">122</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">118</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">112</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><literal type="number">105</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><operator>-</operator><literal type="number">14</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">88</literal></expr>, <expr><literal type="number">68</literal></expr>, <expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">78</literal></expr>, <expr><literal type="number">78</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><literal type="number">68</literal></expr>, <expr><literal type="number">88</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">14</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">105</literal></expr>, <expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">112</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">118</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">122</literal></expr>, <expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">126</literal></expr>, <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
}</block></expr>, <expr><index>[<expr><name>FILTER_8TAP_SHARP</name></expr>]</index> <operator>=</operator> <block>{
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">127</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">125</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><operator>-</operator><literal type="number">17</literal></expr>, <expr><literal type="number">121</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><operator>-</operator><literal type="number">20</literal></expr>, <expr><literal type="number">115</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">23</literal></expr>, <expr><literal type="number">108</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">24</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><operator>-</operator><literal type="number">24</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><operator>-</operator><literal type="number">21</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><operator>-</operator><literal type="number">23</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><operator>-</operator><literal type="number">23</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">21</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><operator>-</operator><literal type="number">24</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><operator>-</operator><literal type="number">24</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">108</literal></expr>, <expr><operator>-</operator><literal type="number">23</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">115</literal></expr>, <expr><operator>-</operator><literal type="number">20</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">121</literal></expr>, <expr><operator>-</operator><literal type="number">17</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">125</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">127</literal></expr>, <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
}</block></expr>, <expr><index>[<expr><name>FILTER_8TAP_SMOOTH</name></expr>]</index> <operator>=</operator> <block>{
<expr><block>{<expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">46</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">46</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>}</block></expr>,
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP9_8TAP_MIPS_MSA_FUNC</name><parameter_list>(<parameter><type><name>SIZE</name></type></parameter>, <parameter><type><name>type</name></type></parameter>, <parameter><type><name>type_idx</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_put_8tap_##type##_##SIZE##h_msa(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const int8_t *filter = vp9_subpel_filters_msa[type_idx][mx-1]; common_hz_8t_##SIZE##w_msa(src, srcstride, dst, dststride, filter, h); } void ff_put_8tap_##type##_##SIZE##v_msa(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const int8_t *filter = vp9_subpel_filters_msa[type_idx][my-1]; common_vt_8t_##SIZE##w_msa(src, srcstride, dst, dststride, filter, h); } void ff_put_8tap_##type##_##SIZE##hv_msa(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const int8_t *hfilter = vp9_subpel_filters_msa[type_idx][mx-1]; const int8_t *vfilter = vp9_subpel_filters_msa[type_idx][my-1]; common_hv_8ht_8vt_##SIZE##w_msa(src, srcstride, dst, dststride, hfilter, vfilter, h); } void ff_avg_8tap_##type##_##SIZE##h_msa(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const int8_t *filter = vp9_subpel_filters_msa[type_idx][mx-1]; common_hz_8t_and_aver_dst_##SIZE##w_msa(src, srcstride, dst, dststride, filter, h); } void ff_avg_8tap_##type##_##SIZE##v_msa(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const int8_t *filter = vp9_subpel_filters_msa[type_idx][my-1]; common_vt_8t_and_aver_dst_##SIZE##w_msa(src, srcstride, dst, dststride, filter, h); } void ff_avg_8tap_##type##_##SIZE##hv_msa(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const int8_t *hfilter = vp9_subpel_filters_msa[type_idx][mx-1]; const int8_t *vfilter = vp9_subpel_filters_msa[type_idx][my-1]; common_hv_8ht_8vt_and_aver_dst_##SIZE##w_msa(src, srcstride, dst, dststride, hfilter, vfilter, h); }</cpp:value></cpp:define>



































































<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP9_COPY_AVG_MIPS_MSA_FUNC</name><parameter_list>(<parameter><type><name>SIZE</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_copy##SIZE##_msa(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { copy_width##SIZE##_msa(src, srcstride, dst, dststride, h); } void ff_avg##SIZE##_msa(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { avg_width##SIZE##_msa(src, srcstride, dst, dststride, h); }</cpp:value></cpp:define>
















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP9_AVG_MIPS_MSA_FUNC</name><parameter_list>(<parameter><type><name>SIZE</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_avg##SIZE##_msa(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { avg_width##SIZE##_msa(src, srcstride, dst, dststride, h); }</cpp:value></cpp:define>








<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>regular</name></expr></argument>, <argument><expr><name>FILTER_8TAP_REGULAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>regular</name></expr></argument>, <argument><expr><name>FILTER_8TAP_REGULAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>regular</name></expr></argument>, <argument><expr><name>FILTER_8TAP_REGULAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>regular</name></expr></argument>, <argument><expr><name>FILTER_8TAP_REGULAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>regular</name></expr></argument>, <argument><expr><name>FILTER_8TAP_REGULAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>sharp</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SHARP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>sharp</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SHARP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sharp</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SHARP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sharp</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SHARP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>sharp</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SHARP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>smooth</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SMOOTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>smooth</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SMOOTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>smooth</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SMOOTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>smooth</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SMOOTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>smooth</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SMOOTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_COPY_AVG_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_COPY_AVG_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_COPY_AVG_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_COPY_AVG_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_AVG_MIPS_MSA_FUNC</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>VP9_8TAP_MIPS_MSA_FUNC</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>VP9_COPY_AVG_MIPS_MSA_FUNC</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>VP9_AVG_MIPS_MSA_FUNC</name></cpp:undef>
</unit>
