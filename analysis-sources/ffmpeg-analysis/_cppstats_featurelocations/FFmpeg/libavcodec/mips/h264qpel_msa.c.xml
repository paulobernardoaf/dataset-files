<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mips\h264qpel_msa.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mips/generic_macros_msa.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"h264dsp_mips.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint8_t</name> <name><name>luma_mask_arr</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">6</literal></expr>]</index></name></type> <name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><call><name>aligned</name><argument_list>(<argument><expr><literal type="number">0x40</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">12</literal></expr>,
<expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">11</literal></expr>,
<expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">10</literal></expr>,


<expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">24</literal></expr>,
<expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">23</literal></expr>,
<expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">22</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><parameter_list>(<parameter><type><name>vec0</name></type></parameter>, <parameter><type><name>vec1</name></type></parameter>, <parameter><type><name>vec2</name></type></parameter>, <parameter><type><name>vec3</name></type></parameter>, <parameter><type><name>vec4</name></type></parameter>, <parameter><type><name>vec5</name></type></parameter>, <parameter><type><name>out1</name></type></parameter>, <parameter><type><name>out2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ v16i8 tmp0_m, tmp1_m; v16i8 minus5b_m = __msa_ldi_b(-5); v16i8 plus20b_m = __msa_ldi_b(20); ILVRL_B2_SB(vec5, vec0, tmp0_m, tmp1_m); HADD_SB2_SH(tmp0_m, tmp1_m, out1, out2); ILVRL_B2_SB(vec4, vec1, tmp0_m, tmp1_m); DPADD_SB2_SH(tmp0_m, tmp1_m, minus5b_m, minus5b_m, out1, out2); ILVRL_B2_SB(vec3, vec2, tmp0_m, tmp1_m); DPADD_SB2_SH(tmp0_m, tmp1_m, plus20b_m, plus20b_m, out1, out2); }</cpp:value></cpp:define>














<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVC_HORZ_FILTER_SH</name><parameter_list>(<parameter><type><name>in0</name></type></parameter>, <parameter><type><name>in1</name></type></parameter>, <parameter><type><name>mask0</name></type></parameter>, <parameter><type><name>mask1</name></type></parameter>, <parameter><type><name>mask2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>( { v8i16 out0_m; v16i8 tmp0_m; v16i8 minus5b = __msa_ldi_b(-5); v16i8 plus20b = __msa_ldi_b(20); tmp0_m = __msa_vshf_b((v16i8) mask0, in1, in0); out0_m = __msa_hadd_s_h(tmp0_m, tmp0_m); tmp0_m = __msa_vshf_b((v16i8) mask1, in1, in0); out0_m = __msa_dpadd_s_h(out0_m, minus5b, tmp0_m); tmp0_m = __msa_vshf_b((v16i8) mask2, in1, in0); out0_m = __msa_dpadd_s_h(out0_m, plus20b, tmp0_m); out0_m; } )</cpp:value></cpp:define>


















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVC_DOT_SH3_SH</name><parameter_list>(<parameter><type><name>in0</name></type></parameter>, <parameter><type><name>in1</name></type></parameter>, <parameter><type><name>in2</name></type></parameter>, <parameter><type><name>coeff0</name></type></parameter>, <parameter><type><name>coeff1</name></type></parameter>, <parameter><type><name>coeff2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>( { v8i16 out0_m; out0_m = __msa_dotp_s_h((v16i8) in0, (v16i8) coeff0); out0_m = __msa_dpadd_s_h(out0_m, (v16i8) in1, (v16i8) coeff1); out0_m = __msa_dpadd_s_h(out0_m, (v16i8) in2, (v16i8) coeff2); out0_m; } )</cpp:value></cpp:define>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVC_DOT_SW3_SW</name><parameter_list>(<parameter><type><name>in0</name></type></parameter>, <parameter><type><name>in1</name></type></parameter>, <parameter><type><name>in2</name></type></parameter>, <parameter><type><name>coeff0</name></type></parameter>, <parameter><type><name>coeff1</name></type></parameter>, <parameter><type><name>coeff2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>( { v4i32 out0_m; out0_m = __msa_dotp_s_w((v8i16) in0, (v8i16) coeff0); out0_m = __msa_dpadd_s_w(out0_m, (v8i16) in1, (v8i16) coeff1); out0_m = __msa_dpadd_s_w(out0_m, (v8i16) in2, (v8i16) coeff2); out0_m = __msa_srari_w(out0_m, 10); out0_m = __msa_sat_s_w(out0_m, 7); out0_m; } )</cpp:value></cpp:define>











<function><type><specifier>static</specifier> <name>void</name></type> <name>avc_luma_hv_qrt_4x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_x</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_y</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_hz0</name></decl>, <decl><type ref="prev"/><name>src_hz1</name></decl>, <decl><type ref="prev"/><name>src_hz2</name></decl>, <decl><type ref="prev"/><name>src_hz3</name></decl>, <decl><type ref="prev"/><name>src_vt7</name></decl>, <decl><type ref="prev"/><name>src_vt8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt0</name></decl>, <decl><type ref="prev"/><name>src_vt1</name></decl>, <decl><type ref="prev"/><name>src_vt2</name></decl>, <decl><type ref="prev"/><name>src_vt3</name></decl>, <decl><type ref="prev"/><name>src_vt4</name></decl>, <decl><type ref="prev"/><name>src_vt5</name></decl>, <decl><type ref="prev"/><name>src_vt6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt10_r</name></decl>, <decl><type ref="prev"/><name>src_vt32_r</name></decl>, <decl><type ref="prev"/><name>src_vt54_r</name></decl>, <decl><type ref="prev"/><name>src_vt76_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>vt_out0</name></decl>, <decl><type ref="prev"/><name>vt_out1</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src_vt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt0</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt1</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt2</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt3</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt3</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_x</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_vt4</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt4</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt5</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt5</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt6</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt6</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt7</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt7</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_vt4</name></expr></argument>, <argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt10_r</name></expr></argument>, <argument><expr><name>src_vt32_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt10_r</name></expr></argument>, <argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out0</name> <operator>+</operator> <name>vt_out0</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out1</name> <operator>+</operator> <name>vt_out1</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>avc_luma_hv_qrt_8x8_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_x</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_y</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_hz0</name></decl>, <decl><type ref="prev"/><name>src_hz1</name></decl>, <decl><type ref="prev"/><name>src_hz2</name></decl>, <decl><type ref="prev"/><name>src_hz3</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt0</name></decl>, <decl><type ref="prev"/><name>src_vt1</name></decl>, <decl><type ref="prev"/><name>src_vt2</name></decl>, <decl><type ref="prev"/><name>src_vt3</name></decl>, <decl><type ref="prev"/><name>src_vt4</name></decl>, <decl><type ref="prev"/><name>src_vt5</name></decl>, <decl><type ref="prev"/><name>src_vt6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt7</name></decl>, <decl><type ref="prev"/><name>src_vt8</name></decl>, <decl><type ref="prev"/><name>src_vt9</name></decl>, <decl><type ref="prev"/><name>src_vt10</name></decl>, <decl><type ref="prev"/><name>src_vt11</name></decl>, <decl><type ref="prev"/><name>src_vt12</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt10_r</name></decl>, <decl><type ref="prev"/><name>src_vt21_r</name></decl>, <decl><type ref="prev"/><name>src_vt32_r</name></decl>, <decl><type ref="prev"/><name>src_vt43_r</name></decl>, <decl><type ref="prev"/><name>src_vt54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt65_r</name></decl>, <decl><type ref="prev"/><name>src_vt76_r</name></decl>, <decl><type ref="prev"/><name>src_vt87_r</name></decl>, <decl><type ref="prev"/><name>src_vt98_r</name></decl>, <decl><type ref="prev"/><name>src_vt109_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt1110_r</name></decl>, <decl><type ref="prev"/><name>src_vt1211_r</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>vt_out0</name></decl>, <decl><type ref="prev"/><name>vt_out1</name></decl>, <decl><type ref="prev"/><name>vt_out2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_out3</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_x</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_x</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>,
<argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt10_r</name></expr></argument>, <argument><expr><name>src_vt21_r</name></expr></argument>, <argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>,
<argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>, <argument><expr><name>src_vt87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt10_r</name></expr></argument>, <argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt21_r</name></expr></argument>, <argument><expr><name>src_vt43_r</name></expr></argument>, <argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt43_r</name></expr></argument>, <argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>src_vt87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><name>vt_out2</name></expr></argument>, <argument><expr><name>vt_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><name>vt_out2</name></expr></argument>, <argument><expr><name>vt_out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out0</name> <operator>+</operator> <name>vt_out0</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out1</name> <operator>+</operator> <name>vt_out1</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out2</name> <operator>+</operator> <name>vt_out2</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out3</name> <operator>+</operator> <name>vt_out3</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_x</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt9</name></expr></argument>, <argument><expr><name>src_vt10</name></expr></argument>, <argument><expr><name>src_vt11</name></expr></argument>, <argument><expr><name>src_vt12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_vt9</name></expr></argument>, <argument><expr><name>src_vt10</name></expr></argument>, <argument><expr><name>src_vt11</name></expr></argument>, <argument><expr><name>src_vt12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src_vt9</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>, <argument><expr><name>src_vt10</name></expr></argument>, <argument><expr><name>src_vt9</name></expr></argument>, <argument><expr><name>src_vt11</name></expr></argument>, <argument><expr><name>src_vt10</name></expr></argument>,
<argument><expr><name>src_vt12</name></expr></argument>, <argument><expr><name>src_vt11</name></expr></argument>, <argument><expr><name>src_vt98_r</name></expr></argument>, <argument><expr><name>src_vt109_r</name></expr></argument>, <argument><expr><name>src_vt1110_r</name></expr></argument>,
<argument><expr><name>src_vt1211_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>, <argument><expr><name>src_vt98_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>src_vt87_r</name></expr></argument>, <argument><expr><name>src_vt109_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt76_r</name></expr></argument>, <argument><expr><name>src_vt98_r</name></expr></argument>, <argument><expr><name>src_vt1110_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt87_r</name></expr></argument>, <argument><expr><name>src_vt109_r</name></expr></argument>, <argument><expr><name>src_vt1211_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><name>vt_out2</name></expr></argument>, <argument><expr><name>vt_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><name>vt_out2</name></expr></argument>, <argument><expr><name>vt_out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out0</name> <operator>+</operator> <name>vt_out0</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out1</name> <operator>+</operator> <name>vt_out1</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out2</name> <operator>+</operator> <name>vt_out2</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out3</name> <operator>+</operator> <name>vt_out3</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>avc_luma_hv_qrt_16x16_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_x</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_y</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_x_tmp</name> <init>= <expr><name>src_x</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_y_tmp</name> <init>= <expr><name>src_y</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst_tmp</name> <init>= <expr><name>dst</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>multiple8_cnt</name></decl>, <decl><type ref="prev"/><name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_hz0</name></decl>, <decl><type ref="prev"/><name>src_hz1</name></decl>, <decl><type ref="prev"/><name>src_hz2</name></decl>, <decl><type ref="prev"/><name>src_hz3</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt0</name></decl>, <decl><type ref="prev"/><name>src_vt1</name></decl>, <decl><type ref="prev"/><name>src_vt2</name></decl>, <decl><type ref="prev"/><name>src_vt3</name></decl>, <decl><type ref="prev"/><name>src_vt4</name></decl>, <decl><type ref="prev"/><name>src_vt5</name></decl>, <decl><type ref="prev"/><name>src_vt6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt7</name></decl>, <decl><type ref="prev"/><name>src_vt8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt10_r</name></decl>, <decl><type ref="prev"/><name>src_vt21_r</name></decl>, <decl><type ref="prev"/><name>src_vt32_r</name></decl>, <decl><type ref="prev"/><name>src_vt43_r</name></decl>, <decl><type ref="prev"/><name>src_vt54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt65_r</name></decl>, <decl><type ref="prev"/><name>src_vt76_r</name></decl>, <decl><type ref="prev"/><name>src_vt87_r</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>vt_out0</name></decl>, <decl><type ref="prev"/><name>vt_out1</name></decl>, <decl><type ref="prev"/><name>vt_out2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_out3</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>src_x</name> <operator>=</operator> <name>src_x_tmp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y</name> <operator>=</operator> <name>src_y_tmp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>=</operator> <name>dst_tmp</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_x</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_x</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>,
<argument><expr><name>src_vt4</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt10_r</name></expr></argument>, <argument><expr><name>src_vt21_r</name></expr></argument>, <argument><expr><name>src_vt32_r</name></expr></argument>,
<argument><expr><name>src_vt43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>,
<argument><expr><name>src_vt8</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>,
<argument><expr><name>src_vt87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt10_r</name></expr></argument>, <argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt21_r</name></expr></argument>, <argument><expr><name>src_vt43_r</name></expr></argument>, <argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt43_r</name></expr></argument>, <argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>src_vt87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><name>vt_out2</name></expr></argument>, <argument><expr><name>vt_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><name>vt_out2</name></expr></argument>, <argument><expr><name>vt_out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out0</name> <operator>+</operator> <name>vt_out0</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out1</name> <operator>+</operator> <name>vt_out1</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out2</name> <operator>+</operator> <name>vt_out2</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out3</name> <operator>+</operator> <name>vt_out3</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src_vt0</name> <operator>=</operator> <name>src_vt4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt1</name> <operator>=</operator> <name>src_vt5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt2</name> <operator>=</operator> <name>src_vt6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt3</name> <operator>=</operator> <name>src_vt7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt4</name> <operator>=</operator> <name>src_vt8</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>src_x_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>avc_luma_hv_qrt_and_aver_dst_4x4_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_x</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_y</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res</name></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_hz0</name></decl>, <decl><type ref="prev"/><name>src_hz1</name></decl>, <decl><type ref="prev"/><name>src_hz2</name></decl>, <decl><type ref="prev"/><name>src_hz3</name></decl>, <decl><type ref="prev"/><name>src_vt7</name></decl>, <decl><type ref="prev"/><name>src_vt8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt0</name></decl>, <decl><type ref="prev"/><name>src_vt1</name></decl>, <decl><type ref="prev"/><name>src_vt2</name></decl>, <decl><type ref="prev"/><name>src_vt3</name></decl>, <decl><type ref="prev"/><name>src_vt4</name></decl>, <decl><type ref="prev"/><name>src_vt5</name></decl>, <decl><type ref="prev"/><name>src_vt6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt10_r</name></decl>, <decl><type ref="prev"/><name>src_vt32_r</name></decl>, <decl><type ref="prev"/><name>src_vt54_r</name></decl>, <decl><type ref="prev"/><name>src_vt76_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>vt_out0</name></decl>, <decl><type ref="prev"/><name>vt_out1</name></decl>, <decl><type ref="prev"/><name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src_vt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt0</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt1</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt2</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt3</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt3</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_x</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src_vt4</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt4</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt5</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt5</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt6</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt6</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt7</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt7</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src_vt8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_vt4</name></expr></argument>, <argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt10_r</name></expr></argument>, <argument><expr><name>src_vt32_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B2_SB</name><argument_list>(<argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt10_r</name></expr></argument>, <argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out1</name> <operator>+</operator> <name>vt_out1</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out0</name> <operator>+</operator> <name>vt_out0</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>avc_luma_hv_qrt_and_aver_dst_8x8_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_x</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_y</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_hz0</name></decl>, <decl><type ref="prev"/><name>src_hz1</name></decl>, <decl><type ref="prev"/><name>src_hz2</name></decl>, <decl><type ref="prev"/><name>src_hz3</name></decl>, <decl><type ref="prev"/><name>src_vt0</name></decl>, <decl><type ref="prev"/><name>src_vt1</name></decl>, <decl><type ref="prev"/><name>src_vt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt3</name></decl>, <decl><type ref="prev"/><name>src_vt4</name></decl>, <decl><type ref="prev"/><name>src_vt5</name></decl>, <decl><type ref="prev"/><name>src_vt6</name></decl>, <decl><type ref="prev"/><name>src_vt7</name></decl>, <decl><type ref="prev"/><name>src_vt8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt9</name></decl>, <decl><type ref="prev"/><name>src_vt10</name></decl>, <decl><type ref="prev"/><name>src_vt11</name></decl>, <decl><type ref="prev"/><name>src_vt12</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt10_r</name></decl>, <decl><type ref="prev"/><name>src_vt21_r</name></decl>, <decl><type ref="prev"/><name>src_vt32_r</name></decl>, <decl><type ref="prev"/><name>src_vt43_r</name></decl>, <decl><type ref="prev"/><name>src_vt54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt65_r</name></decl>, <decl><type ref="prev"/><name>src_vt76_r</name></decl>, <decl><type ref="prev"/><name>src_vt87_r</name></decl>, <decl><type ref="prev"/><name>src_vt98_r</name></decl>, <decl><type ref="prev"/><name>src_vt109_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt1110_r</name></decl>, <decl><type ref="prev"/><name>src_vt1211_r</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>vt_out0</name></decl>, <decl><type ref="prev"/><name>vt_out1</name></decl>, <decl><type ref="prev"/><name>vt_out2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_out3</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_x</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_x</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>,
<argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt10_r</name></expr></argument>, <argument><expr><name>src_vt21_r</name></expr></argument>, <argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>,
<argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>, <argument><expr><name>src_vt87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt10_r</name></expr></argument>, <argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt21_r</name></expr></argument>, <argument><expr><name>src_vt43_r</name></expr></argument>, <argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt43_r</name></expr></argument>, <argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>src_vt87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><name>vt_out2</name></expr></argument>, <argument><expr><name>vt_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><name>vt_out2</name></expr></argument>, <argument><expr><name>vt_out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out0</name> <operator>+</operator> <name>vt_out0</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out1</name> <operator>+</operator> <name>vt_out1</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out2</name> <operator>+</operator> <name>vt_out2</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out3</name> <operator>+</operator> <name>vt_out3</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_x</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt9</name></expr></argument>, <argument><expr><name>src_vt10</name></expr></argument>, <argument><expr><name>src_vt11</name></expr></argument>, <argument><expr><name>src_vt12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_vt9</name></expr></argument>, <argument><expr><name>src_vt10</name></expr></argument>, <argument><expr><name>src_vt11</name></expr></argument>, <argument><expr><name>src_vt12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src_vt9</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>, <argument><expr><name>src_vt10</name></expr></argument>, <argument><expr><name>src_vt9</name></expr></argument>, <argument><expr><name>src_vt11</name></expr></argument>, <argument><expr><name>src_vt10</name></expr></argument>,
<argument><expr><name>src_vt12</name></expr></argument>, <argument><expr><name>src_vt11</name></expr></argument>, <argument><expr><name>src_vt98_r</name></expr></argument>, <argument><expr><name>src_vt109_r</name></expr></argument>, <argument><expr><name>src_vt1110_r</name></expr></argument>,
<argument><expr><name>src_vt1211_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>, <argument><expr><name>src_vt98_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>src_vt87_r</name></expr></argument>, <argument><expr><name>src_vt109_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt76_r</name></expr></argument>, <argument><expr><name>src_vt98_r</name></expr></argument>, <argument><expr><name>src_vt1110_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt87_r</name></expr></argument>, <argument><expr><name>src_vt109_r</name></expr></argument>, <argument><expr><name>src_vt1211_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><name>vt_out2</name></expr></argument>, <argument><expr><name>vt_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><name>vt_out2</name></expr></argument>, <argument><expr><name>vt_out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out0</name> <operator>+</operator> <name>vt_out0</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out1</name> <operator>+</operator> <name>vt_out1</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out2</name> <operator>+</operator> <name>vt_out2</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out3</name> <operator>+</operator> <name>vt_out3</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>avc_luma_hv_qrt_and_aver_dst_16x16_msa</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_x</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_y</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_x_tmp</name> <init>= <expr><name>src_x</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_y_tmp</name> <init>= <expr><name>src_y</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst_tmp</name> <init>= <expr><name>dst</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>multiple8_cnt</name></decl>, <decl><type ref="prev"/><name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_hz0</name></decl>, <decl><type ref="prev"/><name>src_hz1</name></decl>, <decl><type ref="prev"/><name>src_hz2</name></decl>, <decl><type ref="prev"/><name>src_hz3</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt0</name></decl>, <decl><type ref="prev"/><name>src_vt1</name></decl>, <decl><type ref="prev"/><name>src_vt2</name></decl>, <decl><type ref="prev"/><name>src_vt3</name></decl>, <decl><type ref="prev"/><name>src_vt4</name></decl>, <decl><type ref="prev"/><name>src_vt5</name></decl>, <decl><type ref="prev"/><name>src_vt6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt7</name></decl>, <decl><type ref="prev"/><name>src_vt8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt10_r</name></decl>, <decl><type ref="prev"/><name>src_vt21_r</name></decl>, <decl><type ref="prev"/><name>src_vt32_r</name></decl>, <decl><type ref="prev"/><name>src_vt43_r</name></decl>, <decl><type ref="prev"/><name>src_vt54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src_vt65_r</name></decl>, <decl><type ref="prev"/><name>src_vt76_r</name></decl>, <decl><type ref="prev"/><name>src_vt87_r</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>vt_out0</name></decl>, <decl><type ref="prev"/><name>vt_out1</name></decl>, <decl><type ref="prev"/><name>vt_out2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_out3</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>src_x</name> <operator>=</operator> <name>src_x_tmp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y</name> <operator>=</operator> <name>src_y_tmp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>=</operator> <name>dst_tmp</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_x</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_x</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>src_hz0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>src_hz1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>src_hz2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>src_hz3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src_y</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt0</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>, <argument><expr><name>src_vt1</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt2</name></expr></argument>,
<argument><expr><name>src_vt4</name></expr></argument>, <argument><expr><name>src_vt3</name></expr></argument>, <argument><expr><name>src_vt10_r</name></expr></argument>, <argument><expr><name>src_vt21_r</name></expr></argument>, <argument><expr><name>src_vt32_r</name></expr></argument>,
<argument><expr><name>src_vt43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt4</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>, <argument><expr><name>src_vt5</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt6</name></expr></argument>,
<argument><expr><name>src_vt8</name></expr></argument>, <argument><expr><name>src_vt7</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>,
<argument><expr><name>src_vt87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt10_r</name></expr></argument>, <argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt21_r</name></expr></argument>, <argument><expr><name>src_vt43_r</name></expr></argument>, <argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt32_r</name></expr></argument>, <argument><expr><name>src_vt54_r</name></expr></argument>, <argument><expr><name>src_vt76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_out3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src_vt43_r</name></expr></argument>, <argument><expr><name>src_vt65_r</name></expr></argument>, <argument><expr><name>src_vt87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><name>vt_out2</name></expr></argument>, <argument><expr><name>vt_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>vt_out0</name></expr></argument>, <argument><expr><name>vt_out1</name></expr></argument>, <argument><expr><name>vt_out2</name></expr></argument>, <argument><expr><name>vt_out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out0</name> <operator>+</operator> <name>vt_out0</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out1</name> <operator>+</operator> <name>vt_out1</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out2</name> <operator>+</operator> <name>vt_out2</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><operator>(</operator><name>hz_out3</name> <operator>+</operator> <name>vt_out3</name><operator>)</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src_vt0</name> <operator>=</operator> <name>src_vt4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt1</name> <operator>=</operator> <name>src_vt5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt2</name> <operator>=</operator> <name>src_vt6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt3</name> <operator>=</operator> <name>src_vt7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src_vt4</name> <operator>=</operator> <name>src_vt8</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>src_x_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>src_y_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc00_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>, <decl><type ref="prev"/><name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>, <decl><type ref="prev"/><name>src13</name></decl>, <decl><type ref="prev"/><name>src14</name></decl>, <decl><type ref="prev"/><name>src15</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>, <argument><expr><name>src15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>, <argument><expr><name>src15</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc00_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">4</literal> <operator>*</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD4</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <literal type="number">4</literal> <operator>*</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SD4</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc00_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>,
<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>,
<argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB8</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>,
<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>,
<argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc00_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>, <decl><type ref="prev"/><name>tp4</name></decl>, <decl><type ref="prev"/><name>tp5</name></decl>, <decl><type ref="prev"/><name>tp6</name></decl>, <decl><type ref="prev"/><name>tp7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>src1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>src2</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>src3</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst2</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst3</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <literal type="number">4</literal> <operator>*</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp4</name></expr></argument>, <argument><expr><name>tp5</name></expr></argument>, <argument><expr><name>tp6</name></expr></argument>, <argument><expr><name>tp7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp4</name></expr></argument>, <argument><expr><name>tp5</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp6</name></expr></argument>, <argument><expr><name>tp7</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>stride</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp4</name></expr></argument>, <argument><expr><name>tp5</name></expr></argument>, <argument><expr><name>tp6</name></expr></argument>, <argument><expr><name>tp7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp4</name></expr></argument>, <argument><expr><name>tp5</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp6</name></expr></argument>, <argument><expr><name>tp7</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>,
<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc00_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>src0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc10_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask1</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_SB4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc30_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask1</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>,
<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_SB4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc10_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc30_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>,
<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>,
<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc10_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>res</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src0</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src2</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src0</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_xori_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>res</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc30_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>res</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>,
<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src0</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src2</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src0</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_xori_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>res</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc20_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_SB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>,
<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_SB4</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc20_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc20_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc01_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src76_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out0_l</name></decl>, <decl><type ref="prev"/><name>out1_l</name></decl>, <decl><type ref="prev"/><name>out2_l</name></decl>, <decl><type ref="prev"/><name>out3_l</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>,
<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>,
<argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>,
<argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_UB</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>,
<argument><expr><name>out3_r</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res2</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res3</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src10_l</name> <operator>=</operator> <name>src54_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_l</name> <operator>=</operator> <name>src76_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_l</name> <operator>=</operator> <name>src65_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_l</name> <operator>=</operator> <name>src87_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <name>src6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc03_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src76_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out0_l</name></decl>, <decl><type ref="prev"/><name>out1_l</name></decl>, <decl><type ref="prev"/><name>out2_l</name></decl>, <decl><type ref="prev"/><name>out3_l</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>,
<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>,
<argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>,
<argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_UB</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>,
<argument><expr><name>out3_r</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res1</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res2</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res3</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src10_l</name> <operator>=</operator> <name>src54_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_l</name> <operator>=</operator> <name>src76_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_l</name> <operator>=</operator> <name>src65_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_l</name> <operator>=</operator> <name>src87_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc01_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>, <decl><type ref="prev"/><name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>, <decl><type ref="prev"/><name>src1211_r</name></decl>, <decl><type ref="prev"/><name>src1110_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out4_r</name></decl>, <decl><type ref="prev"/><name>out5_r</name></decl>, <decl><type ref="prev"/><name>out6_r</name></decl>, <decl><type ref="prev"/><name>out7_r</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>,
<argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src1110_r</name></expr></argument>, <argument><expr><name>src1211_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out4_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out5_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out6_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src1110_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out7_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src1211_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out3</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc03_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>, <decl><type ref="prev"/><name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>, <decl><type ref="prev"/><name>src1211_r</name></decl>, <decl><type ref="prev"/><name>src1110_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out4_r</name></decl>, <decl><type ref="prev"/><name>out5_r</name></decl>, <decl><type ref="prev"/><name>out6_r</name></decl>, <decl><type ref="prev"/><name>out7_r</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>,
<argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src1110_r</name></expr></argument>, <argument><expr><name>src1211_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out4_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out5_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out6_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src1110_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out7_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src1211_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out3</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc01_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out10</name></decl>, <decl><type ref="prev"/><name>out32</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out10</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out32</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src2</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src54_r</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src4</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src32_r</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src54_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>src32_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc03_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out10</name></decl>, <decl><type ref="prev"/><name>out32</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out10</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out32</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src3</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src54_r</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src5</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src32_r</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src54_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>src32_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc11_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_16x16_msa</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc31_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_16x16_msa</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc13_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_16x16_msa</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <name>stride</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst</name></expr></argument>,
<argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc33_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_16x16_msa</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <name>stride</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>,
<argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc11_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_8x8_msa</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc31_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_8x8_msa</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc13_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_8x8_msa</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <name>stride</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc33_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_8x8_msa</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <name>stride</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>,
<argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc11_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_4x4_msa</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc31_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_4x4_msa</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc13_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_4x4_msa</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <name>stride</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc33_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_4x4_msa</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <name>stride</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>,
<argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc21_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst_tmp</name> <init>= <expr><name>dst</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_tmp</name> <init>= <expr><name>src</name> <operator>-</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>-</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>multiple8_cnt</name></decl>, <decl><type ref="prev"/><name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>, <decl><type ref="prev"/><name>hz_out10_l</name></decl>, <decl><type ref="prev"/><name>hz_out21_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out32_l</name></decl>, <decl><type ref="prev"/><name>hz_out43_l</name></decl>, <decl><type ref="prev"/><name>hz_out54_l</name></decl>, <decl><type ref="prev"/><name>hz_out65_l</name></decl>, <decl><type ref="prev"/><name>hz_out76_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>dst</name> <operator>=</operator> <name>dst_tmp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>=</operator> <name>src_tmp</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>,
<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>,
<argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>,
<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>,
<argument><expr><name>hz_out43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>,
<argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>,
<argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>,
<argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>,
<argument><expr><name>hz_out87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst4</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst6</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst5</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst7</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <name>hz_out4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <name>hz_out5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <name>hz_out6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <name>hz_out7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <name>hz_out8</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc23_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst_tmp</name> <init>= <expr><name>dst</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_tmp</name> <init>= <expr><name>src</name> <operator>-</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>-</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>multiple8_cnt</name></decl>, <decl><type ref="prev"/><name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>, <decl><type ref="prev"/><name>hz_out10_l</name></decl>, <decl><type ref="prev"/><name>hz_out21_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out32_l</name></decl>, <decl><type ref="prev"/><name>hz_out43_l</name></decl>, <decl><type ref="prev"/><name>hz_out54_l</name></decl>, <decl><type ref="prev"/><name>hz_out65_l</name></decl>, <decl><type ref="prev"/><name>hz_out76_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>dst</name> <operator>=</operator> <name>dst_tmp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>=</operator> <name>src_tmp</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>,
<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>,
<argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>,
<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>,
<argument><expr><name>hz_out43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>,
<argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>,
<argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>,
<argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>,
<argument><expr><name>hz_out87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst4</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst6</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst5</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst7</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <name>hz_out4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <name>hz_out5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <name>hz_out6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <name>hz_out7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <name>hz_out8</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc21_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>hz_out9</name></decl>, <decl><type ref="prev"/><name>hz_out10</name></decl>, <decl><type ref="prev"/><name>hz_out11</name></decl>, <decl><type ref="prev"/><name>hz_out12</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>, <decl><type ref="prev"/><name>hz_out89_r</name></decl>, <decl><type ref="prev"/><name>hz_out910_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out1110_r</name></decl>, <decl><type ref="prev"/><name>hz_out1211_r</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_l</name></decl>, <decl><type ref="prev"/><name>hz_out21_l</name></decl>, <decl><type ref="prev"/><name>hz_out32_l</name></decl>, <decl><type ref="prev"/><name>hz_out43_l</name></decl>, <decl><type ref="prev"/><name>hz_out54_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_l</name></decl>, <decl><type ref="prev"/><name>hz_out76_l</name></decl>, <decl><type ref="prev"/><name>hz_out87_l</name></decl>, <decl><type ref="prev"/><name>hz_out89_l</name></decl>, <decl><type ref="prev"/><name>hz_out910_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out1110_l</name></decl>, <decl><type ref="prev"/><name>hz_out1211_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out9</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out10</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out11</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out12</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>,
<argument><expr><name>hz_out12</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>hz_out1110_r</name></expr></argument>,
<argument><expr><name>hz_out1211_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>,
<argument><expr><name>hz_out12</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>hz_out1110_l</name></expr></argument>,
<argument><expr><name>hz_out1211_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>hz_out1110_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>hz_out1110_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>hz_out1211_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>hz_out1211_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc23_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>hz_out9</name></decl>, <decl><type ref="prev"/><name>hz_out10</name></decl>, <decl><type ref="prev"/><name>hz_out11</name></decl>, <decl><type ref="prev"/><name>hz_out12</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>, <decl><type ref="prev"/><name>hz_out89_r</name></decl>, <decl><type ref="prev"/><name>hz_out910_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out1110_r</name></decl>, <decl><type ref="prev"/><name>hz_out1211_r</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_l</name></decl>, <decl><type ref="prev"/><name>hz_out21_l</name></decl>, <decl><type ref="prev"/><name>hz_out32_l</name></decl>, <decl><type ref="prev"/><name>hz_out43_l</name></decl>, <decl><type ref="prev"/><name>hz_out54_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_l</name></decl>, <decl><type ref="prev"/><name>hz_out76_l</name></decl>, <decl><type ref="prev"/><name>hz_out87_l</name></decl>, <decl><type ref="prev"/><name>hz_out89_l</name></decl>, <decl><type ref="prev"/><name>hz_out910_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out1110_l</name></decl>, <decl><type ref="prev"/><name>hz_out1211_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out9</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out10</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out11</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out12</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>,
<argument><expr><name>hz_out12</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>hz_out1110_r</name></expr></argument>,
<argument><expr><name>hz_out1211_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>,
<argument><expr><name>hz_out12</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>hz_out1110_l</name></expr></argument>,
<argument><expr><name>hz_out1211_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>hz_out1110_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>hz_out1110_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>hz_out1211_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>hz_out1211_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc21_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKOD_D2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKOD_D2_SH</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc23_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKOD_D2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKOD_D2_SH</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_D2_SH</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc02_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src76_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out0_l</name></decl>, <decl><type ref="prev"/><name>out1_l</name></decl>, <decl><type ref="prev"/><name>out2_l</name></decl>, <decl><type ref="prev"/><name>out3_l</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>,
<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>,
<argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>,
<argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_UB</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>,
<argument><expr><name>out3_r</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src10_l</name> <operator>=</operator> <name>src54_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_l</name> <operator>=</operator> <name>src76_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_l</name> <operator>=</operator> <name>src65_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_l</name> <operator>=</operator> <name>src87_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc02_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>, <decl><type ref="prev"/><name>src10_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src98_r</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>, <decl><type ref="prev"/><name>src89_r</name></decl>, <decl><type ref="prev"/><name>src910_r</name></decl>, <decl><type ref="prev"/><name>src1110_r</name></decl>, <decl><type ref="prev"/><name>src1211_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out4_r</name></decl>, <decl><type ref="prev"/><name>out5_r</name></decl>, <decl><type ref="prev"/><name>out6_r</name></decl>, <decl><type ref="prev"/><name>out7_r</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">8</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>,
<argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src89_r</name></expr></argument>,
<argument><expr><name>src910_r</name></expr></argument>, <argument><expr><name>src1110_r</name></expr></argument>, <argument><expr><name>src1211_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src89_r</name></expr></argument>, <argument><expr><name>src910_r</name></expr></argument>, <argument><expr><name>src1110_r</name></expr></argument>, <argument><expr><name>src1211_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out4_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src89_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out5_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src910_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out6_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src89_r</name></expr></argument>, <argument><expr><name>src1110_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out7_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src910_r</name></expr></argument>, <argument><expr><name>src1211_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc02_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out10</name></decl>, <decl><type ref="prev"/><name>out32</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D4_SB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out10</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out32</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc12_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>row</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_res0</name></decl>, <decl><type ref="prev"/><name>vt_res1</name></decl>, <decl><type ref="prev"/><name>vt_res2</name></decl>, <decl><type ref="prev"/><name>vt_res3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec0</name></decl>, <decl><type ref="prev"/><name>shf_vec1</name></decl>, <decl><type ref="prev"/><name>shf_vec2</name></decl>, <decl><type ref="prev"/><name>shf_vec3</name></decl>, <decl><type ref="prev"/><name>shf_vec4</name></decl>, <decl><type ref="prev"/><name>shf_vec5</name></decl>, <decl><type ref="prev"/><name>shf_vec6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec7</name></decl>, <decl><type ref="prev"/><name>shf_vec8</name></decl>, <decl><type ref="prev"/><name>shf_vec9</name></decl>, <decl><type ref="prev"/><name>shf_vec10</name></decl>, <decl><type ref="prev"/><name>shf_vec11</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>hz_res0</name></decl>, <decl><type ref="prev"/><name>hz_res1</name></decl>, <decl><type ref="prev"/><name>hz_res2</name></decl>, <decl><type ref="prev"/><name>hz_res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask1</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask2</name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>minus5h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>plus20h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask1</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>row</name> <operator>=</operator> <literal type="number">16</literal></expr>;</init> <condition><expr><name>row</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>,
<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>,
<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_W4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <name>src2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <name>src3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src7</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src8</name> <operator>=</operator> <name>src9</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src9</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src10</name> <operator>=</operator> <name>src11</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src11</name> <operator>=</operator> <name>src6</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc32_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>row</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_res0</name></decl>, <decl><type ref="prev"/><name>vt_res1</name></decl>, <decl><type ref="prev"/><name>vt_res2</name></decl>, <decl><type ref="prev"/><name>vt_res3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec0</name></decl>, <decl><type ref="prev"/><name>shf_vec1</name></decl>, <decl><type ref="prev"/><name>shf_vec2</name></decl>, <decl><type ref="prev"/><name>shf_vec3</name></decl>, <decl><type ref="prev"/><name>shf_vec4</name></decl>, <decl><type ref="prev"/><name>shf_vec5</name></decl>, <decl><type ref="prev"/><name>shf_vec6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec7</name></decl>, <decl><type ref="prev"/><name>shf_vec8</name></decl>, <decl><type ref="prev"/><name>shf_vec9</name></decl>, <decl><type ref="prev"/><name>shf_vec10</name></decl>, <decl><type ref="prev"/><name>shf_vec11</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>hz_res0</name></decl>, <decl><type ref="prev"/><name>hz_res1</name></decl>, <decl><type ref="prev"/><name>hz_res2</name></decl>, <decl><type ref="prev"/><name>hz_res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask1</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask2</name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>minus5h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>plus20h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask1</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>row</name> <operator>=</operator> <literal type="number">16</literal></expr>;</init> <condition><expr><name>row</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>,
<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>,
<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_W4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckod_h</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckod_h</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <name>src2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <name>src3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src7</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src8</name> <operator>=</operator> <name>src9</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src9</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src10</name> <operator>=</operator> <name>src11</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src11</name> <operator>=</operator> <name>src6</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc12_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>row</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_res0</name></decl>, <decl><type ref="prev"/><name>vt_res1</name></decl>, <decl><type ref="prev"/><name>vt_res2</name></decl>, <decl><type ref="prev"/><name>vt_res3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec0</name></decl>, <decl><type ref="prev"/><name>shf_vec1</name></decl>, <decl><type ref="prev"/><name>shf_vec2</name></decl>, <decl><type ref="prev"/><name>shf_vec3</name></decl>, <decl><type ref="prev"/><name>shf_vec4</name></decl>, <decl><type ref="prev"/><name>shf_vec5</name></decl>, <decl><type ref="prev"/><name>shf_vec6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec7</name></decl>, <decl><type ref="prev"/><name>shf_vec8</name></decl>, <decl><type ref="prev"/><name>shf_vec9</name></decl>, <decl><type ref="prev"/><name>shf_vec10</name></decl>, <decl><type ref="prev"/><name>shf_vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>hz_res0</name></decl>, <decl><type ref="prev"/><name>hz_res1</name></decl>, <decl><type ref="prev"/><name>hz_res2</name></decl>, <decl><type ref="prev"/><name>hz_res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask1</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask2</name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>minus5h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>plus20h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask1</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>row</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>row</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>,
<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>,
<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_W4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D2</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <name>src3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <name>src4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src6</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc32_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>row</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_res0</name></decl>, <decl><type ref="prev"/><name>vt_res1</name></decl>, <decl><type ref="prev"/><name>vt_res2</name></decl>, <decl><type ref="prev"/><name>vt_res3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec0</name></decl>, <decl><type ref="prev"/><name>shf_vec1</name></decl>, <decl><type ref="prev"/><name>shf_vec2</name></decl>, <decl><type ref="prev"/><name>shf_vec3</name></decl>, <decl><type ref="prev"/><name>shf_vec4</name></decl>, <decl><type ref="prev"/><name>shf_vec5</name></decl>, <decl><type ref="prev"/><name>shf_vec6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec7</name></decl>, <decl><type ref="prev"/><name>shf_vec8</name></decl>, <decl><type ref="prev"/><name>shf_vec9</name></decl>, <decl><type ref="prev"/><name>shf_vec10</name></decl>, <decl><type ref="prev"/><name>shf_vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>hz_res0</name></decl>, <decl><type ref="prev"/><name>hz_res1</name></decl>, <decl><type ref="prev"/><name>hz_res2</name></decl>, <decl><type ref="prev"/><name>hz_res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask1</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask2</name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>minus5h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>plus20h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask1</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>row</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>row</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>,
<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>,
<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_W4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckod_h</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckod_h</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D2</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <name>src3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <name>src4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src6</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc12_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src10_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src65_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src76_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_res0</name></decl>, <decl><type ref="prev"/><name>vt_res1</name></decl>, <decl><type ref="prev"/><name>vt_res2</name></decl>, <decl><type ref="prev"/><name>vt_res3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>shf_vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec0</name></decl>, <decl><type ref="prev"/><name>shf_vec1</name></decl>, <decl><type ref="prev"/><name>shf_vec2</name></decl>, <decl><type ref="prev"/><name>shf_vec3</name></decl>, <decl><type ref="prev"/><name>shf_vec4</name></decl>, <decl><type ref="prev"/><name>shf_vec5</name></decl>, <decl><type ref="prev"/><name>shf_vec6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>hz_res0</name></decl>, <decl><type ref="prev"/><name>hz_res1</name></decl>, <decl><type ref="prev"/><name>hz_res2</name></decl>, <decl><type ref="prev"/><name>hz_res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask1</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask2</name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>minus5h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>plus20h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>zeros</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>,
<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>,
<argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vt_res0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_W2_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW2_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_W2_SW</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW2_SW</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_H2_SH</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_H2_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc32_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src10_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src65_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src76_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_res0</name></decl>, <decl><type ref="prev"/><name>vt_res1</name></decl>, <decl><type ref="prev"/><name>vt_res2</name></decl>, <decl><type ref="prev"/><name>vt_res3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>shf_vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec0</name></decl>, <decl><type ref="prev"/><name>shf_vec1</name></decl>, <decl><type ref="prev"/><name>shf_vec2</name></decl>, <decl><type ref="prev"/><name>shf_vec3</name></decl>, <decl><type ref="prev"/><name>shf_vec4</name></decl>, <decl><type ref="prev"/><name>shf_vec5</name></decl>, <decl><type ref="prev"/><name>shf_vec6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>hz_res0</name></decl>, <decl><type ref="prev"/><name>hz_res1</name></decl>, <decl><type ref="prev"/><name>hz_res2</name></decl>, <decl><type ref="prev"/><name>hz_res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask1</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask2</name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>minus5h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>plus20h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>zeros</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>,
<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>,
<argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vt_res0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vt_res0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_W2_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW2_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_W2_SW</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW2_SW</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_ilvod_h</name><argument_list>(<argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_ilvod_h</name><argument_list>(<argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_ilvod_h</name><argument_list>(<argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_ilvod_h</name><argument_list>(<argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel16_mc22_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_tmp</name> <init>= <expr><name>src</name> <operator>-</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>-</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst_tmp</name> <init>= <expr><name>dst</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>multiple8_cnt</name></decl>, <decl><type ref="prev"/><name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>, <decl><type ref="prev"/><name>hz_out10_l</name></decl>, <decl><type ref="prev"/><name>hz_out21_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out32_l</name></decl>, <decl><type ref="prev"/><name>hz_out43_l</name></decl>, <decl><type ref="prev"/><name>hz_out54_l</name></decl>, <decl><type ref="prev"/><name>hz_out65_l</name></decl>, <decl><type ref="prev"/><name>hz_out76_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>src</name> <operator>=</operator> <name>src_tmp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>=</operator> <name>dst_tmp</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>,
<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>,
<argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>,
<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>,
<argument><expr><name>hz_out43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>,
<argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>,
<argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>,
<argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>,
<argument><expr><name>hz_out87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <name>hz_out4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <name>hz_out5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <name>hz_out6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <name>hz_out7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <name>hz_out8</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel8_mc22_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>hz_out9</name></decl>, <decl><type ref="prev"/><name>hz_out10</name></decl>, <decl><type ref="prev"/><name>hz_out11</name></decl>, <decl><type ref="prev"/><name>hz_out12</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>, <decl><type ref="prev"/><name>hz_out89_r</name></decl>, <decl><type ref="prev"/><name>hz_out910_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out1110_r</name></decl>, <decl><type ref="prev"/><name>hz_out1211_r</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_l</name></decl>, <decl><type ref="prev"/><name>hz_out21_l</name></decl>, <decl><type ref="prev"/><name>hz_out32_l</name></decl>, <decl><type ref="prev"/><name>hz_out43_l</name></decl>, <decl><type ref="prev"/><name>hz_out54_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_l</name></decl>, <decl><type ref="prev"/><name>hz_out76_l</name></decl>, <decl><type ref="prev"/><name>hz_out87_l</name></decl>, <decl><type ref="prev"/><name>hz_out89_l</name></decl>, <decl><type ref="prev"/><name>hz_out910_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out1110_l</name></decl>, <decl><type ref="prev"/><name>hz_out1211_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out9</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out10</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out11</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out12</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>,
<argument><expr><name>hz_out12</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>hz_out1110_r</name></expr></argument>,
<argument><expr><name>hz_out1211_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>,
<argument><expr><name>hz_out12</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>hz_out1110_l</name></expr></argument>,
<argument><expr><name>hz_out1211_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>hz_out1110_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>hz_out1110_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>hz_out1211_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>hz_out1211_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_put_h264_qpel4_mc22_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKOD_D2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKOD_D2_SH</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc10_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>, <decl><type ref="prev"/><name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask1</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc30_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>, <decl><type ref="prev"/><name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask1</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>,
<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc10_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst2</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst3</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>stride</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc30_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst2</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst3</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>,
<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>,
<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>stride</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc10_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>res</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>out1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,
<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src0</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src2</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src0</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_xori_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>res</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>res</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc30_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>res</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_pckev_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>out1</name></expr></argument>, <argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SLDI_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>,
<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src0</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src2</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src0</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_xori_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>res</name></expr></argument>, <argument><expr><literal type="number">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>res</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc20_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_SB</name><argument_list>(<argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>,
<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc20_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>out3</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out4</name></decl>, <decl><type ref="prev"/><name>out5</name></decl>, <decl><type ref="prev"/><name>out6</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>out7</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>, <decl><type ref="prev"/><name>vec6</name></decl>, <decl><type ref="prev"/><name>vec7</name></decl>, <decl><type ref="prev"/><name>vec8</name></decl>, <decl><type ref="prev"/><name>vec9</name></decl>, <decl><type ref="prev"/><name>vec10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>res4</name></decl>, <decl><type ref="prev"/><name>res5</name></decl>, <decl><type ref="prev"/><name>res6</name></decl>, <decl><type ref="prev"/><name>res7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB4_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>vec6</name></expr></argument>, <argument><expr><name>vec7</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>,
<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB4_SH</name><argument_list>(<argument><expr><name>vec8</name></expr></argument>, <argument><expr><name>vec9</name></expr></argument>, <argument><expr><name>vec10</name></expr></argument>, <argument><expr><name>vec11</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>,
<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>, <argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out4</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res4</name></expr></argument>, <argument><expr><name>res5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out5</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res6</name></expr></argument>, <argument><expr><name>res7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>stride</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out6</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><name>out7</name></expr></argument>, <argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out4</name></expr></argument>, <argument><expr><name>out5</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc20_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res</name></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>vec0</name></decl>, <decl><type ref="prev"/><name>vec1</name></decl>, <decl><type ref="prev"/><name>vec2</name></decl>, <decl><type ref="prev"/><name>vec3</name></decl>, <decl><type ref="prev"/><name>vec4</name></decl>, <decl><type ref="prev"/><name>vec5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>minus5b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>plus20b</name> <init>= <expr><call><name>__msa_ldi_b</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>HADD_SB2_SH</name><argument_list>(<argument><expr><name>vec0</name></expr></argument>, <argument><expr><name>vec1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec2</name></expr></argument>, <argument><expr><name>vec3</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>minus5b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_B2_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SB2_SH</name><argument_list>(<argument><expr><name>vec4</name></expr></argument>, <argument><expr><name>vec5</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>plus20b</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc01_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src76_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out0_l</name></decl>, <decl><type ref="prev"/><name>out1_l</name></decl>, <decl><type ref="prev"/><name>out2_l</name></decl>, <decl><type ref="prev"/><name>out3_l</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>,
<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>,
<argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>,
<argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_UB</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>,
<argument><expr><name>out3_r</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res2</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res3</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res3</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>res2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src10_l</name> <operator>=</operator> <name>src54_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_l</name> <operator>=</operator> <name>src76_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_l</name> <operator>=</operator> <name>src65_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_l</name> <operator>=</operator> <name>src87_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <name>src6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc03_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src76_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out0_l</name></decl>, <decl><type ref="prev"/><name>out1_l</name></decl>, <decl><type ref="prev"/><name>out2_l</name></decl>, <decl><type ref="prev"/><name>out3_l</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>,
<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>,
<argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>,
<argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_UB</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>,
<argument><expr><name>out3_r</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res0</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res0</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res1</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res1</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res2</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res2</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res3</name> <operator>=</operator> <operator>(</operator><name>v16u8</name><operator>)</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><operator>(</operator><name>v16i8</name><operator>)</operator> <name>res3</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>res2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src10_l</name> <operator>=</operator> <name>src54_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_l</name> <operator>=</operator> <name>src76_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_l</name> <operator>=</operator> <name>src65_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_l</name> <operator>=</operator> <name>src87_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc01_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst2</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst3</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>, <decl><type ref="prev"/><name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src13</name></decl>, <decl><type ref="prev"/><name>src14</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out4_r</name></decl>, <decl><type ref="prev"/><name>out5_r</name></decl>, <decl><type ref="prev"/><name>out6_r</name></decl>, <decl><type ref="prev"/><name>out7_r</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,
<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>,
<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out4_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out5_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out6_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out7_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>stride</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out3</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>,
<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc03_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst2</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst3</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>, <decl><type ref="prev"/><name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src13</name></decl>, <decl><type ref="prev"/><name>src14</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out4_r</name></decl>, <decl><type ref="prev"/><name>out5_r</name></decl>, <decl><type ref="prev"/><name>out6_r</name></decl>, <decl><type ref="prev"/><name>out7_r</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB8</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B8_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,
<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src14</name></expr></argument>, <argument><expr><name>src13</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>,
<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out4_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out5_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out6_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out7_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_D2_SB</name><argument_list>(<argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>stride</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SB</name><argument_list>(<argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out2</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <call><name>__msa_aver_s_b</name><argument_list>(<argument><expr><name>out3</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>,
<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc01_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res</name></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out10</name></decl>, <decl><type ref="prev"/><name>out32</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src2</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src54_r</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src4</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src32_r</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src54_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out10</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out32</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>src32_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc03_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res</name></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out10</name></decl>, <decl><type ref="prev"/><name>out32</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out10</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out32</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src3</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src54_r</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_w</name><argument_list>(<argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src5</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_insve_d</name><argument_list>(<argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src32_r</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>(</operator><name>v2i64</name><operator>)</operator> <name>src54_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><operator>(</operator><name>v16u8</name><operator>)</operator> <name>src32_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc11_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_and_aver_dst_16x16_msa</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,
<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>,
<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc31_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_and_aver_dst_16x16_msa</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,
<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator>
<sizeof>sizeof<argument_list>(<argument><expr><name>uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>,
<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc13_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_and_aver_dst_16x16_msa</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <name>stride</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,
<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>,
<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc33_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_and_aver_dst_16x16_msa</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <name>stride</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,
<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator>
<sizeof>sizeof<argument_list>(<argument><expr><name>uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>,
<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc11_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_and_aver_dst_8x8_msa</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,
<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>,
<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc31_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_and_aver_dst_8x8_msa</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,
<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator>
<sizeof>sizeof<argument_list>(<argument><expr><name>uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc13_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_and_aver_dst_8x8_msa</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <name>stride</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,
<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>,
<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc33_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_and_aver_dst_8x8_msa</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <name>stride</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,
<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator>
<sizeof>sizeof<argument_list>(<argument><expr><name>uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc11_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_and_aver_dst_4x4_msa</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,
<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>,
<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc31_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_and_aver_dst_4x4_msa</name><argument_list>(<argument><expr><name>src</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,
<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator>
<sizeof>sizeof<argument_list>(<argument><expr><name>uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc13_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_and_aver_dst_4x4_msa</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <name>stride</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,
<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>,
<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc33_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>avc_luma_hv_qrt_and_aver_dst_4x4_msa</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <name>stride</name> <operator>-</operator> <literal type="number">2</literal></expr></argument>,
<argument><expr><name>src</name> <operator>-</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator> <operator>+</operator>
<sizeof>sizeof<argument_list>(<argument><expr><name>uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc21_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst_tmp</name> <init>= <expr><name>dst</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_tmp</name> <init>= <expr><name>src</name> <operator>-</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>-</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>multiple8_cnt</name></decl>, <decl><type ref="prev"/><name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>tmp4</name></decl>, <decl><type ref="prev"/><name>tmp5</name></decl>, <decl><type ref="prev"/><name>tmp6</name></decl>, <decl><type ref="prev"/><name>tmp7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>, <decl><type ref="prev"/><name>hz_out10_l</name></decl>, <decl><type ref="prev"/><name>hz_out21_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out32_l</name></decl>, <decl><type ref="prev"/><name>hz_out43_l</name></decl>, <decl><type ref="prev"/><name>hz_out54_l</name></decl>, <decl><type ref="prev"/><name>hz_out65_l</name></decl>, <decl><type ref="prev"/><name>hz_out76_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0_w</name></decl>, <decl><type ref="prev"/><name>tmp1_w</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>dst</name> <operator>=</operator> <name>dst_tmp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>=</operator> <name>src_tmp</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>,
<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>,
<argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>,
<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>,
<argument><expr><name>hz_out43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H2_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>,
<argument><expr><name>hz_out65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H2_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>,
<argument><expr><name>hz_out65_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD2</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D2</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H2_SH</name><argument_list>(<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>,
<argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H2_SH</name><argument_list>(<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>,
<argument><expr><name>hz_out87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp4</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp6</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp5</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp7</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD2</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D2</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <name>hz_out4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <name>hz_out5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <name>hz_out6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <name>hz_out7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <name>hz_out8</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc23_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst_tmp</name> <init>= <expr><name>dst</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_tmp</name> <init>= <expr><name>src</name> <operator>-</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>-</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>multiple8_cnt</name></decl>, <decl><type ref="prev"/><name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>tmp4</name></decl>, <decl><type ref="prev"/><name>tmp5</name></decl>, <decl><type ref="prev"/><name>tmp6</name></decl>, <decl><type ref="prev"/><name>tmp7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>, <decl><type ref="prev"/><name>hz_out10_l</name></decl>, <decl><type ref="prev"/><name>hz_out21_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out32_l</name></decl>, <decl><type ref="prev"/><name>hz_out43_l</name></decl>, <decl><type ref="prev"/><name>hz_out54_l</name></decl>, <decl><type ref="prev"/><name>hz_out65_l</name></decl>, <decl><type ref="prev"/><name>hz_out76_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0_w</name></decl>, <decl><type ref="prev"/><name>tmp1_w</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>dst</name> <operator>=</operator> <name>dst_tmp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>=</operator> <name>src_tmp</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>,
<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>,
<argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>,
<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>,
<argument><expr><name>hz_out43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H2_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H2_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD2</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D2</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H2_SH</name><argument_list>(<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>,
<argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H2_SH</name><argument_list>(<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>,
<argument><expr><name>hz_out87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp4</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp6</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp5</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp7</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>tmp5</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp4</name></expr></argument>, <argument><expr><name>tmp5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp6</name></expr></argument>, <argument><expr><name>tmp7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD2</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D2</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <name>hz_out4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <name>hz_out5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <name>hz_out6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <name>hz_out7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <name>hz_out8</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc21_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>hz_out9</name></decl>, <decl><type ref="prev"/><name>hz_out10</name></decl>, <decl><type ref="prev"/><name>hz_out11</name></decl>, <decl><type ref="prev"/><name>hz_out12</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>, <decl><type ref="prev"/><name>hz_out89_r</name></decl>, <decl><type ref="prev"/><name>hz_out910_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out1110_r</name></decl>, <decl><type ref="prev"/><name>hz_out1211_r</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_l</name></decl>, <decl><type ref="prev"/><name>hz_out21_l</name></decl>, <decl><type ref="prev"/><name>hz_out32_l</name></decl>, <decl><type ref="prev"/><name>hz_out43_l</name></decl>, <decl><type ref="prev"/><name>hz_out54_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_l</name></decl>, <decl><type ref="prev"/><name>hz_out76_l</name></decl>, <decl><type ref="prev"/><name>hz_out87_l</name></decl>, <decl><type ref="prev"/><name>hz_out89_l</name></decl>, <decl><type ref="prev"/><name>hz_out910_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out1110_l</name></decl>, <decl><type ref="prev"/><name>hz_out1211_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0_w</name></decl>, <decl><type ref="prev"/><name>tmp1_w</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out9</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out10</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out11</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out12</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>,
<argument><expr><name>hz_out12</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>hz_out1110_r</name></expr></argument>,
<argument><expr><name>hz_out1211_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>,
<argument><expr><name>hz_out12</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>hz_out1110_l</name></expr></argument>,
<argument><expr><name>hz_out1211_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>hz_out1110_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>hz_out1110_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>hz_out1211_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>hz_out1211_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc23_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src11</name></decl>, <decl><type ref="prev"/><name>src12</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>hz_out9</name></decl>, <decl><type ref="prev"/><name>hz_out10</name></decl>, <decl><type ref="prev"/><name>hz_out11</name></decl>, <decl><type ref="prev"/><name>hz_out12</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>, <decl><type ref="prev"/><name>hz_out89_r</name></decl>, <decl><type ref="prev"/><name>hz_out910_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out1110_r</name></decl>, <decl><type ref="prev"/><name>hz_out1211_r</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_l</name></decl>, <decl><type ref="prev"/><name>hz_out21_l</name></decl>, <decl><type ref="prev"/><name>hz_out32_l</name></decl>, <decl><type ref="prev"/><name>hz_out43_l</name></decl>, <decl><type ref="prev"/><name>hz_out54_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_l</name></decl>, <decl><type ref="prev"/><name>hz_out76_l</name></decl>, <decl><type ref="prev"/><name>hz_out87_l</name></decl>, <decl><type ref="prev"/><name>hz_out89_l</name></decl>, <decl><type ref="prev"/><name>hz_out910_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out1110_l</name></decl>, <decl><type ref="prev"/><name>hz_out1211_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0_w</name></decl>, <decl><type ref="prev"/><name>tmp1_w</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out9</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out10</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out11</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out12</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src12</name></expr></argument>, <argument><expr><name>src12</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>,
<argument><expr><name>hz_out12</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>hz_out1110_r</name></expr></argument>,
<argument><expr><name>hz_out1211_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>,
<argument><expr><name>hz_out12</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>hz_out1110_l</name></expr></argument>,
<argument><expr><name>hz_out1211_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>hz_out1110_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>hz_out1110_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>hz_out1211_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1_w</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>hz_out1211_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1_w</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc21_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res</name></decl>, <decl><type ref="prev"/><name>out</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKOD_D2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKOD_D2_SH</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc23_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res</name></decl>, <decl><type ref="prev"/><name>out</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKOD_D2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKOD_D2_SH</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PCKEV_D2_SH</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc02_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int32_t</name></type> <name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src10_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src76_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src65_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out0_l</name></decl>, <decl><type ref="prev"/><name>out1_l</name></decl>, <decl><type ref="prev"/><name>out2_l</name></decl>, <decl><type ref="prev"/><name>out3_l</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>,
<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>,
<argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>,
<argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_l</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_UB4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_UB</name><argument_list>(<argument><expr><name>out0_l</name></expr></argument>, <argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_l</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_l</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_l</name></expr></argument>,
<argument><expr><name>out3_r</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>res2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB4</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>, <argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src10_r</name> <operator>=</operator> <name>src54_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_r</name> <operator>=</operator> <name>src76_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_r</name> <operator>=</operator> <name>src65_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_r</name> <operator>=</operator> <name>src87_r</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src10_l</name> <operator>=</operator> <name>src54_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src32_l</name> <operator>=</operator> <name>src76_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src21_l</name> <operator>=</operator> <name>src65_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src43_l</name> <operator>=</operator> <name>src87_l</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc02_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst2</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst3</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>out2</name></decl>, <decl><type ref="prev"/><name>out3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>, <decl><type ref="prev"/><name>src109_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src98_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src87_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out0_r</name></decl>, <decl><type ref="prev"/><name>out1_r</name></decl>, <decl><type ref="prev"/><name>out2_r</name></decl>, <decl><type ref="prev"/><name>out3_r</name></decl>, <decl><type ref="prev"/><name>out4_r</name></decl>, <decl><type ref="prev"/><name>out5_r</name></decl>, <decl><type ref="prev"/><name>out6_r</name></decl>, <decl><type ref="prev"/><name>out7_r</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>,
<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>,
<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out4_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out5_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out6_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src98_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out7_r</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src109_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>stride</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H4_SH</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>, <argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>, <argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out0_r</name></expr></argument>, <argument><expr><name>out1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out2_r</name></expr></argument>, <argument><expr><name>out3_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out2</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out4_r</name></expr></argument>, <argument><expr><name>out5_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out3</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out6_r</name></expr></argument>, <argument><expr><name>out7_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB4_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>out2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>out3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>,
<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc02_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res</name></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src2110</name></decl>, <decl><type ref="prev"/><name>src4332</name></decl>, <decl><type ref="prev"/><name>src6554</name></decl>, <decl><type ref="prev"/><name>src8776</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>out10</name></decl>, <decl><type ref="prev"/><name>out32</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><name>stride</name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_D2_SB</name><argument_list>(<argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out10</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src2110</name></expr></argument>, <argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out32</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src4332</name></expr></argument>, <argument><expr><name>src6554</name></expr></argument>, <argument><expr><name>src8776</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_H2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>out10</name></expr></argument>, <argument><expr><name>out32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc12_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>row</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_res0</name></decl>, <decl><type ref="prev"/><name>vt_res1</name></decl>, <decl><type ref="prev"/><name>vt_res2</name></decl>, <decl><type ref="prev"/><name>vt_res3</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec0</name></decl>, <decl><type ref="prev"/><name>shf_vec1</name></decl>, <decl><type ref="prev"/><name>shf_vec2</name></decl>, <decl><type ref="prev"/><name>shf_vec3</name></decl>, <decl><type ref="prev"/><name>shf_vec4</name></decl>, <decl><type ref="prev"/><name>shf_vec5</name></decl>, <decl><type ref="prev"/><name>shf_vec6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec7</name></decl>, <decl><type ref="prev"/><name>shf_vec8</name></decl>, <decl><type ref="prev"/><name>shf_vec9</name></decl>, <decl><type ref="prev"/><name>shf_vec10</name></decl>, <decl><type ref="prev"/><name>shf_vec11</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>hz_res0</name></decl>, <decl><type ref="prev"/><name>hz_res1</name></decl>, <decl><type ref="prev"/><name>hz_res2</name></decl>, <decl><type ref="prev"/><name>hz_res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask1</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask2</name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>minus5h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>plus20h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask1</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>row</name> <operator>=</operator> <literal type="number">16</literal></expr>;</init> <condition><expr><name>row</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>,
<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>,
<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_W4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <name>src2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <name>src3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src7</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src8</name> <operator>=</operator> <name>src9</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src9</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src10</name> <operator>=</operator> <name>src11</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src11</name> <operator>=</operator> <name>src6</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc32_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>row</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>, <decl><type ref="prev"/><name>src9</name></decl>, <decl><type ref="prev"/><name>src10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_res0</name></decl>, <decl><type ref="prev"/><name>vt_res1</name></decl>, <decl><type ref="prev"/><name>vt_res2</name></decl>, <decl><type ref="prev"/><name>vt_res3</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>, <decl><type ref="prev"/><name>mask3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec0</name></decl>, <decl><type ref="prev"/><name>shf_vec1</name></decl>, <decl><type ref="prev"/><name>shf_vec2</name></decl>, <decl><type ref="prev"/><name>shf_vec3</name></decl>, <decl><type ref="prev"/><name>shf_vec4</name></decl>, <decl><type ref="prev"/><name>shf_vec5</name></decl>, <decl><type ref="prev"/><name>shf_vec6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec7</name></decl>, <decl><type ref="prev"/><name>shf_vec8</name></decl>, <decl><type ref="prev"/><name>shf_vec9</name></decl>, <decl><type ref="prev"/><name>shf_vec10</name></decl>, <decl><type ref="prev"/><name>shf_vec11</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>hz_res0</name></decl>, <decl><type ref="prev"/><name>hz_res1</name></decl>, <decl><type ref="prev"/><name>hz_res2</name></decl>, <decl><type ref="prev"/><name>hz_res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask1</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask2</name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>minus5h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>plus20h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask1</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>row</name> <operator>=</operator> <literal type="number">16</literal></expr>;</init> <condition><expr><name>row</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>LD_UB</name><argument_list>(<argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>,
<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src9</name></expr></argument>, <argument><expr><name>src10</name></expr></argument>, <argument><expr><name>src11</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>,
<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_W4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_pckod_h</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_pckod_h</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_UB</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <name>stride</name></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <name>src2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <name>src3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src7</name> <operator>=</operator> <name>src8</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src8</name> <operator>=</operator> <name>src9</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src9</name> <operator>=</operator> <name>src10</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src10</name> <operator>=</operator> <name>src11</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src11</name> <operator>=</operator> <name>src6</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc12_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>row</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_res0</name></decl>, <decl><type ref="prev"/><name>vt_res1</name></decl>, <decl><type ref="prev"/><name>vt_res2</name></decl>, <decl><type ref="prev"/><name>vt_res3</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec0</name></decl>, <decl><type ref="prev"/><name>shf_vec1</name></decl>, <decl><type ref="prev"/><name>shf_vec2</name></decl>, <decl><type ref="prev"/><name>shf_vec3</name></decl>, <decl><type ref="prev"/><name>shf_vec4</name></decl>, <decl><type ref="prev"/><name>shf_vec5</name></decl>, <decl><type ref="prev"/><name>shf_vec6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec7</name></decl>, <decl><type ref="prev"/><name>shf_vec8</name></decl>, <decl><type ref="prev"/><name>shf_vec9</name></decl>, <decl><type ref="prev"/><name>shf_vec10</name></decl>, <decl><type ref="prev"/><name>shf_vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>hz_res0</name></decl>, <decl><type ref="prev"/><name>hz_res1</name></decl>, <decl><type ref="prev"/><name>hz_res2</name></decl>, <decl><type ref="prev"/><name>hz_res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask1</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask2</name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>minus5h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>plus20h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask1</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>row</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>row</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>,
<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>,
<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_W4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD2</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D2</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <name>src3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <name>src4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src6</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc32_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>row</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_res0</name></decl>, <decl><type ref="prev"/><name>vt_res1</name></decl>, <decl><type ref="prev"/><name>vt_res2</name></decl>, <decl><type ref="prev"/><name>vt_res3</name></decl>, <decl><type ref="prev"/><name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>, <decl><type ref="prev"/><name>tmp2</name></decl>, <decl><type ref="prev"/><name>tmp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec0</name></decl>, <decl><type ref="prev"/><name>shf_vec1</name></decl>, <decl><type ref="prev"/><name>shf_vec2</name></decl>, <decl><type ref="prev"/><name>shf_vec3</name></decl>, <decl><type ref="prev"/><name>shf_vec4</name></decl>, <decl><type ref="prev"/><name>shf_vec5</name></decl>, <decl><type ref="prev"/><name>shf_vec6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec7</name></decl>, <decl><type ref="prev"/><name>shf_vec8</name></decl>, <decl><type ref="prev"/><name>shf_vec9</name></decl>, <decl><type ref="prev"/><name>shf_vec10</name></decl>, <decl><type ref="prev"/><name>shf_vec11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask3</name></decl>, <decl><type ref="prev"/><name>mask4</name></decl>, <decl><type ref="prev"/><name>mask5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>hz_res0</name></decl>, <decl><type ref="prev"/><name>hz_res1</name></decl>, <decl><type ref="prev"/><name>hz_res2</name></decl>, <decl><type ref="prev"/><name>hz_res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask1</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask2</name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>minus5h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>plus20h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>mask3</name> <operator>=</operator> <name>mask0</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask4</name> <operator>=</operator> <name>mask1</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>mask5</name> <operator>=</operator> <name>mask2</name> <operator>+</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>row</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>row</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB2</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B2_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>,
<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVC_CALC_DPADD_B_6PIX_2COEFF_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>,
<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask3</name></expr></argument>,
<argument><expr><name>mask4</name></expr></argument>, <argument><expr><name>mask5</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec9</name></expr></argument>, <argument><expr><name>shf_vec9</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec10</name></expr></argument>, <argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_W4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW4_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec8</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec11</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD2</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH4_SH</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_pckod_h</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_pckod_h</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp2</name></expr></argument>, <argument><expr><name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>__msa_aver_s_h</name><argument_list>(<argument><expr><name>tmp3</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>tmp0</name></expr></argument>, <argument><expr><name>tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D2</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>src0</name> <operator>=</operator> <name>src2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src1</name> <operator>=</operator> <name>src3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src2</name> <operator>=</operator> <name>src4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src3</name> <operator>=</operator> <name>src5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>src4</name> <operator>=</operator> <name>src6</name></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc12_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>, <decl><type ref="prev"/><name>dstv</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src10_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src65_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src76_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_res0</name></decl>, <decl><type ref="prev"/><name>vt_res1</name></decl>, <decl><type ref="prev"/><name>vt_res2</name></decl>, <decl><type ref="prev"/><name>vt_res3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>shf_vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec0</name></decl>, <decl><type ref="prev"/><name>shf_vec1</name></decl>, <decl><type ref="prev"/><name>shf_vec2</name></decl>, <decl><type ref="prev"/><name>shf_vec3</name></decl>, <decl><type ref="prev"/><name>shf_vec4</name></decl>, <decl><type ref="prev"/><name>shf_vec5</name></decl>, <decl><type ref="prev"/><name>shf_vec6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>hz_res0</name></decl>, <decl><type ref="prev"/><name>hz_res1</name></decl>, <decl><type ref="prev"/><name>hz_res2</name></decl>, <decl><type ref="prev"/><name>hz_res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask1</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask2</name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>minus5h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>plus20h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>zeros</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>,
<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>,
<argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vt_res0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_W2_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW2_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_W2_SW</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW2_SW</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_H2_SH</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVEV_H2_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dstv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dstv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc32_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfb01</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x1414</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out</name></decl>, <decl><type ref="prev"/><name>dstv</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src10_r</name></decl>, <decl><type ref="prev"/><name>src21_r</name></decl>, <decl><type ref="prev"/><name>src32_r</name></decl>, <decl><type ref="prev"/><name>src43_r</name></decl>, <decl><type ref="prev"/><name>src54_r</name></decl>, <decl><type ref="prev"/><name>src65_r</name></decl>, <decl><type ref="prev"/><name>src76_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src87_r</name></decl>, <decl><type ref="prev"/><name>src10_l</name></decl>, <decl><type ref="prev"/><name>src21_l</name></decl>, <decl><type ref="prev"/><name>src32_l</name></decl>, <decl><type ref="prev"/><name>src43_l</name></decl>, <decl><type ref="prev"/><name>src54_l</name></decl>, <decl><type ref="prev"/><name>src65_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src76_l</name></decl>, <decl><type ref="prev"/><name>src87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>vt_res0</name></decl>, <decl><type ref="prev"/><name>vt_res1</name></decl>, <decl><type ref="prev"/><name>vt_res2</name></decl>, <decl><type ref="prev"/><name>vt_res3</name></decl>, <decl><type ref="prev"/><name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>shf_vec7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>shf_vec0</name></decl>, <decl><type ref="prev"/><name>shf_vec1</name></decl>, <decl><type ref="prev"/><name>shf_vec2</name></decl>, <decl><type ref="prev"/><name>shf_vec3</name></decl>, <decl><type ref="prev"/><name>shf_vec4</name></decl>, <decl><type ref="prev"/><name>shf_vec5</name></decl>, <decl><type ref="prev"/><name>shf_vec6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>hz_res0</name></decl>, <decl><type ref="prev"/><name>hz_res1</name></decl>, <decl><type ref="prev"/><name>hz_res2</name></decl>, <decl><type ref="prev"/><name>hz_res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask1</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>mask2</name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>minus5h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>plus20h</name> <init>= <expr><call><name>__msa_ldi_h</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>zeros</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v16i8</name><operator>)</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src21_r</name></expr></argument>,
<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>,
<argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src21_l</name></expr></argument>,
<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_B4_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>,
<argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_r</name></expr></argument>, <argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src10_l</name></expr></argument>, <argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_r</name></expr></argument>, <argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src21_l</name></expr></argument>, <argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>vt_res0</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_r</name></expr></argument>, <argument><expr><name>src54_r</name></expr></argument>, <argument><expr><name>src76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res1</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src32_l</name></expr></argument>, <argument><expr><name>src54_l</name></expr></argument>, <argument><expr><name>src76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res2</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_r</name></expr></argument>, <argument><expr><name>src65_r</name></expr></argument>, <argument><expr><name>src87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>vt_res3</name> <operator>=</operator> <call><name>AVC_DOT_SH3_SH</name><argument_list>(<argument><expr><name>src43_l</name></expr></argument>, <argument><expr><name>src65_l</name></expr></argument>, <argument><expr><name>src87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>vt_res0</name></expr></argument>, <argument><expr><name>vt_res1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VSHF_H3_SH</name><argument_list>(<argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>vt_res2</name></expr></argument>, <argument><expr><name>vt_res3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>,
<argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec0</name></expr></argument>, <argument><expr><name>shf_vec0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec1</name></expr></argument>, <argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_hadd_s_w</name><argument_list>(<argument><expr><name>shf_vec3</name></expr></argument>, <argument><expr><name>shf_vec3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DPADD_SH2_SW</name><argument_list>(<argument><expr><name>shf_vec4</name></expr></argument>, <argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><name>minus5h</name></expr></argument>, <argument><expr><name>plus20h</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SRARI_W2_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW2_SW</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRARI_W2_SW</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SW2_SW</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec2</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec5</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec6</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_srari_h</name><argument_list>(<argument><expr><name>shf_vec7</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SAT_SH2_SH</name><argument_list>(<argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>dst0</name> <operator>=</operator> <call><name>__msa_ilvod_h</name><argument_list>(<argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst1</name> <operator>=</operator> <call><name>__msa_ilvod_h</name><argument_list>(<argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst2</name> <operator>=</operator> <call><name>__msa_ilvod_h</name><argument_list>(<argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst3</name> <operator>=</operator> <call><name>__msa_ilvod_h</name><argument_list>(<argument><expr><name>zeros</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_res0</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res1</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res2</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_res3</name> <operator>=</operator> <call><name>__msa_aver_s_w</name><argument_list>(<argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><operator>(</operator><name>v4i32</name><operator>)</operator> <name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dstv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H2_SH</name><argument_list>(<argument><expr><name>hz_res1</name></expr></argument>, <argument><expr><name>hz_res0</name></expr></argument>, <argument><expr><name>hz_res3</name></expr></argument>, <argument><expr><name>hz_res2</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>dstv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel16_mc22_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src_tmp</name> <init>= <expr><name>src</name> <operator>-</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>-</operator> <literal type="number">2</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst_tmp</name> <init>= <expr><name>dst</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>multiple8_cnt</name></decl>, <decl><type ref="prev"/><name>loop_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>, <decl><type ref="prev"/><name>hz_out10_l</name></decl>, <decl><type ref="prev"/><name>hz_out21_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out32_l</name></decl>, <decl><type ref="prev"/><name>hz_out43_l</name></decl>, <decl><type ref="prev"/><name>hz_out54_l</name></decl>, <decl><type ref="prev"/><name>hz_out65_l</name></decl>, <decl><type ref="prev"/><name>hz_out76_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out87_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>multiple8_cnt</name> <operator>=</operator> <literal type="number">2</literal></expr>;</init> <condition><expr><name>multiple8_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>src</name> <operator>=</operator> <name>src_tmp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>=</operator> <name>dst_tmp</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>loop_cnt</name> <operator>=</operator> <literal type="number">4</literal></expr>;</init> <condition><expr><name>loop_cnt</name><operator>--</operator></expr>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>,
<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>,
<argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>,
<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>,
<argument><expr><name>hz_out43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>,
<argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>,
<argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>,
<argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>,
<argument><expr><name>hz_out87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>,
<argument><expr><name>filt1</name></expr></argument>, <argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <name>hz_out4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <name>hz_out5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <name>hz_out6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <name>hz_out7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <name>hz_out8</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>src_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_tmp</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel8_mc22_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>out0</name></decl>, <decl><type ref="prev"/><name>out1</name></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>dst1</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>hz_out9</name></decl>, <decl><type ref="prev"/><name>hz_out10</name></decl>, <decl><type ref="prev"/><name>hz_out11</name></decl>, <decl><type ref="prev"/><name>hz_out12</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>, <decl><type ref="prev"/><name>hz_out89_r</name></decl>, <decl><type ref="prev"/><name>hz_out910_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out1110_r</name></decl>, <decl><type ref="prev"/><name>hz_out1211_r</name></decl>, <decl><type ref="prev"/><name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>res2</name></decl>, <decl><type ref="prev"/><name>res3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_l</name></decl>, <decl><type ref="prev"/><name>hz_out21_l</name></decl>, <decl><type ref="prev"/><name>hz_out32_l</name></decl>, <decl><type ref="prev"/><name>hz_out43_l</name></decl>, <decl><type ref="prev"/><name>hz_out54_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_l</name></decl>, <decl><type ref="prev"/><name>hz_out76_l</name></decl>, <decl><type ref="prev"/><name>hz_out87_l</name></decl>, <decl><type ref="prev"/><name>hz_out89_l</name></decl>, <decl><type ref="prev"/><name>hz_out910_l</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out1110_l</name></decl>, <decl><type ref="prev"/><name>hz_out1211_l</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out1</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out3</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out5</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out7</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_l</name></expr></argument>, <argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_l</name></expr></argument>, <argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_l</name></expr></argument>, <argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_l</name></expr></argument>, <argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>dst</name> <operator>+=</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out9</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out10</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out11</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out12</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>,
<argument><expr><name>hz_out12</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>hz_out1110_r</name></expr></argument>,
<argument><expr><name>hz_out1211_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SH</name><argument_list>(<argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>, <argument><expr><name>hz_out9</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out10</name></expr></argument>,
<argument><expr><name>hz_out12</name></expr></argument>, <argument><expr><name>hz_out11</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>hz_out1110_l</name></expr></argument>,
<argument><expr><name>hz_out1211_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out54_l</name></expr></argument>, <argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out65_l</name></expr></argument>, <argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out89_r</name></expr></argument>, <argument><expr><name>hz_out1110_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out76_l</name></expr></argument>, <argument><expr><name>hz_out89_l</name></expr></argument>, <argument><expr><name>hz_out1110_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res2</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>hz_out910_r</name></expr></argument>, <argument><expr><name>hz_out1211_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out87_l</name></expr></argument>, <argument><expr><name>hz_out910_l</name></expr></argument>, <argument><expr><name>hz_out1211_l</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res3</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_D2_UB</name><argument_list>(<argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out0</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out1</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res2</name></expr></argument>, <argument><expr><name>res3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AVER_UB2_UB</name><argument_list>(<argument><expr><name>out0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>out1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_avg_h264_qpel4_mc22_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const0</name> <init>= <expr><literal type="number">0xfffb0001</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const1</name> <init>= <expr><literal type="number">0x140014</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name></type> <name>filt_const2</name> <init>= <expr><literal type="number">0x1fffb</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>tp0</name></decl>, <decl><type ref="prev"/><name>tp1</name></decl>, <decl><type ref="prev"/><name>tp2</name></decl>, <decl><type ref="prev"/><name>tp3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16u8</name></type> <name>res</name></decl>, <decl><type ref="prev"/><name>dst0</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>src0</name></decl>, <decl><type ref="prev"/><name>src1</name></decl>, <decl><type ref="prev"/><name>src2</name></decl>, <decl><type ref="prev"/><name>src3</name></decl>, <decl><type ref="prev"/><name>src4</name></decl>, <decl><type ref="prev"/><name>src5</name></decl>, <decl><type ref="prev"/><name>src6</name></decl>, <decl><type ref="prev"/><name>src7</name></decl>, <decl><type ref="prev"/><name>src8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>mask0</name></decl>, <decl><type ref="prev"/><name>mask1</name></decl>, <decl><type ref="prev"/><name>mask2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out0</name></decl>, <decl><type ref="prev"/><name>hz_out1</name></decl>, <decl><type ref="prev"/><name>hz_out2</name></decl>, <decl><type ref="prev"/><name>hz_out3</name></decl>, <decl><type ref="prev"/><name>hz_out4</name></decl>, <decl><type ref="prev"/><name>hz_out5</name></decl>, <decl><type ref="prev"/><name>hz_out6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out7</name></decl>, <decl><type ref="prev"/><name>hz_out8</name></decl>, <decl><type ref="prev"/><name>res0</name></decl>, <decl><type ref="prev"/><name>res1</name></decl>, <decl><type ref="prev"/><name>filt0</name></decl>, <decl><type ref="prev"/><name>filt1</name></decl>, <decl><type ref="prev"/><name>filt2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out10_r</name></decl>, <decl><type ref="prev"/><name>hz_out21_r</name></decl>, <decl><type ref="prev"/><name>hz_out32_r</name></decl>, <decl><type ref="prev"/><name>hz_out43_r</name></decl>, <decl><type ref="prev"/><name>hz_out54_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>hz_out65_r</name></decl>, <decl><type ref="prev"/><name>hz_out76_r</name></decl>, <decl><type ref="prev"/><name>hz_out87_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>tmp0</name></decl>, <decl><type ref="prev"/><name>tmp1</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SB3</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>luma_mask_arr</name><index>[<expr><literal type="number">48</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>filt0</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt1</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>filt2</name> <operator>=</operator> <operator>(</operator><name>v8i16</name><operator>)</operator> <call><name>__msa_fill_w</name><argument_list>(<argument><expr><name>filt_const2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>src</name> <operator>-=</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>stride</name><operator>)</operator> <operator>+</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SB5</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>+=</operator> <operator>(</operator><literal type="number">5</literal> <operator>*</operator> <name>stride</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SB4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>XORI_B5_128_SB</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>src4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XORI_B4_128_SB</name><argument_list>(<argument><expr><name>src5</name></expr></argument>, <argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out0</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src0</name></expr></argument>, <argument><expr><name>src1</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out2</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src2</name></expr></argument>, <argument><expr><name>src3</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out4</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src4</name></expr></argument>, <argument><expr><name>src5</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out6</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src6</name></expr></argument>, <argument><expr><name>src7</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hz_out8</name> <operator>=</operator> <call><name>AVC_HORZ_FILTER_SH</name><argument_list>(<argument><expr><name>src8</name></expr></argument>, <argument><expr><name>src8</name></expr></argument>, <argument><expr><name>mask0</name></expr></argument>, <argument><expr><name>mask1</name></expr></argument>, <argument><expr><name>mask2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKOD_D2_SH</name><argument_list>(<argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKOD_D2_SH</name><argument_list>(<argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out0</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out1</name></expr></argument>, <argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out2</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>,
<argument><expr><name>hz_out3</name></expr></argument>, <argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SH</name><argument_list>(<argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out4</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out5</name></expr></argument>, <argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out6</name></expr></argument>, <argument><expr><name>hz_out8</name></expr></argument>,
<argument><expr><name>hz_out7</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out10_r</name></expr></argument>, <argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out21_r</name></expr></argument>, <argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res0</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp0</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out32_r</name></expr></argument>, <argument><expr><name>hz_out54_r</name></expr></argument>, <argument><expr><name>hz_out76_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp1</name> <operator>=</operator> <call><name>AVC_DOT_SW3_SW</name><argument_list>(<argument><expr><name>hz_out43_r</name></expr></argument>, <argument><expr><name>hz_out65_r</name></expr></argument>, <argument><expr><name>hz_out87_r</name></expr></argument>, <argument><expr><name>filt0</name></expr></argument>, <argument><expr><name>filt1</name></expr></argument>,
<argument><expr><name>filt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res1</name> <operator>=</operator> <call><name>__msa_pckev_h</name><argument_list>(<argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp1</name></expr></argument>, <argument><expr><operator>(</operator><name>v8i16</name><operator>)</operator> <name>tmp0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LW4</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>INSERT_W4_UB</name><argument_list>(<argument><expr><name>tp0</name></expr></argument>, <argument><expr><name>tp1</name></expr></argument>, <argument><expr><name>tp2</name></expr></argument>, <argument><expr><name>tp3</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>PCKEV_XORI128_UB</name><argument_list>(<argument><expr><name>res0</name></expr></argument>, <argument><expr><name>res1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>__msa_aver_u_b</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W4</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
