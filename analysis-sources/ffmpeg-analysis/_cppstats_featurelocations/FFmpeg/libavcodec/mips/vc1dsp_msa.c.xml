<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mips\vc1dsp_msa.c">






















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vc1dsp_mips.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"constants.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mips/generic_macros_msa.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>ff_vc1_inv_trans_8x8_msa</name><parameter_list>(<parameter><decl><type><name>int16_t</name></type> <name><name>block</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v8i16</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>, <decl><type ref="prev"/><name>in2</name></decl>, <decl><type ref="prev"/><name>in3</name></decl>, <decl><type ref="prev"/><name>in4</name></decl>, <decl><type ref="prev"/><name>in5</name></decl>, <decl><type ref="prev"/><name>in6</name></decl>, <decl><type ref="prev"/><name>in7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>in_r0</name></decl>, <decl><type ref="prev"/><name>in_r1</name></decl>, <decl><type ref="prev"/><name>in_r2</name></decl>, <decl><type ref="prev"/><name>in_r3</name></decl>, <decl><type ref="prev"/><name>in_r4</name></decl>, <decl><type ref="prev"/><name>in_r5</name></decl>, <decl><type ref="prev"/><name>in_r6</name></decl>, <decl><type ref="prev"/><name>in_r7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>in_l0</name></decl>, <decl><type ref="prev"/><name>in_l1</name></decl>, <decl><type ref="prev"/><name>in_l2</name></decl>, <decl><type ref="prev"/><name>in_l3</name></decl>, <decl><type ref="prev"/><name>in_l4</name></decl>, <decl><type ref="prev"/><name>in_l5</name></decl>, <decl><type ref="prev"/><name>in_l6</name></decl>, <decl><type ref="prev"/><name>in_l7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>t_r1</name></decl>, <decl><type ref="prev"/><name>t_r2</name></decl>, <decl><type ref="prev"/><name>t_r3</name></decl>, <decl><type ref="prev"/><name>t_r4</name></decl>, <decl><type ref="prev"/><name>t_r5</name></decl>, <decl><type ref="prev"/><name>t_r6</name></decl>, <decl><type ref="prev"/><name>t_r7</name></decl>, <decl><type ref="prev"/><name>t_r8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>t_l1</name></decl>, <decl><type ref="prev"/><name>t_l2</name></decl>, <decl><type ref="prev"/><name>t_l3</name></decl>, <decl><type ref="prev"/><name>t_l4</name></decl>, <decl><type ref="prev"/><name>t_l5</name></decl>, <decl><type ref="prev"/><name>t_l6</name></decl>, <decl><type ref="prev"/><name>t_l7</name></decl>, <decl><type ref="prev"/><name>t_l8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_12</name> <init>= <expr><block>{<expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_4</name> <init>= <expr><block>{<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_16</name> <init>= <expr><block>{<expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_6</name> <init>= <expr><block>{<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_15</name> <init>= <expr><block>{<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_9</name> <init>= <expr><block>{<expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_1</name> <init>= <expr><block>{<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_64</name> <init>= <expr><block>{<expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SH8</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_SH_SW</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_l0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_SH_SW</name><argument_list>(<argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_SH_SW</name><argument_list>(<argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_SH_SW</name><argument_list>(<argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>, <argument><expr><name>in_l3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_SH_SW</name><argument_list>(<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in_r4</name></expr></argument>, <argument><expr><name>in_l4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_SH_SW</name><argument_list>(<argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>, <argument><expr><name>in_l5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_SH_SW</name><argument_list>(<argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>, <argument><expr><name>in_l6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_SH_SW</name><argument_list>(<argument><expr><name>in7</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>, <argument><expr><name>in_l7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t_r1</name> <operator>=</operator> <name>cnst_12</name> <operator>*</operator> <operator>(</operator><name>in_r0</name> <operator>+</operator> <name>in_r4</name><operator>)</operator> <operator>+</operator> <name>cnst_4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l1</name> <operator>=</operator> <name>cnst_12</name> <operator>*</operator> <operator>(</operator><name>in_l0</name> <operator>+</operator> <name>in_l4</name><operator>)</operator> <operator>+</operator> <name>cnst_4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r2</name> <operator>=</operator> <name>cnst_12</name> <operator>*</operator> <operator>(</operator><name>in_r0</name> <operator>-</operator> <name>in_r4</name><operator>)</operator> <operator>+</operator> <name>cnst_4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l2</name> <operator>=</operator> <name>cnst_12</name> <operator>*</operator> <operator>(</operator><name>in_l0</name> <operator>-</operator> <name>in_l4</name><operator>)</operator> <operator>+</operator> <name>cnst_4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r3</name> <operator>=</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r2</name> <operator>+</operator> <name>cnst_6</name> <operator>*</operator> <name>in_r6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l3</name> <operator>=</operator> <name>cnst_16</name> <operator>*</operator> <name>in_l2</name> <operator>+</operator> <name>cnst_6</name> <operator>*</operator> <name>in_l6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r4</name> <operator>=</operator> <name>cnst_6</name> <operator>*</operator> <name>in_r2</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l4</name> <operator>=</operator> <name>cnst_6</name> <operator>*</operator> <name>in_l2</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_l6</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ADD4</name><argument_list>(<argument><expr><name>t_r1</name></expr></argument>, <argument><expr><name>t_r3</name></expr></argument>, <argument><expr><name>t_l1</name></expr></argument>, <argument><expr><name>t_l3</name></expr></argument>, <argument><expr><name>t_r2</name></expr></argument>, <argument><expr><name>t_r4</name></expr></argument>, <argument><expr><name>t_l2</name></expr></argument>, <argument><expr><name>t_l4</name></expr></argument>, <argument><expr><name>t_r5</name></expr></argument>, <argument><expr><name>t_l5</name></expr></argument>, <argument><expr><name>t_r6</name></expr></argument>, <argument><expr><name>t_l6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SUB4</name><argument_list>(<argument><expr><name>t_r2</name></expr></argument>, <argument><expr><name>t_r4</name></expr></argument>, <argument><expr><name>t_l2</name></expr></argument>, <argument><expr><name>t_l4</name></expr></argument>, <argument><expr><name>t_r1</name></expr></argument>, <argument><expr><name>t_r3</name></expr></argument>, <argument><expr><name>t_l1</name></expr></argument>, <argument><expr><name>t_l3</name></expr></argument>, <argument><expr><name>t_r7</name></expr></argument>, <argument><expr><name>t_l7</name></expr></argument>, <argument><expr><name>t_r8</name></expr></argument>, <argument><expr><name>t_l8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r1</name> <operator>=</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r1</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_r3</name> <operator>+</operator> <name>cnst_9</name> <operator>*</operator> <name>in_r5</name> <operator>+</operator> <name>cnst_4</name> <operator>*</operator> <name>in_r7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l1</name> <operator>=</operator> <name>cnst_16</name> <operator>*</operator> <name>in_l1</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_l3</name> <operator>+</operator> <name>cnst_9</name> <operator>*</operator> <name>in_l5</name> <operator>+</operator> <name>cnst_4</name> <operator>*</operator> <name>in_l7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r2</name> <operator>=</operator> <name>cnst_15</name> <operator>*</operator> <name>in_r1</name> <operator>-</operator> <name>cnst_4</name> <operator>*</operator> <name>in_r3</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r5</name> <operator>-</operator> <name>cnst_9</name> <operator>*</operator> <name>in_r7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l2</name> <operator>=</operator> <name>cnst_15</name> <operator>*</operator> <name>in_l1</name> <operator>-</operator> <name>cnst_4</name> <operator>*</operator> <name>in_l3</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_l5</name> <operator>-</operator> <name>cnst_9</name> <operator>*</operator> <name>in_l7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r3</name> <operator>=</operator> <name>cnst_9</name> <operator>*</operator> <name>in_r1</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r3</name> <operator>+</operator> <name>cnst_4</name> <operator>*</operator> <name>in_r5</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_r7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l3</name> <operator>=</operator> <name>cnst_9</name> <operator>*</operator> <name>in_l1</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_l3</name> <operator>+</operator> <name>cnst_4</name> <operator>*</operator> <name>in_l5</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_l7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r4</name> <operator>=</operator> <name>cnst_4</name> <operator>*</operator> <name>in_r1</name> <operator>-</operator> <name>cnst_9</name> <operator>*</operator> <name>in_r3</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_r5</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l4</name> <operator>=</operator> <name>cnst_4</name> <operator>*</operator> <name>in_l1</name> <operator>-</operator> <name>cnst_9</name> <operator>*</operator> <name>in_l3</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_l5</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_l7</name></expr>;</expr_stmt>

<expr_stmt><expr><name>in_r0</name> <operator>=</operator> <operator>(</operator><name>t_r5</name> <operator>+</operator> <name>t_r1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l0</name> <operator>=</operator> <operator>(</operator><name>t_l5</name> <operator>+</operator> <name>t_l1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r1</name> <operator>=</operator> <operator>(</operator><name>t_r6</name> <operator>+</operator> <name>t_r2</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l1</name> <operator>=</operator> <operator>(</operator><name>t_l6</name> <operator>+</operator> <name>t_l2</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r2</name> <operator>=</operator> <operator>(</operator><name>t_r7</name> <operator>+</operator> <name>t_r3</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l2</name> <operator>=</operator> <operator>(</operator><name>t_l7</name> <operator>+</operator> <name>t_l3</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r3</name> <operator>=</operator> <operator>(</operator><name>t_r8</name> <operator>+</operator> <name>t_r4</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l3</name> <operator>=</operator> <operator>(</operator><name>t_l8</name> <operator>+</operator> <name>t_l4</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>in_r4</name> <operator>=</operator> <operator>(</operator><name>t_r8</name> <operator>-</operator> <name>t_r4</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l4</name> <operator>=</operator> <operator>(</operator><name>t_l8</name> <operator>-</operator> <name>t_l4</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r5</name> <operator>=</operator> <operator>(</operator><name>t_r7</name> <operator>-</operator> <name>t_r3</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l5</name> <operator>=</operator> <operator>(</operator><name>t_l7</name> <operator>-</operator> <name>t_l3</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r6</name> <operator>=</operator> <operator>(</operator><name>t_r6</name> <operator>-</operator> <name>t_r2</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l6</name> <operator>=</operator> <operator>(</operator><name>t_l6</name> <operator>-</operator> <name>t_l2</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r7</name> <operator>=</operator> <operator>(</operator><name>t_r5</name> <operator>-</operator> <name>t_r1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l7</name> <operator>=</operator> <operator>(</operator><name>t_l5</name> <operator>-</operator> <name>t_l1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE4x4_SW_SW</name><argument_list>(<argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>, <argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE4x4_SW_SW</name><argument_list>(<argument><expr><name>in_l0</name></expr></argument>, <argument><expr><name>in_l1</name></expr></argument>, <argument><expr><name>in_l2</name></expr></argument>, <argument><expr><name>in_l3</name></expr></argument>, <argument><expr><name>in_l0</name></expr></argument>, <argument><expr><name>in_l1</name></expr></argument>, <argument><expr><name>in_l2</name></expr></argument>, <argument><expr><name>in_l3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE4x4_SW_SW</name><argument_list>(<argument><expr><name>in_r4</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>, <argument><expr><name>in_r4</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE4x4_SW_SW</name><argument_list>(<argument><expr><name>in_l4</name></expr></argument>, <argument><expr><name>in_l5</name></expr></argument>, <argument><expr><name>in_l6</name></expr></argument>, <argument><expr><name>in_l7</name></expr></argument>, <argument><expr><name>in_l4</name></expr></argument>, <argument><expr><name>in_l5</name></expr></argument>, <argument><expr><name>in_l6</name></expr></argument>, <argument><expr><name>in_l7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t_r1</name> <operator>=</operator> <name>cnst_12</name> <operator>*</operator> <operator>(</operator><name>in_r0</name> <operator>+</operator> <name>in_l0</name><operator>)</operator> <operator>+</operator> <name>cnst_64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l1</name> <operator>=</operator> <name>cnst_12</name> <operator>*</operator> <operator>(</operator><name>in_r4</name> <operator>+</operator> <name>in_l4</name><operator>)</operator> <operator>+</operator> <name>cnst_64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r2</name> <operator>=</operator> <name>cnst_12</name> <operator>*</operator> <operator>(</operator><name>in_r0</name> <operator>-</operator> <name>in_l0</name><operator>)</operator> <operator>+</operator> <name>cnst_64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l2</name> <operator>=</operator> <name>cnst_12</name> <operator>*</operator> <operator>(</operator><name>in_r4</name> <operator>-</operator> <name>in_l4</name><operator>)</operator> <operator>+</operator> <name>cnst_64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r3</name> <operator>=</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r2</name> <operator>+</operator> <name>cnst_6</name> <operator>*</operator> <name>in_l2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l3</name> <operator>=</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r6</name> <operator>+</operator> <name>cnst_6</name> <operator>*</operator> <name>in_l6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r4</name> <operator>=</operator> <name>cnst_6</name> <operator>*</operator> <name>in_r2</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_l2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l4</name> <operator>=</operator> <name>cnst_6</name> <operator>*</operator> <name>in_r6</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_l6</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ADD4</name><argument_list>(<argument><expr><name>t_r1</name></expr></argument>, <argument><expr><name>t_r3</name></expr></argument>, <argument><expr><name>t_l1</name></expr></argument>, <argument><expr><name>t_l3</name></expr></argument>, <argument><expr><name>t_r2</name></expr></argument>, <argument><expr><name>t_r4</name></expr></argument>, <argument><expr><name>t_l2</name></expr></argument>, <argument><expr><name>t_l4</name></expr></argument>, <argument><expr><name>t_r5</name></expr></argument>, <argument><expr><name>t_l5</name></expr></argument>, <argument><expr><name>t_r6</name></expr></argument>, <argument><expr><name>t_l6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SUB4</name><argument_list>(<argument><expr><name>t_r2</name></expr></argument>, <argument><expr><name>t_r4</name></expr></argument>, <argument><expr><name>t_l2</name></expr></argument>, <argument><expr><name>t_l4</name></expr></argument>, <argument><expr><name>t_r1</name></expr></argument>, <argument><expr><name>t_r3</name></expr></argument>, <argument><expr><name>t_l1</name></expr></argument>, <argument><expr><name>t_l3</name></expr></argument>, <argument><expr><name>t_r7</name></expr></argument>, <argument><expr><name>t_l7</name></expr></argument>, <argument><expr><name>t_r8</name></expr></argument>, <argument><expr><name>t_l8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r1</name> <operator>=</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r1</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_r3</name> <operator>+</operator> <name>cnst_9</name> <operator>*</operator> <name>in_l1</name> <operator>+</operator> <name>cnst_4</name> <operator>*</operator> <name>in_l3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l1</name> <operator>=</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r5</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_r7</name> <operator>+</operator> <name>cnst_9</name> <operator>*</operator> <name>in_l5</name> <operator>+</operator> <name>cnst_4</name> <operator>*</operator> <name>in_l7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r2</name> <operator>=</operator> <name>cnst_15</name> <operator>*</operator> <name>in_r1</name> <operator>-</operator> <name>cnst_4</name> <operator>*</operator> <name>in_r3</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_l1</name> <operator>-</operator> <name>cnst_9</name> <operator>*</operator> <name>in_l3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l2</name> <operator>=</operator> <name>cnst_15</name> <operator>*</operator> <name>in_r5</name> <operator>-</operator> <name>cnst_4</name> <operator>*</operator> <name>in_r7</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_l5</name> <operator>-</operator> <name>cnst_9</name> <operator>*</operator> <name>in_l7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r3</name> <operator>=</operator> <name>cnst_9</name> <operator>*</operator> <name>in_r1</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r3</name> <operator>+</operator> <name>cnst_4</name> <operator>*</operator> <name>in_l1</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_l3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l3</name> <operator>=</operator> <name>cnst_9</name> <operator>*</operator> <name>in_r5</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r7</name> <operator>+</operator> <name>cnst_4</name> <operator>*</operator> <name>in_l5</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_l7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_r4</name> <operator>=</operator> <name>cnst_4</name> <operator>*</operator> <name>in_r1</name> <operator>-</operator> <name>cnst_9</name> <operator>*</operator> <name>in_r3</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_l1</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_l3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t_l4</name> <operator>=</operator> <name>cnst_4</name> <operator>*</operator> <name>in_r5</name> <operator>-</operator> <name>cnst_9</name> <operator>*</operator> <name>in_r7</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_l5</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_l7</name></expr>;</expr_stmt>

<expr_stmt><expr><name>in_r0</name> <operator>=</operator> <operator>(</operator><name>t_r5</name> <operator>+</operator> <name>t_r1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l0</name> <operator>=</operator> <operator>(</operator><name>t_l5</name> <operator>+</operator> <name>t_l1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r1</name> <operator>=</operator> <operator>(</operator><name>t_r6</name> <operator>+</operator> <name>t_r2</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l1</name> <operator>=</operator> <operator>(</operator><name>t_l6</name> <operator>+</operator> <name>t_l2</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r2</name> <operator>=</operator> <operator>(</operator><name>t_r7</name> <operator>+</operator> <name>t_r3</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l2</name> <operator>=</operator> <operator>(</operator><name>t_l7</name> <operator>+</operator> <name>t_l3</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r3</name> <operator>=</operator> <operator>(</operator><name>t_r8</name> <operator>+</operator> <name>t_r4</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l3</name> <operator>=</operator> <operator>(</operator><name>t_l8</name> <operator>+</operator> <name>t_l4</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>in_r4</name> <operator>=</operator> <operator>(</operator><name>t_r8</name> <operator>-</operator> <name>t_r4</name> <operator>+</operator> <name>cnst_1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l4</name> <operator>=</operator> <operator>(</operator><name>t_l8</name> <operator>-</operator> <name>t_l4</name> <operator>+</operator> <name>cnst_1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r5</name> <operator>=</operator> <operator>(</operator><name>t_r7</name> <operator>-</operator> <name>t_r3</name> <operator>+</operator> <name>cnst_1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l5</name> <operator>=</operator> <operator>(</operator><name>t_l7</name> <operator>-</operator> <name>t_l3</name> <operator>+</operator> <name>cnst_1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r6</name> <operator>=</operator> <operator>(</operator><name>t_r6</name> <operator>-</operator> <name>t_r2</name> <operator>+</operator> <name>cnst_1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l6</name> <operator>=</operator> <operator>(</operator><name>t_l6</name> <operator>-</operator> <name>t_l2</name> <operator>+</operator> <name>cnst_1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r7</name> <operator>=</operator> <operator>(</operator><name>t_r5</name> <operator>-</operator> <name>t_r1</name> <operator>+</operator> <name>cnst_1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l7</name> <operator>=</operator> <operator>(</operator><name>t_l5</name> <operator>-</operator> <name>t_l1</name> <operator>+</operator> <name>cnst_1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H4_SH</name><argument_list>(<argument><expr><name>in_l0</name></expr></argument>, <argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_l1</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_l2</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_l3</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>,
<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H4_SH</name><argument_list>(<argument><expr><name>in_l4</name></expr></argument>, <argument><expr><name>in_r4</name></expr></argument>, <argument><expr><name>in_l5</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>, <argument><expr><name>in_l6</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>, <argument><expr><name>in_l7</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>,
<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_SH8</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>, <argument><expr><name>block</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_vc1_inv_trans_4x8_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dest</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>linesize</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>block</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v8i16</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>, <decl><type ref="prev"/><name>in2</name></decl>, <decl><type ref="prev"/><name>in3</name></decl>, <decl><type ref="prev"/><name>in4</name></decl>, <decl><type ref="prev"/><name>in5</name></decl>, <decl><type ref="prev"/><name>in6</name></decl>, <decl><type ref="prev"/><name>in7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>in_r0</name></decl>, <decl><type ref="prev"/><name>in_r1</name></decl>, <decl><type ref="prev"/><name>in_r2</name></decl>, <decl><type ref="prev"/><name>in_r3</name></decl>, <decl><type ref="prev"/><name>in_r4</name></decl>, <decl><type ref="prev"/><name>in_r5</name></decl>, <decl><type ref="prev"/><name>in_r6</name></decl>, <decl><type ref="prev"/><name>in_r7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>t1</name></decl>, <decl><type ref="prev"/><name>t2</name></decl>, <decl><type ref="prev"/><name>t3</name></decl>, <decl><type ref="prev"/><name>t4</name></decl>, <decl><type ref="prev"/><name>t5</name></decl>, <decl><type ref="prev"/><name>t6</name></decl>, <decl><type ref="prev"/><name>t7</name></decl>, <decl><type ref="prev"/><name>t8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>zero_m</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_17</name> <init>= <expr><block>{<expr><literal type="number">17</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">17</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_22</name> <init>= <expr><block>{<expr><literal type="number">22</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">22</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_10</name> <init>= <expr><block>{<expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_12</name> <init>= <expr><block>{<expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_64</name> <init>= <expr><block>{<expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_16</name> <init>= <expr><block>{<expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_15</name> <init>= <expr><block>{<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_4</name> <init>= <expr><block>{<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_6</name> <init>= <expr><block>{<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_9</name> <init>= <expr><block>{<expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_1</name> <init>= <expr><block>{<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SH8</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_R_SH_SW</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in_r0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_R_SH_SW</name><argument_list>(<argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_R_SH_SW</name><argument_list>(<argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_R_SH_SW</name><argument_list>(<argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_R_SH_SW</name><argument_list>(<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in_r4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_R_SH_SW</name><argument_list>(<argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_R_SH_SW</name><argument_list>(<argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_R_SH_SW</name><argument_list>(<argument><expr><name>in7</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>TRANSPOSE4x4_SW_SW</name><argument_list>(<argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>, <argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE4x4_SW_SW</name><argument_list>(<argument><expr><name>in_r4</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>, <argument><expr><name>in_r4</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>t1</name> <operator>=</operator> <name>cnst_17</name> <operator>*</operator> <operator>(</operator><name>in_r0</name> <operator>+</operator> <name>in_r2</name><operator>)</operator> <operator>+</operator> <name>cnst_4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t5</name> <operator>=</operator> <name>cnst_17</name> <operator>*</operator> <operator>(</operator><name>in_r4</name> <operator>+</operator> <name>in_r6</name><operator>)</operator> <operator>+</operator> <name>cnst_4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t2</name> <operator>=</operator> <name>cnst_17</name> <operator>*</operator> <operator>(</operator><name>in_r0</name> <operator>-</operator> <name>in_r2</name><operator>)</operator> <operator>+</operator> <name>cnst_4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t6</name> <operator>=</operator> <name>cnst_17</name> <operator>*</operator> <operator>(</operator><name>in_r4</name> <operator>-</operator> <name>in_r6</name><operator>)</operator> <operator>+</operator> <name>cnst_4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t3</name> <operator>=</operator> <name>cnst_22</name> <operator>*</operator> <name>in_r1</name> <operator>+</operator> <name>cnst_10</name> <operator>*</operator> <name>in_r3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t7</name> <operator>=</operator> <name>cnst_22</name> <operator>*</operator> <name>in_r5</name> <operator>+</operator> <name>cnst_10</name> <operator>*</operator> <name>in_r7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t4</name> <operator>=</operator> <name>cnst_22</name> <operator>*</operator> <name>in_r3</name> <operator>-</operator> <name>cnst_10</name> <operator>*</operator> <name>in_r1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t8</name> <operator>=</operator> <name>cnst_22</name> <operator>*</operator> <name>in_r7</name> <operator>-</operator> <name>cnst_10</name> <operator>*</operator> <name>in_r5</name></expr>;</expr_stmt>

<expr_stmt><expr><name>in_r0</name> <operator>=</operator> <operator>(</operator><name>t1</name> <operator>+</operator> <name>t3</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r4</name> <operator>=</operator> <operator>(</operator><name>t5</name> <operator>+</operator> <name>t7</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r1</name> <operator>=</operator> <operator>(</operator><name>t2</name> <operator>-</operator> <name>t4</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r5</name> <operator>=</operator> <operator>(</operator><name>t6</name> <operator>-</operator> <name>t8</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r2</name> <operator>=</operator> <operator>(</operator><name>t2</name> <operator>+</operator> <name>t4</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r6</name> <operator>=</operator> <operator>(</operator><name>t6</name> <operator>+</operator> <name>t8</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r3</name> <operator>=</operator> <operator>(</operator><name>t1</name> <operator>-</operator> <name>t3</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r7</name> <operator>=</operator> <operator>(</operator><name>t5</name> <operator>-</operator> <name>t7</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE4x4_SW_SW</name><argument_list>(<argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>, <argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE4x4_SW_SW</name><argument_list>(<argument><expr><name>in_r4</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>, <argument><expr><name>in_r4</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H4_SH</name><argument_list>(<argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>, <argument><expr><name>in_r4</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>,
<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>block</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>=</operator> <name>cnst_12</name> <operator>*</operator> <operator>(</operator><name>in_r0</name> <operator>+</operator> <name>in_r4</name><operator>)</operator> <operator>+</operator> <name>cnst_64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t2</name> <operator>=</operator> <name>cnst_12</name> <operator>*</operator> <operator>(</operator><name>in_r0</name> <operator>-</operator> <name>in_r4</name><operator>)</operator> <operator>+</operator> <name>cnst_64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t3</name> <operator>=</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r2</name> <operator>+</operator> <name>cnst_6</name> <operator>*</operator> <name>in_r6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t4</name> <operator>=</operator> <name>cnst_6</name> <operator>*</operator> <name>in_r2</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t5</name> <operator>=</operator> <name>t1</name> <operator>+</operator> <name>t3</name></expr><operator>,</operator> <expr><name>t6</name> <operator>=</operator> <name>t2</name> <operator>+</operator> <name>t4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t7</name> <operator>=</operator> <name>t2</name> <operator>-</operator> <name>t4</name></expr><operator>,</operator> <expr><name>t8</name> <operator>=</operator> <name>t1</name> <operator>-</operator> <name>t3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t1</name> <operator>=</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r1</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_r3</name> <operator>+</operator> <name>cnst_9</name> <operator>*</operator> <name>in_r5</name> <operator>+</operator> <name>cnst_4</name> <operator>*</operator> <name>in_r7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t2</name> <operator>=</operator> <name>cnst_15</name> <operator>*</operator> <name>in_r1</name> <operator>-</operator> <name>cnst_4</name> <operator>*</operator> <name>in_r3</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r5</name> <operator>-</operator> <name>cnst_9</name> <operator>*</operator> <name>in_r7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t3</name> <operator>=</operator> <name>cnst_9</name> <operator>*</operator> <name>in_r1</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r3</name> <operator>+</operator> <name>cnst_4</name> <operator>*</operator> <name>in_r5</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_r7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t4</name> <operator>=</operator> <name>cnst_4</name> <operator>*</operator> <name>in_r1</name> <operator>-</operator> <name>cnst_9</name> <operator>*</operator> <name>in_r3</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in_r5</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in_r7</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SW8</name><argument_list>(<argument><expr><name>dest</name></expr></argument>, <argument><expr><name>linesize</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B8_SW</name><argument_list>(<argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>,
<argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>,
<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SW</name><argument_list>(<argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>,
<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SW</name><argument_list>(<argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>,
<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r0</name> <operator>=</operator> <operator>(</operator><name>t5</name> <operator>+</operator> <name>t1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r1</name> <operator>=</operator> <operator>(</operator><name>t6</name> <operator>+</operator> <name>t2</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r2</name> <operator>=</operator> <operator>(</operator><name>t7</name> <operator>+</operator> <name>t3</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r3</name> <operator>=</operator> <operator>(</operator><name>t8</name> <operator>+</operator> <name>t4</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r4</name> <operator>=</operator> <operator>(</operator><name>t8</name> <operator>-</operator> <name>t4</name> <operator>+</operator> <name>cnst_1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r5</name> <operator>=</operator> <operator>(</operator><name>t7</name> <operator>-</operator> <name>t3</name> <operator>+</operator> <name>cnst_1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r6</name> <operator>=</operator> <operator>(</operator><name>t6</name> <operator>-</operator> <name>t2</name> <operator>+</operator> <name>cnst_1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in_r7</name> <operator>=</operator> <operator>(</operator><name>t5</name> <operator>-</operator> <name>t1</name> <operator>+</operator> <name>cnst_1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ADD4</name><argument_list>(<argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>,
<argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ADD4</name><argument_list>(<argument><expr><name>in_r4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>,
<argument><expr><name>in_r4</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CLIP_SW8_0_255</name><argument_list>(<argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>, <argument><expr><name>in_r4</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H4_SH</name><argument_list>(<argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_r5</name></expr></argument>, <argument><expr><name>in_r4</name></expr></argument>, <argument><expr><name>in_r7</name></expr></argument>, <argument><expr><name>in_r6</name></expr></argument>,
<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SH</name><argument_list>(<argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_W8</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>dest</name></expr></argument>, <argument><expr><name>linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>ff_vc1_inv_trans_8x4_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dest</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>linesize</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>block</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v4i32</name></type> <name>in0</name></decl>, <decl><type ref="prev"/><name>in1</name></decl>, <decl><type ref="prev"/><name>in2</name></decl>, <decl><type ref="prev"/><name>in3</name></decl>, <decl><type ref="prev"/><name>in4</name></decl>, <decl><type ref="prev"/><name>in5</name></decl>, <decl><type ref="prev"/><name>in6</name></decl>, <decl><type ref="prev"/><name>in7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>t1</name></decl>, <decl><type ref="prev"/><name>t2</name></decl>, <decl><type ref="prev"/><name>t3</name></decl>, <decl><type ref="prev"/><name>t4</name></decl>, <decl><type ref="prev"/><name>t5</name></decl>, <decl><type ref="prev"/><name>t6</name></decl>, <decl><type ref="prev"/><name>t7</name></decl>, <decl><type ref="prev"/><name>t8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>dst0</name></decl>, <decl><type ref="prev"/><name>dst1</name></decl>, <decl><type ref="prev"/><name>dst2</name></decl>, <decl><type ref="prev"/><name>dst3</name></decl>, <decl><type ref="prev"/><name>dst4</name></decl>, <decl><type ref="prev"/><name>dst5</name></decl>, <decl><type ref="prev"/><name>dst6</name></decl>, <decl><type ref="prev"/><name>dst7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v16i8</name></type> <name>zero_m</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_17</name> <init>= <expr><block>{<expr><literal type="number">17</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">17</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_22</name> <init>= <expr><block>{<expr><literal type="number">22</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">22</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_10</name> <init>= <expr><block>{<expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">10</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_12</name> <init>= <expr><block>{<expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">12</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_64</name> <init>= <expr><block>{<expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">64</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_16</name> <init>= <expr><block>{<expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_15</name> <init>= <expr><block>{<expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">15</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_4</name> <init>= <expr><block>{<expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_6</name> <init>= <expr><block>{<expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v4i32</name></type> <name>cnst_9</name> <init>= <expr><block>{<expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LD_SW4</name><argument_list>(<argument><expr><name>block</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>, <argument><expr><name>t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_SH_SW</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_SH_SW</name><argument_list>(<argument><expr><name>t2</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_SH_SW</name><argument_list>(<argument><expr><name>t3</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_SH_SW</name><argument_list>(<argument><expr><name>t4</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE4x4_SW_SW</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE4x4_SW_SW</name><argument_list>(<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>=</operator> <name>cnst_12</name> <operator>*</operator> <operator>(</operator><name>in0</name> <operator>+</operator> <name>in4</name><operator>)</operator> <operator>+</operator> <name>cnst_4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t2</name> <operator>=</operator> <name>cnst_12</name> <operator>*</operator> <operator>(</operator><name>in0</name> <operator>-</operator> <name>in4</name><operator>)</operator> <operator>+</operator> <name>cnst_4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t3</name> <operator>=</operator> <name>cnst_16</name> <operator>*</operator> <name>in2</name> <operator>+</operator> <name>cnst_6</name> <operator>*</operator> <name>in6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t4</name> <operator>=</operator> <name>cnst_6</name> <operator>*</operator> <name>in2</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t5</name> <operator>=</operator> <name>t1</name> <operator>+</operator> <name>t3</name></expr><operator>,</operator> <expr><name>t6</name> <operator>=</operator> <name>t2</name> <operator>+</operator> <name>t4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t7</name> <operator>=</operator> <name>t2</name> <operator>-</operator> <name>t4</name></expr><operator>,</operator> <expr><name>t8</name> <operator>=</operator> <name>t1</name> <operator>-</operator> <name>t3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t1</name> <operator>=</operator> <name>cnst_16</name> <operator>*</operator> <name>in1</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in3</name> <operator>+</operator> <name>cnst_9</name> <operator>*</operator> <name>in5</name> <operator>+</operator> <name>cnst_4</name> <operator>*</operator> <name>in7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t2</name> <operator>=</operator> <name>cnst_15</name> <operator>*</operator> <name>in1</name> <operator>-</operator> <name>cnst_4</name> <operator>*</operator> <name>in3</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in5</name> <operator>-</operator> <name>cnst_9</name> <operator>*</operator> <name>in7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t3</name> <operator>=</operator> <name>cnst_9</name> <operator>*</operator> <name>in1</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in3</name> <operator>+</operator> <name>cnst_4</name> <operator>*</operator> <name>in5</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t4</name> <operator>=</operator> <name>cnst_4</name> <operator>*</operator> <name>in1</name> <operator>-</operator> <name>cnst_9</name> <operator>*</operator> <name>in3</name> <operator>+</operator> <name>cnst_15</name> <operator>*</operator> <name>in5</name> <operator>-</operator> <name>cnst_16</name> <operator>*</operator> <name>in7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>in0</name> <operator>=</operator> <operator>(</operator><name>t5</name> <operator>+</operator> <name>t1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in1</name> <operator>=</operator> <operator>(</operator><name>t6</name> <operator>+</operator> <name>t2</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in2</name> <operator>=</operator> <operator>(</operator><name>t7</name> <operator>+</operator> <name>t3</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in3</name> <operator>=</operator> <operator>(</operator><name>t8</name> <operator>+</operator> <name>t4</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in4</name> <operator>=</operator> <operator>(</operator><name>t8</name> <operator>-</operator> <name>t4</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in5</name> <operator>=</operator> <operator>(</operator><name>t7</name> <operator>-</operator> <name>t3</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in6</name> <operator>=</operator> <operator>(</operator><name>t6</name> <operator>-</operator> <name>t2</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in7</name> <operator>=</operator> <operator>(</operator><name>t5</name> <operator>-</operator> <name>t1</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE4x4_SW_SW</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE4x4_SW_SW</name><argument_list>(<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H4_SW</name><argument_list>(<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>, <argument><expr><name>t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_SW4</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>, <argument><expr><name>t4</name></expr></argument>, <argument><expr><name>block</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LD_SW4</name><argument_list>(<argument><expr><name>dest</name></expr></argument>, <argument><expr><name>linesize</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_B4_SW</name><argument_list>(<argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>,
<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVL_H4_SW</name><argument_list>(<argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>,
<argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ILVR_H4_SW</name><argument_list>(<argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>zero_m</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>,
<argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>=</operator> <name>cnst_17</name> <operator>*</operator> <operator>(</operator><name>in0</name> <operator>+</operator> <name>in2</name><operator>)</operator> <operator>+</operator> <name>cnst_64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t2</name> <operator>=</operator> <name>cnst_17</name> <operator>*</operator> <operator>(</operator><name>in0</name> <operator>-</operator> <name>in2</name><operator>)</operator> <operator>+</operator> <name>cnst_64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t3</name> <operator>=</operator> <name>cnst_22</name> <operator>*</operator> <name>in1</name> <operator>+</operator> <name>cnst_10</name> <operator>*</operator> <name>in3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t4</name> <operator>=</operator> <name>cnst_22</name> <operator>*</operator> <name>in3</name> <operator>-</operator> <name>cnst_10</name> <operator>*</operator> <name>in1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>in0</name> <operator>=</operator> <operator>(</operator><name>t1</name> <operator>+</operator> <name>t3</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in1</name> <operator>=</operator> <operator>(</operator><name>t2</name> <operator>-</operator> <name>t4</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in2</name> <operator>=</operator> <operator>(</operator><name>t2</name> <operator>+</operator> <name>t4</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in3</name> <operator>=</operator> <operator>(</operator><name>t1</name> <operator>-</operator> <name>t3</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ADD4</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>dst0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>dst1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>dst2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>dst3</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CLIP_SW4_0_255</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t5</name> <operator>=</operator> <name>cnst_17</name> <operator>*</operator> <operator>(</operator><name>in4</name> <operator>+</operator> <name>in6</name><operator>)</operator> <operator>+</operator> <name>cnst_64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t6</name> <operator>=</operator> <name>cnst_17</name> <operator>*</operator> <operator>(</operator><name>in4</name> <operator>-</operator> <name>in6</name><operator>)</operator> <operator>+</operator> <name>cnst_64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t7</name> <operator>=</operator> <name>cnst_22</name> <operator>*</operator> <name>in5</name> <operator>+</operator> <name>cnst_10</name> <operator>*</operator> <name>in7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t8</name> <operator>=</operator> <name>cnst_22</name> <operator>*</operator> <name>in7</name> <operator>-</operator> <name>cnst_10</name> <operator>*</operator> <name>in5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>in4</name> <operator>=</operator> <operator>(</operator><name>t5</name> <operator>+</operator> <name>t7</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in5</name> <operator>=</operator> <operator>(</operator><name>t6</name> <operator>-</operator> <name>t8</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in6</name> <operator>=</operator> <operator>(</operator><name>t6</name> <operator>+</operator> <name>t8</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>in7</name> <operator>=</operator> <operator>(</operator><name>t5</name> <operator>-</operator> <name>t7</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ADD4</name><argument_list>(<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>dst4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>dst5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>dst6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>, <argument><expr><name>dst7</name></expr></argument>, <argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CLIP_SW4_0_255</name><argument_list>(<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_H4_SW</name><argument_list>(<argument><expr><name>in4</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in5</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in6</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in7</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B2_SW</name><argument_list>(<argument><expr><name>in1</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in3</name></expr></argument>, <argument><expr><name>in2</name></expr></argument>, <argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D4</name><argument_list>(<argument><expr><name>in0</name></expr></argument>, <argument><expr><name>in1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dest</name></expr></argument>, <argument><expr><name>linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>put_vc1_mspel_mc_h_v_msa</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>,
<parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>hmode</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>vmode</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>rnd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>v8i16</name></type> <name>in_r0</name></decl>, <decl><type ref="prev"/><name>in_r1</name></decl>, <decl><type ref="prev"/><name>in_r2</name></decl>, <decl><type ref="prev"/><name>in_r3</name></decl>, <decl><type ref="prev"/><name>in_l0</name></decl>, <decl><type ref="prev"/><name>in_l1</name></decl>, <decl><type ref="prev"/><name>in_l2</name></decl>, <decl><type ref="prev"/><name>in_l3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>t0</name></decl>, <decl><type ref="prev"/><name>t1</name></decl>, <decl><type ref="prev"/><name>t2</name></decl>, <decl><type ref="prev"/><name>t3</name></decl>, <decl><type ref="prev"/><name>t4</name></decl>, <decl><type ref="prev"/><name>t5</name></decl>, <decl><type ref="prev"/><name>t6</name></decl>, <decl><type ref="prev"/><name>t7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>t8</name></decl>, <decl><type ref="prev"/><name>t9</name></decl>, <decl><type ref="prev"/><name>t10</name></decl>, <decl><type ref="prev"/><name>t11</name></decl>, <decl><type ref="prev"/><name>t12</name></decl>, <decl><type ref="prev"/><name>t13</name></decl>, <decl><type ref="prev"/><name>t14</name></decl>, <decl><type ref="prev"/><name>t15</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>v8i16</name></type> <name>cnst_para0</name></decl>, <decl><type ref="prev"/><name>cnst_para1</name></decl>, <decl><type ref="prev"/><name>cnst_para2</name></decl>, <decl><type ref="prev"/><name>cnst_para3</name></decl>, <decl><type ref="prev"/><name>cnst_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>para_value</name><index>[]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{<expr><block>{<expr><literal type="number">4</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">3</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">1</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">3</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">4</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>shift_value</name><index>[]</index></name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>shift</name> <init>= <expr><operator>(</operator><name><name>shift_value</name><index>[<expr><name>hmode</name></expr>]</index></name> <operator>+</operator> <name><name>shift_value</name><index>[<expr><name>vmode</name></expr>]</index></name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>r</name> <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <operator>(</operator><name>shift</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>rnd</name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>cnst_r</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">1</literal></expr><operator>,</operator> <expr><name>src</name> <operator>-=</operator> <name>stride</name></expr>;</expr_stmt>
<expr_stmt><expr><name>cnst_para0</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name><name>para_value</name><index>[<expr><name>vmode</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>cnst_para1</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name><name>para_value</name><index>[<expr><name>vmode</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>cnst_para2</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name><name>para_value</name><index>[<expr><name>vmode</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>cnst_para3</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name><name>para_value</name><index>[<expr><name>vmode</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LD_SH4</name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>, <argument><expr><name>in_l0</name></expr></argument>, <argument><expr><name>in_l1</name></expr></argument>, <argument><expr><name>in_l2</name></expr></argument>, <argument><expr><name>in_l3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_UB_SH</name><argument_list>(<argument><expr><name>in_l0</name></expr></argument>, <argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_l0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_UB_SH</name><argument_list>(<argument><expr><name>in_l1</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_UB_SH</name><argument_list>(<argument><expr><name>in_l2</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_UB_SH</name><argument_list>(<argument><expr><name>in_l3</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>, <argument><expr><name>in_l3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_r1</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_r2</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_r0</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_r3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t8</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_l1</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_l2</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_l0</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_l3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l0</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal> <operator>*</operator> <name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_UB_SH</name><argument_list>(<argument><expr><name>in_l0</name></expr></argument>, <argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_l0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t1</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_r2</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_r3</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_r1</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_r0</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t9</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_l2</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_l3</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_l1</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_l0</name></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l1</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">5</literal> <operator>*</operator> <name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_UB_SH</name><argument_list>(<argument><expr><name>in_l1</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t2</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_r3</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_r0</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_r2</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_r1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t10</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_l3</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_l0</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_l2</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_l1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l2</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">6</literal> <operator>*</operator> <name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_UB_SH</name><argument_list>(<argument><expr><name>in_l2</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t3</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_r0</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_r1</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_r3</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_r2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t11</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_l0</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_l1</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_l3</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_l2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l3</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">7</literal> <operator>*</operator> <name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_UB_SH</name><argument_list>(<argument><expr><name>in_l3</name></expr></argument>, <argument><expr><name>in_r3</name></expr></argument>, <argument><expr><name>in_l3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t4</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_r1</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_r2</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_r0</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_r3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t12</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_l1</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_l2</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_l0</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_l3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l0</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal> <operator>*</operator> <name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_UB_SH</name><argument_list>(<argument><expr><name>in_l0</name></expr></argument>, <argument><expr><name>in_r0</name></expr></argument>, <argument><expr><name>in_l0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t5</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_r2</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_r3</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_r1</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_r0</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t13</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_l2</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_l3</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_l1</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_l0</name></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l1</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">9</literal> <operator>*</operator> <name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_UB_SH</name><argument_list>(<argument><expr><name>in_l1</name></expr></argument>, <argument><expr><name>in_r1</name></expr></argument>, <argument><expr><name>in_l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t6</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_r3</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_r0</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_r2</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_r1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t14</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_l3</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_l0</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_l2</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_l1</name></expr>;</expr_stmt>
<expr_stmt><expr><name>in_l2</name> <operator>=</operator> <call><name>LD_SH</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">10</literal> <operator>*</operator> <name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UNPCK_UB_SH</name><argument_list>(<argument><expr><name>in_l2</name></expr></argument>, <argument><expr><name>in_r2</name></expr></argument>, <argument><expr><name>in_l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t7</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_r0</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_r1</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_r3</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_r2</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t15</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>in_l0</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>in_l1</name>
<operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>in_l3</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>in_l2</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ADD4</name><argument_list>(<argument><expr><name>t0</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t0</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ADD4</name><argument_list>(<argument><expr><name>t4</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t5</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t4</name></expr></argument>, <argument><expr><name>t5</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ADD4</name><argument_list>(<argument><expr><name>t8</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t9</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t10</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t11</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>,
<argument><expr><name>t8</name></expr></argument>, <argument><expr><name>t9</name></expr></argument>, <argument><expr><name>t10</name></expr></argument>, <argument><expr><name>t11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ADD4</name><argument_list>(<argument><expr><name>t12</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t13</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t14</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t15</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>,
<argument><expr><name>t12</name></expr></argument>, <argument><expr><name>t13</name></expr></argument>, <argument><expr><name>t14</name></expr></argument>, <argument><expr><name>t15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>t0</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr><operator>,</operator> <expr><name>t1</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr><operator>,</operator> <expr><name>t2</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr><operator>,</operator> <expr><name>t3</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t4</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr><operator>,</operator> <expr><name>t5</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr><operator>,</operator> <expr><name>t6</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr><operator>,</operator> <expr><name>t7</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t8</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr><operator>,</operator> <expr><name>t9</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr><operator>,</operator> <expr><name>t10</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr><operator>,</operator> <expr><name>t11</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t12</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr><operator>,</operator> <expr><name>t13</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr><operator>,</operator> <expr><name>t14</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr><operator>,</operator> <expr><name>t15</name> <operator>&gt;&gt;=</operator> <name>shift</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE8x8_SH_SH</name><argument_list>(<argument><expr><name>t0</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>, <argument><expr><name>t4</name></expr></argument>, <argument><expr><name>t5</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>,
<argument><expr><name>t0</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>, <argument><expr><name>t4</name></expr></argument>, <argument><expr><name>t5</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE8x8_SH_SH</name><argument_list>(<argument><expr><name>t8</name></expr></argument>, <argument><expr><name>t9</name></expr></argument>, <argument><expr><name>t10</name></expr></argument>, <argument><expr><name>t11</name></expr></argument>, <argument><expr><name>t12</name></expr></argument>, <argument><expr><name>t13</name></expr></argument>, <argument><expr><name>t14</name></expr></argument>, <argument><expr><name>t15</name></expr></argument>,
<argument><expr><name>t8</name></expr></argument>, <argument><expr><name>t9</name></expr></argument>, <argument><expr><name>t10</name></expr></argument>, <argument><expr><name>t11</name></expr></argument>, <argument><expr><name>t12</name></expr></argument>, <argument><expr><name>t13</name></expr></argument>, <argument><expr><name>t14</name></expr></argument>, <argument><expr><name>t15</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>cnst_para0</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name><name>para_value</name><index>[<expr><name>hmode</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>cnst_para1</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name><name>para_value</name><index>[<expr><name>hmode</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>cnst_para2</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name><name>para_value</name><index>[<expr><name>hmode</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>cnst_para3</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name><name>para_value</name><index>[<expr><name>hmode</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r</name> <operator>=</operator> <literal type="number">64</literal> <operator>-</operator> <name>rnd</name></expr>;</expr_stmt>
<expr_stmt><expr><name>cnst_r</name> <operator>=</operator> <call><name>__msa_fill_h</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t0</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>t1</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>t2</name> <operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>t0</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>t3</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t1</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>t2</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>t3</name> <operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>t1</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>t4</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t2</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>t3</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>t4</name> <operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>t2</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>t5</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t3</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>t4</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>t5</name> <operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>t3</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>t6</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t4</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>t5</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>t6</name> <operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>t4</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>t7</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t5</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>t6</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>t7</name> <operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>t5</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>t8</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t6</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>t7</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>t8</name> <operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>t6</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>t9</name></expr>;</expr_stmt>
<expr_stmt><expr><name>t7</name> <operator>=</operator> <name>cnst_para1</name> <operator>*</operator> <name>t8</name> <operator>+</operator> <name>cnst_para2</name> <operator>*</operator> <name>t9</name> <operator>-</operator> <name>cnst_para0</name> <operator>*</operator> <name>t7</name> <operator>-</operator> <name>cnst_para3</name> <operator>*</operator> <name>t10</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ADD4</name><argument_list>(<argument><expr><name>t0</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t0</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ADD4</name><argument_list>(<argument><expr><name>t4</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t5</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>, <argument><expr><name>cnst_r</name></expr></argument>, <argument><expr><name>t4</name></expr></argument>, <argument><expr><name>t5</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>t0</name> <operator>&gt;&gt;=</operator> <literal type="number">7</literal></expr><operator>,</operator> <expr><name>t1</name> <operator>&gt;&gt;=</operator> <literal type="number">7</literal></expr><operator>,</operator> <expr><name>t2</name> <operator>&gt;&gt;=</operator> <literal type="number">7</literal></expr><operator>,</operator> <expr><name>t3</name> <operator>&gt;&gt;=</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>t4</name> <operator>&gt;&gt;=</operator> <literal type="number">7</literal></expr><operator>,</operator> <expr><name>t5</name> <operator>&gt;&gt;=</operator> <literal type="number">7</literal></expr><operator>,</operator> <expr><name>t6</name> <operator>&gt;&gt;=</operator> <literal type="number">7</literal></expr><operator>,</operator> <expr><name>t7</name> <operator>&gt;&gt;=</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>TRANSPOSE8x8_SH_SH</name><argument_list>(<argument><expr><name>t0</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>, <argument><expr><name>t4</name></expr></argument>, <argument><expr><name>t5</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>,
<argument><expr><name>t0</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>, <argument><expr><name>t4</name></expr></argument>, <argument><expr><name>t5</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>CLIP_SH8_0_255</name><argument_list>(<argument><expr><name>t0</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>, <argument><expr><name>t4</name></expr></argument>, <argument><expr><name>t5</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PCKEV_B4_SH</name><argument_list>(<argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t0</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t5</name></expr></argument>, <argument><expr><name>t4</name></expr></argument>, <argument><expr><name>t7</name></expr></argument>, <argument><expr><name>t6</name></expr></argument>, <argument><expr><name>t0</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ST_D8</name><argument_list>(<argument><expr><name>t0</name></expr></argument>, <argument><expr><name>t1</name></expr></argument>, <argument><expr><name>t2</name></expr></argument>, <argument><expr><name>t3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>dst</name></expr></argument>, <argument><expr><name>stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PUT_VC1_MSPEL_MC_MSA</name><parameter_list>(<parameter><type><name>hmode</name></type></parameter>, <parameter><type><name>vmode</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_put_vc1_mspel_mc ##hmode ##vmode ##_msa(uint8_t *dst, const uint8_t *src, ptrdiff_t stride, int rnd) { put_vc1_mspel_mc_h_v_msa(dst, src, stride, hmode, vmode, rnd); } void ff_put_vc1_mspel_mc ##hmode ##vmode ##_16_msa(uint8_t *dst, const uint8_t *src, ptrdiff_t stride, int rnd) { put_vc1_mspel_mc_h_v_msa(dst, src, stride, hmode, vmode, rnd); put_vc1_mspel_mc_h_v_msa(dst + 8, src + 8, stride, hmode, vmode, rnd); dst += 8 * stride, src += 8 * stride; put_vc1_mspel_mc_h_v_msa(dst, src, stride, hmode, vmode, rnd); put_vc1_mspel_mc_h_v_msa(dst + 8, src + 8, stride, hmode, vmode, rnd); }</cpp:value></cpp:define>

















<expr_stmt><expr><call><name>PUT_VC1_MSPEL_MC_MSA</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PUT_VC1_MSPEL_MC_MSA</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PUT_VC1_MSPEL_MC_MSA</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PUT_VC1_MSPEL_MC_MSA</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PUT_VC1_MSPEL_MC_MSA</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PUT_VC1_MSPEL_MC_MSA</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PUT_VC1_MSPEL_MC_MSA</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PUT_VC1_MSPEL_MC_MSA</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PUT_VC1_MSPEL_MC_MSA</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</unit>
