<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mips\vp9_mc_mmi.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/vp9dsp.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mips/mmiutils.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vp9dsp_mips.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GET_DATA_H_MMI</name></cpp:macro> <cpp:value>"pmaddhw %[ftmp4], %[ftmp4], %[filter1] \n\t" "pmaddhw %[ftmp5], %[ftmp5], %[filter2] \n\t" "paddw %[ftmp4], %[ftmp4], %[ftmp5] \n\t" "punpckhwd %[ftmp5], %[ftmp4], %[ftmp0] \n\t" "paddw %[ftmp4], %[ftmp4], %[ftmp5] \n\t" "pmaddhw %[ftmp6], %[ftmp6], %[filter1] \n\t" "pmaddhw %[ftmp7], %[ftmp7], %[filter2] \n\t" "paddw %[ftmp6], %[ftmp6], %[ftmp7] \n\t" "punpckhwd %[ftmp7], %[ftmp6], %[ftmp0] \n\t" "paddw %[ftmp6], %[ftmp6], %[ftmp7] \n\t" "punpcklwd %[srcl], %[ftmp4], %[ftmp6] \n\t" "pmaddhw %[ftmp8], %[ftmp8], %[filter1] \n\t" "pmaddhw %[ftmp9], %[ftmp9], %[filter2] \n\t" "paddw %[ftmp8], %[ftmp8], %[ftmp9] \n\t" "punpckhwd %[ftmp9], %[ftmp8], %[ftmp0] \n\t" "paddw %[ftmp8], %[ftmp8], %[ftmp9] \n\t" "pmaddhw %[ftmp10], %[ftmp10], %[filter1] \n\t" "pmaddhw %[ftmp11], %[ftmp11], %[filter2] \n\t" "paddw %[ftmp10], %[ftmp10], %[ftmp11] \n\t" "punpckhwd %[ftmp11], %[ftmp10], %[ftmp0] \n\t" "paddw %[ftmp10], %[ftmp10], %[ftmp11] \n\t" "punpcklwd %[srch], %[ftmp8], %[ftmp10] \n\t"</cpp:value></cpp:define>























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GET_DATA_V_MMI</name></cpp:macro> <cpp:value>"punpcklhw %[srcl], %[ftmp4], %[ftmp5] \n\t" "pmaddhw %[srcl], %[srcl], %[filter10] \n\t" "punpcklhw %[ftmp12], %[ftmp6], %[ftmp7] \n\t" "pmaddhw %[ftmp12], %[ftmp12], %[filter32] \n\t" "paddw %[srcl], %[srcl], %[ftmp12] \n\t" "punpcklhw %[ftmp12], %[ftmp8], %[ftmp9] \n\t" "pmaddhw %[ftmp12], %[ftmp12], %[filter54] \n\t" "paddw %[srcl], %[srcl], %[ftmp12] \n\t" "punpcklhw %[ftmp12], %[ftmp10], %[ftmp11] \n\t" "pmaddhw %[ftmp12], %[ftmp12], %[filter76] \n\t" "paddw %[srcl], %[srcl], %[ftmp12] \n\t" "punpckhhw %[srch], %[ftmp4], %[ftmp5] \n\t" "pmaddhw %[srch], %[srch], %[filter10] \n\t" "punpckhhw %[ftmp12], %[ftmp6], %[ftmp7] \n\t" "pmaddhw %[ftmp12], %[ftmp12], %[filter32] \n\t" "paddw %[srch], %[srch], %[ftmp12] \n\t" "punpckhhw %[ftmp12], %[ftmp8], %[ftmp9] \n\t" "pmaddhw %[ftmp12], %[ftmp12], %[filter54] \n\t" "paddw %[srch], %[srch], %[ftmp12] \n\t" "punpckhhw %[ftmp12], %[ftmp10], %[ftmp11] \n\t" "pmaddhw %[ftmp12], %[ftmp12], %[filter76] \n\t" "paddw %[srch], %[srch], %[ftmp12] \n\t"</cpp:value></cpp:define>























<function><type><specifier>static</specifier> <name>void</name></type> <name>convolve_horiz_mmi</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>w</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>double</name></type> <name><name>ftmp</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>tmp</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>src_stride</name> <operator>-=</operator> <name>w</name></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_stride</name> <operator>-=</operator> <name>w</name></expr>;</expr_stmt>
<asm>__asm__ <specifier>volatile</specifier> (
"move %[tmp1], %[width] \n\t"
"xor %[ftmp0], %[ftmp0], %[ftmp0] \n\t"
"gsldlc1 %[filter1], 0x03(%[filter]) \n\t"
"gsldrc1 %[filter1], 0x00(%[filter]) \n\t"
"gsldlc1 %[filter2], 0x0b(%[filter]) \n\t"
"gsldrc1 %[filter2], 0x08(%[filter]) \n\t"
"li %[tmp0], 0x07 \n\t"
"dmtc1 %[tmp0], %[ftmp13] \n\t"
"punpcklwd %[ftmp13], %[ftmp13], %[ftmp13] \n\t"
"1: \n\t"

"gsldlc1 %[ftmp5], 0x07(%[src]) \n\t"
"gsldrc1 %[ftmp5], 0x00(%[src]) \n\t"
"gsldlc1 %[ftmp7], 0x08(%[src]) \n\t"
"gsldrc1 %[ftmp7], 0x01(%[src]) \n\t"
"gsldlc1 %[ftmp9], 0x09(%[src]) \n\t"
"gsldrc1 %[ftmp9], 0x02(%[src]) \n\t"
"gsldlc1 %[ftmp11], 0x0A(%[src]) \n\t"
"gsldrc1 %[ftmp11], 0x03(%[src]) \n\t"
"punpcklbh %[ftmp4], %[ftmp5], %[ftmp0] \n\t"
"punpckhbh %[ftmp5], %[ftmp5], %[ftmp0] \n\t"
"punpcklbh %[ftmp6], %[ftmp7], %[ftmp0] \n\t"
"punpckhbh %[ftmp7], %[ftmp7], %[ftmp0] \n\t"
"punpcklbh %[ftmp8], %[ftmp9], %[ftmp0] \n\t"
"punpckhbh %[ftmp9], %[ftmp9], %[ftmp0] \n\t"
"punpcklbh %[ftmp10], %[ftmp11], %[ftmp0] \n\t"
"punpckhbh %[ftmp11], %[ftmp11], %[ftmp0] \n\t"
PTR_ADDIU "%[width], %[width], -0x04 \n\t"

GET_DATA_H_MMI
ROUND_POWER_OF_TWO_MMI(%[srcl], %[ftmp13], %[ftmp5],
%[ftmp6], %[tmp0])
ROUND_POWER_OF_TWO_MMI(%[srch], %[ftmp13], %[ftmp5],
%[ftmp6], %[tmp0])
"packsswh %[srcl], %[srcl], %[srch] \n\t"
"packushb %[ftmp12], %[srcl], %[ftmp0] \n\t"
"swc1 %[ftmp12], 0x00(%[dst]) \n\t"
PTR_ADDIU "%[dst], %[dst], 0x04 \n\t"
PTR_ADDIU "%[src], %[src], 0x04 \n\t"

"bnez %[width], 1b \n\t"
"move %[width], %[tmp1] \n\t"
PTR_ADDU "%[src], %[src], %[src_stride] \n\t"
PTR_ADDU "%[dst], %[dst], %[dst_stride] \n\t"
PTR_ADDIU "%[height], %[height], -0x01 \n\t"
"bnez %[height], 1b \n\t"
: [srcl]"=&amp;f"(ftmp[0]), [srch]"=&amp;f"(ftmp[1]),
[filter1]"=&amp;f"(ftmp[2]), [filter2]"=&amp;f"(ftmp[3]),
[ftmp0]"=&amp;f"(ftmp[4]), [ftmp4]"=&amp;f"(ftmp[5]),
[ftmp5]"=&amp;f"(ftmp[6]), [ftmp6]"=&amp;f"(ftmp[7]),
[ftmp7]"=&amp;f"(ftmp[8]), [ftmp8]"=&amp;f"(ftmp[9]),
[ftmp9]"=&amp;f"(ftmp[10]), [ftmp10]"=&amp;f"(ftmp[11]),
[ftmp11]"=&amp;f"(ftmp[12]), [ftmp12]"=&amp;f"(ftmp[13]),
[tmp0]"=&amp;r"(tmp[0]), [tmp1]"=&amp;r"(tmp[1]),
[src]"+&amp;r"(src), [width]"+&amp;r"(w),
[dst]"+&amp;r"(dst), [height]"+&amp;r"(h),
[ftmp13]"=&amp;f"(ftmp[14])
: [filter]"r"(filter_x),
[src_stride]"r"((mips_reg)src_stride),
[dst_stride]"r"((mips_reg)dst_stride)
: "memory"
);</asm>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>convolve_vert_mmi</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int16_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>w</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>double</name></type> <name><name>ftmp</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>tmp</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ptrdiff_t</name></type> <name>addr</name> <init>= <expr><name>src_stride</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>src_stride</name> <operator>-=</operator> <name>w</name></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_stride</name> <operator>-=</operator> <name>w</name></expr>;</expr_stmt>

<asm>__asm__ <specifier>volatile</specifier> (
"xor %[ftmp0], %[ftmp0], %[ftmp0] \n\t"
"gsldlc1 %[ftmp4], 0x03(%[filter]) \n\t"
"gsldrc1 %[ftmp4], 0x00(%[filter]) \n\t"
"gsldlc1 %[ftmp5], 0x0b(%[filter]) \n\t"
"gsldrc1 %[ftmp5], 0x08(%[filter]) \n\t"
"punpcklwd %[filter10], %[ftmp4], %[ftmp4] \n\t"
"punpckhwd %[filter32], %[ftmp4], %[ftmp4] \n\t"
"punpcklwd %[filter54], %[ftmp5], %[ftmp5] \n\t"
"punpckhwd %[filter76], %[ftmp5], %[ftmp5] \n\t"
"li %[tmp0], 0x07 \n\t"
"dmtc1 %[tmp0], %[ftmp13] \n\t"
"punpcklwd %[ftmp13], %[ftmp13], %[ftmp13] \n\t"
"1: \n\t"

"gsldlc1 %[ftmp4], 0x07(%[src]) \n\t"
"gsldrc1 %[ftmp4], 0x00(%[src]) \n\t"
PTR_ADDU "%[tmp0], %[src], %[addr] \n\t"
"gsldlc1 %[ftmp5], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp5], 0x00(%[tmp0]) \n\t"
PTR_ADDU "%[tmp0], %[tmp0], %[addr] \n\t"
"gsldlc1 %[ftmp6], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp6], 0x00(%[tmp0]) \n\t"
PTR_ADDU "%[tmp0], %[tmp0], %[addr] \n\t"
"gsldlc1 %[ftmp7], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp7], 0x00(%[tmp0]) \n\t"
PTR_ADDU "%[tmp0], %[tmp0], %[addr] \n\t"
"gsldlc1 %[ftmp8], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp8], 0x00(%[tmp0]) \n\t"
PTR_ADDU "%[tmp0], %[tmp0], %[addr] \n\t"
"gsldlc1 %[ftmp9], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp9], 0x00(%[tmp0]) \n\t"
PTR_ADDU "%[tmp0], %[tmp0], %[addr] \n\t"
"gsldlc1 %[ftmp10], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp10], 0x00(%[tmp0]) \n\t"
PTR_ADDU "%[tmp0], %[tmp0], %[addr] \n\t"
"gsldlc1 %[ftmp11], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp11], 0x00(%[tmp0]) \n\t"
"punpcklbh %[ftmp4], %[ftmp4], %[ftmp0] \n\t"
"punpcklbh %[ftmp5], %[ftmp5], %[ftmp0] \n\t"
"punpcklbh %[ftmp6], %[ftmp6], %[ftmp0] \n\t"
"punpcklbh %[ftmp7], %[ftmp7], %[ftmp0] \n\t"
"punpcklbh %[ftmp8], %[ftmp8], %[ftmp0] \n\t"
"punpcklbh %[ftmp9], %[ftmp9], %[ftmp0] \n\t"
"punpcklbh %[ftmp10], %[ftmp10], %[ftmp0] \n\t"
"punpcklbh %[ftmp11], %[ftmp11], %[ftmp0] \n\t"
PTR_ADDIU "%[width], %[width], -0x04 \n\t"

GET_DATA_V_MMI
ROUND_POWER_OF_TWO_MMI(%[srcl], %[ftmp13], %[ftmp5],
%[ftmp6], %[tmp0])
ROUND_POWER_OF_TWO_MMI(%[srch], %[ftmp13], %[ftmp5],
%[ftmp6], %[tmp0])
"packsswh %[srcl], %[srcl], %[srch] \n\t"
"packushb %[ftmp12], %[srcl], %[ftmp0] \n\t"
"swc1 %[ftmp12], 0x00(%[dst]) \n\t"
PTR_ADDIU "%[dst], %[dst], 0x04 \n\t"
PTR_ADDIU "%[src], %[src], 0x04 \n\t"

"bnez %[width], 1b \n\t"
PTR_SUBU "%[width], %[addr], %[src_stride] \n\t"
PTR_ADDU "%[src], %[src], %[src_stride] \n\t"
PTR_ADDU "%[dst], %[dst], %[dst_stride] \n\t"
PTR_ADDIU "%[height], %[height], -0x01 \n\t"
"bnez %[height], 1b \n\t"
: [srcl]"=&amp;f"(ftmp[0]), [srch]"=&amp;f"(ftmp[1]),
[filter10]"=&amp;f"(ftmp[2]), [filter32]"=&amp;f"(ftmp[3]),
[filter54]"=&amp;f"(ftmp[4]), [filter76]"=&amp;f"(ftmp[5]),
[ftmp0]"=&amp;f"(ftmp[6]), [ftmp4]"=&amp;f"(ftmp[7]),
[ftmp5]"=&amp;f"(ftmp[8]), [ftmp6]"=&amp;f"(ftmp[9]),
[ftmp7]"=&amp;f"(ftmp[10]), [ftmp8]"=&amp;f"(ftmp[11]),
[ftmp9]"=&amp;f"(ftmp[12]), [ftmp10]"=&amp;f"(ftmp[13]),
[ftmp11]"=&amp;f"(ftmp[14]), [ftmp12]"=&amp;f"(ftmp[15]),
[src]"+&amp;r"(src), [dst]"+&amp;r"(dst),
[width]"+&amp;r"(w), [height]"+&amp;r"(h),
[tmp0]"=&amp;r"(tmp[0]), [ftmp13]"=&amp;f"(ftmp[16])
: [filter]"r"(filter_y),
[src_stride]"r"((mips_reg)src_stride),
[dst_stride]"r"((mips_reg)dst_stride),
[addr]"r"((mips_reg)addr)
: "memory"
);</asm>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>convolve_avg_horiz_mmi</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint16_t</name> <modifier>*</modifier></type><name>filter_x</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>w</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>double</name></type> <name><name>ftmp</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>tmp</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<expr_stmt><expr><name>src</name> <operator>-=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>src_stride</name> <operator>-=</operator> <name>w</name></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_stride</name> <operator>-=</operator> <name>w</name></expr>;</expr_stmt>

<asm>__asm__ <specifier>volatile</specifier> (
"move %[tmp1], %[width] \n\t"
"xor %[ftmp0], %[ftmp0], %[ftmp0] \n\t"
"gsldlc1 %[filter1], 0x03(%[filter]) \n\t"
"gsldrc1 %[filter1], 0x00(%[filter]) \n\t"
"gsldlc1 %[filter2], 0x0b(%[filter]) \n\t"
"gsldrc1 %[filter2], 0x08(%[filter]) \n\t"
"li %[tmp0], 0x07 \n\t"
"dmtc1 %[tmp0], %[ftmp13] \n\t"
"punpcklwd %[ftmp13], %[ftmp13], %[ftmp13] \n\t"
"1: \n\t"

"gsldlc1 %[ftmp5], 0x07(%[src]) \n\t"
"gsldrc1 %[ftmp5], 0x00(%[src]) \n\t"
"gsldlc1 %[ftmp7], 0x08(%[src]) \n\t"
"gsldrc1 %[ftmp7], 0x01(%[src]) \n\t"
"gsldlc1 %[ftmp9], 0x09(%[src]) \n\t"
"gsldrc1 %[ftmp9], 0x02(%[src]) \n\t"
"gsldlc1 %[ftmp11], 0x0A(%[src]) \n\t"
"gsldrc1 %[ftmp11], 0x03(%[src]) \n\t"
"punpcklbh %[ftmp4], %[ftmp5], %[ftmp0] \n\t"
"punpckhbh %[ftmp5], %[ftmp5], %[ftmp0] \n\t"
"punpcklbh %[ftmp6], %[ftmp7], %[ftmp0] \n\t"
"punpckhbh %[ftmp7], %[ftmp7], %[ftmp0] \n\t"
"punpcklbh %[ftmp8], %[ftmp9], %[ftmp0] \n\t"
"punpckhbh %[ftmp9], %[ftmp9], %[ftmp0] \n\t"
"punpcklbh %[ftmp10], %[ftmp11], %[ftmp0] \n\t"
"punpckhbh %[ftmp11], %[ftmp11], %[ftmp0] \n\t"
PTR_ADDIU "%[width], %[width], -0x04 \n\t"

GET_DATA_H_MMI
ROUND_POWER_OF_TWO_MMI(%[srcl], %[ftmp13], %[ftmp5],
%[ftmp6], %[tmp0])
ROUND_POWER_OF_TWO_MMI(%[srch], %[ftmp13], %[ftmp5],
%[ftmp6], %[tmp0])
"packsswh %[srcl], %[srcl], %[srch] \n\t"
"packushb %[ftmp12], %[srcl], %[ftmp0] \n\t"
"punpcklbh %[ftmp12], %[ftmp12], %[ftmp0] \n\t"
"gsldlc1 %[ftmp4], 0x07(%[dst]) \n\t"
"gsldrc1 %[ftmp4], 0x00(%[dst]) \n\t"
"punpcklbh %[ftmp4], %[ftmp4], %[ftmp0] \n\t"
"paddh %[ftmp12], %[ftmp12], %[ftmp4] \n\t"
"li %[tmp0], 0x10001 \n\t"
"dmtc1 %[tmp0], %[ftmp5] \n\t"
"punpcklhw %[ftmp5], %[ftmp5], %[ftmp5] \n\t"
"paddh %[ftmp12], %[ftmp12], %[ftmp5] \n\t"
"psrah %[ftmp12], %[ftmp12], %[ftmp5] \n\t"
"packushb %[ftmp12], %[ftmp12], %[ftmp0] \n\t"
"swc1 %[ftmp12], 0x00(%[dst]) \n\t"
PTR_ADDIU "%[dst], %[dst], 0x04 \n\t"
PTR_ADDIU "%[src], %[src], 0x04 \n\t"

"bnez %[width], 1b \n\t"
"move %[width], %[tmp1] \n\t"
PTR_ADDU "%[src], %[src], %[src_stride] \n\t"
PTR_ADDU "%[dst], %[dst], %[dst_stride] \n\t"
PTR_ADDIU "%[height], %[height], -0x01 \n\t"
"bnez %[height], 1b \n\t"
: [srcl]"=&amp;f"(ftmp[0]), [srch]"=&amp;f"(ftmp[1]),
[filter1]"=&amp;f"(ftmp[2]), [filter2]"=&amp;f"(ftmp[3]),
[ftmp0]"=&amp;f"(ftmp[4]), [ftmp4]"=&amp;f"(ftmp[5]),
[ftmp5]"=&amp;f"(ftmp[6]), [ftmp6]"=&amp;f"(ftmp[7]),
[ftmp7]"=&amp;f"(ftmp[8]), [ftmp8]"=&amp;f"(ftmp[9]),
[ftmp9]"=&amp;f"(ftmp[10]), [ftmp10]"=&amp;f"(ftmp[11]),
[ftmp11]"=&amp;f"(ftmp[12]), [ftmp12]"=&amp;f"(ftmp[13]),
[tmp0]"=&amp;r"(tmp[0]), [tmp1]"=&amp;r"(tmp[1]),
[src]"+&amp;r"(src), [width]"+&amp;r"(w),
[dst]"+&amp;r"(dst), [height]"+&amp;r"(h),
[ftmp13]"=&amp;f"(ftmp[14])
: [filter]"r"(filter_x),
[src_stride]"r"((mips_reg)src_stride),
[dst_stride]"r"((mips_reg)dst_stride)
: "memory"
);</asm>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>convolve_avg_vert_mmi</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int16_t</name> <modifier>*</modifier></type><name>filter_y</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>w</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>double</name></type> <name><name>ftmp</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>tmp</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ptrdiff_t</name></type> <name>addr</name> <init>= <expr><name>src_stride</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>src_stride</name> <operator>-=</operator> <name>w</name></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_stride</name> <operator>-=</operator> <name>w</name></expr>;</expr_stmt>

<asm>__asm__ <specifier>volatile</specifier> (
"xor %[ftmp0], %[ftmp0], %[ftmp0] \n\t"
"gsldlc1 %[ftmp4], 0x03(%[filter]) \n\t"
"gsldrc1 %[ftmp4], 0x00(%[filter]) \n\t"
"gsldlc1 %[ftmp5], 0x0b(%[filter]) \n\t"
"gsldrc1 %[ftmp5], 0x08(%[filter]) \n\t"
"punpcklwd %[filter10], %[ftmp4], %[ftmp4] \n\t"
"punpckhwd %[filter32], %[ftmp4], %[ftmp4] \n\t"
"punpcklwd %[filter54], %[ftmp5], %[ftmp5] \n\t"
"punpckhwd %[filter76], %[ftmp5], %[ftmp5] \n\t"
"li %[tmp0], 0x07 \n\t"
"dmtc1 %[tmp0], %[ftmp13] \n\t"
"punpcklwd %[ftmp13], %[ftmp13], %[ftmp13] \n\t"
"1: \n\t"

"gsldlc1 %[ftmp4], 0x07(%[src]) \n\t"
"gsldrc1 %[ftmp4], 0x00(%[src]) \n\t"
PTR_ADDU "%[tmp0], %[src], %[addr] \n\t"
"gsldlc1 %[ftmp5], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp5], 0x00(%[tmp0]) \n\t"
PTR_ADDU "%[tmp0], %[tmp0], %[addr] \n\t"
"gsldlc1 %[ftmp6], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp6], 0x00(%[tmp0]) \n\t"
PTR_ADDU "%[tmp0], %[tmp0], %[addr] \n\t"
"gsldlc1 %[ftmp7], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp7], 0x00(%[tmp0]) \n\t"
PTR_ADDU "%[tmp0], %[tmp0], %[addr] \n\t"
"gsldlc1 %[ftmp8], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp8], 0x00(%[tmp0]) \n\t"
PTR_ADDU "%[tmp0], %[tmp0], %[addr] \n\t"
"gsldlc1 %[ftmp9], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp9], 0x00(%[tmp0]) \n\t"
PTR_ADDU "%[tmp0], %[tmp0], %[addr] \n\t"
"gsldlc1 %[ftmp10], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp10], 0x00(%[tmp0]) \n\t"
PTR_ADDU "%[tmp0], %[tmp0], %[addr] \n\t"
"gsldlc1 %[ftmp11], 0x07(%[tmp0]) \n\t"
"gsldrc1 %[ftmp11], 0x00(%[tmp0]) \n\t"
"punpcklbh %[ftmp4], %[ftmp4], %[ftmp0] \n\t"
"punpcklbh %[ftmp5], %[ftmp5], %[ftmp0] \n\t"
"punpcklbh %[ftmp6], %[ftmp6], %[ftmp0] \n\t"
"punpcklbh %[ftmp7], %[ftmp7], %[ftmp0] \n\t"
"punpcklbh %[ftmp8], %[ftmp8], %[ftmp0] \n\t"
"punpcklbh %[ftmp9], %[ftmp9], %[ftmp0] \n\t"
"punpcklbh %[ftmp10], %[ftmp10], %[ftmp0] \n\t"
"punpcklbh %[ftmp11], %[ftmp11], %[ftmp0] \n\t"
PTR_ADDIU "%[width], %[width], -0x04 \n\t"

GET_DATA_V_MMI
ROUND_POWER_OF_TWO_MMI(%[srcl], %[ftmp13], %[ftmp5],
%[ftmp6], %[tmp0])
ROUND_POWER_OF_TWO_MMI(%[srch], %[ftmp13], %[ftmp5],
%[ftmp6], %[tmp0])
"packsswh %[srcl], %[srcl], %[srch] \n\t"
"packushb %[ftmp12], %[srcl], %[ftmp0] \n\t"
"punpcklbh %[ftmp12], %[ftmp12], %[ftmp0] \n\t"
"gsldlc1 %[ftmp4], 0x07(%[dst]) \n\t"
"gsldrc1 %[ftmp4], 0x00(%[dst]) \n\t"
"punpcklbh %[ftmp4], %[ftmp4], %[ftmp0] \n\t"
"paddh %[ftmp12], %[ftmp12], %[ftmp4] \n\t"
"li %[tmp0], 0x10001 \n\t"
"dmtc1 %[tmp0], %[ftmp5] \n\t"
"punpcklhw %[ftmp5], %[ftmp5], %[ftmp5] \n\t"
"paddh %[ftmp12], %[ftmp12], %[ftmp5] \n\t"
"psrah %[ftmp12], %[ftmp12], %[ftmp5] \n\t"
"packushb %[ftmp12], %[ftmp12], %[ftmp0] \n\t"
"swc1 %[ftmp12], 0x00(%[dst]) \n\t"
PTR_ADDIU "%[dst], %[dst], 0x04 \n\t"
PTR_ADDIU "%[src], %[src], 0x04 \n\t"

"bnez %[width], 1b \n\t"
PTR_SUBU "%[width], %[addr], %[src_stride] \n\t"
PTR_ADDU "%[src], %[src], %[src_stride] \n\t"
PTR_ADDU "%[dst], %[dst], %[dst_stride] \n\t"
PTR_ADDIU "%[height], %[height], -0x01 \n\t"
"bnez %[height], 1b \n\t"
: [srcl]"=&amp;f"(ftmp[0]), [srch]"=&amp;f"(ftmp[1]),
[filter10]"=&amp;f"(ftmp[2]), [filter32]"=&amp;f"(ftmp[3]),
[filter54]"=&amp;f"(ftmp[4]), [filter76]"=&amp;f"(ftmp[5]),
[ftmp0]"=&amp;f"(ftmp[6]), [ftmp4]"=&amp;f"(ftmp[7]),
[ftmp5]"=&amp;f"(ftmp[8]), [ftmp6]"=&amp;f"(ftmp[9]),
[ftmp7]"=&amp;f"(ftmp[10]), [ftmp8]"=&amp;f"(ftmp[11]),
[ftmp9]"=&amp;f"(ftmp[12]), [ftmp10]"=&amp;f"(ftmp[13]),
[ftmp11]"=&amp;f"(ftmp[14]), [ftmp12]"=&amp;f"(ftmp[15]),
[src]"+&amp;r"(src), [dst]"+&amp;r"(dst),
[width]"+&amp;r"(w), [height]"+&amp;r"(h),
[tmp0]"=&amp;r"(tmp[0]), [ftmp13]"=&amp;f"(ftmp[16])
: [filter]"r"(filter_y),
[src_stride]"r"((mips_reg)src_stride),
[dst_stride]"r"((mips_reg)dst_stride),
[addr]"r"((mips_reg)addr)
: "memory"
);</asm>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>convolve_avg_mmi</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>src_stride</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>dst_stride</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>double</name></type> <name><name>ftmp</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>tmp</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<expr_stmt><expr><name>src_stride</name> <operator>-=</operator> <name>w</name></expr>;</expr_stmt>
<expr_stmt><expr><name>dst_stride</name> <operator>-=</operator> <name>w</name></expr>;</expr_stmt>

<asm>__asm__ <specifier>volatile</specifier> (
"move %[tmp1], %[width] \n\t"
"xor %[ftmp0], %[ftmp0], %[ftmp0] \n\t"
"li %[tmp0], 0x10001 \n\t"
"dmtc1 %[tmp0], %[ftmp3] \n\t"
"punpcklhw %[ftmp3], %[ftmp3], %[ftmp3] \n\t"
"1: \n\t"
"gslwlc1 %[ftmp1], 0x07(%[src]) \n\t"
"gslwrc1 %[ftmp1], 0x00(%[src]) \n\t"
"gslwlc1 %[ftmp2], 0x07(%[dst]) \n\t"
"gslwrc1 %[ftmp2], 0x00(%[dst]) \n\t"
"punpcklbh %[ftmp1], %[ftmp1], %[ftmp0] \n\t"
"punpcklbh %[ftmp2], %[ftmp2], %[ftmp0] \n\t"
"paddh %[ftmp1], %[ftmp1], %[ftmp2] \n\t"
"paddh %[ftmp1], %[ftmp1], %[ftmp3] \n\t"
"psrah %[ftmp1], %[ftmp1], %[ftmp3] \n\t"
"packushb %[ftmp1], %[ftmp1], %[ftmp0] \n\t"
"swc1 %[ftmp1], 0x00(%[dst]) \n\t"
PTR_ADDIU "%[width], %[width], -0x04 \n\t"
PTR_ADDIU "%[dst], %[dst], 0x04 \n\t"
PTR_ADDIU "%[src], %[src], 0x04 \n\t"
"bnez %[width], 1b \n\t"
"move %[width], %[tmp1] \n\t"
PTR_ADDU "%[dst], %[dst], %[dst_stride] \n\t"
PTR_ADDU "%[src], %[src], %[src_stride] \n\t"
PTR_ADDIU "%[height], %[height], -0x01 \n\t"
"bnez %[height], 1b \n\t"
: [ftmp0]"=&amp;f"(ftmp[0]), [ftmp1]"=&amp;f"(ftmp[1]),
[ftmp2]"=&amp;f"(ftmp[2]), [ftmp3]"=&amp;f"(ftmp[3]),
[tmp0]"=&amp;r"(tmp[0]), [tmp1]"=&amp;r"(tmp[1]),
[src]"+&amp;r"(src), [dst]"+&amp;r"(dst),
[width]"+&amp;r"(w), [height]"+&amp;r"(h)
: [src_stride]"r"((mips_reg)src_stride),
[dst_stride]"r"((mips_reg)dst_stride)
: "memory"
);</asm>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int16_t</name></type> <name><name>vp9_subpel_filters_mmi</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">15</literal></expr>]</index><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{
<expr><index>[<expr><name>FILTER_8TAP_REGULAR</name></expr>]</index> <operator>=</operator> <block>{
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">126</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">122</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">118</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">112</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><literal type="number">105</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><operator>-</operator><literal type="number">14</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">88</literal></expr>, <expr><literal type="number">68</literal></expr>, <expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">78</literal></expr>, <expr><literal type="number">78</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><literal type="number">68</literal></expr>, <expr><literal type="number">88</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">14</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">105</literal></expr>, <expr><operator>-</operator><literal type="number">18</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">11</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">112</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">9</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">118</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">122</literal></expr>, <expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">126</literal></expr>, <expr><operator>-</operator><literal type="number">5</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
}</block></expr>, <expr><index>[<expr><name>FILTER_8TAP_SHARP</name></expr>]</index> <operator>=</operator> <block>{
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">127</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">125</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><operator>-</operator><literal type="number">17</literal></expr>, <expr><literal type="number">121</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><operator>-</operator><literal type="number">20</literal></expr>, <expr><literal type="number">115</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">23</literal></expr>, <expr><literal type="number">108</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">24</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><operator>-</operator><literal type="number">24</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><operator>-</operator><literal type="number">21</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><operator>-</operator><literal type="number">23</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><operator>-</operator><literal type="number">23</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">21</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><operator>-</operator><literal type="number">24</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><operator>-</operator><literal type="number">19</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><operator>-</operator><literal type="number">24</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><operator>-</operator><literal type="number">16</literal></expr>, <expr><literal type="number">48</literal></expr>, <expr><literal type="number">108</literal></expr>, <expr><operator>-</operator><literal type="number">23</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">115</literal></expr>, <expr><operator>-</operator><literal type="number">20</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">121</literal></expr>, <expr><operator>-</operator><literal type="number">17</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">6</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">125</literal></expr>, <expr><operator>-</operator><literal type="number">13</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">127</literal></expr>, <expr><operator>-</operator><literal type="number">7</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
}</block></expr>, <expr><index>[<expr><name>FILTER_8TAP_SMOOTH</name></expr>]</index> <operator>=</operator> <block>{
<expr><block>{<expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">46</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">55</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">53</literal></expr>, <expr><literal type="number">57</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">46</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">43</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>, <expr><operator>-</operator><literal type="number">2</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">64</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr>, <expr><operator>-</operator><literal type="number">3</literal></expr>}</block></expr>,
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VP9_8TAP_MIPS_MMI_FUNC</name><parameter_list>(<parameter><type><name>SIZE</name></type></parameter>, <parameter><type><name>TYPE</name></type></parameter>, <parameter><type><name>TYPE_IDX</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_put_8tap_##TYPE##_##SIZE##h_mmi(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const int16_t *filter = vp9_subpel_filters_mmi[TYPE_IDX][mx-1]; convolve_horiz_mmi(src, srcstride, dst, dststride, filter, SIZE, h); } void ff_put_8tap_##TYPE##_##SIZE##v_mmi(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const int16_t *filter = vp9_subpel_filters_mmi[TYPE_IDX][my-1]; src -= (3 * srcstride); convolve_vert_mmi(src, srcstride, dst, dststride, filter, SIZE, h); } void ff_put_8tap_##TYPE##_##SIZE##hv_mmi(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint16_t *hfilter = vp9_subpel_filters_mmi[TYPE_IDX][mx-1]; const uint16_t *vfilter = vp9_subpel_filters_mmi[TYPE_IDX][my-1]; int tmp_h = h + 7; uint8_t temp[64 * 71]; src -= (3 * srcstride); convolve_horiz_mmi(src, srcstride, temp, 64, hfilter, SIZE, tmp_h); convolve_vert_mmi(temp, 64, dst, dststride, vfilter, SIZE, h); } void ff_avg_8tap_##TYPE##_##SIZE##h_mmi(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const int16_t *filter = vp9_subpel_filters_mmi[TYPE_IDX][mx-1]; convolve_avg_horiz_mmi(src, srcstride, dst, dststride, filter, SIZE, h); } void ff_avg_8tap_##TYPE##_##SIZE##v_mmi(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const int16_t *filter = vp9_subpel_filters_mmi[TYPE_IDX][my-1]; src -= (3 * srcstride); convolve_avg_vert_mmi(src, srcstride, dst, dststride, filter, SIZE, h); } void ff_avg_8tap_##TYPE##_##SIZE##hv_mmi(uint8_t *dst, ptrdiff_t dststride, const uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint16_t *hfilter = vp9_subpel_filters_mmi[TYPE_IDX][mx-1]; const uint16_t *vfilter = vp9_subpel_filters_mmi[TYPE_IDX][my-1]; uint8_t temp1[64 * 64]; uint8_t temp2[64 * 71]; int tmp_h = h + 7; src -= (3 * srcstride); convolve_horiz_mmi(src, srcstride, temp2, 64, hfilter, SIZE, tmp_h); convolve_vert_mmi(temp2, 64, temp1, 64, vfilter, SIZE, h); convolve_avg_mmi(temp1, 64, dst, dststride, SIZE, h); }</cpp:value></cpp:define>










































































<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>regular</name></expr></argument>, <argument><expr><name>FILTER_8TAP_REGULAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>regular</name></expr></argument>, <argument><expr><name>FILTER_8TAP_REGULAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>regular</name></expr></argument>, <argument><expr><name>FILTER_8TAP_REGULAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>regular</name></expr></argument>, <argument><expr><name>FILTER_8TAP_REGULAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>regular</name></expr></argument>, <argument><expr><name>FILTER_8TAP_REGULAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>sharp</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SHARP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>sharp</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SHARP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>sharp</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SHARP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>sharp</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SHARP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>sharp</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SHARP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>smooth</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SMOOTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>smooth</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SMOOTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>smooth</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SMOOTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>smooth</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SMOOTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>VP9_8TAP_MIPS_MMI_FUNC</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>smooth</name></expr></argument>, <argument><expr><name>FILTER_8TAP_SMOOTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>VP9_8TAP_MIPS_MMI_FUNC</name></cpp:undef>
</unit>
