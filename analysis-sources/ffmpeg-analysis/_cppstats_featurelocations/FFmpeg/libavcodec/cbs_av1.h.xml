<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\cbs_av1.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_CBS_AV1_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_CBS_AV1_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"av1.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cbs.h"</cpp:file></cpp:include>


<typedef>typedef <type><struct>struct <name>AV1RawOBUHeader</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>obu_forbidden_bit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>obu_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>obu_extension_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>obu_has_size_field</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>obu_reserved_1bit</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>temporal_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>spatial_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>extension_header_reserved_3bits</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawOBUHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawColorConfig</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>high_bitdepth</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>twelve_bit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>mono_chrome</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>color_description_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>color_primaries</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>transfer_characteristics</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>matrix_coefficients</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>color_range</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>subsampling_x</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>subsampling_y</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_sample_position</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>separate_uv_delta_q</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawColorConfig</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawTimingInfo</name> <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>num_units_in_display_tick</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>time_scale</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>equal_picture_interval</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>num_ticks_per_picture_minus_1</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawTimingInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawDecoderModelInfo</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>buffer_delay_length_minus_1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>num_units_in_decoding_tick</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>buffer_removal_time_length_minus_1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_presentation_time_length_minus_1</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawDecoderModelInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawSequenceHeader</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>seq_profile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>still_picture</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>reduced_still_picture_header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>timing_info_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>decoder_model_info_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>initial_display_delay_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>operating_points_cnt_minus_1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AV1RawTimingInfo</name></type> <name>timing_info</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1RawDecoderModelInfo</name></type> <name>decoder_model_info</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>operating_point_idc</name><index>[<expr><name>AV1_MAX_OPERATING_POINTS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>seq_level_idx</name><index>[<expr><name>AV1_MAX_OPERATING_POINTS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>seq_tier</name><index>[<expr><name>AV1_MAX_OPERATING_POINTS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>decoder_model_present_for_this_op</name><index>[<expr><name>AV1_MAX_OPERATING_POINTS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>decoder_buffer_delay</name><index>[<expr><name>AV1_MAX_OPERATING_POINTS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>encoder_buffer_delay</name><index>[<expr><name>AV1_MAX_OPERATING_POINTS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>low_delay_mode_flag</name><index>[<expr><name>AV1_MAX_OPERATING_POINTS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>initial_display_delay_present_for_this_op</name><index>[<expr><name>AV1_MAX_OPERATING_POINTS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>initial_display_delay_minus_1</name><index>[<expr><name>AV1_MAX_OPERATING_POINTS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_width_bits_minus_1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_height_bits_minus_1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>max_frame_width_minus_1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>max_frame_height_minus_1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_id_numbers_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>delta_frame_id_length_minus_2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>additional_frame_id_length_minus_1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>use_128x128_superblock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>enable_filter_intra</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>enable_intra_edge_filter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>enable_interintra_compound</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>enable_masked_compound</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>enable_warped_motion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>enable_dual_filter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>enable_order_hint</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>enable_jnt_comp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>enable_ref_frame_mvs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>seq_choose_screen_content_tools</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>seq_force_screen_content_tools</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>seq_choose_integer_mv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>seq_force_integer_mv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>order_hint_bits_minus_1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>enable_superres</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>enable_cdef</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>enable_restoration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AV1RawColorConfig</name></type> <name>color_config</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>film_grain_params_present</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawSequenceHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawFrameHeader</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>show_existing_frame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_to_show_map_idx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>frame_presentation_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>display_frame_id</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>show_frame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>showable_frame</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>error_resilient_mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>disable_cdf_update</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>allow_screen_content_tools</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>force_integer_mv</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>current_frame_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_size_override_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>order_hint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>buffer_removal_time_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>buffer_removal_time</name><index>[<expr><name>AV1_MAX_OPERATING_POINTS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>primary_ref_frame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>frame_width_minus_1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>frame_height_minus_1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>use_superres</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>coded_denom</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>render_and_frame_size_different</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>render_width_minus_1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>render_height_minus_1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>found_ref</name><index>[<expr><name>AV1_REFS_PER_FRAME</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>refresh_frame_flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>allow_intrabc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>ref_order_hint</name><index>[<expr><name>AV1_NUM_REF_FRAMES</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>frame_refs_short_signaling</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>last_frame_idx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>golden_frame_idx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int8_t</name></type> <name><name>ref_frame_idx</name><index>[<expr><name>AV1_REFS_PER_FRAME</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>delta_frame_id_minus1</name><index>[<expr><name>AV1_REFS_PER_FRAME</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>allow_high_precision_mv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>is_filter_switchable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>interpolation_filter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>is_motion_mode_switchable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>use_ref_frame_mvs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>disable_frame_end_update_cdf</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>uniform_tile_spacing_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>tile_cols_log2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>tile_rows_log2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>width_in_sbs_minus_1</name><index>[<expr><name>AV1_MAX_TILE_COLS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>height_in_sbs_minus_1</name><index>[<expr><name>AV1_MAX_TILE_ROWS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>context_update_tile_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>tile_size_bytes_minus1</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>uint16_t</name></type> <name>tile_cols</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>tile_rows</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>base_q_idx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int8_t</name></type> <name>delta_q_y_dc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>diff_uv_delta</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int8_t</name></type> <name>delta_q_u_dc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int8_t</name></type> <name>delta_q_u_ac</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int8_t</name></type> <name>delta_q_v_dc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int8_t</name></type> <name>delta_q_v_ac</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>using_qmatrix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>qm_y</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>qm_u</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>qm_v</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>segmentation_enabled</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>segmentation_update_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>segmentation_temporal_update</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>segmentation_update_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>feature_enabled</name><index>[<expr><name>AV1_MAX_SEGMENTS</name></expr>]</index><index>[<expr><name>AV1_SEG_LVL_MAX</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name><name>feature_value</name><index>[<expr><name>AV1_MAX_SEGMENTS</name></expr>]</index><index>[<expr><name>AV1_SEG_LVL_MAX</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>delta_q_present</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>delta_q_res</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>delta_lf_present</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>delta_lf_res</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>delta_lf_multi</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>loop_filter_level</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>loop_filter_sharpness</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>loop_filter_delta_enabled</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>loop_filter_delta_update</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>update_ref_delta</name><index>[<expr><name>AV1_TOTAL_REFS_PER_FRAME</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int8_t</name></type> <name><name>loop_filter_ref_deltas</name><index>[<expr><name>AV1_TOTAL_REFS_PER_FRAME</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>update_mode_delta</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int8_t</name></type> <name><name>loop_filter_mode_deltas</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>cdef_damping_minus_3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>cdef_bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>cdef_y_pri_strength</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>cdef_y_sec_strength</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>cdef_uv_pri_strength</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>cdef_uv_sec_strength</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>lr_type</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>lr_unit_shift</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>lr_uv_shift</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>tx_mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>reference_select</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>skip_mode_present</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>allow_warped_motion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>reduced_tx_set</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>is_global</name><index>[<expr><name>AV1_TOTAL_REFS_PER_FRAME</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>is_rot_zoom</name><index>[<expr><name>AV1_TOTAL_REFS_PER_FRAME</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>is_translation</name><index>[<expr><name>AV1_TOTAL_REFS_PER_FRAME</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>gm_params</name><index>[<expr><name>AV1_TOTAL_REFS_PER_FRAME</name></expr>]</index><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>apply_grain</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>grain_seed</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>update_grain</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>film_grain_params_ref_idx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_y_points</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>point_y_value</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>point_y_scaling</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>chroma_scaling_from_luma</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_cb_points</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>point_cb_value</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>point_cb_scaling</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>num_cr_points</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>point_cr_value</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>point_cr_scaling</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>grain_scaling_minus_8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>ar_coeff_lag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>ar_coeffs_y_plus_128</name><index>[<expr><literal type="number">24</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>ar_coeffs_cb_plus_128</name><index>[<expr><literal type="number">25</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>ar_coeffs_cr_plus_128</name><index>[<expr><literal type="number">25</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>ar_coeff_shift_minus_6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>grain_scale_shift</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>cb_mult</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>cb_luma_mult</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>cb_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>cr_mult</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>cr_luma_mult</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>cr_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>overlap_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>clip_to_restricted_range</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawFrameHeader</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawTileData</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>data_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>data_ref</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawTileData</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawTileGroup</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>tile_start_and_end_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>tg_start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>tg_end</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AV1RawTileData</name></type> <name>tile_data</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawTileGroup</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawFrame</name> <block>{
<decl_stmt><decl><type><name>AV1RawFrameHeader</name></type> <name>header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1RawTileGroup</name></type> <name>tile_group</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawFrame</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawTileList</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>output_frame_width_in_tiles_minus_1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>output_frame_height_in_tiles_minus_1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>tile_count_minus_1</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AV1RawTileData</name></type> <name>tile_data</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawTileList</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawMetadataHDRCLL</name> <block>{
<decl_stmt><decl><type><name>uint16_t</name></type> <name>max_cll</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>max_fall</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawMetadataHDRCLL</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawMetadataHDRMDCV</name> <block>{
<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>primary_chromaticity_x</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>primary_chromaticity_y</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>white_point_chromaticity_x</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>white_point_chromaticity_y</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>luminance_max</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>luminance_min</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawMetadataHDRMDCV</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawMetadataScalability</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>scalability_mode_idc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>spatial_layers_cnt_minus_1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>spatial_layer_dimensions_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>spatial_layer_description_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>temporal_group_description_present_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>scalability_structure_reserved_3bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>spatial_layer_max_width</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>spatial_layer_max_height</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>spatial_layer_ref_id</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>temporal_group_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>temporal_group_temporal_id</name><index>[<expr><literal type="number">255</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>temporal_group_temporal_switching_up_point_flag</name><index>[<expr><literal type="number">255</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>temporal_group_spatial_switching_up_point_flag</name><index>[<expr><literal type="number">255</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>temporal_group_ref_cnt</name><index>[<expr><literal type="number">255</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>temporal_group_ref_pic_diff</name><index>[<expr><literal type="number">255</literal></expr>]</index><index>[<expr><literal type="number">7</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawMetadataScalability</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawMetadataITUTT35</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>itu_t_t35_country_code</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>itu_t_t35_country_code_extension_byte</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>payload</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>payload_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>payload_ref</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawMetadataITUTT35</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawMetadataTimecode</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>counting_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>full_timestamp_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>discontinuity_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>cnt_dropped_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>n_frames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>seconds_value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>minutes_value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>hours_value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>seconds_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>minutes_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>hours_flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>time_offset_length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>time_offset_value</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawMetadataTimecode</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawMetadata</name> <block>{
<decl_stmt><decl><type><name>uint64_t</name></type> <name>metadata_type</name></decl>;</decl_stmt>
<union>union <block>{
<decl_stmt><decl><type><name>AV1RawMetadataHDRCLL</name></type> <name>hdr_cll</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1RawMetadataHDRMDCV</name></type> <name>hdr_mdcv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1RawMetadataScalability</name></type> <name>scalability</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1RawMetadataITUTT35</name></type> <name>itut_t35</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1RawMetadataTimecode</name></type> <name>timecode</name></decl>;</decl_stmt>
}</block> <decl><name>metadata</name></decl>;</union>
}</block></struct></type> <name>AV1RawMetadata</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1RawPadding</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>payload</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>payload_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>payload_ref</name></decl>;</decl_stmt>
}</block></struct></type> <name>AV1RawPadding</name>;</typedef>


<typedef>typedef <type><struct>struct <name>AV1RawOBU</name> <block>{
<decl_stmt><decl><type><name>AV1RawOBUHeader</name></type> <name>header</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>obu_size</name></decl>;</decl_stmt>

<union>union <block>{
<decl_stmt><decl><type><name>AV1RawSequenceHeader</name></type> <name>sequence_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1RawFrameHeader</name></type> <name>frame_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1RawFrame</name></type> <name>frame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1RawTileGroup</name></type> <name>tile_group</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1RawTileList</name></type> <name>tile_list</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1RawMetadata</name></type> <name>metadata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1RawPadding</name></type> <name>padding</name></decl>;</decl_stmt>
}</block> <decl><name>obu</name></decl>;</union>
}</block></struct></type> <name>AV1RawOBU</name>;</typedef>

<typedef>typedef <type><struct>struct <name>AV1ReferenceFrameState</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>valid</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>frame_id</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>upscaled_width</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>frame_width</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>frame_height</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>render_width</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>render_height</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>frame_type</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>subsampling_x</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>subsampling_y</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>bit_depth</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>order_hint</name></decl>;</decl_stmt> 
}</block></struct></type> <name>AV1ReferenceFrameState</name>;</typedef>

<typedef>typedef <type><struct>struct <name>CodedBitstreamAV1Context</name> <block>{
<decl_stmt><decl><type><name>AV1RawSequenceHeader</name> <modifier>*</modifier></type><name>sequence_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>sequence_header_ref</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>seen_frame_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>frame_header_ref</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>frame_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>frame_header_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>temporal_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>spatial_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>operating_point_idc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>bit_depth</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>frame_width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>frame_height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>upscaled_width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>render_width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>render_height</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>num_planes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>coded_lossless</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>all_lossless</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>tile_cols</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>tile_rows</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AV1ReferenceFrameState</name> <modifier>*</modifier></type><name>ref</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1ReferenceFrameState</name></type> <name><name>read_ref</name><index>[<expr><name>AV1_NUM_REF_FRAMES</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AV1ReferenceFrameState</name></type> <name><name>write_ref</name><index>[<expr><name>AV1_NUM_REF_FRAMES</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>CodedBitstreamAV1Context</name>;</typedef>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
