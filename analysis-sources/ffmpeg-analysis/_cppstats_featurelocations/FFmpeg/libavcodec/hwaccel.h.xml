<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\hwaccel.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_HWACCEL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_HWACCEL_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"hwaccels.h"</cpp:file></cpp:include>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HWACCEL_CAP_ASYNC_SAFE</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>


<typedef>typedef <type><struct>struct <name>AVCodecHWConfigInternal</name> <block>{




<decl_stmt><decl><type><name>AVCodecHWConfig</name></type> <name>public</name></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>const</specifier> <name>AVHWAccel</name> <modifier>*</modifier></type><name>hwaccel</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVCodecHWConfigInternal</name>;</typedef>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HW_CONFIG_HWACCEL</name><parameter_list>(<parameter><type><name>device</name></type></parameter>, <parameter><type><name>frames</name></type></parameter>, <parameter><type><name>ad_hoc</name></type></parameter>, <parameter><type><name>format</name></type></parameter>, <parameter><type><name>device_type_</name></type></parameter>, <parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>&amp;(const AVCodecHWConfigInternal) { .public = { .pix_fmt = AV_PIX_FMT_ ##format, .methods = (device ? AV_CODEC_HW_CONFIG_METHOD_HW_DEVICE_CTX : 0) | (frames ? AV_CODEC_HW_CONFIG_METHOD_HW_FRAMES_CTX : 0) | (ad_hoc ? AV_CODEC_HW_CONFIG_METHOD_AD_HOC : 0), .device_type = AV_HWDEVICE_TYPE_ ##device_type_, }, .hwaccel = &amp;name, }</cpp:value></cpp:define>











<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HW_CONFIG_INTERNAL</name><parameter_list>(<parameter><type><name>format</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>&amp;(const AVCodecHWConfigInternal) { .public = { .pix_fmt = AV_PIX_FMT_ ##format, .methods = AV_CODEC_HW_CONFIG_METHOD_INTERNAL, .device_type = AV_HWDEVICE_TYPE_NONE, }, .hwaccel = NULL, }</cpp:value></cpp:define>









<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HWACCEL_DXVA2</name><parameter_list>(<parameter><type><name>codec</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>HW_CONFIG_HWACCEL(1, 1, 1, DXVA2_VLD, DXVA2, ff_ ##codec ##_dxva2_hwaccel)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HWACCEL_D3D11VA2</name><parameter_list>(<parameter><type><name>codec</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>HW_CONFIG_HWACCEL(1, 1, 0, D3D11, D3D11VA, ff_ ##codec ##_d3d11va2_hwaccel)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HWACCEL_NVDEC</name><parameter_list>(<parameter><type><name>codec</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>HW_CONFIG_HWACCEL(1, 1, 0, CUDA, CUDA, ff_ ##codec ##_nvdec_hwaccel)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HWACCEL_VAAPI</name><parameter_list>(<parameter><type><name>codec</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>HW_CONFIG_HWACCEL(1, 1, 1, VAAPI, VAAPI, ff_ ##codec ##_vaapi_hwaccel)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HWACCEL_VDPAU</name><parameter_list>(<parameter><type><name>codec</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>HW_CONFIG_HWACCEL(1, 1, 1, VDPAU, VDPAU, ff_ ##codec ##_vdpau_hwaccel)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HWACCEL_VIDEOTOOLBOX</name><parameter_list>(<parameter><type><name>codec</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>HW_CONFIG_HWACCEL(1, 1, 1, VIDEOTOOLBOX, VIDEOTOOLBOX, ff_ ##codec ##_videotoolbox_hwaccel)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HWACCEL_D3D11VA</name><parameter_list>(<parameter><type><name>codec</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>HW_CONFIG_HWACCEL(0, 0, 1, D3D11VA_VLD, NONE, ff_ ##codec ##_d3d11va_hwaccel)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HWACCEL_XVMC</name><parameter_list>(<parameter><type><name>codec</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>HW_CONFIG_HWACCEL(0, 0, 1, XVMC, NONE, ff_ ##codec ##_xvmc_hwaccel)</cpp:value></cpp:define>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
