<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\opus_pvq.h">





















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_OPUS_PVQ_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_OPUS_PVQ_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"opus_celt.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QUANT_FN</name><parameter_list>(<parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>uint32_t (name)(struct CeltPVQ *pvq, CeltFrame *f, OpusRangeCoder *rc, const int band, float *X, float *Y, int N, int b, uint32_t blocks, float *lowband, int duration, float *lowband_out, int level, float gain, float *lowband_scratch, int fill)</cpp:value></cpp:define>






<struct>struct <name>CeltPVQ</name> <block>{
<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>int</name></expr></argument>, <argument><expr><name>qcoeff</name></expr></argument> )</argument_list></call><index>[<expr><literal type="number">256</literal></expr>]</index></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DECLARE_ALIGNED</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>float</name></expr></argument>, <argument><expr><name>hadamard_tmp</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">256</literal></expr>]</index></expr>;</expr_stmt>

<function_decl><type><name>float</name></type> (<modifier>*</modifier><name>pvq_search</name>)<parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>X</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>K</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>N</name></decl></parameter>)</parameter_list>;</function_decl>
<expr_stmt><expr><call><name>QUANT_FN</name><argument_list>(<argument><expr><operator>*</operator><name>quant_band</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>;</struct>

<function_decl><type><name>void</name></type> <name>ff_celt_pvq_init_x86</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>CeltPVQ</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_celt_pvq_init</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>CeltPVQ</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>pvq</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>encode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_celt_pvq_uninit</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>CeltPVQ</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>pvq</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
