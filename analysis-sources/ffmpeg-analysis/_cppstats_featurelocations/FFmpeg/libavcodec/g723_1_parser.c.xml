<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\g723_1_parser.c">






















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"parser.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"g723_1.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>G723_1ParseContext</name> <block>{
<decl_stmt><decl><type><name>ParseContext</name></type> <name>pc</name></decl>;</decl_stmt>
}</block></struct></type> <name>G723_1ParseContext</name>;</typedef>

<function><type><specifier>static</specifier> <name>int</name></type> <name>g723_1_parse</name><parameter_list>(<parameter><decl><type><name>AVCodecParserContext</name> <modifier>*</modifier></type><name>s1</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>poutbuf</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>poutbuf_size</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>G723_1ParseContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><name><name>s1</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ParseContext</name> <modifier>*</modifier></type><name>pc</name> <init>= <expr><operator>&amp;</operator><name><name>s</name><operator>-&gt;</operator><name>pc</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>next</name> <init>= <expr><name>END_NOT_FOUND</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>buf_size</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>next</name> <operator>=</operator> <name><name>frame_size</name><index>[<expr><name><name>buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">3</literal></expr>]</index></name> <operator>*</operator> <call><name>FFMAX</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>avctx</name><operator>-&gt;</operator><name>channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ff_combine_frame</name><argument_list>(<argument><expr><name>pc</name></expr></argument>, <argument><expr><name>next</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>buf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>buf_size</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <operator>!</operator><name>buf_size</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>poutbuf</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>poutbuf_size</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<return>return <expr><name>buf_size</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>s1</name><operator>-&gt;</operator><name>duration</name></name> <operator>=</operator> <literal type="number">240</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>poutbuf</name> <operator>=</operator> <name>buf</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>poutbuf_size</name> <operator>=</operator> <name>buf_size</name></expr>;</expr_stmt>
<return>return <expr><name>next</name></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><name>AVCodecParser</name></type> <name>ff_g723_1_parser</name> <init>= <expr><block>{
<expr><operator>.</operator><name>codec_ids</name> <operator>=</operator> <block>{ <expr><name>AV_CODEC_ID_G723_1</name></expr> }</block></expr>,
<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>G723_1ParseContext</name></expr></argument>)</argument_list></sizeof></expr>,
<expr><operator>.</operator><name>parser_parse</name> <operator>=</operator> <name>g723_1_parse</name></expr>,
<expr><operator>.</operator><name>parser_close</name> <operator>=</operator> <name>ff_parse_close</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
</unit>
