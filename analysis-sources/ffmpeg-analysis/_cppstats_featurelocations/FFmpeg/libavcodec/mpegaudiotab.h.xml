<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavcodec\mpegaudiotab.h">




























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVCODEC_MPEGAUDIOTAB_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVCODEC_MPEGAUDIOTAB_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"mpegaudio.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>costab32</name><index>[<expr><literal type="number">30</literal></expr>]</index></name> <init>= <expr><block>{
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.54119610014619701222</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">1.3065629648763763537</literal></expr></argument>)</argument_list></call></expr>,

<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.50979557910415917998</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">2.5629154477415054814</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.89997622313641556513</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.60134488693504528634</literal></expr></argument>)</argument_list></call></expr>,

<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.5024192861881556782</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">5.1011486186891552563</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.78815462345125020249</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.64682178335999007679</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.56694403481635768927</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">1.0606776859903470633</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">1.7224470982383341955</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.52249861493968885462</literal></expr></argument>)</argument_list></call></expr>,

<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">10.19000812354803287</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.674808341455005678</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">1.1694399334328846596</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.53104259108978413284</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">2.0577810099534108446</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.58293496820613388554</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.83934964541552681272</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.50547095989754364798</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">3.4076084184687189804</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.62250412303566482475</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.97256823786196078263</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.51544730992262455249</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">1.4841646163141661852</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.5531038960344445421</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.74453627100229857749</literal></expr></argument>)</argument_list></call></expr>,
<expr><call><name>FIX</name><argument_list>(<argument><expr><literal type="number">0.5006029982351962726</literal></expr></argument>)</argument_list></call></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>int</name></type> <name><name>bitinv32</name><index>[<expr><literal type="number">32</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">24</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">28</literal></expr>,
<expr><literal type="number">2</literal></expr>, <expr><literal type="number">18</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">30</literal></expr>,
<expr><literal type="number">1</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">25</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">13</literal></expr>, <expr><literal type="number">29</literal></expr>,
<expr><literal type="number">3</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">23</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">31</literal></expr>
}</block></expr></init></decl>;</decl_stmt>





<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>short</name></type> <name><name>quant_snr</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">70</literal></expr>, <expr><literal type="number">110</literal></expr>, <expr><literal type="number">160</literal></expr>, <expr><literal type="number">208</literal></expr>,
<expr><literal type="number">253</literal></expr>, <expr><literal type="number">316</literal></expr>, <expr><literal type="number">378</literal></expr>, <expr><literal type="number">439</literal></expr>,
<expr><literal type="number">499</literal></expr>, <expr><literal type="number">559</literal></expr>, <expr><literal type="number">620</literal></expr>, <expr><literal type="number">680</literal></expr>,
<expr><literal type="number">740</literal></expr>, <expr><literal type="number">800</literal></expr>, <expr><literal type="number">861</literal></expr>, <expr><literal type="number">920</literal></expr>,
<expr><literal type="number">980</literal></expr>
}</block></expr></init></decl>;</decl_stmt>



<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>float</name></type> <name><name>fixed_smr</name><index>[<expr><name>SBLIMIT</name></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">30</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">2.5</literal></expr>,
<expr><literal type="number">5</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><literal type="number">6</literal></expr>,
<expr><operator>-</operator><literal type="number">4</literal></expr>, <expr><operator>-</operator><literal type="number">10</literal></expr>, <expr><operator>-</operator><literal type="number">21</literal></expr>, <expr><operator>-</operator><literal type="number">30</literal></expr>, <expr><operator>-</operator><literal type="number">42</literal></expr>, <expr><operator>-</operator><literal type="number">55</literal></expr>, <expr><operator>-</operator><literal type="number">68</literal></expr>, <expr><operator>-</operator><literal type="number">75</literal></expr>,
<expr><operator>-</operator><literal type="number">75</literal></expr>, <expr><operator>-</operator><literal type="number">75</literal></expr>, <expr><operator>-</operator><literal type="number">75</literal></expr>, <expr><operator>-</operator><literal type="number">75</literal></expr>, <expr><operator>-</operator><literal type="number">91</literal></expr>, <expr><operator>-</operator><literal type="number">107</literal></expr>, <expr><operator>-</operator><literal type="number">110</literal></expr>, <expr><operator>-</operator><literal type="number">108</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>nb_scale_factors</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
