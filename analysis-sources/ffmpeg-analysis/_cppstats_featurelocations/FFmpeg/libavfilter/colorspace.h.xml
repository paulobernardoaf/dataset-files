<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavfilter\colorspace.h">


















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFILTER_COLORSPACE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_COLORSPACE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/common.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/frame.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REFERENCE_WHITE</name></cpp:macro> <cpp:value>100.0f</cpp:value></cpp:define>

<struct>struct <name>LumaCoefficients</name> <block>{
<decl_stmt><decl><type><name>double</name></type> <name>cr</name></decl>, <decl><type ref="prev"/><name>cg</name></decl>, <decl><type ref="prev"/><name>cb</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>PrimaryCoefficients</name> <block>{
<decl_stmt><decl><type><name>double</name></type> <name>xr</name></decl>, <decl><type ref="prev"/><name>yr</name></decl>, <decl><type ref="prev"/><name>xg</name></decl>, <decl><type ref="prev"/><name>yg</name></decl>, <decl><type ref="prev"/><name>xb</name></decl>, <decl><type ref="prev"/><name>yb</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>WhitepointCoefficients</name> <block>{
<decl_stmt><decl><type><name>double</name></type> <name>xw</name></decl>, <decl><type ref="prev"/><name>yw</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>void</name></type> <name>ff_matrix_invert_3x3</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>double</name></type> <name><name>in</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name><name>out</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_matrix_mul_3x3</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name><name>dst</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>double</name></type> <name><name>src1</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>double</name></type> <name><name>src2</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_fill_rgb2xyz_table</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>PrimaryCoefficients</name></name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>WhitepointCoefficients</name></name> <modifier>*</modifier></type><name>wp</name></decl></parameter>,
<parameter><decl><type><name>double</name></type> <name><name>rgb2xyz</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name><name>struct</name> <name>LumaCoefficients</name></name> <modifier>*</modifier></type><name>ff_get_luma_coefficients</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVColorSpace</name></name></type> <name>csp</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_fill_rgb2yuv_table</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>LumaCoefficients</name></name> <modifier>*</modifier></type><name>coeffs</name></decl></parameter>,
<parameter><decl><type><name>double</name></type> <name><name>rgb2yuv</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>double</name></type> <name>ff_determine_signal_peak</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>in</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_update_hdr_metadata</name><parameter_list>(<parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>peak</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
