<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavfilter\yadif.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFILTER_YADIF_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_YADIF_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/pixdesc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avfilter.h"</cpp:file></cpp:include>

<enum>enum <name>YADIFMode</name> <block>{
<decl><name>YADIF_MODE_SEND_FRAME</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>YADIF_MODE_SEND_FIELD</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 
<decl><name>YADIF_MODE_SEND_FRAME_NOSPATIAL</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>, 
<decl><name>YADIF_MODE_SEND_FIELD_NOSPATIAL</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>, 
}</block>;</enum>

<enum>enum <name>YADIFParity</name> <block>{
<decl><name>YADIF_PARITY_TFF</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>YADIF_PARITY_BFF</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 
<decl><name>YADIF_PARITY_AUTO</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>, 
}</block>;</enum>

<enum>enum <name>YADIFDeint</name> <block>{
<decl><name>YADIF_DEINT_ALL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>YADIF_DEINT_INTERLACED</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 
}</block>;</enum>

<enum>enum <name>YADIFCurrentField</name> <block>{
<decl><name>YADIF_FIELD_BACK_END</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>, 
<decl><name>YADIF_FIELD_END</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>YADIF_FIELD_NORMAL</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 
}</block>;</enum>

<typedef>typedef <type><struct>struct <name>YADIFContext</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>mode</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>parity</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>deint</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>frame_pending</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>cur</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>prev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>out</name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>filter</name>)<parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>dstpic</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>parity</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>tff</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>filter_line</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>prev</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cur</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>next</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>prefs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mrefs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>parity</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>filter_edges</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>prev</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cur</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>next</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>prefs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mrefs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>parity</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVPixFmtDescriptor</name> <modifier>*</modifier></type><name>csp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>eof</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>temp_line</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>temp_line_size</name></decl>;</decl_stmt>







<decl_stmt><decl><type><name>int</name></type> <name>current_field</name></decl>;</decl_stmt> 
}</block></struct></type> <name>YADIFContext</name>;</typedef>

<function_decl><type><name>void</name></type> <name>ff_yadif_init_x86</name><parameter_list>(<parameter><decl><type><name>YADIFContext</name> <modifier>*</modifier></type><name>yadif</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_yadif_filter_frame</name><parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_yadif_request_frame</name><parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>AVOption</name></type> <name><name>ff_yadif_options</name><index>[]</index></name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
