<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavfilter\vidstabutils.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"vidstabutils.h"</cpp:file></cpp:include>


<function><type><name>VSPixelFormat</name></type> <name>ff_av2vs_pixfmt</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><name>pf</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>AV_PIX_FMT_YUV420P</name></expr>:</case> <return>return <expr><name>PF_YUV420P</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_YUV422P</name></expr>:</case> <return>return <expr><name>PF_YUV422P</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_YUV444P</name></expr>:</case> <return>return <expr><name>PF_YUV444P</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_YUV410P</name></expr>:</case> <return>return <expr><name>PF_YUV410P</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_YUV411P</name></expr>:</case> <return>return <expr><name>PF_YUV411P</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_YUV440P</name></expr>:</case> <return>return <expr><name>PF_YUV440P</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_YUVA420P</name></expr>:</case> <return>return <expr><name>PF_YUVA420P</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_GRAY8</name></expr>:</case> <return>return <expr><name>PF_GRAY8</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_RGB24</name></expr>:</case> <return>return <expr><name>PF_RGB24</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_BGR24</name></expr>:</case> <return>return <expr><name>PF_BGR24</name></expr>;</return>
<case>case <expr><name>AV_PIX_FMT_RGBA</name></expr>:</case> <return>return <expr><name>PF_RGBA</name></expr>;</return>
<default>default:</default>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"cannot deal with pixel format %i\n"</literal></expr></argument>, <argument><expr><name>pf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>PF_NONE</name></expr>;</return>
</block_content>}</block></switch>
</block_content>}</block></function>


<typedef>typedef <type><struct>struct <name>VS2AVLogCtx</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt>
}</block></struct></type> <name>VS2AVLogCtx</name>;</typedef>


<function><type><specifier>static</specifier> <name>int</name></type> <name>vs2av_log</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>va_list</name></type> <name>ap</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VS2AVLogCtx</name></type> <name>ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVClass</name></type> <name>class</name> <init>= <expr><block>{
<expr><operator>.</operator><name>class_name</name> <operator>=</operator> <name>tag</name></expr>,
<expr><operator>.</operator><name>item_name</name> <operator>=</operator> <name>av_default_item_name</name></expr>,
<expr><operator>.</operator><name>option</name> <operator>=</operator> <literal type="number">0</literal></expr>,
<expr><operator>.</operator><name>version</name> <operator>=</operator> <name>LIBAVUTIL_VERSION_INT</name></expr>,
<expr><operator>.</operator><name>category</name> <operator>=</operator> <name>AV_CLASS_CATEGORY_FILTER</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ctx</name><operator>.</operator><name>class</name></name> <operator>=</operator> <operator>&amp;</operator><name>class</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>va_start</name><argument_list>(<argument><expr><name>ap</name></expr></argument>, <argument><expr><name>format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>av_vlog</name><argument_list>(<argument><expr><operator>&amp;</operator><name>ctx</name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><name>format</name></expr></argument>, <argument><expr><name>ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>va_end</name><argument_list>(<argument><expr><name>ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>VS_OK</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>ff_vs_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name>vs_malloc</name> <operator>=</operator> <name>av_malloc</name></expr>;</expr_stmt>
<expr_stmt><expr><name>vs_zalloc</name> <operator>=</operator> <name>av_mallocz</name></expr>;</expr_stmt>
<expr_stmt><expr><name>vs_realloc</name> <operator>=</operator> <name>av_realloc</name></expr>;</expr_stmt>
<expr_stmt><expr><name>vs_free</name> <operator>=</operator> <name>av_free</name></expr>;</expr_stmt>

<expr_stmt><expr><name>VS_ERROR_TYPE</name> <operator>=</operator> <name>AV_LOG_ERROR</name></expr>;</expr_stmt>
<expr_stmt><expr><name>VS_WARN_TYPE</name> <operator>=</operator> <name>AV_LOG_WARNING</name></expr>;</expr_stmt>
<expr_stmt><expr><name>VS_INFO_TYPE</name> <operator>=</operator> <name>AV_LOG_INFO</name></expr>;</expr_stmt>
<expr_stmt><expr><name>VS_MSG_TYPE</name> <operator>=</operator> <name>AV_LOG_VERBOSE</name></expr>;</expr_stmt>

<expr_stmt><expr><name>vs_log</name> <operator>=</operator> <name>vs2av_log</name></expr>;</expr_stmt>

<expr_stmt><expr><name>VS_ERROR</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>VS_OK</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
