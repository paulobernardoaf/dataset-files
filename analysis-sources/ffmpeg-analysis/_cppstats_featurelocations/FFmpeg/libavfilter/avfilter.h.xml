<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavfilter\avfilter.h">




















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFILTER_AVFILTER_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_AVFILTER_H</name></cpp:macro></cpp:define>














<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/avutil.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/buffer.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/dict.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/frame.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/log.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/samplefmt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/pixfmt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/rational.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavfilter/version.h"</cpp:file></cpp:include>




<function_decl><type><name>unsigned</name></type> <name>avfilter_version</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>avfilter_configuration</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>avfilter_license</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><name><name>struct</name> <name>AVFilterContext</name></name></type> <name>AVFilterContext</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>AVFilterLink</name></name></type> <name>AVFilterLink</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>AVFilterPad</name></name></type> <name>AVFilterPad</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>AVFilterFormats</name></name></type> <name>AVFilterFormats</name>;</typedef>





<function_decl><type><name>int</name></type> <name>avfilter_pad_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterPad</name> <modifier>*</modifier></type><name>pads</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>avfilter_pad_get_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterPad</name> <modifier>*</modifier></type><name>pads</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pad_idx</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name><name>enum</name> <name>AVMediaType</name></name></type> <name>avfilter_pad_get_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterPad</name> <modifier>*</modifier></type><name>pads</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pad_idx</name></decl></parameter>)</parameter_list>;</function_decl>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_FLAG_DYNAMIC_INPUTS</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_FLAG_DYNAMIC_OUTPUTS</name></cpp:macro> <cpp:value>(1 &lt;&lt; 1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_FLAG_SLICE_THREADS</name></cpp:macro> <cpp:value>(1 &lt;&lt; 2)</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_FLAG_SUPPORT_TIMELINE_GENERIC</name></cpp:macro> <cpp:value>(1 &lt;&lt; 16)</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_FLAG_SUPPORT_TIMELINE_INTERNAL</name></cpp:macro> <cpp:value>(1 &lt;&lt; 17)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_FLAG_SUPPORT_TIMELINE</name></cpp:macro> <cpp:value>(AVFILTER_FLAG_SUPPORT_TIMELINE_GENERIC | AVFILTER_FLAG_SUPPORT_TIMELINE_INTERNAL)</cpp:value></cpp:define>





<typedef>typedef <type><struct>struct <name>AVFilter</name> <block>{



<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>






<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>description</name></decl>;</decl_stmt>








<decl_stmt><decl><type><specifier>const</specifier> <name>AVFilterPad</name> <modifier>*</modifier></type><name>inputs</name></decl>;</decl_stmt>







<decl_stmt><decl><type><specifier>const</specifier> <name>AVFilterPad</name> <modifier>*</modifier></type><name>outputs</name></decl>;</decl_stmt>









<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>priv_class</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>






















<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>preinit</name>)<parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>






















<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>init_dict</name>)<parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>uninit</name>)<parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>























<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>query_formats</name>)<parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>int</name></type> <name>priv_size</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>flags_internal</name></decl>;</decl_stmt> 





<decl_stmt><decl><type><name><name>struct</name> <name>AVFilter</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>













<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>process_command</name>)<parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>res_len</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>init_opaque</name>)<parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>activate</name>)<parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>AVFilter</name>;</typedef>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_THREAD_SLICE</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>

<typedef>typedef <type><name><name>struct</name> <name>AVFilterInternal</name></name></type> <name>AVFilterInternal</name>;</typedef>


<struct>struct <name>AVFilterContext</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>av_class</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><specifier>const</specifier> <name>AVFilter</name> <modifier>*</modifier></type><name>filter</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AVFilterPad</name> <modifier>*</modifier></type><name>input_pads</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AVFilterLink</name> <modifier>*</modifier><modifier>*</modifier></type><name>inputs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name></type> <name>nb_inputs</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AVFilterPad</name> <modifier>*</modifier></type><name>output_pads</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AVFilterLink</name> <modifier>*</modifier><modifier>*</modifier></type><name>outputs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name></type> <name>nb_outputs</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>priv</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>struct</name> <name>AVFilterGraph</name></name> <modifier>*</modifier></type><name>graph</name></decl>;</decl_stmt> 

















<decl_stmt><decl><type><name>int</name></type> <name>thread_type</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>AVFilterInternal</name> <modifier>*</modifier></type><name>internal</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>AVFilterCommand</name></name> <modifier>*</modifier></type><name>command_queue</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>enable_str</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>enable</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>double</name> <modifier>*</modifier></type><name>var_values</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>is_disabled</name></decl>;</decl_stmt> 








<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>hw_device_ctx</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int</name></type> <name>nb_threads</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>unsigned</name></type> <name>ready</name></decl>;</decl_stmt>















<decl_stmt><decl><type><name>int</name></type> <name>extra_hw_frames</name></decl>;</decl_stmt>
}</block>;</struct>













<struct>struct <name>AVFilterLink</name> <block>{
<decl_stmt><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>src</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AVFilterPad</name> <modifier>*</modifier></type><name>srcpad</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>dst</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AVFilterPad</name> <modifier>*</modifier></type><name>dstpad</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name><name>enum</name> <name>AVMediaType</name></name></type> <name>type</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>int</name></type> <name>w</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>h</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AVRational</name></type> <name>sample_aspect_ratio</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint64_t</name></type> <name>channel_layout</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>sample_rate</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>format</name></decl>;</decl_stmt> 








<decl_stmt><decl><type><name>AVRational</name></type> <name>time_base</name></decl>;</decl_stmt>















<decl_stmt><decl><type><name>AVFilterFormats</name> <modifier>*</modifier></type><name>in_formats</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFilterFormats</name> <modifier>*</modifier></type><name>out_formats</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>AVFilterFormats</name> <modifier>*</modifier></type><name>in_samplerates</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFilterFormats</name> <modifier>*</modifier></type><name>out_samplerates</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>AVFilterChannelLayouts</name></name> <modifier>*</modifier></type><name>in_channel_layouts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>AVFilterChannelLayouts</name></name> <modifier>*</modifier></type><name>out_channel_layouts</name></decl>;</decl_stmt>








<decl_stmt><decl><type><name>int</name></type> <name>request_samples</name></decl>;</decl_stmt>


<enum>enum <block>{
<decl><name>AVLINK_UNINIT</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>AVLINK_STARTINIT</name></decl>, 
<decl><name>AVLINK_INIT</name></decl> 
}</block> <decl><name>init_state</name></decl>;</enum>




<decl_stmt><decl><type><name><name>struct</name> <name>AVFilterGraph</name></name> <modifier>*</modifier></type><name>graph</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>int64_t</name></type> <name>current_pts</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>int64_t</name></type> <name>current_pts_us</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>age_index</name></decl>;</decl_stmt>












<decl_stmt><decl><type><name>AVRational</name></type> <name>frame_rate</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>partial_buf</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>int</name></type> <name>partial_buf_size</name></decl>;</decl_stmt>








<decl_stmt><decl><type><name>int</name></type> <name>min_samples</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>int</name></type> <name>max_samples</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>channels</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>unsigned</name></type> <name>flags</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int64_t</name></type> <name>frame_count_in</name></decl>, <decl><type ref="prev"/><name>frame_count_out</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>frame_pool</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int</name></type> <name>frame_wanted_out</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>hw_frames_ctx</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>FF_INTERNAL_FIELDS</name></expr></argument>)</argument_list></call></expr></cpp:if>






<decl_stmt><decl><type><name>char</name></type> <name><name>reserved</name><index>[<expr><literal type="number">0xF000</literal></expr>]</index></name></decl>;</decl_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else> 




<decl_stmt><decl><type><name>FFFrameQueue</name></type> <name>fifo</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int</name></type> <name>frame_blocked_in</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int</name></type> <name>status_in</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int64_t</name></type> <name>status_in_pts</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int</name></type> <name>status_out</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

}</block>;</struct>










<function_decl><type><name>int</name></type> <name>avfilter_link</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>srcpad</name></decl></parameter>,
<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>dstpad</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>avfilter_link_free</name><parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier><modifier>*</modifier></type><name>link</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_FILTER_GET_SET</name></expr></cpp:if>




<function_decl><type><name>attribute_deprecated</name>
<name>int</name></type> <name>avfilter_link_get_channels</name><parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>






<function_decl><type><name>attribute_deprecated</name>
<name>void</name></type> <name>avfilter_link_set_closed</name><parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>closed</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>int</name></type> <name>avfilter_config_links</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_CMD_FLAG_ONE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_CMD_FLAG_FAST</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define> 





<function_decl><type><name>int</name></type> <name>avfilter_process_command</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>res_len</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><specifier>const</specifier> <name>AVFilter</name> <modifier>*</modifier></type><name>av_filter_iterate</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_NEXT</name></expr></cpp:if>

<function_decl><type><name>attribute_deprecated</name>
<name>void</name></type> <name>avfilter_register_all</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>attribute_deprecated</name>
<name>int</name></type> <name>avfilter_register</name><parameter_list>(<parameter><decl><type><name>AVFilter</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>attribute_deprecated</name>
<specifier>const</specifier> <name>AVFilter</name> <modifier>*</modifier></type><name>avfilter_next</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilter</name> <modifier>*</modifier></type><name>prev</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>








<function_decl><type><specifier>const</specifier> <name>AVFilter</name> <modifier>*</modifier></type><name>avfilter_get_by_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>int</name></type> <name>avfilter_init_str</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>args</name></decl></parameter>)</parameter_list>;</function_decl>





















<function_decl><type><name>int</name></type> <name>avfilter_init_dict</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>avfilter_free</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>avfilter_insert_filter</name><parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>, <parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>filt</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>filt_srcpad_idx</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>filt_dstpad_idx</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>avfilter_get_class</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><name><name>struct</name> <name>AVFilterGraphInternal</name></name></type> <name>AVFilterGraphInternal</name>;</typedef>













<typedef>typedef <function_decl><type><name>int</name></type> (<name>avfilter_action_func</name>)<parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>jobnr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_jobs</name></decl></parameter>)</parameter_list>;</function_decl></typedef>













<typedef>typedef <function_decl><type><name>int</name></type> (<name>avfilter_execute_func</name>)<parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>avfilter_action_func</name> <modifier>*</modifier></type><name>func</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>ret</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_jobs</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>AVFilterGraph</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>av_class</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFilterContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>filters</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>nb_filters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>scale_sws_opts</name></decl>;</decl_stmt> 
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_LAVR_OPTS</name></expr></cpp:if>
<decl_stmt><decl><type><name>attribute_deprecated</name> <name>char</name> <modifier>*</modifier></type><name>resample_lavr_opts</name></decl>;</decl_stmt> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>













<decl_stmt><decl><type><name>int</name></type> <name>thread_type</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int</name></type> <name>nb_threads</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>AVFilterGraphInternal</name> <modifier>*</modifier></type><name>internal</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl>;</decl_stmt>













<decl_stmt><decl><type><name>avfilter_execute_func</name> <modifier>*</modifier></type><name>execute</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>aresample_swr_opts</name></decl>;</decl_stmt> 








<decl_stmt><decl><type><name>AVFilterLink</name> <modifier>*</modifier><modifier>*</modifier></type><name>sink_links</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>sink_links_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>disable_auto_convert</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVFilterGraph</name>;</typedef>






<function_decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>avfilter_graph_alloc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>















<function_decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>avfilter_graph_alloc_filter</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>AVFilter</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>avfilter_graph_get_filter</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>int</name></type> <name>avfilter_graph_create_filter</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>filt_ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVFilter</name> <modifier>*</modifier></type><name>filt</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>args</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>,
<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph_ctx</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>avfilter_graph_set_auto_convert</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <block>{
<decl><name>AVFILTER_AUTO_CONVERT_ALL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>AVFILTER_AUTO_CONVERT_NONE</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>, 
}</block>;</enum>








<function_decl><type><name>int</name></type> <name>avfilter_graph_config</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graphctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>avfilter_graph_free</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier><modifier>*</modifier></type><name>graph</name></decl></parameter>)</parameter_list>;</function_decl>










<typedef>typedef <type><struct>struct <name>AVFilterInOut</name> <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>filter_ctx</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>pad_idx</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>struct</name> <name>AVFilterInOut</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVFilterInOut</name>;</typedef>






<function_decl><type><name>AVFilterInOut</name> <modifier>*</modifier></type><name>avfilter_inout_alloc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>avfilter_inout_free</name><parameter_list>(<parameter><decl><type><name>AVFilterInOut</name> <modifier>*</modifier><modifier>*</modifier></type><name>inout</name></decl></parameter>)</parameter_list>;</function_decl>



















<function_decl><type><name>int</name></type> <name>avfilter_graph_parse</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filters</name></decl></parameter>,
<parameter><decl><type><name>AVFilterInOut</name> <modifier>*</modifier></type><name>inputs</name></decl></parameter>, <parameter><decl><type><name>AVFilterInOut</name> <modifier>*</modifier></type><name>outputs</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>)</parameter_list>;</function_decl>


















<function_decl><type><name>int</name></type> <name>avfilter_graph_parse_ptr</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filters</name></decl></parameter>,
<parameter><decl><type><name>AVFilterInOut</name> <modifier>*</modifier><modifier>*</modifier></type><name>inputs</name></decl></parameter>, <parameter><decl><type><name>AVFilterInOut</name> <modifier>*</modifier><modifier>*</modifier></type><name>outputs</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>)</parameter_list>;</function_decl>























<function_decl><type><name>int</name></type> <name>avfilter_graph_parse2</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filters</name></decl></parameter>,
<parameter><decl><type><name>AVFilterInOut</name> <modifier>*</modifier><modifier>*</modifier></type><name>inputs</name></decl></parameter>,
<parameter><decl><type><name>AVFilterInOut</name> <modifier>*</modifier><modifier>*</modifier></type><name>outputs</name></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><name>int</name></type> <name>avfilter_graph_send_command</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>target</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>res_len</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><name>int</name></type> <name>avfilter_graph_queue_command</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>target</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>ts</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>char</name> <modifier>*</modifier></type><name>avfilter_graph_dump</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>;</function_decl>



















<function_decl><type><name>int</name></type> <name>avfilter_graph_request_oldest</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl></parameter>)</parameter_list>;</function_decl>





<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
