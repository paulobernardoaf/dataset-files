<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavfilter\unsharp.h">




















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFILTER_UNSHARP_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_UNSHARP_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avfilter.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIN_MATRIX_SIZE</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_MATRIX_SIZE</name></cpp:macro> <cpp:value>63</cpp:value></cpp:define>


<typedef>typedef <type><struct>struct <name>UnsharpFilterParam</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>msize_x</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>msize_y</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>amount</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>steps_x</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>steps_y</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>scalebits</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int32_t</name></type> <name>halfscale</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>sr</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint32_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>sc</name></decl>;</decl_stmt> 
}</block></struct></type> <name>UnsharpFilterParam</name>;</typedef>

<typedef>typedef <type><struct>struct <name>UnsharpContext</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lmsize_x</name></decl>, <name>lmsize_y</name>, <name>cmsize_x</name>, <name>cmsize_y</name>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>lamount</name></decl>, <name>camount</name>;</decl_stmt>
<decl_stmt><decl><type><name>UnsharpFilterParam</name></type> <name>luma</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>UnsharpFilterParam</name></type> <name>chroma</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>hsub</name></decl>, <name>vsub</name>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_threads</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>opencl</name></decl>;</decl_stmt>
<function_decl><type><name>int</name></type> (<modifier>*</modifier> <name>apply_unsharp</name>)<parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>UnsharpContext</name>;</typedef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
