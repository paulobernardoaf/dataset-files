<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavfilter\x86\avf_showcqt_init.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/attributes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/cpu.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/cpu.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavfilter/avf_showcqt.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECLARE_CQT_CALC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_showcqt_cqt_calc_##type(FFTComplex *dst, const FFTComplex *src, const Coeffs *coeffs, int len, int fft_len)</cpp:value></cpp:define>



<expr_stmt><expr><call><name>DECLARE_CQT_CALC</name><argument_list>(<argument><expr><name>sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DECLARE_CQT_CALC</name><argument_list>(<argument><expr><name>sse3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DECLARE_CQT_CALC</name><argument_list>(<argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DECLARE_CQT_CALC</name><argument_list>(<argument><expr><name>fma3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DECLARE_CQT_CALC</name><argument_list>(<argument><expr><name>fma4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>permute_coeffs_0</name></cpp:macro> <cpp:value>NULL</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>void</name></type> <name>permute_coeffs_01452367</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>k</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>k</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>k</name> <operator>&lt;</operator> <name>len</name></expr>;</condition> <incr><expr><name>k</name> <operator>+=</operator> <literal type="number">8</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>FFSWAP</name><argument_list>(<argument><expr><name>float</name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>k</name><operator>+</operator><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>k</name><operator>+</operator><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FFSWAP</name><argument_list>(<argument><expr><name>float</name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>k</name><operator>+</operator><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>v</name><index>[<expr><name>k</name><operator>+</operator><literal type="number">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>av_cold</name> <name>void</name></type> <name>ff_showcqt_init_x86</name><parameter_list>(<parameter><decl><type><name>ShowCQTContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>cpuflags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SELECT_CQT_CALC</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>TYPE</name></type></parameter>, <parameter><type><name>align</name></type></parameter>, <parameter><type><name>perm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>if (EXTERNAL_##TYPE(cpuflags)) { s-&gt;cqt_calc = ff_showcqt_cqt_calc_##type; s-&gt;cqt_align = align; s-&gt;permute_coeffs = permute_coeffs_##perm; }</cpp:value></cpp:define>






<expr_stmt><expr><call><name>SELECT_CQT_CALC</name><argument_list>(<argument><expr><name>sse</name></expr></argument>, <argument><expr><name>SSE</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SELECT_CQT_CALC</name><argument_list>(<argument><expr><name>sse3</name></expr></argument>, <argument><expr><name>SSE3_FAST</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SELECT_CQT_CALC</name><argument_list>(<argument><expr><name>fma4</name></expr></argument>, <argument><expr><name>FMA4</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>SELECT_CQT_CALC</name><argument_list>(<argument><expr><name>avx</name></expr></argument>, <argument><expr><name>AVX_FAST</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">01452367</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SELECT_CQT_CALC</name><argument_list>(<argument><expr><name>fma3</name></expr></argument>, <argument><expr><name>FMA3_FAST</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">01452367</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
