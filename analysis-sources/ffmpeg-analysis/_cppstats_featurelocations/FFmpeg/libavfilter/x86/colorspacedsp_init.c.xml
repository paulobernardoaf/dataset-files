<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavfilter\x86\colorspacedsp_init.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/cpu.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavfilter/colorspacedsp.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>decl_yuv2yuv_fn</name><parameter_list>(<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_yuv2yuv_##t##_sse2(uint8_t *yuv_out[3], const ptrdiff_t yuv_out_stride[3], uint8_t *yuv_in[3], const ptrdiff_t yuv_in_stride[3], int w, int h, const int16_t yuv2yuv_coeffs[3][3][8], const int16_t yuv_offset[2][8])</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>decl_yuv2yuv_fns</name><parameter_list>(<parameter><type><name>ss</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>decl_yuv2yuv_fn(ss##p8to8); decl_yuv2yuv_fn(ss##p10to8); decl_yuv2yuv_fn(ss##p12to8); decl_yuv2yuv_fn(ss##p8to10); decl_yuv2yuv_fn(ss##p10to10); decl_yuv2yuv_fn(ss##p12to10); decl_yuv2yuv_fn(ss##p8to12); decl_yuv2yuv_fn(ss##p10to12); decl_yuv2yuv_fn(ss##p12to12)</cpp:value></cpp:define>










<expr_stmt><expr><call><name>decl_yuv2yuv_fns</name><argument_list>(<argument><expr><literal type="number">420</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>decl_yuv2yuv_fns</name><argument_list>(<argument><expr><literal type="number">422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>decl_yuv2yuv_fns</name><argument_list>(<argument><expr><literal type="number">444</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>decl_yuv2rgb_fn</name><parameter_list>(<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_yuv2rgb_##t##_sse2(int16_t *rgb_out[3], ptrdiff_t rgb_stride, uint8_t *yuv_in[3], const ptrdiff_t yuv_stride[3], int w, int h, const int16_t coeff[3][3][8], const int16_t yuv_offset[8])</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>decl_yuv2rgb_fns</name><parameter_list>(<parameter><type><name>ss</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>decl_yuv2rgb_fn(ss##p8); decl_yuv2rgb_fn(ss##p10); decl_yuv2rgb_fn(ss##p12)</cpp:value></cpp:define>




<expr_stmt><expr><call><name>decl_yuv2rgb_fns</name><argument_list>(<argument><expr><literal type="number">420</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>decl_yuv2rgb_fns</name><argument_list>(<argument><expr><literal type="number">422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>decl_yuv2rgb_fns</name><argument_list>(<argument><expr><literal type="number">444</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>decl_rgb2yuv_fn</name><parameter_list>(<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>void ff_rgb2yuv_##t##_sse2(uint8_t *yuv_out[3], const ptrdiff_t yuv_stride[3], int16_t *rgb_in[3], ptrdiff_t rgb_stride, int w, int h, const int16_t coeff[3][3][8], const int16_t yuv_offset[8])</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>decl_rgb2yuv_fns</name><parameter_list>(<parameter><type><name>ss</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>decl_rgb2yuv_fn(ss##p8); decl_rgb2yuv_fn(ss##p10); decl_rgb2yuv_fn(ss##p12)</cpp:value></cpp:define>




<expr_stmt><expr><call><name>decl_rgb2yuv_fns</name><argument_list>(<argument><expr><literal type="number">420</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>decl_rgb2yuv_fns</name><argument_list>(<argument><expr><literal type="number">422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>decl_rgb2yuv_fns</name><argument_list>(<argument><expr><literal type="number">444</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function_decl><type><name>void</name></type> <name>ff_multiply3x3_sse2</name><parameter_list>(<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name><name>data</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>stride</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int16_t</name></type> <name><name>coeff</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>void</name></type> <name>ff_colorspacedsp_x86_init</name><parameter_list>(<parameter><decl><type><name>ColorSpaceDSPContext</name> <modifier>*</modifier></type><name>dsp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>cpu_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>ARCH_X86_64</name> <operator>&amp;&amp;</operator> <call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>assign_yuv2yuv_fns</name><parameter_list>(<parameter><type><name>ss</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>dsp-&gt;yuv2yuv[BPP_8 ][BPP_8 ][SS_##ss] = ff_yuv2yuv_##ss##p8to8_sse2; dsp-&gt;yuv2yuv[BPP_8 ][BPP_10][SS_##ss] = ff_yuv2yuv_##ss##p8to10_sse2; dsp-&gt;yuv2yuv[BPP_8 ][BPP_12][SS_##ss] = ff_yuv2yuv_##ss##p8to12_sse2; dsp-&gt;yuv2yuv[BPP_10][BPP_8 ][SS_##ss] = ff_yuv2yuv_##ss##p10to8_sse2; dsp-&gt;yuv2yuv[BPP_10][BPP_10][SS_##ss] = ff_yuv2yuv_##ss##p10to10_sse2; dsp-&gt;yuv2yuv[BPP_10][BPP_12][SS_##ss] = ff_yuv2yuv_##ss##p10to12_sse2; dsp-&gt;yuv2yuv[BPP_12][BPP_8 ][SS_##ss] = ff_yuv2yuv_##ss##p12to8_sse2; dsp-&gt;yuv2yuv[BPP_12][BPP_10][SS_##ss] = ff_yuv2yuv_##ss##p12to10_sse2; dsp-&gt;yuv2yuv[BPP_12][BPP_12][SS_##ss] = ff_yuv2yuv_##ss##p12to12_sse2</cpp:value></cpp:define>










<expr_stmt><expr><call><name>assign_yuv2yuv_fns</name><argument_list>(<argument><expr><literal type="number">420</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assign_yuv2yuv_fns</name><argument_list>(<argument><expr><literal type="number">422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assign_yuv2yuv_fns</name><argument_list>(<argument><expr><literal type="number">444</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>assign_yuv2rgb_fns</name><parameter_list>(<parameter><type><name>ss</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>dsp-&gt;yuv2rgb[BPP_8 ][SS_##ss] = ff_yuv2rgb_##ss##p8_sse2; dsp-&gt;yuv2rgb[BPP_10][SS_##ss] = ff_yuv2rgb_##ss##p10_sse2; dsp-&gt;yuv2rgb[BPP_12][SS_##ss] = ff_yuv2rgb_##ss##p12_sse2</cpp:value></cpp:define>




<expr_stmt><expr><call><name>assign_yuv2rgb_fns</name><argument_list>(<argument><expr><literal type="number">420</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assign_yuv2rgb_fns</name><argument_list>(<argument><expr><literal type="number">422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assign_yuv2rgb_fns</name><argument_list>(<argument><expr><literal type="number">444</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>assign_rgb2yuv_fns</name><parameter_list>(<parameter><type><name>ss</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>dsp-&gt;rgb2yuv[BPP_8 ][SS_##ss] = ff_rgb2yuv_##ss##p8_sse2; dsp-&gt;rgb2yuv[BPP_10][SS_##ss] = ff_rgb2yuv_##ss##p10_sse2; dsp-&gt;rgb2yuv[BPP_12][SS_##ss] = ff_rgb2yuv_##ss##p12_sse2</cpp:value></cpp:define>




<expr_stmt><expr><call><name>assign_rgb2yuv_fns</name><argument_list>(<argument><expr><literal type="number">420</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assign_rgb2yuv_fns</name><argument_list>(<argument><expr><literal type="number">422</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assign_rgb2yuv_fns</name><argument_list>(<argument><expr><literal type="number">444</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dsp</name><operator>-&gt;</operator><name>multiply3x3</name></name> <operator>=</operator> <name>ff_multiply3x3_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>
</unit>
