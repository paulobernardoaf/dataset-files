<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavfilter\v360.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFILTER_V360_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_V360_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avfilter.h"</cpp:file></cpp:include>

<enum>enum <name>StereoFormats</name> <block>{
<decl><name>STEREO_2D</name></decl>,
<decl><name>STEREO_SBS</name></decl>,
<decl><name>STEREO_TB</name></decl>,
<decl><name>NB_STEREO_FMTS</name></decl>,
}</block>;</enum>

<enum>enum <name>Projections</name> <block>{
<decl><name>EQUIRECTANGULAR</name></decl>,
<decl><name>CUBEMAP_3_2</name></decl>,
<decl><name>CUBEMAP_6_1</name></decl>,
<decl><name>EQUIANGULAR</name></decl>,
<decl><name>FLAT</name></decl>,
<decl><name>DUAL_FISHEYE</name></decl>,
<decl><name>BARREL</name></decl>,
<decl><name>CUBEMAP_1_6</name></decl>,
<decl><name>STEREOGRAPHIC</name></decl>,
<decl><name>MERCATOR</name></decl>,
<decl><name>BALL</name></decl>,
<decl><name>HAMMER</name></decl>,
<decl><name>SINUSOIDAL</name></decl>,
<decl><name>FISHEYE</name></decl>,
<decl><name>PANNINI</name></decl>,
<decl><name>CYLINDRICAL</name></decl>,
<decl><name>PERSPECTIVE</name></decl>,
<decl><name>TETRAHEDRON</name></decl>,
<decl><name>BARREL_SPLIT</name></decl>,
<decl><name>TSPYRAMID</name></decl>,
<decl><name>HEQUIRECTANGULAR</name></decl>,
<decl><name>NB_PROJECTIONS</name></decl>,
}</block>;</enum>

<enum>enum <name>InterpMethod</name> <block>{
<decl><name>NEAREST</name></decl>,
<decl><name>BILINEAR</name></decl>,
<decl><name>LAGRANGE9</name></decl>,
<decl><name>BICUBIC</name></decl>,
<decl><name>LANCZOS</name></decl>,
<decl><name>SPLINE16</name></decl>,
<decl><name>GAUSSIAN</name></decl>,
<decl><name>NB_INTERP_METHODS</name></decl>,
}</block>;</enum>

<enum>enum <name>Faces</name> <block>{
<decl><name>TOP_LEFT</name></decl>,
<decl><name>TOP_MIDDLE</name></decl>,
<decl><name>TOP_RIGHT</name></decl>,
<decl><name>BOTTOM_LEFT</name></decl>,
<decl><name>BOTTOM_MIDDLE</name></decl>,
<decl><name>BOTTOM_RIGHT</name></decl>,
<decl><name>NB_FACES</name></decl>,
}</block>;</enum>

<enum>enum <name>Direction</name> <block>{
<decl><name>RIGHT</name></decl>, 
<decl><name>LEFT</name></decl>, 
<decl><name>UP</name></decl>, 
<decl><name>DOWN</name></decl>, 
<decl><name>FRONT</name></decl>, 
<decl><name>BACK</name></decl>, 
<decl><name>NB_DIRECTIONS</name></decl>,
}</block>;</enum>

<enum>enum <name>Rotation</name> <block>{
<decl><name>ROT_0</name></decl>,
<decl><name>ROT_90</name></decl>,
<decl><name>ROT_180</name></decl>,
<decl><name>ROT_270</name></decl>,
<decl><name>NB_ROTATIONS</name></decl>,
}</block>;</enum>

<enum>enum <name>RotationOrder</name> <block>{
<decl><name>YAW</name></decl>,
<decl><name>PITCH</name></decl>,
<decl><name>ROLL</name></decl>,
<decl><name>NB_RORDERS</name></decl>,
}</block>;</enum>

<typedef>typedef <type><struct>struct <name>XYRemap</name> <block>{
<decl_stmt><decl><type><name>int16_t</name></type> <name><name>u</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name></type> <name><name>v</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name><name>ker</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>XYRemap</name>;</typedef>

<typedef>typedef <type><struct>struct <name>V360Context</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>in</name></decl>, <name>out</name>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>interp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>alpha</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>, <name>height</name>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>in_forder</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>out_forder</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>in_frot</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>out_frot</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>rorder</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>in_cubemap_face_order</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>out_cubemap_direction_order</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>in_cubemap_face_rotation</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>out_cubemap_face_rotation</name><index>[<expr><literal type="number">6</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>rotation_order</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>in_stereo</name></decl>, <name>out_stereo</name>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>in_pad</name></decl>, <name>out_pad</name>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>fin_pad</name></decl>, <name>fout_pad</name>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>yaw</name></decl>, <name>pitch</name>, <name>roll</name>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>ih_flip</name></decl>, <name>iv_flip</name>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>h_flip</name></decl>, <name>v_flip</name>, <name>d_flip</name>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>in_transpose</name></decl>, <name>out_transpose</name>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>h_fov</name></decl>, <name>v_fov</name>, <name>d_fov</name>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>ih_fov</name></decl>, <name>iv_fov</name>, <name>id_fov</name>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name><name>flat_range</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name><name>iflat_range</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>rot_mat</name><index>[<expr><literal type="number">3</literal></expr>]</index><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name><name>input_mirror_modifier</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name><name>output_mirror_modifier</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>in_width</name></decl>, <name>in_height</name>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>out_width</name></decl>, <name>out_height</name>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>pr_width</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <name><name>pr_height</name><index>[<expr><literal type="number">4</literal></expr>]</index></name>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>in_offset_w</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <name><name>in_offset_h</name><index>[<expr><literal type="number">4</literal></expr>]</index></name>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>out_offset_w</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <name><name>out_offset_h</name><index>[<expr><literal type="number">4</literal></expr>]</index></name>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>planewidth</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <name><name>planeheight</name><index>[<expr><literal type="number">4</literal></expr>]</index></name>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>inplanewidth</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <name><name>inplaneheight</name><index>[<expr><literal type="number">4</literal></expr>]</index></name>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>uv_linesize</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_planes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_allocated</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>elements</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>mask_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>max_value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name><name>u</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>, <modifier>*</modifier><name><name>v</name><index>[<expr><literal type="number">2</literal></expr>]</index></name>;</decl_stmt>
<decl_stmt><decl><type><name>int16_t</name> <modifier>*</modifier></type><name><name>ker</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name><name>map</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>in_transform</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>V360Context</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>vec</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>,
<parameter><decl><type><name>int16_t</name></type> <name><name>us</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name><name>vs</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>du</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>dv</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>out_transform</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>V360Context</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>i</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>j</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>height</name></decl></parameter>,
<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>vec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>calculate_kernel</name>)<parameter_list>(<parameter><decl><type><name>float</name></type> <name>du</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>dv</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>XYRemap</name> <modifier>*</modifier></type><name>rmap</name></decl></parameter>,
<parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>u</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>v</name></decl></parameter>, <parameter><decl><type><name>int16_t</name> <modifier>*</modifier></type><name>ker</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>remap_slice</name>)<parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>jobnr</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_jobs</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>remap_line</name>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name>src</name></decl></parameter>, <parameter><decl><type><name>ptrdiff_t</name></type> <name>in_linesize</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int16_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name>u</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int16_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name>v</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int16_t</name> <modifier>*</modifier><specifier>const</specifier></type> <name>ker</name></decl></parameter>)</parameter_list>;</function_decl>
}</block></struct></type> <name>V360Context</name>;</typedef>

<function_decl><type><name>void</name></type> <name>ff_v360_init</name><parameter_list>(<parameter><decl><type><name>V360Context</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>depth</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_v360_init_x86</name><parameter_list>(<parameter><decl><type><name>V360Context</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>depth</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
