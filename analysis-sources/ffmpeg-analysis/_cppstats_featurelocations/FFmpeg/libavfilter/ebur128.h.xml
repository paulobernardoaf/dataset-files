<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavfilter\ebur128.h">























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFILTER_EBUR128_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_EBUR128_H</name></cpp:macro></cpp:define>






<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include> 





<enum>enum <name>channel</name> <block>{
<decl><name>FF_EBUR128_UNUSED</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>FF_EBUR128_LEFT</name></decl>,
<decl><name>FF_EBUR128_Mp030</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 
<decl><name>FF_EBUR128_RIGHT</name></decl>,
<decl><name>FF_EBUR128_Mm030</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>, 
<decl><name>FF_EBUR128_CENTER</name></decl>,
<decl><name>FF_EBUR128_Mp000</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>, 
<decl><name>FF_EBUR128_LEFT_SURROUND</name></decl>,
<decl><name>FF_EBUR128_Mp110</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>, 
<decl><name>FF_EBUR128_RIGHT_SURROUND</name></decl>,
<decl><name>FF_EBUR128_Mm110</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>, 
<decl><name>FF_EBUR128_DUAL_MONO</name></decl>, 
<decl><name>FF_EBUR128_MpSC</name></decl>, 
<decl><name>FF_EBUR128_MmSC</name></decl>, 
<decl><name>FF_EBUR128_Mp060</name></decl>, 
<decl><name>FF_EBUR128_Mm060</name></decl>, 
<decl><name>FF_EBUR128_Mp090</name></decl>, 
<decl><name>FF_EBUR128_Mm090</name></decl>, 
<decl><name>FF_EBUR128_Mp135</name></decl>, 
<decl><name>FF_EBUR128_Mm135</name></decl>, 
<decl><name>FF_EBUR128_Mp180</name></decl>, 
<decl><name>FF_EBUR128_Up000</name></decl>, 
<decl><name>FF_EBUR128_Up030</name></decl>, 
<decl><name>FF_EBUR128_Um030</name></decl>, 
<decl><name>FF_EBUR128_Up045</name></decl>, 
<decl><name>FF_EBUR128_Um045</name></decl>, 
<decl><name>FF_EBUR128_Up090</name></decl>, 
<decl><name>FF_EBUR128_Um090</name></decl>, 
<decl><name>FF_EBUR128_Up110</name></decl>, 
<decl><name>FF_EBUR128_Um110</name></decl>, 
<decl><name>FF_EBUR128_Up135</name></decl>, 
<decl><name>FF_EBUR128_Um135</name></decl>, 
<decl><name>FF_EBUR128_Up180</name></decl>, 
<decl><name>FF_EBUR128_Tp000</name></decl>, 
<decl><name>FF_EBUR128_Bp000</name></decl>, 
<decl><name>FF_EBUR128_Bp045</name></decl>, 
<decl><name>FF_EBUR128_Bm045</name></decl> 
}</block>;</enum>





<enum>enum <name>mode</name> <block>{

<decl><name>FF_EBUR128_MODE_M</name> <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal><operator>)</operator></expr></init></decl>,

<decl><name>FF_EBUR128_MODE_S</name> <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>|</operator> <name>FF_EBUR128_MODE_M</name></expr></init></decl>,

<decl><name>FF_EBUR128_MODE_I</name> <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>|</operator> <name>FF_EBUR128_MODE_M</name></expr></init></decl>,

<decl><name>FF_EBUR128_MODE_LRA</name> <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator> <operator>|</operator> <name>FF_EBUR128_MODE_S</name></expr></init></decl>,

<decl><name>FF_EBUR128_MODE_SAMPLE_PEAK</name> <init>= <expr><operator>(</operator><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator> <operator>|</operator> <name>FF_EBUR128_MODE_M</name></expr></init></decl>,
}</block>;</enum>


<struct_decl>struct <name>FFEBUR128StateInternal</name>;</struct_decl>





<typedef>typedef <type><struct>struct <name>FFEBUR128State</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>mode</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>channels</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>samplerate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>struct</name> <name>FFEBUR128StateInternal</name></name> <modifier>*</modifier></type><name>d</name></decl>;</decl_stmt> 
}</block></struct></type> <name>FFEBUR128State</name>;</typedef>









<function_decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type><name>ff_ebur128_init</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>channels</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>samplerate</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>window</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mode</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ff_ebur128_destroy</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier><modifier>*</modifier></type> <name>st</name></decl></parameter>)</parameter_list>;</function_decl>


















<function_decl><type><name>int</name></type> <name>ff_ebur128_set_channel</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>channel_number</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>ff_ebur128_add_frames_short</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>short</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>frames</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ebur128_add_frames_int</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>frames</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ebur128_add_frames_float</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>frames</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ebur128_add_frames_double</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>double</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>frames</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>ff_ebur128_add_frames_planar_short</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>short</name> <modifier>*</modifier><modifier>*</modifier></type><name>srcs</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>frames</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ebur128_add_frames_planar_int</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name> <modifier>*</modifier><modifier>*</modifier></type><name>srcs</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>frames</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ebur128_add_frames_planar_float</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>float</name> <modifier>*</modifier><modifier>*</modifier></type><name>srcs</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>frames</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_ebur128_add_frames_planar_double</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>double</name> <modifier>*</modifier><modifier>*</modifier></type><name>srcs</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>frames</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stride</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>ff_ebur128_loudness_global</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>ff_ebur128_loudness_global_multiple</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier><modifier>*</modifier></type> <name>sts</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>ff_ebur128_loudness_momentary</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>ff_ebur128_loudness_shortterm</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>int</name></type> <name>ff_ebur128_loudness_window</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>window</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>int</name></type> <name>ff_ebur128_loudness_range</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>int</name></type> <name>ff_ebur128_loudness_range_multiple</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier><modifier>*</modifier></type> <name>sts</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>int</name></type> <name>ff_ebur128_sample_peak</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>channel_number</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>ff_ebur128_relative_threshold</name><parameter_list>(<parameter><decl><type><name>FFEBUR128State</name> <modifier>*</modifier></type> <name>st</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
