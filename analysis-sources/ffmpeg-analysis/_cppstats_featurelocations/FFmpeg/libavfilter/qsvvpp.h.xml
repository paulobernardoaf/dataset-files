<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavfilter\qsvvpp.h">






















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFILTER_QSVVPP_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_QSVVPP_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;mfx/mfxvideo.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avfilter.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_INLINK_IDX</name><parameter_list>(<parameter><type><name>link</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((int)((link)-&gt;dstpad - (link)-&gt;dst-&gt;input_pads))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_OUTLINK_IDX</name><parameter_list>(<parameter><type><name>link</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((int)((link)-&gt;srcpad - (link)-&gt;src-&gt;output_pads))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QSV_VERSION_ATLEAST</name><parameter_list>(<parameter><type><name>MAJOR</name></type></parameter>, <parameter><type><name>MINOR</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(MFX_VERSION_MAJOR &gt; (MAJOR) || MFX_VERSION_MAJOR == (MAJOR) &amp;&amp; MFX_VERSION_MINOR &gt;= (MINOR))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QSV_RUNTIME_VERSION_ATLEAST</name><parameter_list>(<parameter><type><name>MFX_VERSION</name></type></parameter>, <parameter><type><name>MAJOR</name></type></parameter>, <parameter><type><name>MINOR</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((MFX_VERSION.Major &gt; (MAJOR)) || (MFX_VERSION.Major == (MAJOR) &amp;&amp; MFX_VERSION.Minor &gt;= (MINOR)))</cpp:value></cpp:define>



<typedef>typedef <type><name><name>struct</name> <name>QSVVPPContext</name></name></type> <name>QSVVPPContext</name>;</typedef>

<typedef>typedef <type><struct>struct <name>QSVVPPCrop</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>in_idx</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>, <name>y</name>, <name>w</name>, <name>h</name>;</decl_stmt> 
}</block></struct></type> <name>QSVVPPCrop</name>;</typedef>

<typedef>typedef <type><struct>struct <name>QSVVPPParam</name> <block>{

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>filter_frame</name>)<parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>outlink</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>


<decl_stmt><decl><type><name>int</name></type> <name>num_ext_buf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mfxExtBuffer</name> <modifier>*</modifier><modifier>*</modifier></type><name>ext_buf</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>out_sw_format</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>num_crop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>QSVVPPCrop</name> <modifier>*</modifier></type><name>crop</name></decl>;</decl_stmt>
}</block></struct></type> <name>QSVVPPParam</name>;</typedef>


<function_decl><type><name>int</name></type> <name>ff_qsvvpp_create</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>QSVVPPContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>vpp</name></decl></parameter>, <parameter><decl><type><name>QSVVPPParam</name> <modifier>*</modifier></type><name>param</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>int</name></type> <name>ff_qsvvpp_free</name><parameter_list>(<parameter><decl><type><name>QSVVPPContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>vpp</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>int</name></type> <name>ff_qsvvpp_filter_frame</name><parameter_list>(<parameter><decl><type><name>QSVVPPContext</name> <modifier>*</modifier></type><name>vpp</name></decl></parameter>, <parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>inlink</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
