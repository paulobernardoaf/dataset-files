<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavfilter\internal.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFILTER_INTERNAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_INTERNAL_H</name></cpp:macro></cpp:define>






<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/internal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avfilter.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"formats.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"framepool.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"framequeue.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"thread.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"version.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"video.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/internal.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>AVFilterCommand</name> <block>{
<decl_stmt><decl><type><name>double</name></type> <name>time</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>command</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>arg</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>AVFilterCommand</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVFilterCommand</name>;</typedef>




<function_decl><type><name>void</name></type> <name>ff_avfilter_graph_update_heap</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl></parameter>, <parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>)</parameter_list>;</function_decl>




<struct>struct <name>AVFilterPad</name> <block>{





<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name><name>enum</name> <name>AVMediaType</name></name></type> <name>type</name></decl>;</decl_stmt>







<function_decl><type><name>AVFrame</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>get_video_buffer</name>)<parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>h</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>AVFrame</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>get_audio_buffer</name>)<parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>filter_frame</name>)<parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>request_frame</name>)<parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>)</parameter_list>;</function_decl>















<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>config_props</name>)<parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>)</parameter_list>;</function_decl>







<decl_stmt><decl><type><name>int</name></type> <name>needs_fifo</name></decl>;</decl_stmt>







<decl_stmt><decl><type><name>int</name></type> <name>needs_writable</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>AVFilterGraphInternal</name> <block>{
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>thread</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>avfilter_execute_func</name> <modifier>*</modifier></type><name>thread_execute</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>FFFrameQueueGlobal</name></type> <name>frame_queues</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>AVFilterInternal</name> <block>{
<decl_stmt><decl><type><name>avfilter_execute_func</name> <modifier>*</modifier></type><name>execute</name></decl>;</decl_stmt>
}</block>;</struct>










<function_decl><type><name>int</name></type> <name>ff_fmt_is_in</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fmt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name> <modifier>*</modifier></type><name>fmts</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>av_warn_unused_result</name>
<name>int</name></type> <name>ff_parse_pixel_format</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name> <modifier>*</modifier></type><name>ret</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>av_warn_unused_result</name>
<name>int</name></type> <name>ff_parse_sample_rate</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>ret</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>av_warn_unused_result</name>
<name>int</name></type> <name>ff_parse_time_base</name><parameter_list>(<parameter><decl><type><name>AVRational</name> <modifier>*</modifier></type><name>ret</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>av_warn_unused_result</name>
<name>int</name></type> <name>ff_parse_sample_format</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>ret</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>av_warn_unused_result</name>
<name>int</name></type> <name>ff_parse_channel_layout</name><parameter_list>(<parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>ret</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>nret</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>log_ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_update_link_current_pts</name><parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>pts</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>ff_avfilter_link_set_in_status</name><parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>status</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>pts</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ff_avfilter_link_set_out_status</name><parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>status</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>pts</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_command_queue_pop</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_TPRINTF_START</name><parameter_list>(<parameter><type><name>ctx</name></type></parameter>, <parameter><type><name>func</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ff_tlog(NULL, "%-16s: ", #func)</cpp:value></cpp:define>

<function_decl><type><name>char</name> <modifier>*</modifier></type><name>ff_get_ref_perms_string</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>buf_size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>perms</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_tlog_ref</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>ref</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>end</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_tlog_link</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>end</name></decl></parameter>)</parameter_list>;</function_decl>















<function_decl><type><name>int</name></type> <name>ff_insert_pad</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <modifier>*</modifier></type><name>count</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>padidx_off</name></decl></parameter>,
<parameter><decl><type><name>AVFilterPad</name> <modifier>*</modifier><modifier>*</modifier></type><name>pads</name></decl></parameter>, <parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier><modifier>*</modifier><modifier>*</modifier></type><name>links</name></decl></parameter>,
<parameter><decl><type><name>AVFilterPad</name> <modifier>*</modifier></type><name>newpad</name></decl></parameter>)</parameter_list>;</function_decl>


<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>ff_insert_inpad</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>index</name></decl></parameter>,
<parameter><decl><type><name>AVFilterPad</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ff_insert_pad</name><argument_list>(<argument><expr><name>index</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>f</name><operator>-&gt;</operator><name>nb_inputs</name></name></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr><name>AVFilterLink</name></expr></argument>, <argument><expr><name>dstpad</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>f</name><operator>-&gt;</operator><name>input_pads</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>f</name><operator>-&gt;</operator><name>inputs</name></name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>ff_insert_outpad</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>index</name></decl></parameter>,
<parameter><decl><type><name>AVFilterPad</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ff_insert_pad</name><argument_list>(<argument><expr><name>index</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>f</name><operator>-&gt;</operator><name>nb_outputs</name></name></expr></argument>, <argument><expr><call><name>offsetof</name><argument_list>(<argument><expr><name>AVFilterLink</name></expr></argument>, <argument><expr><name>srcpad</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>&amp;</operator><name><name>f</name><operator>-&gt;</operator><name>output_pads</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>f</name><operator>-&gt;</operator><name>outputs</name></name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
































<function_decl><type><name>int</name></type> <name>ff_request_frame</name><parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_DEFINE_CLASS</name><parameter_list>(<parameter><type><name>fname</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>static const AVClass fname##_class = { .class_name = #fname, .item_name = av_default_item_name, .option = fname##_options, .version = LIBAVUTIL_VERSION_INT, .category = AV_CLASS_CATEGORY_FILTER, }</cpp:value></cpp:define>













<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_INLINK_IDX</name><parameter_list>(<parameter><type><name>link</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((int)((link)-&gt;dstpad - (link)-&gt;dst-&gt;input_pads))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_OUTLINK_IDX</name><parameter_list>(<parameter><type><name>link</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((int)((link)-&gt;srcpad - (link)-&gt;src-&gt;output_pads))</cpp:value></cpp:define>












<function_decl><type><name>int</name></type> <name>ff_filter_frame</name><parameter_list>(<parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ff_filter_alloc</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilter</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>inst_name</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_filter_activate</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ff_filter_graph_remove_filter</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl></parameter>, <parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>filter</name></decl></parameter>)</parameter_list>;</function_decl>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_FILTER_FLAG_HWFRAME_AWARE</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>




<function_decl><type><name>int</name></type> <name>ff_filter_graph_run_once</name><parameter_list>(<parameter><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl></parameter>)</parameter_list>;</function_decl>






<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>ff_norm_qscale</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>qscale</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><name>type</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>FF_QSCALE_TYPE_MPEG1</name></expr>:</case> <return>return <expr><name>qscale</name></expr>;</return>
<case>case <expr><name>FF_QSCALE_TYPE_MPEG2</name></expr>:</case> <return>return <expr><name>qscale</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</return>
<case>case <expr><name>FF_QSCALE_TYPE_H264</name></expr>:</case> <return>return <expr><name>qscale</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>;</return>
<case>case <expr><name>FF_QSCALE_TYPE_VP56</name></expr>:</case> <return>return <expr><operator>(</operator><literal type="number">63</literal> <operator>-</operator> <name>qscale</name> <operator>+</operator> <literal type="number">2</literal><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">2</literal></expr>;</return>
</block_content>}</block></switch>
<return>return <expr><name>qscale</name></expr>;</return>
</block_content>}</block></function>





<function_decl><type><name>int</name></type> <name>ff_filter_get_nb_threads</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>ff_filter_process_command</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cmd</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>res_len</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>int</name></type> <name>ff_filter_init_hw_frames</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>AVFilterLink</name> <modifier>*</modifier></type><name>link</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>default_pool_size</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
