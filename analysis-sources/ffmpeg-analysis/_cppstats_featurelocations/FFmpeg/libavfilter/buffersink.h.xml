<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavfilter\buffersink.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFILTER_BUFFERSINK_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFILTER_BUFFERSINK_H</name></cpp:macro></cpp:define>







<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avfilter.h"</cpp:file></cpp:include>

















<function_decl><type><name>int</name></type> <name>av_buffersink_get_frame_flags</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_BUFFERSINK_FLAG_PEEK</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AV_BUFFERSINK_FLAG_NO_REQUEST</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_NEXT</name></expr></cpp:if>



<typedef>typedef <type><struct>struct <name>AVBufferSinkParams</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name><name>enum</name> <name>AVPixelFormat</name></name> <modifier>*</modifier></type><name>pixel_fmts</name></decl>;</decl_stmt> 
}</block></struct></type> <name>AVBufferSinkParams</name>;</typedef>






<function_decl><type><name>attribute_deprecated</name>
<name>AVBufferSinkParams</name> <modifier>*</modifier></type><name>av_buffersink_params_alloc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<typedef>typedef <type><struct>struct <name>AVABufferSinkParams</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name><name>enum</name> <name>AVSampleFormat</name></name> <modifier>*</modifier></type><name>sample_fmts</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>int64_t</name> <modifier>*</modifier></type><name>channel_layouts</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name> <modifier>*</modifier></type><name>channel_counts</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>all_channel_counts</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>sample_rates</name></decl>;</decl_stmt> 
}</block></struct></type> <name>AVABufferSinkParams</name>;</typedef>






<function_decl><type><name>attribute_deprecated</name>
<name>AVABufferSinkParams</name> <modifier>*</modifier></type><name>av_abuffersink_params_alloc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>








<function_decl><type><name>void</name></type> <name>av_buffersink_set_frame_size</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>frame_size</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name><name>enum</name> <name>AVMediaType</name></name></type> <name>av_buffersink_get_type</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>AVRational</name></type> <name>av_buffersink_get_time_base</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>av_buffersink_get_format</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>AVRational</name></type> <name>av_buffersink_get_frame_rate</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>av_buffersink_get_w</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>av_buffersink_get_h</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>AVRational</name></type> <name>av_buffersink_get_sample_aspect_ratio</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>av_buffersink_get_channels</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint64_t</name></type> <name>av_buffersink_get_channel_layout</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>av_buffersink_get_sample_rate</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>AVBufferRef</name> <modifier>*</modifier></type> <name>av_buffersink_get_hw_frames_ctx</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

















<function_decl><type><name>int</name></type> <name>av_buffersink_get_frame</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>


















<function_decl><type><name>int</name></type> <name>av_buffersink_get_samples</name><parameter_list>(<parameter><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_samples</name></decl></parameter>)</parameter_list>;</function_decl>





<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
