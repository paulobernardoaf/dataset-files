<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\fftools\ffmpeg.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>FFTOOLS_FFMPEG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FFTOOLS_FFMPEG_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"config.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;signal.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cmdutils.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavformat/avformat.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavformat/avio.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/avcodec.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavfilter/avfilter.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/avutil.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/dict.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/eval.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/fifo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/hwcontext.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/pixfmt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/rational.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/thread.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/threadmessage.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libswresample/swresample.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VSYNC_AUTO</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VSYNC_PASSTHROUGH</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VSYNC_CFR</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VSYNC_VFR</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VSYNC_VSCFR</name></cpp:macro> <cpp:value>0xfe</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>VSYNC_DROP</name></cpp:macro> <cpp:value>0xff</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_STREAMS</name></cpp:macro> <cpp:value>1024</cpp:value></cpp:define> 

<enum>enum <name>HWAccelID</name> <block>{
<decl><name>HWACCEL_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>HWACCEL_AUTO</name></decl>,
<decl><name>HWACCEL_GENERIC</name></decl>,
<decl><name>HWACCEL_VIDEOTOOLBOX</name></decl>,
<decl><name>HWACCEL_QSV</name></decl>,
}</block>;</enum>

<typedef>typedef <type><struct>struct <name>HWAccel</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name><name>enum</name> <name>HWAccelID</name></name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pix_fmt</name></decl>;</decl_stmt>
}</block></struct></type> <name>HWAccel</name>;</typedef>

<typedef>typedef <type><struct>struct <name>HWDevice</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVHWDeviceType</name></name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>device_ref</name></decl>;</decl_stmt>
}</block></struct></type> <name>HWDevice</name>;</typedef>


<typedef>typedef <type><struct>struct <name>StreamMap</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>disabled</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>file_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>stream_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>sync_file_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>sync_stream_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>linklabel</name></decl>;</decl_stmt> 
}</block></struct></type> <name>StreamMap</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>file_idx</name></decl>, <name>stream_idx</name>, <name>channel_idx</name>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>ofile_idx</name></decl>, <name>ostream_idx</name>;</decl_stmt> 
}</block></struct></type> <name>AudioChannelMap</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OptionsContext</name> <block>{
<decl_stmt><decl><type><name>OptionGroup</name> <modifier>*</modifier></type><name>g</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int64_t</name></type> <name>start_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>start_time_eof</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>seek_timestamp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>codec_names</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_codec_names</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>audio_channels</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_audio_channels</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>audio_sample_rate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_audio_sample_rate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>frame_rates</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_frame_rates</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>frame_sizes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_frame_sizes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>frame_pix_fmts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_frame_pix_fmts</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int64_t</name></type> <name>input_ts_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>loop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>rate_emu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>accurate_seek</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>thread_queue_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>ts_scale</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_ts_scale</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>dump_attachment</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_dump_attachment</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>hwaccels</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_hwaccels</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>hwaccel_devices</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_hwaccel_devices</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>hwaccel_output_formats</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_hwaccel_output_formats</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>autorotate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_autorotate</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>StreamMap</name> <modifier>*</modifier></type><name>stream_maps</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_stream_maps</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AudioChannelMap</name> <modifier>*</modifier></type><name>audio_channel_maps</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>nb_audio_channel_maps</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>metadata_global_manual</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>metadata_streams_manual</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>metadata_chapters_manual</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>attachments</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_attachments</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>chapters_input_file</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>recording_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>stop_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>limit_filesize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>mux_preload</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>mux_max_delay</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>shortest</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>bitexact</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>video_disable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>audio_disable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>subtitle_disable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>data_disable</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>streamid_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_streamid_map</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>metadata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_metadata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>max_frames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_max_frames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>bitstream_filters</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_bitstream_filters</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>codec_tags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_codec_tags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>sample_fmts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_sample_fmts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>qscale</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_qscale</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>forced_key_frames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_forced_key_frames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>force_fps</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_force_fps</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>frame_aspect_ratios</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_frame_aspect_ratios</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>rc_overrides</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_rc_overrides</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>intra_matrices</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_intra_matrices</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>inter_matrices</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_inter_matrices</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>chroma_intra_matrices</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_chroma_intra_matrices</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>top_field_first</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_top_field_first</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>metadata_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_metadata_map</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>presets</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_presets</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>copy_initial_nonkeyframes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_copy_initial_nonkeyframes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>copy_prior_start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_copy_prior_start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>filters</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_filters</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>filter_scripts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_filter_scripts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>reinit_filters</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_reinit_filters</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>fix_sub_duration</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_fix_sub_duration</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>canvas_sizes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_canvas_sizes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>pass</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_pass</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>passlogfiles</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_passlogfiles</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>max_muxing_queue_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_max_muxing_queue_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>guess_layout_max</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_guess_layout_max</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>apad</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_apad</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>discard</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_discard</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>disposition</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_disposition</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>program</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_program</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>time_bases</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_time_bases</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SpecifierOpt</name> <modifier>*</modifier></type><name>enc_time_bases</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_enc_time_bases</name></decl>;</decl_stmt>
}</block></struct></type> <name>OptionsContext</name>;</typedef>

<typedef>typedef <type><struct>struct <name>InputFilter</name> <block>{
<decl_stmt><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>filter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>InputStream</name></name> <modifier>*</modifier></type><name>ist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>FilterGraph</name></name> <modifier>*</modifier></type><name>graph</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVMediaType</name></name></type> <name>type</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>frame_queue</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>format</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>, <name>height</name>;</decl_stmt>
<decl_stmt><decl><type><name>AVRational</name></type> <name>sample_aspect_ratio</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>sample_rate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>channels</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>channel_layout</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>hw_frames_ctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>eof</name></decl>;</decl_stmt>
}</block></struct></type> <name>InputFilter</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OutputFilter</name> <block>{
<decl_stmt><decl><type><name>AVFilterContext</name> <modifier>*</modifier></type><name>filter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>OutputStream</name></name> <modifier>*</modifier></type><name>ost</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>FilterGraph</name></name> <modifier>*</modifier></type><name>graph</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>AVFilterInOut</name> <modifier>*</modifier></type><name>out_tmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVMediaType</name></name></type> <name>type</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>, <name>height</name>;</decl_stmt>
<decl_stmt><decl><type><name>AVRational</name></type> <name>frame_rate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>sample_rate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>channel_layout</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>formats</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name> <modifier>*</modifier></type><name>channel_layouts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>sample_rates</name></decl>;</decl_stmt>
}</block></struct></type> <name>OutputFilter</name>;</typedef>

<typedef>typedef <type><struct>struct <name>FilterGraph</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>graph_desc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVFilterGraph</name> <modifier>*</modifier></type><name>graph</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>reconfiguration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>InputFilter</name> <modifier>*</modifier><modifier>*</modifier></type><name>inputs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_inputs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OutputFilter</name> <modifier>*</modifier><modifier>*</modifier></type><name>outputs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_outputs</name></decl>;</decl_stmt>
}</block></struct></type> <name>FilterGraph</name>;</typedef>

<typedef>typedef <type><struct>struct <name>InputStream</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>file_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>discard</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>user_set_discard</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>decoding_needed</name></decl>;</decl_stmt> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECODING_FOR_OST</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECODING_FOR_FILTER</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>dec_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVCodec</name> <modifier>*</modifier></type><name>dec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>decoded_frame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>filter_frame</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>start</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>int64_t</name></type> <name>next_dts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>dts</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int64_t</name></type> <name>next_pts</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int64_t</name></type> <name>pts</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>wrap_correction_done</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>filter_in_rescale_delta_last</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>min_pts</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int64_t</name></type> <name>max_pts</name></decl>;</decl_stmt> 



<decl_stmt><decl><type><name>int64_t</name></type> <name>cfr_next_pts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>nb_samples</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>double</name></type> <name>ts_scale</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>saw_first_ts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>decoder_opts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVRational</name></type> <name>framerate</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>top_field_first</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>guess_layout_max</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>autorotate</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>fix_sub_duration</name></decl>;</decl_stmt>
<struct>struct <block>{ 
<decl_stmt><decl><type><name>int</name></type> <name>got_output</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVSubtitle</name></type> <name>subtitle</name></decl>;</decl_stmt>
}</block> <decl><name>prev_sub</name></decl>;</struct>

<struct>struct <name>sub2video</name> <block>{
<decl_stmt><decl><type><name>int64_t</name></type> <name>last_pts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>end_pts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>sub_queue</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>w</name></decl>, <name>h</name>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>initialize</name></decl>;</decl_stmt> 
}</block> <decl><name>sub2video</name></decl>;</struct>

<decl_stmt><decl><type><name>int</name></type> <name>dr1</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>InputFilter</name> <modifier>*</modifier><modifier>*</modifier></type><name>filters</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_filters</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>reinit_filters</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>enum</name> <name>HWAccelID</name></name></type> <name>hwaccel_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVHWDeviceType</name></name></type> <name>hwaccel_device_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>hwaccel_device</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>hwaccel_output_format</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>hwaccel_ctx</name></decl>;</decl_stmt>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>hwaccel_uninit</name>)<parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>hwaccel_get_buffer</name>)<parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>hwaccel_retrieve_data</name>)<parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>hwaccel_pix_fmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>hwaccel_retrieved_pix_fmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>hw_frames_ctx</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>uint64_t</name></type> <name>data_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>nb_packets</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>frames_decoded</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>samples_decoded</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>dts_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_dts_buffer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>got_output</name></decl>;</decl_stmt>
}</block></struct></type> <name>InputStream</name>;</typedef>

<typedef>typedef <type><struct>struct <name>InputFile</name> <block>{
<decl_stmt><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>eof_reached</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>eagain</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>ist_index</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>loop</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int64_t</name></type> <name>duration</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AVRational</name></type> <name>time_base</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int64_t</name></type> <name>input_ts_offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>ts_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>last_ts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>start_time</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>seek_timestamp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>recording_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_streams</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>nb_streams_warn</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>rate_emu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>accurate_seek</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_THREADS</name></expr></cpp:if>
<decl_stmt><decl><type><name>AVThreadMessageQueue</name> <modifier>*</modifier></type><name>in_thread_queue</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>pthread_t</name></type> <name>thread</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>non_blocking</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>joined</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>thread_queue_size</name></decl>;</decl_stmt> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>InputFile</name>;</typedef>

<enum>enum <name>forced_keyframes_const</name> <block>{
<decl><name>FKF_N</name></decl>,
<decl><name>FKF_N_FORCED</name></decl>,
<decl><name>FKF_PREV_FORCED_N</name></decl>,
<decl><name>FKF_PREV_FORCED_T</name></decl>,
<decl><name>FKF_T</name></decl>,
<decl><name>FKF_NB</name></decl>
}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ABORT_ON_FLAG_EMPTY_OUTPUT</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>forced_keyframes_const_names</name><index>[]</index></name></decl>;</decl_stmt>

<typedef>typedef <type><enum>enum <block>{
<decl><name>ENCODER_FINISHED</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>MUXER_FINISHED</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
}</block></enum></type> <name>OSTFinished</name> ;</typedef>

<typedef>typedef <type><struct>struct <name>OutputStream</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>file_index</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>source_index</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>encoding_needed</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>frame_number</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>struct</name> <name>InputStream</name></name> <modifier>*</modifier></type><name>sync_ist</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int64_t</name></type> <name>sync_opts</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>int64_t</name></type> <name>first_pts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int64_t</name></type> <name>last_mux_dts</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVRational</name></type> <name>mux_timebase</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVRational</name></type> <name>enc_timebase</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>nb_bitstream_filters</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVBSFContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>bsf_ctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>enc_ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>ref_par</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>AVCodec</name> <modifier>*</modifier></type><name>enc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>max_frames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>filtered_frame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFrame</name> <modifier>*</modifier></type><name>last_frame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>last_dropped</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>last_nb0_frames</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>hwaccel_ctx</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>AVRational</name></type> <name>frame_rate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>is_cfr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>force_fps</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>top_field_first</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>rotate_overridden</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>rotate_override_value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVRational</name></type> <name>frame_aspect_ratio</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int64_t</name></type> <name>forced_kf_ref_pts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>forced_kf_pts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>forced_kf_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>forced_kf_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>forced_keyframes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVExpr</name> <modifier>*</modifier></type><name>forced_keyframes_pexpr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name><name>forced_keyframes_expr_const_values</name><index>[<expr><name>FKF_NB</name></expr>]</index></name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>audio_channels_map</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>audio_channels_mapped</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>logfile_prefix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>logfile</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OutputFilter</name> <modifier>*</modifier></type><name>filter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>avfilter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>filters</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>filters_script</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>encoder_opts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>sws_dict</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>swr_opts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>resample_opts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>apad</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OSTFinished</name></type> <name>finished</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>unavailable</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>stream_copy</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>initialized</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>inputs_done</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>attachment_filename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>copy_initial_nonkeyframes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>copy_prior_start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>disposition</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>keep_pix_fmt</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>uint64_t</name></type> <name>data_size</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>packets_written</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>frames_encoded</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>samples_encoded</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>quality</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>max_muxing_queue_size</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>AVFifoBuffer</name> <modifier>*</modifier></type><name>muxing_queue</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>pict_type</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int64_t</name></type> <name><name>error</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>OutputStream</name>;</typedef>

<typedef>typedef <type><struct>struct <name>OutputFile</name> <block>{
<decl_stmt><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>opts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ost_index</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int64_t</name></type> <name>recording_time</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int64_t</name></type> <name>start_time</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint64_t</name></type> <name>limit_filesize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>shortest</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>header_written</name></decl>;</decl_stmt>
}</block></struct></type> <name>OutputFile</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <name>InputStream</name> <modifier>*</modifier><modifier>*</modifier></type><name>input_streams</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>nb_input_streams</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>InputFile</name> <modifier>*</modifier><modifier>*</modifier></type><name>input_files</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>nb_input_files</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>OutputStream</name> <modifier>*</modifier><modifier>*</modifier></type><name>output_streams</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>nb_output_streams</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>OutputFile</name> <modifier>*</modifier><modifier>*</modifier></type><name>output_files</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>nb_output_files</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>FilterGraph</name> <modifier>*</modifier><modifier>*</modifier></type><name>filtergraphs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>nb_filtergraphs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>vstats_filename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>sdp_filename</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>float</name></type> <name>audio_drift_threshold</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>float</name></type> <name>dts_delta_threshold</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>float</name></type> <name>dts_error_threshold</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>audio_volume</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>audio_sync_method</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>video_sync_method</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>float</name></type> <name>frame_drop_threshold</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>do_benchmark</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>do_benchmark_all</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>do_deinterlace</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>do_hex_dump</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>do_pkt_dump</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>copy_ts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>start_at_zero</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>copy_tb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>debug_ts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>exit_on_error</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>abort_on_flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>print_stats</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>qp_hist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>stdin_interaction</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>frame_bits_per_raw_sample</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>AVIOContext</name> <modifier>*</modifier></type><name>progress_avio</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>float</name></type> <name>max_error_rate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>videotoolbox_pixfmt</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>filter_nbthreads</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>filter_complex_nbthreads</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>vstats_version</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>AVIOInterruptCB</name></type> <name>int_cb</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>OptionDef</name></type> <name><name>options</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>HWAccel</name></type> <name><name>hwaccels</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>AVBufferRef</name> <modifier>*</modifier></type><name>hw_device_ctx</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CONFIG_QSV</name></expr></cpp:if>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>qsv_device</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><specifier>extern</specifier> <name>HWDevice</name> <modifier>*</modifier></type><name>filter_hw_device</name></decl>;</decl_stmt>


<function_decl><type><name>void</name></type> <name>term_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>term_exit</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>reset_options</name><parameter_list>(<parameter><decl><type><name>OptionsContext</name> <modifier>*</modifier></type><name>o</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>is_input</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>show_usage</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>opt_output_file</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>optctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>remove_avoptions</name><parameter_list>(<parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>assert_avoptions</name><parameter_list>(<parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>m</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>guess_input_channel_layout</name><parameter_list>(<parameter><decl><type><name>InputStream</name> <modifier>*</modifier></type><name>ist</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>choose_pixel_fmt</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>, <parameter><decl><type><name>AVCodec</name> <modifier>*</modifier></type><name>codec</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>target</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>choose_sample_fmt</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>AVCodec</name> <modifier>*</modifier></type><name>codec</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>configure_filtergraph</name><parameter_list>(<parameter><decl><type><name>FilterGraph</name> <modifier>*</modifier></type><name>fg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>configure_output_filter</name><parameter_list>(<parameter><decl><type><name>FilterGraph</name> <modifier>*</modifier></type><name>fg</name></decl></parameter>, <parameter><decl><type><name>OutputFilter</name> <modifier>*</modifier></type><name>ofilter</name></decl></parameter>, <parameter><decl><type><name>AVFilterInOut</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>check_filter_outputs</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ist_in_filtergraph</name><parameter_list>(<parameter><decl><type><name>FilterGraph</name> <modifier>*</modifier></type><name>fg</name></decl></parameter>, <parameter><decl><type><name>InputStream</name> <modifier>*</modifier></type><name>ist</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>filtergraph_is_simple</name><parameter_list>(<parameter><decl><type><name>FilterGraph</name> <modifier>*</modifier></type><name>fg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>init_simple_filtergraph</name><parameter_list>(<parameter><decl><type><name>InputStream</name> <modifier>*</modifier></type><name>ist</name></decl></parameter>, <parameter><decl><type><name>OutputStream</name> <modifier>*</modifier></type><name>ost</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>init_complex_filtergraph</name><parameter_list>(<parameter><decl><type><name>FilterGraph</name> <modifier>*</modifier></type><name>fg</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>sub2video_update</name><parameter_list>(<parameter><decl><type><name>InputStream</name> <modifier>*</modifier></type><name>ist</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>heartbeat_pts</name></decl></parameter>, <parameter><decl><type><name>AVSubtitle</name> <modifier>*</modifier></type><name>sub</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ifilter_parameters_from_frame</name><parameter_list>(<parameter><decl><type><name>InputFilter</name> <modifier>*</modifier></type><name>ifilter</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVFrame</name> <modifier>*</modifier></type><name>frame</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ffmpeg_parse_options</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>videotoolbox_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>qsv_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>HWDevice</name> <modifier>*</modifier></type><name>hw_device_get_by_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>hw_device_init_from_string</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>, <parameter><decl><type><name>HWDevice</name> <modifier>*</modifier><modifier>*</modifier></type><name>dev</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>hw_device_free_all</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>hw_device_setup_for_decode</name><parameter_list>(<parameter><decl><type><name>InputStream</name> <modifier>*</modifier></type><name>ist</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>hw_device_setup_for_encode</name><parameter_list>(<parameter><decl><type><name>OutputStream</name> <modifier>*</modifier></type><name>ost</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>hwaccel_decode_init</name><parameter_list>(<parameter><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
