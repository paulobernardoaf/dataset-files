<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libswresample\options.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"swresample_internal.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;float.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C30DB</name></cpp:macro> <cpp:value>M_SQRT2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C15DB</name></cpp:macro> <cpp:value>1.189207115</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C__0DB</name></cpp:macro> <cpp:value>1.0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C_15DB</name></cpp:macro> <cpp:value>0.840896415</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C_30DB</name></cpp:macro> <cpp:value>M_SQRT1_2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C_45DB</name></cpp:macro> <cpp:value>0.594603558</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>C_60DB</name></cpp:macro> <cpp:value>0.5</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OFFSET</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>offsetof(SwrContext,x)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PARAM</name></cpp:macro> <cpp:value>AV_OPT_FLAG_AUDIO_PARAM</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVOption</name></type> <name><name>options</name><index>[]</index></name><init>=<expr><block>{
<expr><block>{<expr><literal type="string">"ich"</literal></expr> , <expr><literal type="string">"set input channel count"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>user_in_ch_count</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>SWR_CH_MAX</name></expr>, <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"in_channel_count"</literal></expr> , <expr><literal type="string">"set input channel count"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>user_in_ch_count</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>SWR_CH_MAX</name></expr>, <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"och"</literal></expr> , <expr><literal type="string">"set output channel count"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>user_out_ch_count</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>SWR_CH_MAX</name></expr>, <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"out_channel_count"</literal></expr> , <expr><literal type="string">"set output channel count"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>user_out_ch_count</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>SWR_CH_MAX</name></expr>, <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"uch"</literal></expr> , <expr><literal type="string">"set used channel count"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>user_used_ch_count</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>SWR_CH_MAX</name></expr>, <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"used_channel_count"</literal></expr> , <expr><literal type="string">"set used channel count"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>user_used_ch_count</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>SWR_CH_MAX</name></expr>, <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"isr"</literal></expr> , <expr><literal type="string">"set input sample rate"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>( <argument><expr><name>in_sample_rate</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"in_sample_rate"</literal></expr> , <expr><literal type="string">"set input sample rate"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>( <argument><expr><name>in_sample_rate</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"osr"</literal></expr> , <expr><literal type="string">"set output sample rate"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>out_sample_rate</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"out_sample_rate"</literal></expr> , <expr><literal type="string">"set output sample rate"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>out_sample_rate</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"isf"</literal></expr> , <expr><literal type="string">"set input sample format"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>( <argument><expr><name>in_sample_fmt</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_SAMPLE_FMT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>AV_SAMPLE_FMT_NONE</name></expr>}</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> , <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"in_sample_fmt"</literal></expr> , <expr><literal type="string">"set input sample format"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>( <argument><expr><name>in_sample_fmt</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_SAMPLE_FMT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>AV_SAMPLE_FMT_NONE</name></expr>}</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> , <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"osf"</literal></expr> , <expr><literal type="string">"set output sample format"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>out_sample_fmt</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_SAMPLE_FMT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>AV_SAMPLE_FMT_NONE</name></expr>}</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> , <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"out_sample_fmt"</literal></expr> , <expr><literal type="string">"set output sample format"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>out_sample_fmt</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_SAMPLE_FMT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>AV_SAMPLE_FMT_NONE</name></expr>}</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> , <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"tsf"</literal></expr> , <expr><literal type="string">"set internal sample format"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>user_int_sample_fmt</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_SAMPLE_FMT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>AV_SAMPLE_FMT_NONE</name></expr>}</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> , <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"internal_sample_fmt"</literal></expr> , <expr><literal type="string">"set internal sample format"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>user_int_sample_fmt</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_SAMPLE_FMT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>AV_SAMPLE_FMT_NONE</name></expr>}</block></expr>, <expr><operator>-</operator><literal type="number">1</literal></expr> , <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"icl"</literal></expr> , <expr><literal type="string">"set input channel layout"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>user_in_ch_layout</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_CHANNEL_LAYOUT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><name>INT64_MIN</name></expr>, <expr><name>INT64_MAX</name></expr> , <expr><name>PARAM</name></expr>, <expr><literal type="string">"channel_layout"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"in_channel_layout"</literal></expr> , <expr><literal type="string">"set input channel layout"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>user_in_ch_layout</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_CHANNEL_LAYOUT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><name>INT64_MIN</name></expr>, <expr><name>INT64_MAX</name></expr> , <expr><name>PARAM</name></expr>, <expr><literal type="string">"channel_layout"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"ocl"</literal></expr> , <expr><literal type="string">"set output channel layout"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>user_out_ch_layout</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_CHANNEL_LAYOUT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><name>INT64_MIN</name></expr>, <expr><name>INT64_MAX</name></expr> , <expr><name>PARAM</name></expr>, <expr><literal type="string">"channel_layout"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"out_channel_layout"</literal></expr> , <expr><literal type="string">"set output channel layout"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>user_out_ch_layout</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_CHANNEL_LAYOUT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><name>INT64_MIN</name></expr>, <expr><name>INT64_MAX</name></expr> , <expr><name>PARAM</name></expr>, <expr><literal type="string">"channel_layout"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"clev"</literal></expr> , <expr><literal type="string">"set center mix level"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>clev</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><name>C_30DB</name></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">32</literal></expr> , <expr><literal type="number">32</literal></expr> , <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"center_mix_level"</literal></expr> , <expr><literal type="string">"set center mix level"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>clev</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><name>C_30DB</name></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">32</literal></expr> , <expr><literal type="number">32</literal></expr> , <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"slev"</literal></expr> , <expr><literal type="string">"set surround mix level"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>slev</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><name>C_30DB</name></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">32</literal></expr> , <expr><literal type="number">32</literal></expr> , <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"surround_mix_level"</literal></expr> , <expr><literal type="string">"set surround mix Level"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>slev</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><name>C_30DB</name></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">32</literal></expr> , <expr><literal type="number">32</literal></expr> , <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"lfe_mix_level"</literal></expr> , <expr><literal type="string">"set LFE mix level"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>lfe_mix_level</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">32</literal></expr> , <expr><literal type="number">32</literal></expr> , <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"rmvol"</literal></expr> , <expr><literal type="string">"set rematrix volume"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>rematrix_volume</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><literal type="number">1.0</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1000</literal></expr> , <expr><literal type="number">1000</literal></expr> , <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"rematrix_volume"</literal></expr> , <expr><literal type="string">"set rematrix volume"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>rematrix_volume</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><literal type="number">1.0</literal></expr> }</block></expr>, <expr><operator>-</operator><literal type="number">1000</literal></expr> , <expr><literal type="number">1000</literal></expr> , <expr><name>PARAM</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"rematrix_maxval"</literal></expr> , <expr><literal type="string">"set rematrix maxval"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>rematrix_maxval</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><literal type="number">0.0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><literal type="number">1000</literal></expr> , <expr><name>PARAM</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"flags"</literal></expr> , <expr><literal type="string">"set flags"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>flags</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>UINT_MAX</name></expr> , <expr><name>PARAM</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"swr_flags"</literal></expr> , <expr><literal type="string">"set flags"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>flags</name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLAGS</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>UINT_MAX</name></expr> , <expr><name>PARAM</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"res"</literal></expr> , <expr><literal type="string">"force resampling"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>SWR_FLAG_RESAMPLE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr>, <expr><literal type="string">"flags"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"dither_scale"</literal></expr> , <expr><literal type="string">"set dither scale"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name><name>dither</name><operator>.</operator><name>scale</name></name></expr></argument> )</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_FLOAT</name></expr>, <expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"dither_method"</literal></expr> , <expr><literal type="string">"set dither method"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>user_dither_method</name></expr></argument>)</argument_list></call></expr>,<expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>SWR_DITHER_NB</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"rectangular"</literal></expr> , <expr><literal type="string">"select rectangular dither"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>SWR_DITHER_RECTANGULAR</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"triangular"</literal></expr> , <expr><literal type="string">"select triangular dither"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>SWR_DITHER_TRIANGULAR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"triangular_hp"</literal></expr> , <expr><literal type="string">"select triangular dither with high pass"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>SWR_DITHER_TRIANGULAR_HIGHPASS</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"lipshitz"</literal></expr> , <expr><literal type="string">"select Lipshitz noise shaping dither"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>SWR_DITHER_NS_LIPSHITZ</name></expr>}</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"shibata"</literal></expr> , <expr><literal type="string">"select Shibata noise shaping dither"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>SWR_DITHER_NS_SHIBATA</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"low_shibata"</literal></expr> , <expr><literal type="string">"select low Shibata noise shaping dither"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>SWR_DITHER_NS_LOW_SHIBATA</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"high_shibata"</literal></expr> , <expr><literal type="string">"select high Shibata noise shaping dither"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>SWR_DITHER_NS_HIGH_SHIBATA</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"f_weighted"</literal></expr> , <expr><literal type="string">"select f-weighted noise shaping dither"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>SWR_DITHER_NS_F_WEIGHTED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"modified_e_weighted"</literal></expr> , <expr><literal type="string">"select modified-e-weighted noise shaping dither"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>SWR_DITHER_NS_MODIFIED_E_WEIGHTED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"improved_e_weighted"</literal></expr> , <expr><literal type="string">"select improved-e-weighted noise shaping dither"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>SWR_DITHER_NS_IMPROVED_E_WEIGHTED</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"dither_method"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"filter_size"</literal></expr> , <expr><literal type="string">"set swr resampling filter size"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>filter_size</name></expr></argument>)</argument_list></call></expr> , <expr><name>AV_OPT_TYPE_INT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">32</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"phase_shift"</literal></expr> , <expr><literal type="string">"set swr resampling phase shift"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>phase_shift</name></expr></argument>)</argument_list></call></expr> , <expr><name>AV_OPT_TYPE_INT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">10</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><literal type="number">24</literal></expr> , <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"linear_interp"</literal></expr> , <expr><literal type="string">"enable linear interpolation"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>linear_interp</name></expr></argument>)</argument_list></call></expr> , <expr><name>AV_OPT_TYPE_BOOL</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><literal type="number">1</literal></expr> , <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"exact_rational"</literal></expr> , <expr><literal type="string">"enable exact rational"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>exact_rational</name></expr></argument>)</argument_list></call></expr> , <expr><name>AV_OPT_TYPE_BOOL</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><literal type="number">1</literal></expr> , <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"cutoff"</literal></expr> , <expr><literal type="string">"set cutoff frequency ratio"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>cutoff</name></expr></argument>)</argument_list></call></expr> , <expr><name>AV_OPT_TYPE_DOUBLE</name></expr>,<expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><literal type="number">0.</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><literal type="number">1</literal></expr> , <expr><name>PARAM</name></expr> }</block></expr>,


<expr><block>{<expr><literal type="string">"resample_cutoff"</literal></expr> , <expr><literal type="string">"set cutoff frequency ratio"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>cutoff</name></expr></argument>)</argument_list></call></expr> , <expr><name>AV_OPT_TYPE_DOUBLE</name></expr>,<expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><literal type="number">0.</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><literal type="number">1</literal></expr> , <expr><name>PARAM</name></expr> }</block></expr>,

<expr><block>{<expr><literal type="string">"resampler"</literal></expr> , <expr><literal type="string">"set resampling Engine"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>engine</name></expr></argument>)</argument_list></call></expr> , <expr><name>AV_OPT_TYPE_INT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>SWR_ENGINE_NB</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"resampler"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"swr"</literal></expr> , <expr><literal type="string">"select SW Resampler"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>SWR_ENGINE_SWR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr>, <expr><literal type="string">"resampler"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"soxr"</literal></expr> , <expr><literal type="string">"select SoX Resampler"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>SWR_ENGINE_SOXR</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr>, <expr><literal type="string">"resampler"</literal></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"precision"</literal></expr> , <expr><literal type="string">"set soxr resampling precision (in bits)"</literal></expr>
, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>precision</name></expr></argument>)</argument_list></call></expr> , <expr><name>AV_OPT_TYPE_DOUBLE</name></expr>,<expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><literal type="number">20.0</literal></expr> }</block></expr>, <expr><literal type="number">15.0</literal></expr> , <expr><literal type="number">33.0</literal></expr> , <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"cheby"</literal></expr> , <expr><literal type="string">"enable soxr Chebyshev passband &amp; higher-precision irrational ratio approximation"</literal></expr>
, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>cheby</name></expr></argument>)</argument_list></call></expr> , <expr><name>AV_OPT_TYPE_BOOL</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><literal type="number">1</literal></expr> , <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"min_comp"</literal></expr> , <expr><literal type="string">"set minimum difference between timestamps and audio data (in seconds) below which no timestamp compensation of either kind is applied"</literal></expr>
, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>min_compensation</name></expr></argument>)</argument_list></call></expr>,<expr><name>AV_OPT_TYPE_FLOAT</name></expr> ,<expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><name>FLT_MAX</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>FLT_MAX</name></expr> , <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"min_hard_comp"</literal></expr> , <expr><literal type="string">"set minimum difference between timestamps and audio data (in seconds) to trigger padding/trimming the data."</literal></expr>
, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>min_hard_compensation</name></expr></argument>)</argument_list></call></expr>,<expr><name>AV_OPT_TYPE_FLOAT</name></expr> ,<expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><literal type="number">0.1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"comp_duration"</literal></expr> , <expr><literal type="string">"set duration (in seconds) over which data is stretched/squeezed to make it match the timestamps."</literal></expr>
, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>soft_compensation_duration</name></expr></argument>)</argument_list></call></expr>,<expr><name>AV_OPT_TYPE_FLOAT</name></expr> ,<expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"max_soft_comp"</literal></expr> , <expr><literal type="string">"set maximum factor by which data is stretched/squeezed to make it match the timestamps."</literal></expr>
, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>max_soft_compensation</name></expr></argument>)</argument_list></call></expr>,<expr><name>AV_OPT_TYPE_FLOAT</name></expr> ,<expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"async"</literal></expr> , <expr><literal type="string">"simplified 1 parameter audio timestamp matching, 0(disabled), 1(filling and trimming), &gt;1(maximum stretch/squeeze in samples per second)"</literal></expr>
, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>async</name></expr></argument>)</argument_list></call></expr> , <expr><name>AV_OPT_TYPE_FLOAT</name></expr> ,<expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr> , <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="string">"first_pts"</literal></expr> , <expr><literal type="string">"Assume the first pts should be this value (in samples)."</literal></expr>
, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>firstpts_in_samples</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr> ,<expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><name>AV_NOPTS_VALUE</name></expr> }</block></expr>, <expr><name>INT64_MIN</name></expr>,<expr><name>INT64_MAX</name></expr>, <expr><name>PARAM</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"matrix_encoding"</literal></expr> , <expr><literal type="string">"set matrixed stereo encoding"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>matrix_encoding</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr> ,<expr><block>{<expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_MATRIX_ENCODING_NONE</name></expr>}</block></expr>, <expr><name>AV_MATRIX_ENCODING_NONE</name></expr>, <expr><name>AV_MATRIX_ENCODING_NB</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"matrix_encoding"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"none"</literal></expr>, <expr><literal type="string">"select none"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_MATRIX_ENCODING_NONE</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"matrix_encoding"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"dolby"</literal></expr>, <expr><literal type="string">"select Dolby"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_MATRIX_ENCODING_DOLBY</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"matrix_encoding"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"dplii"</literal></expr>, <expr><literal type="string">"select Dolby Pro Logic II"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>AV_MATRIX_ENCODING_DPLII</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"matrix_encoding"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"filter_type"</literal></expr> , <expr><literal type="string">"select swr filter type"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>filter_type</name></expr></argument>)</argument_list></call></expr> , <expr><name>AV_OPT_TYPE_INT</name></expr> , <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWR_FILTER_TYPE_KAISER</name></expr> }</block></expr>, <expr><name>SWR_FILTER_TYPE_CUBIC</name></expr>, <expr><name>SWR_FILTER_TYPE_KAISER</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"filter_type"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"cubic"</literal></expr> , <expr><literal type="string">"select cubic"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWR_FILTER_TYPE_CUBIC</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"filter_type"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"blackman_nuttall"</literal></expr>, <expr><literal type="string">"select Blackman Nuttall windowed sinc"</literal></expr>, <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWR_FILTER_TYPE_BLACKMAN_NUTTALL</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"filter_type"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"kaiser"</literal></expr> , <expr><literal type="string">"select Kaiser windowed sinc"</literal></expr> , <expr><literal type="number">0</literal></expr> , <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>SWR_FILTER_TYPE_KAISER</name></expr> }</block></expr>, <expr><name>INT_MIN</name></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>PARAM</name></expr>, <expr><literal type="string">"filter_type"</literal></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"kaiser_beta"</literal></expr> , <expr><literal type="string">"set swr Kaiser window beta"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>kaiser_beta</name></expr></argument>)</argument_list></call></expr> , <expr><name>AV_OPT_TYPE_DOUBLE</name></expr> , <expr><block>{<expr><operator>.</operator><name>dbl</name><operator>=</operator><literal type="number">9</literal></expr> }</block></expr>, <expr><literal type="number">2</literal></expr> , <expr><literal type="number">16</literal></expr> , <expr><name>PARAM</name></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"output_sample_bits"</literal></expr> , <expr><literal type="string">"set swr number of output sample bits"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name><name>dither</name><operator>.</operator><name>output_sample_bits</name></name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr> , <expr><block>{<expr><operator>.</operator><name>i64</name><operator>=</operator><literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr> , <expr><literal type="number">64</literal></expr> , <expr><name>PARAM</name></expr> }</block></expr>,
<expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>context_to_name</name><parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>ptr</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><literal type="string">"SWR"</literal></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVClass</name></type> <name>av_class</name> <init>= <expr><block>{
<expr><operator>.</operator><name>class_name</name> <operator>=</operator> <literal type="string">"SWResampler"</literal></expr>,
<expr><operator>.</operator><name>item_name</name> <operator>=</operator> <name>context_to_name</name></expr>,
<expr><operator>.</operator><name>option</name> <operator>=</operator> <name>options</name></expr>,
<expr><operator>.</operator><name>version</name> <operator>=</operator> <name>LIBAVUTIL_VERSION_INT</name></expr>,
<expr><operator>.</operator><name>log_level_offset_offset</name> <operator>=</operator> <call><name>OFFSET</name><argument_list>(<argument><expr><name>log_level_offset</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name>parent_log_context_offset</name> <operator>=</operator> <call><name>OFFSET</name><argument_list>(<argument><expr><name>log_ctx</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name>category</name> <operator>=</operator> <name>AV_CLASS_CATEGORY_SWRESAMPLER</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>swr_get_class</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>&amp;</operator><name>av_class</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>av_cold</name> <name><name>struct</name> <name>SwrContext</name></name> <modifier>*</modifier></type><name>swr_alloc</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list><block>{<block_content>
<decl_stmt><decl><type><name>SwrContext</name> <modifier>*</modifier></type><name>s</name><init>= <expr><call><name>av_mallocz</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>SwrContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><name>s</name></expr>)</condition><block>{<block_content>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>av_class</name></name><operator>=</operator> <operator>&amp;</operator><name>av_class</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>av_opt_set_defaults</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>s</name></expr>;</return>
</block_content>}</block></function>
</unit>
