<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libswresample\x86\resample_init.c">


























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/x86/cpu.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libswresample/resample.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RESAMPLE_FUNCS</name><parameter_list>(<parameter><type><name>type</name></type></parameter>, <parameter><type><name>opt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>int ff_resample_common_##type##_##opt(ResampleContext *c, void *dst, const void *src, int sz, int upd); int ff_resample_linear_##type##_##opt(ResampleContext *c, void *dst, const void *src, int sz, int upd)</cpp:value></cpp:define>





<expr_stmt><expr><call><name>RESAMPLE_FUNCS</name><argument_list>(<argument><expr><name>int16</name></expr></argument>, <argument><expr><name>mmxext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RESAMPLE_FUNCS</name><argument_list>(<argument><expr><name>int16</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RESAMPLE_FUNCS</name><argument_list>(<argument><expr><name>int16</name></expr></argument>, <argument><expr><name>xop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RESAMPLE_FUNCS</name><argument_list>(<argument><expr><name>float</name></expr></argument>, <argument><expr><name>sse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RESAMPLE_FUNCS</name><argument_list>(<argument><expr><name>float</name></expr></argument>, <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RESAMPLE_FUNCS</name><argument_list>(<argument><expr><name>float</name></expr></argument>, <argument><expr><name>fma3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RESAMPLE_FUNCS</name><argument_list>(<argument><expr><name>float</name></expr></argument>, <argument><expr><name>fma4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RESAMPLE_FUNCS</name><argument_list>(<argument><expr><name>double</name></expr></argument>, <argument><expr><name>sse2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RESAMPLE_FUNCS</name><argument_list>(<argument><expr><name>double</name></expr></argument>, <argument><expr><name>avx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RESAMPLE_FUNCS</name><argument_list>(<argument><expr><name>double</name></expr></argument>, <argument><expr><name>fma3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>av_cold</name> <name>void</name></type> <name>swri_resample_dsp_x86_init</name><parameter_list>(<parameter><decl><type><name>ResampleContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name> <name>av_unused</name></type> <name>mm_flags</name> <init>= <expr><call><name>av_get_cpu_flags</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<switch>switch<condition>(<expr><name><name>c</name><operator>-&gt;</operator><name>format</name></name></expr>)</condition><block>{<block_content>
<case>case <expr><name>AV_SAMPLE_FMT_S16P</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><name>ARCH_X86_32</name> <operator>&amp;&amp;</operator> <call><name>EXTERNAL_MMXEXT</name><argument_list>(<argument><expr><name>mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_linear</name></name> <operator>=</operator> <name>ff_resample_linear_int16_mmxext</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_common</name></name> <operator>=</operator> <name>ff_resample_common_int16_mmxext</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_linear</name></name> <operator>=</operator> <name>ff_resample_linear_int16_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_common</name></name> <operator>=</operator> <name>ff_resample_common_int16_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_XOP</name><argument_list>(<argument><expr><name>mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_linear</name></name> <operator>=</operator> <name>ff_resample_linear_int16_xop</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_common</name></name> <operator>=</operator> <name>ff_resample_common_int16_xop</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>AV_SAMPLE_FMT_FLTP</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE</name><argument_list>(<argument><expr><name>mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_linear</name></name> <operator>=</operator> <name>ff_resample_linear_float_sse</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_common</name></name> <operator>=</operator> <name>ff_resample_common_float_sse</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX_FAST</name><argument_list>(<argument><expr><name>mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_linear</name></name> <operator>=</operator> <name>ff_resample_linear_float_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_common</name></name> <operator>=</operator> <name>ff_resample_common_float_avx</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_FMA3_FAST</name><argument_list>(<argument><expr><name>mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_linear</name></name> <operator>=</operator> <name>ff_resample_linear_float_fma3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_common</name></name> <operator>=</operator> <name>ff_resample_common_float_fma3</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_FMA4</name><argument_list>(<argument><expr><name>mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_linear</name></name> <operator>=</operator> <name>ff_resample_linear_float_fma4</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_common</name></name> <operator>=</operator> <name>ff_resample_common_float_fma4</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>AV_SAMPLE_FMT_DBLP</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_SSE2</name><argument_list>(<argument><expr><name>mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_linear</name></name> <operator>=</operator> <name>ff_resample_linear_double_sse2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_common</name></name> <operator>=</operator> <name>ff_resample_common_double_sse2</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_AVX_FAST</name><argument_list>(<argument><expr><name>mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_linear</name></name> <operator>=</operator> <name>ff_resample_linear_double_avx</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_common</name></name> <operator>=</operator> <name>ff_resample_common_double_avx</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>EXTERNAL_FMA3_FAST</name><argument_list>(<argument><expr><name>mm_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_linear</name></name> <operator>=</operator> <name>ff_resample_linear_double_fma3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><operator>-&gt;</operator><name>dsp</name><operator>.</operator><name>resample_common</name></name> <operator>=</operator> <name>ff_resample_common_double_fma3</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
</block_content>}</block></switch>
</block_content>}</block></function>
</unit>
