<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavdevice\decklink_dec_c.c">





















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavformat/avformat.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"decklink_common_c.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"decklink_dec.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OFFSET</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>offsetof(struct decklink_cctx, x)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEC</name></cpp:macro> <cpp:value>AV_OPT_FLAG_DECODING_PARAM</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVOption</name></type> <name><name>options</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"list_devices"</literal></expr>, <expr><literal type="string">"list available devices"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>list_devices</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr> , <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>DEC</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"list_formats"</literal></expr>, <expr><literal type="string">"list supported formats"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>list_formats</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr> , <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>DEC</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"format_code"</literal></expr>, <expr><literal type="string">"set format by fourcc"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>format_code</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_STRING</name></expr>, <expr><block>{ <expr><operator>.</operator><name>str</name> <operator>=</operator> <name>NULL</name></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"raw_format"</literal></expr>, <expr><literal type="string">"pixel format to be returned by the card when capturing"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>raw_format</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <macro><name>MKBETAG</name><argument_list>(<argument><literal type="char">'2'</literal></argument>,<argument><literal type="char">'v'</literal></argument>,<argument><literal type="char">'u'</literal></argument>,<argument><literal type="char">'y'</literal></argument>)</argument_list></macro></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>UINT_MAX</name></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"raw_format"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"uyvy422"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <macro><name>MKBETAG</name><argument_list>(<argument><literal type="char">'2'</literal></argument>,<argument><literal type="char">'v'</literal></argument>,<argument><literal type="char">'u'</literal></argument>,<argument><literal type="char">'y'</literal></argument>)</argument_list></macro></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"raw_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"yuv422p10"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <macro><name>MKBETAG</name><argument_list>(<argument><literal type="char">'v'</literal></argument>,<argument><literal type="char">'2'</literal></argument>,<argument><literal type="char">'1'</literal></argument>,<argument><literal type="char">'0'</literal></argument>)</argument_list></macro></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"raw_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"argb"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">32</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"raw_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"bgra"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <macro><name>MKBETAG</name><argument_list>(<argument><literal type="char">'B'</literal></argument>,<argument><literal type="char">'G'</literal></argument>,<argument><literal type="char">'R'</literal></argument>,<argument><literal type="char">'A'</literal></argument>)</argument_list></macro></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"raw_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"rgb10"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <macro><name>MKBETAG</name><argument_list>(<argument><literal type="char">'r'</literal></argument>,<argument><literal type="char">'2'</literal></argument>,<argument><literal type="char">'1'</literal></argument>,<argument><literal type="char">'0'</literal></argument>)</argument_list></macro></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"raw_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"teletext_lines"</literal></expr>, <expr><literal type="string">"teletext lines bitmask"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>teletext_lines</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0x7ffffffffLL</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"teletext_lines"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"standard"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0x7fff9fffeLL</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"teletext_lines"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"all"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0x7ffffffffLL</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"teletext_lines"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"channels"</literal></expr>, <expr><literal type="string">"number of audio channels"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>audio_channels</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr> , <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">2</literal></expr> }</block></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><name>DEC</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"duplex_mode"</literal></expr>, <expr><literal type="string">"duplex mode"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>duplex_mode</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"duplex_mode"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"unset"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"duplex_mode"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"half"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"duplex_mode"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"full"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">2</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"duplex_mode"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"timecode_format"</literal></expr>, <expr><literal type="string">"timecode format"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>tc_format</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"tc_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"none"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"tc_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"rp188vitc"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"tc_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"rp188vitc2"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">2</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"tc_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"rp188ltc"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">3</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"tc_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"rp188any"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">4</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"tc_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"vitc"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">5</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"tc_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"vitc2"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">6</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"tc_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"serial"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">7</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"tc_format"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"video_input"</literal></expr>, <expr><literal type="string">"video input"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>video_input</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"video_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"unset"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"video_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"sdi"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"video_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"hdmi"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">2</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"video_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"optical_sdi"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">3</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"video_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"component"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">4</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"video_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"composite"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">5</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"video_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"s_video"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">6</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"video_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"audio_input"</literal></expr>, <expr><literal type="string">"audio input"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>audio_input</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"audio_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"unset"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"audio_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"embedded"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"audio_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"aes_ebu"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">2</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"audio_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"analog"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">3</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"audio_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"analog_xlr"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">4</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"audio_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"analog_rca"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">5</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"audio_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"microphone"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">6</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"audio_input"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"audio_pts"</literal></expr>, <expr><literal type="string">"audio pts source"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>audio_pts_source</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PTS_SRC_AUDIO</name></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>PTS_SRC_NB</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"pts_source"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"video_pts"</literal></expr>, <expr><literal type="string">"video pts source"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>video_pts_source</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PTS_SRC_VIDEO</name></expr> }</block></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>PTS_SRC_NB</name><operator>-</operator><literal type="number">1</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"pts_source"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"audio"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PTS_SRC_AUDIO</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"pts_source"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"video"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PTS_SRC_VIDEO</name></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"pts_source"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"reference"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PTS_SRC_REFERENCE</name></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"pts_source"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"wallclock"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PTS_SRC_WALLCLOCK</name></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"pts_source"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"abs_wallclock"</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>AV_OPT_TYPE_CONST</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <name>PTS_SRC_ABS_WALLCLOCK</name></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>DEC</name></expr>, <expr><literal type="string">"pts_source"</literal></expr>}</block></expr>,
<expr><block>{ <expr><literal type="string">"draw_bars"</literal></expr>, <expr><literal type="string">"draw bars on signal loss"</literal></expr> , <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>draw_bars</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>DEC</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"queue_size"</literal></expr>, <expr><literal type="string">"input queue buffer size"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>queue_size</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT64</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <operator>(</operator><literal type="number">1024</literal> <operator>*</operator> <literal type="number">1024</literal> <operator>*</operator> <literal type="number">1024</literal><operator>)</operator></expr>}</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT64_MAX</name></expr>, <expr><name>DEC</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"audio_depth"</literal></expr>, <expr><literal type="string">"audio bitdepth (16 or 32)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>audio_depth</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">16</literal></expr>}</block></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><name>DEC</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"decklink_copyts"</literal></expr>, <expr><literal type="string">"copy timestamps, do not remove the initial offset"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>copyts</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>DEC</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"timestamp_align"</literal></expr>, <expr><literal type="string">"capture start time alignment (in seconds)"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>timestamp_align</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_DURATION</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>INT_MAX</name></expr>, <expr><name>DEC</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"wait_for_tc"</literal></expr>, <expr><literal type="string">"drop frames till a frame with timecode is received. TC format must be set"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>wait_for_tc</name></expr></argument>)</argument_list></call></expr>, <expr><name>AV_OPT_TYPE_BOOL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>DEC</name></expr> }</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVClass</name></type> <name>decklink_demuxer_class</name> <init>= <expr><block>{
<expr><operator>.</operator><name>class_name</name> <operator>=</operator> <literal type="string">"Blackmagic DeckLink indev"</literal></expr>,
<expr><operator>.</operator><name>item_name</name> <operator>=</operator> <name>av_default_item_name</name></expr>,
<expr><operator>.</operator><name>option</name> <operator>=</operator> <name>options</name></expr>,
<expr><operator>.</operator><name>version</name> <operator>=</operator> <name>LIBAVUTIL_VERSION_INT</name></expr>,
<expr><operator>.</operator><name>category</name> <operator>=</operator> <name>AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVInputFormat</name></type> <name>ff_decklink_demuxer</name> <init>= <expr><block>{
<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"decklink"</literal></expr>,
<expr><operator>.</operator><name>long_name</name> <operator>=</operator> <call><name>NULL_IF_CONFIG_SMALL</name><argument_list>(<argument><expr><literal type="string">"Blackmagic DeckLink input"</literal></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AVFMT_NOFILE</name></expr>,
<expr><operator>.</operator><name>priv_class</name> <operator>=</operator> <operator>&amp;</operator><name>decklink_demuxer_class</name></expr>,
<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr>struct <name>decklink_cctx</name></expr></argument>)</argument_list></sizeof></expr>,
<expr><operator>.</operator><name>get_device_list</name> <operator>=</operator> <name>ff_decklink_list_input_devices</name></expr>,
<expr><operator>.</operator><name>read_header</name> <operator>=</operator> <name>ff_decklink_read_header</name></expr>,
<expr><operator>.</operator><name>read_packet</name> <operator>=</operator> <name>ff_decklink_read_packet</name></expr>,
<expr><operator>.</operator><name>read_close</name> <operator>=</operator> <name>ff_decklink_read_close</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
</unit>
