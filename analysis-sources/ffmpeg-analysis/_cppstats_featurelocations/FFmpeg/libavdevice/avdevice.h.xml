<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavdevice\avdevice.h">

















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVDEVICE_AVDEVICE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVDEVICE_AVDEVICE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"version.h"</cpp:file></cpp:include>

























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/log.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/dict.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavformat/avformat.h"</cpp:file></cpp:include>




<function_decl><type><name>unsigned</name></type> <name>avdevice_version</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>avdevice_configuration</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>avdevice_license</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>avdevice_register_all</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>AVInputFormat</name> <modifier>*</modifier></type><name>av_input_audio_device_next</name><parameter_list>(<parameter><decl><type><name>AVInputFormat</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>AVInputFormat</name> <modifier>*</modifier></type><name>av_input_video_device_next</name><parameter_list>(<parameter><decl><type><name>AVInputFormat</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>AVOutputFormat</name> <modifier>*</modifier></type><name>av_output_audio_device_next</name><parameter_list>(<parameter><decl><type><name>AVOutputFormat</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>AVOutputFormat</name> <modifier>*</modifier></type><name>av_output_video_device_next</name><parameter_list>(<parameter><decl><type><name>AVOutputFormat</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>AVDeviceRect</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>y</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>width</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>height</name></decl>;</decl_stmt> 
}</block></struct></type> <name>AVDeviceRect</name>;</typedef>




<enum>enum <name>AVAppToDevMessageType</name> <block>{



<decl><name>AV_APP_TO_DEV_NONE</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'N'</literal></expr></argument>,<argument><expr><literal type="char">'O'</literal></expr></argument>,<argument><expr><literal type="char">'N'</literal></expr></argument>,<argument><expr><literal type="char">'E'</literal></expr></argument>)</argument_list></call></expr></init></decl>,










<decl><name>AV_APP_TO_DEV_WINDOW_SIZE</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'G'</literal></expr></argument>,<argument><expr><literal type="char">'E'</literal></expr></argument>,<argument><expr><literal type="char">'O'</literal></expr></argument>,<argument><expr><literal type="char">'M'</literal></expr></argument>)</argument_list></call></expr></init></decl>,









<decl><name>AV_APP_TO_DEV_WINDOW_REPAINT</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'R'</literal></expr></argument>,<argument><expr><literal type="char">'E'</literal></expr></argument>,<argument><expr><literal type="char">'P'</literal></expr></argument>,<argument><expr><literal type="char">'A'</literal></expr></argument>)</argument_list></call></expr></init></decl>,










<decl><name>AV_APP_TO_DEV_PAUSE</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'P'</literal></expr></argument>, <argument><expr><literal type="char">'A'</literal></expr></argument>, <argument><expr><literal type="char">'U'</literal></expr></argument>, <argument><expr><literal type="char">' '</literal></expr></argument>)</argument_list></call></expr></init></decl>,
<decl><name>AV_APP_TO_DEV_PLAY</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'P'</literal></expr></argument>, <argument><expr><literal type="char">'L'</literal></expr></argument>, <argument><expr><literal type="char">'A'</literal></expr></argument>, <argument><expr><literal type="char">'Y'</literal></expr></argument>)</argument_list></call></expr></init></decl>,
<decl><name>AV_APP_TO_DEV_TOGGLE_PAUSE</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'P'</literal></expr></argument>, <argument><expr><literal type="char">'A'</literal></expr></argument>, <argument><expr><literal type="char">'U'</literal></expr></argument>, <argument><expr><literal type="char">'T'</literal></expr></argument>)</argument_list></call></expr></init></decl>,










<decl><name>AV_APP_TO_DEV_SET_VOLUME</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'S'</literal></expr></argument>, <argument><expr><literal type="char">'V'</literal></expr></argument>, <argument><expr><literal type="char">'O'</literal></expr></argument>, <argument><expr><literal type="char">'L'</literal></expr></argument>)</argument_list></call></expr></init></decl>,










<decl><name>AV_APP_TO_DEV_MUTE</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">' '</literal></expr></argument>, <argument><expr><literal type="char">'M'</literal></expr></argument>, <argument><expr><literal type="char">'U'</literal></expr></argument>, <argument><expr><literal type="char">'T'</literal></expr></argument>)</argument_list></call></expr></init></decl>,
<decl><name>AV_APP_TO_DEV_UNMUTE</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'U'</literal></expr></argument>, <argument><expr><literal type="char">'M'</literal></expr></argument>, <argument><expr><literal type="char">'U'</literal></expr></argument>, <argument><expr><literal type="char">'T'</literal></expr></argument>)</argument_list></call></expr></init></decl>,
<decl><name>AV_APP_TO_DEV_TOGGLE_MUTE</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'T'</literal></expr></argument>, <argument><expr><literal type="char">'M'</literal></expr></argument>, <argument><expr><literal type="char">'U'</literal></expr></argument>, <argument><expr><literal type="char">'T'</literal></expr></argument>)</argument_list></call></expr></init></decl>,









<decl><name>AV_APP_TO_DEV_GET_VOLUME</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'G'</literal></expr></argument>, <argument><expr><literal type="char">'V'</literal></expr></argument>, <argument><expr><literal type="char">'O'</literal></expr></argument>, <argument><expr><literal type="char">'L'</literal></expr></argument>)</argument_list></call></expr></init></decl>,
<decl><name>AV_APP_TO_DEV_GET_MUTE</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'G'</literal></expr></argument>, <argument><expr><literal type="char">'M'</literal></expr></argument>, <argument><expr><literal type="char">'U'</literal></expr></argument>, <argument><expr><literal type="char">'T'</literal></expr></argument>)</argument_list></call></expr></init></decl>,
}</block>;</enum>




<enum>enum <name>AVDevToAppMessageType</name> <block>{



<decl><name>AV_DEV_TO_APP_NONE</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'N'</literal></expr></argument>,<argument><expr><literal type="char">'O'</literal></expr></argument>,<argument><expr><literal type="char">'N'</literal></expr></argument>,<argument><expr><literal type="char">'E'</literal></expr></argument>)</argument_list></call></expr></init></decl>,















<decl><name>AV_DEV_TO_APP_CREATE_WINDOW_BUFFER</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'B'</literal></expr></argument>,<argument><expr><literal type="char">'C'</literal></expr></argument>,<argument><expr><literal type="char">'R'</literal></expr></argument>,<argument><expr><literal type="char">'E'</literal></expr></argument>)</argument_list></call></expr></init></decl>,










<decl><name>AV_DEV_TO_APP_PREPARE_WINDOW_BUFFER</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'B'</literal></expr></argument>,<argument><expr><literal type="char">'P'</literal></expr></argument>,<argument><expr><literal type="char">'R'</literal></expr></argument>,<argument><expr><literal type="char">'E'</literal></expr></argument>)</argument_list></call></expr></init></decl>,










<decl><name>AV_DEV_TO_APP_DISPLAY_WINDOW_BUFFER</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'B'</literal></expr></argument>,<argument><expr><literal type="char">'D'</literal></expr></argument>,<argument><expr><literal type="char">'I'</literal></expr></argument>,<argument><expr><literal type="char">'S'</literal></expr></argument>)</argument_list></call></expr></init></decl>,










<decl><name>AV_DEV_TO_APP_DESTROY_WINDOW_BUFFER</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'B'</literal></expr></argument>,<argument><expr><literal type="char">'D'</literal></expr></argument>,<argument><expr><literal type="char">'E'</literal></expr></argument>,<argument><expr><literal type="char">'S'</literal></expr></argument>)</argument_list></call></expr></init></decl>,








<decl><name>AV_DEV_TO_APP_BUFFER_OVERFLOW</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'B'</literal></expr></argument>,<argument><expr><literal type="char">'O'</literal></expr></argument>,<argument><expr><literal type="char">'F'</literal></expr></argument>,<argument><expr><literal type="char">'L'</literal></expr></argument>)</argument_list></call></expr></init></decl>,
<decl><name>AV_DEV_TO_APP_BUFFER_UNDERFLOW</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'B'</literal></expr></argument>,<argument><expr><literal type="char">'U'</literal></expr></argument>,<argument><expr><literal type="char">'F'</literal></expr></argument>,<argument><expr><literal type="char">'L'</literal></expr></argument>)</argument_list></call></expr></init></decl>,












<decl><name>AV_DEV_TO_APP_BUFFER_READABLE</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'B'</literal></expr></argument>,<argument><expr><literal type="char">'R'</literal></expr></argument>,<argument><expr><literal type="char">'D'</literal></expr></argument>,<argument><expr><literal type="char">' '</literal></expr></argument>)</argument_list></call></expr></init></decl>,
<decl><name>AV_DEV_TO_APP_BUFFER_WRITABLE</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'B'</literal></expr></argument>,<argument><expr><literal type="char">'W'</literal></expr></argument>,<argument><expr><literal type="char">'R'</literal></expr></argument>,<argument><expr><literal type="char">' '</literal></expr></argument>)</argument_list></call></expr></init></decl>,








<decl><name>AV_DEV_TO_APP_MUTE_STATE_CHANGED</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'C'</literal></expr></argument>,<argument><expr><literal type="char">'M'</literal></expr></argument>,<argument><expr><literal type="char">'U'</literal></expr></argument>,<argument><expr><literal type="char">'T'</literal></expr></argument>)</argument_list></call></expr></init></decl>,








<decl><name>AV_DEV_TO_APP_VOLUME_LEVEL_CHANGED</name> <init>= <expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'C'</literal></expr></argument>,<argument><expr><literal type="char">'V'</literal></expr></argument>,<argument><expr><literal type="char">'O'</literal></expr></argument>,<argument><expr><literal type="char">'L'</literal></expr></argument>)</argument_list></call></expr></init></decl>,
}</block>;</enum>











<function_decl><type><name>int</name></type> <name>avdevice_app_to_dev_control_message</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVAppToDevMessageType</name></name></type> <name>type</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>data_size</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>int</name></type> <name>avdevice_dev_to_app_control_message</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>AVDevToAppMessageType</name></name></type> <name>type</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>data_size</name></decl></parameter>)</parameter_list>;</function_decl>













































































<typedef>typedef <type><struct>struct <name>AVDeviceCapabilitiesQuery</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>av_class</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>device_context</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>codec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVSampleFormat</name></name></type> <name>sample_format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVPixelFormat</name></name></type> <name>pixel_format</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>sample_rate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>channels</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>channel_layout</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>window_width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>window_height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>frame_width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>frame_height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVRational</name></type> <name>fps</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVDeviceCapabilitiesQuery</name>;</typedef>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>AVOption</name></type> <name><name>av_device_capabilities</name><index>[]</index></name></decl>;</decl_stmt>


















<function_decl><type><name>int</name></type> <name>avdevice_capabilities_create</name><parameter_list>(<parameter><decl><type><name>AVDeviceCapabilitiesQuery</name> <modifier>*</modifier><modifier>*</modifier></type><name>caps</name></decl></parameter>, <parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>,
<parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>device_options</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>avdevice_capabilities_free</name><parameter_list>(<parameter><decl><type><name>AVDeviceCapabilitiesQuery</name> <modifier>*</modifier><modifier>*</modifier></type><name>caps</name></decl></parameter>, <parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>




<typedef>typedef <type><struct>struct <name>AVDeviceInfo</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>device_name</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>device_description</name></decl>;</decl_stmt> 
}</block></struct></type> <name>AVDeviceInfo</name>;</typedef>




<typedef>typedef <type><struct>struct <name>AVDeviceInfoList</name> <block>{
<decl_stmt><decl><type><name>AVDeviceInfo</name> <modifier>*</modifier><modifier>*</modifier></type><name>devices</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>nb_devices</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>default_device</name></decl>;</decl_stmt> 
}</block></struct></type> <name>AVDeviceInfoList</name>;</typedef>














<function_decl><type><name>int</name></type> <name>avdevice_list_devices</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVDeviceInfoList</name> <modifier>*</modifier><modifier>*</modifier></type><name>device_list</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>avdevice_free_list_devices</name><parameter_list>(<parameter><decl><type><name>AVDeviceInfoList</name> <modifier>*</modifier><modifier>*</modifier></type><name>device_list</name></decl></parameter>)</parameter_list>;</function_decl>


















<function_decl><type><name>int</name></type> <name>avdevice_list_input_sources</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVInputFormat</name></name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>device_name</name></decl></parameter>,
<parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>device_options</name></decl></parameter>, <parameter><decl><type><name>AVDeviceInfoList</name> <modifier>*</modifier><modifier>*</modifier></type><name>device_list</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>avdevice_list_output_sinks</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVOutputFormat</name></name> <modifier>*</modifier></type><name>device</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>device_name</name></decl></parameter>,
<parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>device_options</name></decl></parameter>, <parameter><decl><type><name>AVDeviceInfoList</name> <modifier>*</modifier><modifier>*</modifier></type><name>device_list</name></decl></parameter>)</parameter_list>;</function_decl>





<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
