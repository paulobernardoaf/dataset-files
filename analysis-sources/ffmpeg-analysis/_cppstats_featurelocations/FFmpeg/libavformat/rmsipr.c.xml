<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavformat\rmsipr.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rmsipr.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>ff_sipr_subpk_size</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">29</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">20</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>sipr_swaps</name><index>[<expr><literal type="number">38</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">63</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">22</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">44</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">3</literal></expr>, <expr><literal type="number">90</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">5</literal></expr>, <expr><literal type="number">81</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">7</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">8</literal></expr>, <expr><literal type="number">86</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">9</literal></expr>, <expr><literal type="number">58</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">10</literal></expr>, <expr><literal type="number">36</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">12</literal></expr>, <expr><literal type="number">68</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">13</literal></expr>, <expr><literal type="number">39</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">14</literal></expr>, <expr><literal type="number">73</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">15</literal></expr>, <expr><literal type="number">53</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">16</literal></expr>, <expr><literal type="number">69</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">17</literal></expr>, <expr><literal type="number">57</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">19</literal></expr>, <expr><literal type="number">88</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">20</literal></expr>, <expr><literal type="number">34</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">21</literal></expr>, <expr><literal type="number">71</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">24</literal></expr>, <expr><literal type="number">46</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">25</literal></expr>, <expr><literal type="number">94</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">26</literal></expr>, <expr><literal type="number">54</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">28</literal></expr>, <expr><literal type="number">75</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">29</literal></expr>, <expr><literal type="number">50</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">32</literal></expr>, <expr><literal type="number">70</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">33</literal></expr>, <expr><literal type="number">92</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">35</literal></expr>, <expr><literal type="number">74</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">38</literal></expr>, <expr><literal type="number">85</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">40</literal></expr>, <expr><literal type="number">56</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">42</literal></expr>, <expr><literal type="number">87</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">43</literal></expr>, <expr><literal type="number">65</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">45</literal></expr>, <expr><literal type="number">59</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">48</literal></expr>, <expr><literal type="number">79</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">49</literal></expr>, <expr><literal type="number">93</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">51</literal></expr>, <expr><literal type="number">89</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">55</literal></expr>, <expr><literal type="number">95</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">61</literal></expr>, <expr><literal type="number">76</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">67</literal></expr>, <expr><literal type="number">83</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="number">77</literal></expr>, <expr><literal type="number">80</literal></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>


<function><type><name>void</name></type> <name>ff_rm_reorder_sipr_data</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sub_packet_h</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>framesize</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>, <decl><type ref="prev"/><name>bs</name> <init>= <expr><name>sub_packet_h</name> <operator>*</operator> <name>framesize</name> <operator>*</operator> <literal type="number">2</literal> <operator>/</operator> <literal type="number">96</literal></expr></init></decl>;</decl_stmt> 

<for>for <control>(<init><expr><name>n</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>n</name> <operator>&lt;</operator> <literal type="number">38</literal></expr>;</condition> <incr><expr><name>n</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>j</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>bs</name> <operator>*</operator> <name><name>sipr_swaps</name><index>[<expr><name>n</name></expr>]</index><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>o</name> <init>= <expr><name>bs</name> <operator>*</operator> <name><name>sipr_swaps</name><index>[<expr><name>n</name></expr>]</index><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>


<for>for <control>(<init><expr><name>j</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name>bs</name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr><operator>,</operator> <expr><name>i</name><operator>++</operator></expr><operator>,</operator> <expr><name>o</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>x</name> <init>= <expr><operator>(</operator><name><name>buf</name><index>[<expr><name>i</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <operator>(</operator><name>i</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xF</literal></expr></init></decl>,
<decl><type ref="prev"/><name>y</name> <init>= <expr><operator>(</operator><name><name>buf</name><index>[<expr><name>o</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>]</index></name> <operator>&gt;&gt;</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <operator>(</operator><name>o</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xF</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>buf</name><index>[<expr><name>o</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>x</name> <operator>&lt;&lt;</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <operator>(</operator><name>o</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator><operator>)</operator> <operator>|</operator>
<operator>(</operator><name><name>buf</name><index>[<expr><name>o</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>]</index></name> <operator>&amp;</operator> <operator>(</operator><literal type="number">0xF</literal> <operator>&lt;&lt;</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <operator>!</operator><operator>(</operator><name>o</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator><operator>)</operator><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>buf</name><index>[<expr><name>i</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>y</name> <operator>&lt;&lt;</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <operator>(</operator><name>i</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator><operator>)</operator> <operator>|</operator>
<operator>(</operator><name><name>buf</name><index>[<expr><name>i</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>]</index></name> <operator>&amp;</operator> <operator>(</operator><literal type="number">0xF</literal> <operator>&lt;&lt;</operator> <operator>(</operator><literal type="number">4</literal> <operator>*</operator> <operator>!</operator><operator>(</operator><name>i</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator><operator>)</operator><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></for>
</block_content>}</block></function>
</unit>
