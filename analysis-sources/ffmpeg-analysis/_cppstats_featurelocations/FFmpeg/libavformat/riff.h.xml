<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavformat\riff.h">


























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFORMAT_RIFF_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFORMAT_RIFF_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avio.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"metadata.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>AVMetadataConv</name></type> <name><name>ff_riff_info_conv</name><index>[]</index></name></decl>;</decl_stmt>

<function_decl><type><name>int64_t</name></type> <name>ff_start_tag</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_end_tag</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>start</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>int</name></type> <name>ff_get_bmp_header</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_put_bmp_header</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>par</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>for_asf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ignore_extradata</name></decl></parameter>)</parameter_list>;</function_decl>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_PUT_WAV_HEADER_FORCE_WAVEFORMATEX</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_PUT_WAV_HEADER_SKIP_CHANNELMASK</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>








<function_decl><type><name>int</name></type> <name>ff_put_wav_header</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>par</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>ff_wav_codec_get_id</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>tag</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>bps</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_get_wav_header</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>par</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>big_endian</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>ff_codec_bmp_tags</name><index>[]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>ff_codec_wav_tags</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>AVCodecTag</name></type> <name><name>ff_codec_bmp_tags_unofficial</name><index>[]</index></name></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> <name>ff_parse_specific_params</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>au_rate</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>au_ssize</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>au_scale</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_read_riff_info</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ff_riff_write_info</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ff_riff_write_info_tag</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><name>uint8_t</name></type> <name><name>ff_asf_guid</name><index>[<expr><literal type="number">16</literal></expr>]</index></name>;</typedef>

<typedef>typedef <type><struct>struct <name>AVCodecGuid</name> <block>{
<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ff_asf_guid</name></type> <name>guid</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVCodecGuid</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>AVCodecGuid</name></type> <name><name>ff_codec_wav_guids</name><index>[]</index></name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_PRI_GUID</name></cpp:macro> <cpp:value>"%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x " "{%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x}"</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_ARG_GUID</name><parameter_list>(<parameter><type><name>g</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>g[0], g[1], g[2], g[3], g[4], g[5], g[6], g[7], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15],g[3], g[2], g[1], g[0], g[5], g[4], g[7], g[6], g[8], g[9], g[10], g[11], g[12], g[13], g[14], g[15]</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_MEDIASUBTYPE_BASE_GUID</name></cpp:macro> <cpp:value>0x00, 0x00, 0x10, 0x00, 0x80, 0x00, 0x00, 0xAA, 0x00, 0x38, 0x9B, 0x71</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_AMBISONIC_BASE_GUID</name></cpp:macro> <cpp:value>0x21, 0x07, 0xD3, 0x11, 0x86, 0x44, 0xC8, 0xC1, 0xCA, 0x00, 0x00, 0x00</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_BROKEN_BASE_GUID</name></cpp:macro> <cpp:value>0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x80, 0x00, 0x00, 0xAA</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>av_always_inline</name> <name>int</name></type> <name>ff_guidcmp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>g1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>g2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>memcmp</name><argument_list>(<argument><expr><name>g1</name></expr></argument>, <argument><expr><name>g2</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ff_asf_guid</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function_decl><type><name>int</name></type> <name>ff_get_guid</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>ff_asf_guid</name> <modifier>*</modifier></type><name>g</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ff_put_guid</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ff_asf_guid</name> <modifier>*</modifier></type><name>g</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>ff_asf_guid</name> <modifier>*</modifier></type><name>ff_get_codec_guid</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>id</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVCodecGuid</name> <modifier>*</modifier></type><name>av_guid</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>ff_codec_guid_get_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVCodecGuid</name> <modifier>*</modifier></type><name>guids</name></decl></parameter>, <parameter><decl><type><name>ff_asf_guid</name></type> <name>guid</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
