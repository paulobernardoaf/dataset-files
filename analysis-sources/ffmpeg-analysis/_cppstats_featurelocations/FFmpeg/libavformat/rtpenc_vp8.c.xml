<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavformat\rtpenc_vp8.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rtpenc.h"</cpp:file></cpp:include>



<function><type><name>void</name></type> <name>ff_rtp_send_vp8</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>RTPMuxContext</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><name><name>s1</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>, <decl><type ref="prev"/><name>max_packet_size</name></decl>, <decl><type ref="prev"/><name>header_size</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>buf_ptr</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>buf</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>timestamp</name></name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>cur_timestamp</name></name></expr>;</expr_stmt>



<expr_stmt><expr><operator>*</operator><name><name>s</name><operator>-&gt;</operator><name>buf_ptr</name></name><operator>++</operator> <operator>=</operator> <literal type="number">0x90</literal></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name><name>s</name><operator>-&gt;</operator><name>buf_ptr</name></name><operator>++</operator> <operator>=</operator> <literal type="number">0x80</literal></expr>;</expr_stmt> 
<expr_stmt><expr><operator>*</operator><name><name>s</name><operator>-&gt;</operator><name>buf_ptr</name></name><operator>++</operator> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>frame_count</name></name><operator>++</operator> <operator>&amp;</operator> <literal type="number">0x7f</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>header_size</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>buf_ptr</name></name> <operator>-</operator> <name><name>s</name><operator>-&gt;</operator><name>buf</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>max_packet_size</name> <operator>=</operator> <name><name>s</name><operator>-&gt;</operator><name>max_payload_size</name></name> <operator>-</operator> <name>header_size</name></expr>;</expr_stmt>

<while>while <condition>(<expr><name>size</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>len</name> <operator>=</operator> <call><name>FFMIN</name><argument_list>(<argument><expr><name>size</name></expr></argument>, <argument><expr><name>max_packet_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>s</name><operator>-&gt;</operator><name>buf_ptr</name></name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ff_rtp_send_data</name><argument_list>(<argument><expr><name>s1</name></expr></argument>, <argument><expr><name><name>s</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>, <argument><expr><name>len</name> <operator>+</operator> <name>header_size</name></expr></argument>, <argument><expr><name>size</name> <operator>==</operator> <name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>size</name> <operator>-=</operator> <name>len</name></expr>;</expr_stmt>
<expr_stmt><expr><name>buf</name> <operator>+=</operator> <name>len</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>&amp;=</operator> <operator>~</operator><literal type="number">0x10</literal></expr>;</expr_stmt>
</block_content>}</block></while>
</block_content>}</block></function>
</unit>
