<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavformat\matroska.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/stereo3d.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"matroska.h"</cpp:file></cpp:include>




<decl_stmt><decl><type><specifier>const</specifier> <name>CodecTags</name></type> <name><name>ff_mkv_codec_tags</name><index>[]</index></name><init>=<expr><block>{
<expr><block>{<expr><literal type="string">"A_AAC"</literal></expr> , <expr><name>AV_CODEC_ID_AAC</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_AC3"</literal></expr> , <expr><name>AV_CODEC_ID_AC3</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_ALAC"</literal></expr> , <expr><name>AV_CODEC_ID_ALAC</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_DTS"</literal></expr> , <expr><name>AV_CODEC_ID_DTS</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_EAC3"</literal></expr> , <expr><name>AV_CODEC_ID_EAC3</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_FLAC"</literal></expr> , <expr><name>AV_CODEC_ID_FLAC</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_MLP"</literal></expr> , <expr><name>AV_CODEC_ID_MLP</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_MPEG/L2"</literal></expr> , <expr><name>AV_CODEC_ID_MP2</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_MPEG/L1"</literal></expr> , <expr><name>AV_CODEC_ID_MP1</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_MPEG/L3"</literal></expr> , <expr><name>AV_CODEC_ID_MP3</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_OPUS"</literal></expr> , <expr><name>AV_CODEC_ID_OPUS</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_OPUS/EXPERIMENTAL"</literal></expr>,<expr><name>AV_CODEC_ID_OPUS</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_PCM/FLOAT/IEEE"</literal></expr> , <expr><name>AV_CODEC_ID_PCM_F32LE</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_PCM/FLOAT/IEEE"</literal></expr> , <expr><name>AV_CODEC_ID_PCM_F64LE</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_PCM/INT/BIG"</literal></expr> , <expr><name>AV_CODEC_ID_PCM_S16BE</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_PCM/INT/BIG"</literal></expr> , <expr><name>AV_CODEC_ID_PCM_S24BE</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_PCM/INT/BIG"</literal></expr> , <expr><name>AV_CODEC_ID_PCM_S32BE</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_PCM/INT/LIT"</literal></expr> , <expr><name>AV_CODEC_ID_PCM_S16LE</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_PCM/INT/LIT"</literal></expr> , <expr><name>AV_CODEC_ID_PCM_S24LE</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_PCM/INT/LIT"</literal></expr> , <expr><name>AV_CODEC_ID_PCM_S32LE</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_PCM/INT/LIT"</literal></expr> , <expr><name>AV_CODEC_ID_PCM_U8</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_QUICKTIME/QDMC"</literal></expr> , <expr><name>AV_CODEC_ID_QDMC</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_QUICKTIME/QDM2"</literal></expr> , <expr><name>AV_CODEC_ID_QDM2</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_REAL/14_4"</literal></expr> , <expr><name>AV_CODEC_ID_RA_144</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_REAL/28_8"</literal></expr> , <expr><name>AV_CODEC_ID_RA_288</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_REAL/ATRC"</literal></expr> , <expr><name>AV_CODEC_ID_ATRAC3</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_REAL/COOK"</literal></expr> , <expr><name>AV_CODEC_ID_COOK</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_REAL/SIPR"</literal></expr> , <expr><name>AV_CODEC_ID_SIPR</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_TRUEHD"</literal></expr> , <expr><name>AV_CODEC_ID_TRUEHD</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_TTA1"</literal></expr> , <expr><name>AV_CODEC_ID_TTA</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_VORBIS"</literal></expr> , <expr><name>AV_CODEC_ID_VORBIS</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_WAVPACK4"</literal></expr> , <expr><name>AV_CODEC_ID_WAVPACK</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"D_WEBVTT/SUBTITLES"</literal></expr> , <expr><name>AV_CODEC_ID_WEBVTT</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"D_WEBVTT/CAPTIONS"</literal></expr> , <expr><name>AV_CODEC_ID_WEBVTT</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"D_WEBVTT/DESCRIPTIONS"</literal></expr>, <expr><name>AV_CODEC_ID_WEBVTT</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"D_WEBVTT/METADATA"</literal></expr> , <expr><name>AV_CODEC_ID_WEBVTT</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"S_TEXT/UTF8"</literal></expr> , <expr><name>AV_CODEC_ID_SUBRIP</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"S_TEXT/UTF8"</literal></expr> , <expr><name>AV_CODEC_ID_TEXT</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"S_TEXT/ASCII"</literal></expr> , <expr><name>AV_CODEC_ID_TEXT</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"S_TEXT/ASS"</literal></expr> , <expr><name>AV_CODEC_ID_ASS</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"S_TEXT/SSA"</literal></expr> , <expr><name>AV_CODEC_ID_ASS</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"S_ASS"</literal></expr> , <expr><name>AV_CODEC_ID_ASS</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"S_SSA"</literal></expr> , <expr><name>AV_CODEC_ID_ASS</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"S_VOBSUB"</literal></expr> , <expr><name>AV_CODEC_ID_DVD_SUBTITLE</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"S_DVBSUB"</literal></expr> , <expr><name>AV_CODEC_ID_DVB_SUBTITLE</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"S_HDMV/PGS"</literal></expr> , <expr><name>AV_CODEC_ID_HDMV_PGS_SUBTITLE</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"S_HDMV/TEXTST"</literal></expr> , <expr><name>AV_CODEC_ID_HDMV_TEXT_SUBTITLE</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"V_AV1"</literal></expr> , <expr><name>AV_CODEC_ID_AV1</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_DIRAC"</literal></expr> , <expr><name>AV_CODEC_ID_DIRAC</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_FFV1"</literal></expr> , <expr><name>AV_CODEC_ID_FFV1</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_MJPEG"</literal></expr> , <expr><name>AV_CODEC_ID_MJPEG</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_MPEG1"</literal></expr> , <expr><name>AV_CODEC_ID_MPEG1VIDEO</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_MPEG2"</literal></expr> , <expr><name>AV_CODEC_ID_MPEG2VIDEO</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_MPEG4/ISO/ASP"</literal></expr> , <expr><name>AV_CODEC_ID_MPEG4</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_MPEG4/ISO/AP"</literal></expr> , <expr><name>AV_CODEC_ID_MPEG4</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_MPEG4/ISO/SP"</literal></expr> , <expr><name>AV_CODEC_ID_MPEG4</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_MPEG4/ISO/AVC"</literal></expr> , <expr><name>AV_CODEC_ID_H264</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_MPEGH/ISO/HEVC"</literal></expr> , <expr><name>AV_CODEC_ID_HEVC</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_MPEG4/MS/V3"</literal></expr> , <expr><name>AV_CODEC_ID_MSMPEG4V3</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_PRORES"</literal></expr> , <expr><name>AV_CODEC_ID_PRORES</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_REAL/RV10"</literal></expr> , <expr><name>AV_CODEC_ID_RV10</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_REAL/RV20"</literal></expr> , <expr><name>AV_CODEC_ID_RV20</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_REAL/RV30"</literal></expr> , <expr><name>AV_CODEC_ID_RV30</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_REAL/RV40"</literal></expr> , <expr><name>AV_CODEC_ID_RV40</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_SNOW"</literal></expr> , <expr><name>AV_CODEC_ID_SNOW</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_THEORA"</literal></expr> , <expr><name>AV_CODEC_ID_THEORA</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_UNCOMPRESSED"</literal></expr> , <expr><name>AV_CODEC_ID_RAWVIDEO</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_VP8"</literal></expr> , <expr><name>AV_CODEC_ID_VP8</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_VP9"</literal></expr> , <expr><name>AV_CODEC_ID_VP9</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">""</literal></expr> , <expr><name>AV_CODEC_ID_NONE</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>CodecTags</name></type> <name><name>ff_webm_codec_tags</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><literal type="string">"V_VP8"</literal></expr> , <expr><name>AV_CODEC_ID_VP8</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_VP9"</literal></expr> , <expr><name>AV_CODEC_ID_VP9</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"V_AV1"</literal></expr> , <expr><name>AV_CODEC_ID_AV1</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"A_VORBIS"</literal></expr> , <expr><name>AV_CODEC_ID_VORBIS</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"A_OPUS"</literal></expr> , <expr><name>AV_CODEC_ID_OPUS</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"D_WEBVTT/SUBTITLES"</literal></expr> , <expr><name>AV_CODEC_ID_WEBVTT</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"D_WEBVTT/CAPTIONS"</literal></expr> , <expr><name>AV_CODEC_ID_WEBVTT</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"D_WEBVTT/DESCRIPTIONS"</literal></expr>, <expr><name>AV_CODEC_ID_WEBVTT</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"D_WEBVTT/METADATA"</literal></expr> , <expr><name>AV_CODEC_ID_WEBVTT</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">""</literal></expr> , <expr><name>AV_CODEC_ID_NONE</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>CodecMime</name></type> <name><name>ff_mkv_image_mime_tags</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><literal type="string">"image/gif"</literal></expr> , <expr><name>AV_CODEC_ID_GIF</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"image/jpeg"</literal></expr> , <expr><name>AV_CODEC_ID_MJPEG</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"image/png"</literal></expr> , <expr><name>AV_CODEC_ID_PNG</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"image/tiff"</literal></expr> , <expr><name>AV_CODEC_ID_TIFF</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">""</literal></expr> , <expr><name>AV_CODEC_ID_NONE</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>CodecMime</name></type> <name><name>ff_mkv_mime_tags</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{<expr><literal type="string">"text/plain"</literal></expr> , <expr><name>AV_CODEC_ID_TEXT</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"application/x-truetype-font"</literal></expr>, <expr><name>AV_CODEC_ID_TTF</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"application/x-font"</literal></expr> , <expr><name>AV_CODEC_ID_TTF</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"application/vnd.ms-opentype"</literal></expr>, <expr><name>AV_CODEC_ID_OTF</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="string">"binary"</literal></expr> , <expr><name>AV_CODEC_ID_BIN_DATA</name></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">""</literal></expr> , <expr><name>AV_CODEC_ID_NONE</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>AVMetadataConv</name></type> <name><name>ff_mkv_metadata_conv</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"LEAD_PERFORMER"</literal></expr>, <expr><literal type="string">"performer"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"PART_NUMBER"</literal></expr> , <expr><literal type="string">"track"</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ff_matroska_video_stereo_mode</name><index>[<expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_NB</name></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="string">"mono"</literal></expr>,
<expr><literal type="string">"left_right"</literal></expr>,
<expr><literal type="string">"bottom_top"</literal></expr>,
<expr><literal type="string">"top_bottom"</literal></expr>,
<expr><literal type="string">"checkerboard_rl"</literal></expr>,
<expr><literal type="string">"checkerboard_lr"</literal></expr>,
<expr><literal type="string">"row_interleaved_rl"</literal></expr>,
<expr><literal type="string">"row_interleaved_lr"</literal></expr>,
<expr><literal type="string">"col_interleaved_rl"</literal></expr>,
<expr><literal type="string">"col_interleaved_lr"</literal></expr>,
<expr><literal type="string">"anaglyph_cyan_red"</literal></expr>,
<expr><literal type="string">"right_left"</literal></expr>,
<expr><literal type="string">"anaglyph_green_magenta"</literal></expr>,
<expr><literal type="string">"block_lr"</literal></expr>,
<expr><literal type="string">"block_rl"</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ff_matroska_video_stereo_plane</name><index>[<expr><name>MATROSKA_VIDEO_STEREO_PLANE_COUNT</name></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="string">"left"</literal></expr>,
<expr><literal type="string">"right"</literal></expr>,
<expr><literal type="string">"background"</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>ff_mkv_stereo3d_conv</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>MatroskaVideoStereoModeType</name></type> <name>stereo_mode</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>AVStereo3D</name> <modifier>*</modifier></type><name>stereo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<expr_stmt><expr><name>stereo</name> <operator>=</operator> <call><name>av_stereo3d_alloc</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>stereo</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>


<switch>switch <condition>(<expr><name>stereo_mode</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_MONO</name></expr>:</case>
<expr_stmt><expr><name><name>stereo</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>AV_STEREO3D_2D</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_RIGHT_LEFT</name></expr>:</case>
<expr_stmt><expr><name><name>stereo</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>AV_STEREO3D_FLAG_INVERT</name></expr>;</expr_stmt>
<case>case <expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_LEFT_RIGHT</name></expr>:</case>
<expr_stmt><expr><name><name>stereo</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>AV_STEREO3D_SIDEBYSIDE</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_BOTTOM_TOP</name></expr>:</case>
<expr_stmt><expr><name><name>stereo</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>AV_STEREO3D_FLAG_INVERT</name></expr>;</expr_stmt>
<case>case <expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_TOP_BOTTOM</name></expr>:</case>
<expr_stmt><expr><name><name>stereo</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>AV_STEREO3D_TOPBOTTOM</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_CHECKERBOARD_RL</name></expr>:</case>
<expr_stmt><expr><name><name>stereo</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>AV_STEREO3D_FLAG_INVERT</name></expr>;</expr_stmt>
<case>case <expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_CHECKERBOARD_LR</name></expr>:</case>
<expr_stmt><expr><name><name>stereo</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>AV_STEREO3D_CHECKERBOARD</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_ROW_INTERLEAVED_RL</name></expr>:</case>
<expr_stmt><expr><name><name>stereo</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>AV_STEREO3D_FLAG_INVERT</name></expr>;</expr_stmt>
<case>case <expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_ROW_INTERLEAVED_LR</name></expr>:</case>
<expr_stmt><expr><name><name>stereo</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>AV_STEREO3D_LINES</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_COL_INTERLEAVED_RL</name></expr>:</case>
<expr_stmt><expr><name><name>stereo</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>AV_STEREO3D_FLAG_INVERT</name></expr>;</expr_stmt>
<case>case <expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_COL_INTERLEAVED_LR</name></expr>:</case>
<expr_stmt><expr><name><name>stereo</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>AV_STEREO3D_COLUMNS</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_BOTH_EYES_BLOCK_RL</name></expr>:</case>
<expr_stmt><expr><name><name>stereo</name><operator>-&gt;</operator><name>flags</name></name> <operator>|=</operator> <name>AV_STEREO3D_FLAG_INVERT</name></expr>;</expr_stmt>
<case>case <expr><name>MATROSKA_VIDEO_STEREOMODE_TYPE_BOTH_EYES_BLOCK_LR</name></expr>:</case>
<expr_stmt><expr><name><name>stereo</name><operator>-&gt;</operator><name>type</name></name> <operator>=</operator> <name>AV_STEREO3D_FRAMESEQUENCE</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>av_stream_add_side_data</name><argument_list>(<argument><expr><name>st</name></expr></argument>, <argument><expr><name>AV_PKT_DATA_STEREO3D</name></expr></argument>, <argument><expr><operator>(</operator><name>uint8_t</name> <operator>*</operator><operator>)</operator><name>stereo</name></expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>stereo</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_freep</name><argument_list>(<argument><expr><operator>&amp;</operator><name>stereo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
