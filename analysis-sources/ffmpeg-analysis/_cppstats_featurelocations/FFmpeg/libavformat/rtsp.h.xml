<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavformat\rtsp.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFORMAT_RTSP_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFORMAT_RTSP_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rtspcodes.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rtpdec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"network.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"httpauth.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/log.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>




<enum>enum <name>RTSPLowerTransport</name> <block>{
<decl><name>RTSP_LOWER_TRANSPORT_UDP</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>RTSP_LOWER_TRANSPORT_TCP</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>, 
<decl><name>RTSP_LOWER_TRANSPORT_UDP_MULTICAST</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>, 
<decl><name>RTSP_LOWER_TRANSPORT_NB</name></decl>,
<decl><name>RTSP_LOWER_TRANSPORT_HTTP</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>, 


<decl><name>RTSP_LOWER_TRANSPORT_HTTPS</name></decl>, 
<decl><name>RTSP_LOWER_TRANSPORT_CUSTOM</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>, 



}</block>;</enum>






<enum>enum <name>RTSPTransport</name> <block>{
<decl><name>RTSP_TRANSPORT_RTP</name></decl>, 
<decl><name>RTSP_TRANSPORT_RDT</name></decl>, 
<decl><name>RTSP_TRANSPORT_RAW</name></decl>, 
<decl><name>RTSP_TRANSPORT_NB</name></decl>
}</block>;</enum>





<enum>enum <name>RTSPControlTransport</name> <block>{
<decl><name>RTSP_MODE_PLAIN</name></decl>, 
<decl><name>RTSP_MODE_TUNNEL</name></decl> 
}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_DEFAULT_PORT</name></cpp:macro> <cpp:value>554</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSPS_DEFAULT_PORT</name></cpp:macro> <cpp:value>322</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_MAX_TRANSPORTS</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_TCP_MAX_PACKET_SIZE</name></cpp:macro> <cpp:value>1472</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_DEFAULT_NB_AUDIO_CHANNELS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_DEFAULT_AUDIO_SAMPLERATE</name></cpp:macro> <cpp:value>44100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_RTP_PORT_MIN</name></cpp:macro> <cpp:value>5000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_RTP_PORT_MAX</name></cpp:macro> <cpp:value>65000</cpp:value></cpp:define>








<typedef>typedef <type><struct>struct <name>RTSPTransportField</name> <block>{




<decl_stmt><decl><type><name>int</name></type> <name>interleaved_min</name></decl>, <name>interleaved_max</name>;</decl_stmt>



<decl_stmt><decl><type><name>int</name></type> <name>port_min</name></decl>, <name>port_max</name>;</decl_stmt>



<decl_stmt><decl><type><name>int</name></type> <name>client_port_min</name></decl>, <name>client_port_max</name>;</decl_stmt>



<decl_stmt><decl><type><name>int</name></type> <name>server_port_min</name></decl>, <name>server_port_max</name>;</decl_stmt>



<decl_stmt><decl><type><name>int</name></type> <name>ttl</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>mode_record</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>sockaddr_storage</name></name></type> <name>destination</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name></type> <name><name>source</name><index>[<expr><name>INET6_ADDRSTRLEN</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name><name>enum</name> <name>RTSPTransport</name></name></type> <name>transport</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>enum</name> <name>RTSPLowerTransport</name></name></type> <name>lower_transport</name></decl>;</decl_stmt>
}</block></struct></type> <name>RTSPTransportField</name>;</typedef>




<typedef>typedef <type><struct>struct <name>RTSPMessageHeader</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>content_length</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>RTSPStatusCode</name></name></type> <name>status_code</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>int</name></type> <name>nb_transports</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>int64_t</name></type> <name>range_start</name></decl>, <name>range_end</name>;</decl_stmt>



<decl_stmt><decl><type><name>RTSPTransportField</name></type> <name><name>transports</name><index>[<expr><name>RTSP_MAX_TRANSPORTS</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>seq</name></decl>;</decl_stmt> 



<decl_stmt><decl><type><name>char</name></type> <name><name>session_id</name><index>[<expr><literal type="number">512</literal></expr>]</index></name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>char</name></type> <name><name>location</name><index>[<expr><literal type="number">4096</literal></expr>]</index></name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>char</name></type> <name><name>real_challenge</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>








<decl_stmt><decl><type><name>char</name></type> <name><name>server</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>







<decl_stmt><decl><type><name>int</name></type> <name>timeout</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>notice</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>char</name></type> <name><name>reason</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>char</name></type> <name><name>content_type</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>RTSPMessageHeader</name>;</typedef>






<enum>enum <name>RTSPClientState</name> <block>{
<decl><name>RTSP_STATE_IDLE</name></decl>, 
<decl><name>RTSP_STATE_STREAMING</name></decl>, 
<decl><name>RTSP_STATE_PAUSED</name></decl>, 
<decl><name>RTSP_STATE_SEEKING</name></decl>, 
}</block>;</enum>





<enum>enum <name>RTSPServerType</name> <block>{
<decl><name>RTSP_SERVER_RTP</name></decl>, 
<decl><name>RTSP_SERVER_REAL</name></decl>, 
<decl><name>RTSP_SERVER_WMS</name></decl>, 
<decl><name>RTSP_SERVER_NB</name></decl>
}</block>;</enum>






<typedef>typedef <type><struct>struct <name>RTSPState</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>URLContext</name> <modifier>*</modifier></type><name>rtsp_hd</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>int</name></type> <name>nb_rtsp_streams</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>RTSPStream</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>rtsp_streams</name></decl>;</decl_stmt> 





<decl_stmt><decl><type><name><name>enum</name> <name>RTSPClientState</name></name></type> <name>state</name></decl>;</decl_stmt>







<decl_stmt><decl><type><name>int64_t</name></type> <name>seek_timestamp</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>seq</name></decl>;</decl_stmt> 



<decl_stmt><decl><type><name>char</name></type> <name><name>session_id</name><index>[<expr><literal type="number">512</literal></expr>]</index></name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>timeout</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int64_t</name></type> <name>last_cmd_time</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>enum</name> <name>RTSPTransport</name></name></type> <name>transport</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name><name>enum</name> <name>RTSPLowerTransport</name></name></type> <name>lower_transport</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name><name>enum</name> <name>RTSPServerType</name></name></type> <name>server_type</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>char</name></type> <name><name>real_challenge</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>char</name></type> <name><name>auth</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>HTTPAuthState</name></type> <name>auth_state</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>char</name></type> <name><name>last_reply</name><index>[<expr><literal type="number">2048</literal></expr>]</index></name></decl>;</decl_stmt> 



<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>cur_transport_priv</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>need_subscription</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name><name>enum</name> <name>AVDiscard</name></name> <modifier>*</modifier></type><name>real_setup_cache</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name><name>enum</name> <name>AVDiscard</name></name> <modifier>*</modifier></type><name>real_setup</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>char</name></type> <name><name>last_subscription</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>asf_ctx</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>uint64_t</name></type> <name>asf_pb_pos</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>char</name></type> <name><name>control_uri</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>;</decl_stmt>



<decl_stmt><decl><type><name><name>struct</name> <name>MpegTSContext</name></name> <modifier>*</modifier></type><name>ts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>recvbuf_pos</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>recvbuf_len</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>URLContext</name> <modifier>*</modifier></type><name>rtsp_hd_out</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name><name>enum</name> <name>RTSPControlTransport</name></name></type> <name>control_transport</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>nb_byes</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>uint8_t</name><modifier>*</modifier></type> <name>recvbuf</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>lower_transport_mask</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>uint64_t</name></type> <name>packets</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name><name>struct</name> <name>pollfd</name></name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>max_p</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>get_parameter_supported</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>initial_pause</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>rtp_muxer_flags</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>accept_dynamic_rate</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>rtsp_flags</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>media_type_mask</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>rtp_port_min</name></decl>, <name>rtp_port_max</name>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>initial_timeout</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>stimeout</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>reordering_queue_size</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>user_agent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>default_lang</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>buffer_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pkt_size</name></decl>;</decl_stmt>
}</block></struct></type> <name>RTSPState</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_FLAG_FILTER_SRC</name></cpp:macro> <cpp:value>0x1</cpp:value></cpp:define> 


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_FLAG_LISTEN</name></cpp:macro> <cpp:value>0x2</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_FLAG_CUSTOM_IO</name></cpp:macro> <cpp:value>0x4</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_FLAG_RTCP_TO_SOURCE</name></cpp:macro> <cpp:value>0x8</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTSP_FLAG_PREFER_TCP</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define> 

<typedef>typedef <type><struct>struct <name>RTSPSource</name> <block>{
<decl_stmt><decl><type><name>char</name></type> <name><name>addr</name><index>[<expr><literal type="number">128</literal></expr>]</index></name></decl>;</decl_stmt> 
}</block></struct></type> <name>RTSPSource</name>;</typedef>







<typedef>typedef <type><struct>struct <name>RTSPStream</name> <block>{
<decl_stmt><decl><type><name>URLContext</name> <modifier>*</modifier></type><name>rtp_handle</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>transport_priv</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>int</name></type> <name>stream_index</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>int</name></type> <name>interleaved_min</name></decl>, <name>interleaved_max</name>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>control_url</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>;</decl_stmt> 



<decl_stmt><decl><type><name>int</name></type> <name>sdp_port</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>struct</name> <name>sockaddr_storage</name></name></type> <name>sdp_ip</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>nb_include_source_addrs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>struct</name> <name>RTSPSource</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>include_source_addrs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>nb_exclude_source_addrs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name><name>struct</name> <name>RTSPSource</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>exclude_source_addrs</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>sdp_ttl</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>sdp_payload_type</name></decl>;</decl_stmt> 





<decl_stmt><decl><type><specifier>const</specifier> <name>RTPDynamicProtocolHandler</name> <modifier>*</modifier></type><name>dynamic_handler</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>PayloadContext</name> <modifier>*</modifier></type><name>dynamic_protocol_context</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>int</name></type> <name>feedback</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>uint32_t</name></type> <name>ssrc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>crypto_suite</name><index>[<expr><literal type="number">40</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>crypto_params</name><index>[<expr><literal type="number">100</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>RTSPStream</name>;</typedef>

<function_decl><type><name>void</name></type> <name>ff_rtsp_parse_line</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>,
<parameter><decl><type><name>RTSPMessageHeader</name> <modifier>*</modifier></type><name>reply</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>,
<parameter><decl><type><name>RTSPState</name> <modifier>*</modifier></type><name>rt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>method</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>ff_rtsp_send_cmd_async</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>method</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>headers</name></decl></parameter>)</parameter_list>;</function_decl>

















<function_decl><type><name>int</name></type> <name>ff_rtsp_send_cmd_with_content</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>method</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>headers</name></decl></parameter>,
<parameter><decl><type><name>RTSPMessageHeader</name> <modifier>*</modifier></type><name>reply</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>content_ptr</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>send_content</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>send_content_length</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>ff_rtsp_send_cmd</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>method</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>headers</name></decl></parameter>,
<parameter><decl><type><name>RTSPMessageHeader</name> <modifier>*</modifier></type><name>reply</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>content_ptr</name></decl></parameter>)</parameter_list>;</function_decl>
























<function_decl><type><name>int</name></type> <name>ff_rtsp_read_reply</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>RTSPMessageHeader</name> <modifier>*</modifier></type><name>reply</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>content_ptr</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>return_on_interleaved_data</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>method</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ff_rtsp_skip_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>ff_rtsp_connect</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>ff_rtsp_close_streams</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>ff_rtsp_close_connections</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>ff_rtsp_setup_input_streams</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>RTSPMessageHeader</name> <modifier>*</modifier></type><name>reply</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>ff_rtsp_setup_output_streams</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>ff_rtsp_parse_streaming_commands</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>ff_sdp_parse</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>content</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>ff_rtsp_tcp_read_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>RTSPStream</name> <modifier>*</modifier><modifier>*</modifier></type><name>prtsp_st</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>buf_size</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>ff_rtsp_tcp_write_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>RTSPStream</name> <modifier>*</modifier></type><name>rtsp_st</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>ff_rtsp_fetch_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>ff_rtsp_make_setup_request</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>host</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>port</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>lower_transport</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>real_challenge</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ff_rtsp_undo_setup</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>send_packets</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>ff_rtsp_open_transport_ctx</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>RTSPStream</name> <modifier>*</modifier></type><name>rtsp_st</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>AVOption</name></type> <name><name>ff_rtsp_options</name><index>[]</index></name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
