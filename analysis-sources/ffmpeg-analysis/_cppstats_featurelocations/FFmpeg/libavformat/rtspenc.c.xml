<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavformat\rtspenc.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_POLL_H</name></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;poll.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"network.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"os_support.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rtsp.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avio_internal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/intreadwrite.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/avstring.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/time.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"url.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SDP_MAX_SIZE</name></cpp:macro> <cpp:value>16384</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVClass</name></type> <name>rtsp_muxer_class</name> <init>= <expr><block>{
<expr><operator>.</operator><name>class_name</name> <operator>=</operator> <literal type="string">"RTSP muxer"</literal></expr>,
<expr><operator>.</operator><name>item_name</name> <operator>=</operator> <name>av_default_item_name</name></expr>,
<expr><operator>.</operator><name>option</name> <operator>=</operator> <name>ff_rtsp_options</name></expr>,
<expr><operator>.</operator><name>version</name> <operator>=</operator> <name>LIBAVUTIL_VERSION_INT</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>ff_rtsp_setup_output_streams</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>RTSPState</name> <modifier>*</modifier></type><name>rt</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RTSPMessageHeader</name></type> <name>reply1</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>reply</name> <init>= <expr><operator>&amp;</operator><name>reply1</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>sdp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFormatContext</name></type> <name>sdp_ctx</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name><name>ctx_array</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>url</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>s</name><operator>-&gt;</operator><name>start_time_realtime</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>s</name><operator>-&gt;</operator><name>start_time_realtime</name></name> <operator>==</operator> <name>AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>s</name><operator>-&gt;</operator><name>start_time_realtime</name></name> <operator>=</operator> <call><name>av_gettime</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>


<expr_stmt><expr><name>sdp</name> <operator>=</operator> <call><name>av_mallocz</name><argument_list>(<argument><expr><name>SDP_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>sdp</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>












<expr_stmt><expr><name>sdp_ctx</name> <operator>=</operator> <operator>*</operator><name>s</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sdp_ctx</name><operator>.</operator><name>url</name></name> <operator>=</operator> <name>url</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_url_join</name><argument_list>(<argument><expr><name>url</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>url</name></expr></argument>)</argument_list></sizeof></expr></argument>,
<argument><expr><literal type="string">"rtsp"</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>addr</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ctx_array</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <operator>&amp;</operator><name>sdp_ctx</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>av_sdp_create</name><argument_list>(<argument><expr><name>ctx_array</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>sdp</name></expr></argument>, <argument><expr><name>SDP_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_free</name><argument_list>(<argument><expr><name>sdp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>AV_LOG_VERBOSE</name></expr></argument>, <argument><expr><literal type="string">"SDP:\n%s\n"</literal></expr></argument>, <argument><expr><name>sdp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_rtsp_send_cmd_with_content</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="string">"ANNOUNCE"</literal></expr></argument>, <argument><expr><name><name>rt</name><operator>-&gt;</operator><name>control_uri</name></name></expr></argument>,
<argument><expr><literal type="string">"Content-Type: application/sdp\r\n"</literal></expr></argument>,
<argument><expr><name>reply</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>sdp</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>sdp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>av_free</name><argument_list>(<argument><expr><name>sdp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>reply</name><operator>-&gt;</operator><name>status_code</name></name> <operator>!=</operator> <name>RTSP_STATUS_OK</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>ff_rtsp_averror</name><argument_list>(<argument><expr><name><name>reply</name><operator>-&gt;</operator><name>status_code</name></name></expr></argument>, <argument><expr><name>AVERROR_INVALIDDATA</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>


<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>s</name><operator>-&gt;</operator><name>nb_streams</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>RTSPStream</name> <modifier>*</modifier></type><name>rtsp_st</name></decl>;</decl_stmt>

<expr_stmt><expr><name>rtsp_st</name> <operator>=</operator> <call><name>av_mallocz</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>RTSPStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rtsp_st</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>dynarray_add</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>rt</name><operator>-&gt;</operator><name>rtsp_streams</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>rt</name><operator>-&gt;</operator><name>nb_rtsp_streams</name></name></expr></argument>, <argument><expr><name>rtsp_st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rtsp_st</name><operator>-&gt;</operator><name>stream_index</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_strlcpy</name><argument_list>(<argument><expr><name><name>rtsp_st</name><operator>-&gt;</operator><name>control_url</name></name></expr></argument>, <argument><expr><name><name>rt</name><operator>-&gt;</operator><name>control_uri</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>rtsp_st</name><operator>-&gt;</operator><name>control_url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_strlcatf</name><argument_list>(<argument><expr><name><name>rtsp_st</name><operator>-&gt;</operator><name>control_url</name></name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>rtsp_st</name><operator>-&gt;</operator><name>control_url</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,
<argument><expr><literal type="string">"/streamid=%d"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>rtsp_write_record</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>RTSPState</name> <modifier>*</modifier></type><name>rt</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RTSPMessageHeader</name></type> <name>reply1</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>reply</name> <init>= <expr><operator>&amp;</operator><name>reply1</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>cmd</name><index>[<expr><literal type="number">1024</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>cmd</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>cmd</name></expr></argument>)</argument_list></sizeof></expr></argument>,
<argument><expr><literal type="string">"Range: npt=0.000-\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_rtsp_send_cmd</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="string">"RECORD"</literal></expr></argument>, <argument><expr><name><name>rt</name><operator>-&gt;</operator><name>control_uri</name></name></expr></argument>, <argument><expr><name>cmd</name></expr></argument>, <argument><expr><name>reply</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>reply</name><operator>-&gt;</operator><name>status_code</name></name> <operator>!=</operator> <name>RTSP_STATUS_OK</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>ff_rtsp_averror</name><argument_list>(<argument><expr><name><name>reply</name><operator>-&gt;</operator><name>status_code</name></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>rt</name><operator>-&gt;</operator><name>state</name></name> <operator>=</operator> <name>RTSP_STATE_STREAMING</name></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>rtsp_write_header</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ff_rtsp_connect</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>rtsp_write_record</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ff_rtsp_close_streams</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_rtsp_close_connections</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>ff_rtsp_tcp_write_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>RTSPStream</name> <modifier>*</modifier></type><name>rtsp_st</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>RTSPState</name> <modifier>*</modifier></type><name>rt</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>rtpctx</name> <init>= <expr><name><name>rtsp_st</name><operator>-&gt;</operator><name>transport_priv</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>interleave_header</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>interleaved_packet</name></decl>;</decl_stmt>

<expr_stmt><expr><name>size</name> <operator>=</operator> <call><name>avio_close_dyn_buf</name><argument_list>(<argument><expr><name><name>rtpctx</name><operator>-&gt;</operator><name>pb</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rtpctx</name><operator>-&gt;</operator><name>pb</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>ptr</name> <operator>=</operator> <name>buf</name></expr>;</expr_stmt>
<while>while <condition>(<expr><name>size</name> <operator>&gt;</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>packet_len</name> <init>= <expr><call><name>AV_RB32</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>id</name></decl>;</decl_stmt>





<expr_stmt><expr><name>interleaved_packet</name> <operator>=</operator> <name>interleave_header</name> <operator>=</operator> <name>ptr</name></expr>;</expr_stmt>
<expr_stmt><expr><name>ptr</name> <operator>+=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>size</name> <operator>-=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>packet_len</name> <operator>&gt;</operator> <name>size</name> <operator>||</operator> <name>packet_len</name> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RTP_PT_IS_RTCP</name><argument_list>(<argument><expr><name><name>ptr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>id</name> <operator>=</operator> <name><name>rtsp_st</name><operator>-&gt;</operator><name>interleaved_max</name></name></expr>;</expr_stmt></block_content></block></if> 
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><name>id</name> <operator>=</operator> <name><name>rtsp_st</name><operator>-&gt;</operator><name>interleaved_min</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt> 
<expr_stmt><expr><name><name>interleave_header</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'$'</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>interleave_header</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name>id</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AV_WB16</name><argument_list>(<argument><expr><name>interleave_header</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>packet_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ffurl_write</name><argument_list>(<argument><expr><name><name>rt</name><operator>-&gt;</operator><name>rtsp_hd_out</name></name></expr></argument>, <argument><expr><name>interleaved_packet</name></expr></argument>, <argument><expr><literal type="number">4</literal> <operator>+</operator> <name>packet_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ptr</name> <operator>+=</operator> <name>packet_len</name></expr>;</expr_stmt>
<expr_stmt><expr><name>size</name> <operator>-=</operator> <name>packet_len</name></expr>;</expr_stmt>
</block_content>}</block></while>
<expr_stmt><expr><call><name>av_free</name><argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>ffio_open_dyn_packet_buf</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>rtpctx</name><operator>-&gt;</operator><name>pb</name></name></expr></argument>, <argument><expr><name>RTSP_TCP_MAX_PACKET_SIZE</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>rtsp_write_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>RTSPState</name> <modifier>*</modifier></type><name>rt</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>RTSPStream</name> <modifier>*</modifier></type><name>rtsp_st</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>pollfd</name></name></type> <name>p</name> <init>= <expr><block>{<expr><call><name>ffurl_get_file_handle</name><argument_list>(<argument><expr><name><name>rt</name><operator>-&gt;</operator><name>rtsp_hd</name></name></expr></argument>)</argument_list></call></expr>, <expr><name>POLLIN</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>rtpctx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>n</name> <operator>=</operator> <call><name>poll</name><argument_list>(<argument><expr><operator>&amp;</operator><name>p</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>n</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>p</name><operator>.</operator><name>revents</name></name> <operator>&amp;</operator> <name>POLLIN</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>RTSPMessageHeader</name></type> <name>reply</name></decl>;</decl_stmt>





<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ff_rtsp_read_reply</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>reply</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EPIPE</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ff_rtsp_skip_packet</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>rt</name><operator>-&gt;</operator><name>state</name></name> <operator>!=</operator> <name>RTSP_STATE_STREAMING</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EPIPE</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></while>

<if_stmt><if>if <condition>(<expr><name><name>pkt</name><operator>-&gt;</operator><name>stream_index</name></name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>||</operator> <name><name>pkt</name><operator>-&gt;</operator><name>stream_index</name></name> <operator>&gt;=</operator> <name><name>rt</name><operator>-&gt;</operator><name>nb_rtsp_streams</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name>rtsp_st</name> <operator>=</operator> <name><name>rt</name><operator>-&gt;</operator><name>rtsp_streams</name><index>[<expr><name><name>pkt</name><operator>-&gt;</operator><name>stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>rtpctx</name> <operator>=</operator> <name><name>rtsp_st</name><operator>-&gt;</operator><name>transport_priv</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ff_write_chained</name><argument_list>(<argument><expr><name>rtpctx</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>pkt</name></expr></argument>, <argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<if_stmt><if>if <condition>(<expr><operator>!</operator><name>ret</name> <operator>&amp;&amp;</operator> <name><name>rt</name><operator>-&gt;</operator><name>lower_transport</name></name> <operator>==</operator> <name>RTSP_LOWER_TRANSPORT_TCP</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>ff_rtsp_tcp_write_packet</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>rtsp_st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>rtsp_write_close</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>RTSPState</name> <modifier>*</modifier></type><name>rt</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>




<expr_stmt><expr><call><name>ff_rtsp_undo_setup</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ff_rtsp_send_cmd_async</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="string">"TEARDOWN"</literal></expr></argument>, <argument><expr><name><name>rt</name><operator>-&gt;</operator><name>control_uri</name></name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ff_rtsp_close_streams</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_rtsp_close_connections</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_network_close</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><name>AVOutputFormat</name></type> <name>ff_rtsp_muxer</name> <init>= <expr><block>{
<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"rtsp"</literal></expr>,
<expr><operator>.</operator><name>long_name</name> <operator>=</operator> <call><name>NULL_IF_CONFIG_SMALL</name><argument_list>(<argument><expr><literal type="string">"RTSP output"</literal></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>RTSPState</name></expr></argument>)</argument_list></sizeof></expr>,
<expr><operator>.</operator><name>audio_codec</name> <operator>=</operator> <name>AV_CODEC_ID_AAC</name></expr>,
<expr><operator>.</operator><name>video_codec</name> <operator>=</operator> <name>AV_CODEC_ID_MPEG4</name></expr>,
<expr><operator>.</operator><name>write_header</name> <operator>=</operator> <name>rtsp_write_header</name></expr>,
<expr><operator>.</operator><name>write_packet</name> <operator>=</operator> <name>rtsp_write_packet</name></expr>,
<expr><operator>.</operator><name>write_trailer</name> <operator>=</operator> <name>rtsp_write_close</name></expr>,
<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AVFMT_NOFILE</name> <operator>|</operator> <name>AVFMT_GLOBALHEADER</name></expr>,
<expr><operator>.</operator><name>priv_class</name> <operator>=</operator> <operator>&amp;</operator><name>rtsp_muxer_class</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
</unit>
