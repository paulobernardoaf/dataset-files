<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavformat\internal.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFORMAT_INTERNAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFORMAT_INTERNAL_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/bprint.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"os_support.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_URL_SIZE</name></cpp:macro> <cpp:value>4096</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROBE_BUF_MIN</name></cpp:macro> <cpp:value>2048</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROBE_BUF_MAX</name></cpp:macro> <cpp:value>(1 &lt;&lt; 20)</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hex_dump_debug</name><parameter_list>(<parameter><type><name>class</name></type></parameter>, <parameter><type><name>buf</name></type></parameter>, <parameter><type><name>size</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>av_hex_dump_log(class, AV_LOG_DEBUG, buf, size)</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hex_dump_debug</name><parameter_list>(<parameter><type><name>class</name></type></parameter>, <parameter><type><name>buf</name></type></parameter>, <parameter><type><name>size</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { if (0) av_hex_dump_log(class, AV_LOG_DEBUG, buf, size); } while(0)</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><struct>struct <name>AVCodecTag</name> <block>{
<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>tag</name></decl>;</decl_stmt>
}</block></struct></type> <name>AVCodecTag</name>;</typedef>

<typedef>typedef <type><struct>struct <name>CodecMime</name><block>{
<decl_stmt><decl><type><name>char</name></type> <name><name>str</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>id</name></decl>;</decl_stmt>
}</block></struct></type> <name>CodecMime</name>;</typedef>








<typedef>typedef <type><struct>struct <name>FFFrac</name> <block>{
<decl_stmt><decl><type><name>int64_t</name></type> <name>val</name></decl>, <name>num</name>, <name>den</name>;</decl_stmt>
}</block></struct></type> <name>FFFrac</name>;</typedef>


<struct>struct <name>AVFormatInternal</name> <block>{




<decl_stmt><decl><type><name>int</name></type> <name>nb_interleaved_streams</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name><name>struct</name> <name>AVPacketList</name></name> <modifier>*</modifier></type><name>packet_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>AVPacketList</name></name> <modifier>*</modifier></type><name>packet_buffer_end</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int64_t</name></type> <name>data_offset</name></decl>;</decl_stmt> 







<decl_stmt><decl><type><name><name>struct</name> <name>AVPacketList</name></name> <modifier>*</modifier></type><name>raw_packet_buffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>AVPacketList</name></name> <modifier>*</modifier></type><name>raw_packet_buffer_end</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name><name>struct</name> <name>AVPacketList</name></name> <modifier>*</modifier></type><name>parse_queue</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>AVPacketList</name></name> <modifier>*</modifier></type><name>parse_queue_end</name></decl>;</decl_stmt>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAW_PACKET_BUFFER_SIZE</name></cpp:macro> <cpp:value>2500000</cpp:value></cpp:define>
<decl_stmt><decl><type><name>int</name></type> <name>raw_packet_buffer_remaining_size</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>int64_t</name></type> <name>offset</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>AVRational</name></type> <name>offset_timebase</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>FF_API_COMPUTE_PKT_FIELDS2</name></expr></cpp:if>
<decl_stmt><decl><type><name>int</name></type> <name>missing_ts_warning</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>int</name></type> <name>inject_global_side_data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>avoid_negative_ts_use_pts</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int64_t</name></type> <name>shortest_end</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>initialized</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>streams_initialized</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>id3v2_meta</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>prefer_codec_framerate</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>AVStreamInternal</name> <block>{




<decl_stmt><decl><type><name>int</name></type> <name>reorder</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>AVBSFContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>bsfcs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nb_bsfcs</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>int</name></type> <name>bitstream_checked</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>AVCodecContext</name> <modifier>*</modifier></type><name>avctx</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>int</name></type> <name>avctx_inited</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>orig_codec_id</name></decl>;</decl_stmt>




<struct>struct <block>{
<decl_stmt><decl><type><name>AVBSFContext</name> <modifier>*</modifier></type><name>bsf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>inited</name></decl>;</decl_stmt>
}</block> <decl><name>extract_extradata</name></decl>;</struct>




<decl_stmt><decl><type><name>int</name></type> <name>need_context_update</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FFFrac</name> <modifier>*</modifier></type><name>priv_pts</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__GNUC__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dynarray_add</name><parameter_list>(<parameter><type><name>tab</name></type></parameter>, <parameter><type><name>nb_ptr</name></type></parameter>, <parameter><type><name>elem</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>do {__typeof__(tab) _tab = (tab);__typeof__(elem) _elem = (elem);(void)sizeof(**_tab == _elem); av_dynarray_add(_tab, nb_ptr, _elem);} while(0)</cpp:value></cpp:define>






<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dynarray_add</name><parameter_list>(<parameter><type><name>tab</name></type></parameter>, <parameter><type><name>nb_ptr</name></type></parameter>, <parameter><type><name>elem</name></type></parameter>)</parameter_list></cpp:macro><cpp:value>do {av_dynarray_add((tab), nb_ptr, (elem));} while(0)</cpp:value></cpp:define>



<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name><name>struct</name> <name>tm</name></name> <modifier>*</modifier></type><name>ff_brktimegm</name><parameter_list>(<parameter><decl><type><name>time_t</name></type> <name>secs</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>tm</name></name> <modifier>*</modifier></type><name>tm</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>int</name></type> <name>ff_mkdir_p</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>char</name> <modifier>*</modifier></type><name>ff_data_to_hex</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>lowercase</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>ff_hex_to_data</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>ff_interleave_add_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>,
<parameter><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>compare</name>)<parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVPacket</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVPacket</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_read_frame_flush</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NTP_OFFSET</name></cpp:macro> <cpp:value>2208988800ULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NTP_OFFSET_US</name></cpp:macro> <cpp:value>(NTP_OFFSET * 1000000ULL)</cpp:value></cpp:define>


<function_decl><type><name>uint64_t</name></type> <name>ff_ntp_time</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>uint64_t</name></type> <name>ff_get_formatted_ntp_time</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>ntp_time_us</name></decl></parameter>)</parameter_list>;</function_decl>



















<function_decl><type><name>void</name></type> <name>ff_sdp_write_media</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buff</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dest_addr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dest_type</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>port</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ttl</name></decl></parameter>, <parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>int</name></type> <name>ff_write_chained</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dst_stream</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>,
<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>interleave</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>ff_get_v_length</name><parameter_list>(<parameter><decl><type><name>uint64_t</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ff_put_v</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>bc</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>int</name></type> <name>ff_get_line</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>maxlen</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>ff_get_chomp_line</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>maxlen</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>int64_t</name></type> <name>ff_read_line_to_bprint</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVBPrint</name> <modifier>*</modifier></type><name>bp</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>int64_t</name></type> <name>ff_read_line_to_bprint_overwrite</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVBPrint</name> <modifier>*</modifier></type><name>bp</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SPACE_CHARS</name></cpp:macro> <cpp:value>" \t\r\n"</cpp:value></cpp:define>











<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>ff_parse_key_val_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>key_len</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>dest</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>dest_len</name></decl></parameter>)</parameter_list>;</function_decl></typedef>









<function_decl><type><name>void</name></type> <name>ff_parse_key_value</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><name>ff_parse_key_val_cb</name></type> <name>callback_get_buf</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>context</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>ff_find_stream_index</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>ff_index_search_timestamp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVIndexEntry</name> <modifier>*</modifier></type><name>entries</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nb_entries</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name></type> <name>wanted_timestamp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>ff_add_index_entry</name><parameter_list>(<parameter><decl><type><name>AVIndexEntry</name> <modifier>*</modifier><modifier>*</modifier></type><name>index_entries</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>nb_index_entries</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>index_entries_allocated_size</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name></type> <name>pos</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>timestamp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>distance</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_configure_buffers_for_index</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>time_tolerance</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>AVChapter</name> <modifier>*</modifier></type><name>avpriv_new_chapter</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>AVRational</name></type> <name>time_base</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name></type> <name>start</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>title</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>ff_reduce_index</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>ff_guess_image2_codec</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> <name>ff_seek_frame_binary</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name></type> <name>target_ts</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>ff_update_cur_dts</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>ref_st</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>timestamp</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>ff_find_last_ts</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>ts</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>pos</name></decl></parameter>,
<parameter><function_decl><type><name>int64_t</name></type> (<modifier>*</modifier><name>read_timestamp</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter> , <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int64_t</name></type></decl></parameter> )</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>int64_t</name></type> <name>ff_gen_search</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream_index</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name></type> <name>target_ts</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>pos_min</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name></type> <name>pos_max</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>pos_limit</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name></type> <name>ts_min</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>ts_max</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>ts_ret</name></decl></parameter>,
<parameter><function_decl><type><name>int64_t</name></type> (<modifier>*</modifier><name>read_timestamp</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter> , <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int64_t</name></type></decl></parameter> )</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>void</name></type> <name>avpriv_set_pts_info</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>pts_wrap_bits</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>pts_num</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>pts_den</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>ff_add_param_change</name><parameter_list>(<parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>channels</name></decl></parameter>,
<parameter><decl><type><name>uint64_t</name></type> <name>channel_layout</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>sample_rate</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>width</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>height</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>ff_framehash_write_header</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> <name>ff_read_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><name>int</name></type> <name>ff_interleave_packet_per_dts</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>out</name></decl></parameter>,
<parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flush</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_free_stream</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ff_compute_frame_duration</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>pnum</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>pden</name></decl></parameter>, <parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>,
<parameter><decl><type><name>AVCodecParserContext</name> <modifier>*</modifier></type><name>pc</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>unsigned</name> <name>int</name></type> <name>ff_codec_get_tag</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVCodecTag</name> <modifier>*</modifier></type><name>tags</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>ff_codec_get_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVCodecTag</name> <modifier>*</modifier></type><name>tags</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>tag</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>ff_get_pcm_codec_id</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>bps</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>be</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>sflags</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>AVRational</name></type> <name>ff_choose_timebase</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>min_precision</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name><name>enum</name> <name>AVChromaLocation</name></name></type> <name>ff_choose_chroma_location</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>ff_generate_avci_extradata</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>ff_stream_add_bitstream_filter</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>args</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> <name>ff_stream_encode_params_copy</name><parameter_list>(<parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVStream</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> <name>ff_rename</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url_src</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url_dst</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>logctx</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>ff_alloc_extradata</name><parameter_list>(<parameter><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>par</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> <name>ff_get_extradata</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>par</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>int</name></type> <name>ff_rfps_add_frame</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>ic</name></decl></parameter>, <parameter><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>dts</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ff_rfps_calculate</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>ic</name></decl></parameter>)</parameter_list>;</function_decl>




<enum>enum <name>AVWriteUncodedFrameFlags</name> <block>{





<decl><name>AV_WRITE_UNCODED_FRAME_QUERY</name> <init>= <expr><literal type="number">0x0001</literal></expr></init></decl>,

}</block>;</enum>




<function_decl><type><name>int</name></type> <name>ff_copy_whiteblacklists</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVFormatContext</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>;</function_decl>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FFERROR_REDO</name></cpp:macro> <cpp:value>FFERRTAG('R','E','D','O')</cpp:value></cpp:define>









<function_decl><type><name>int</name></type> <name>ff_format_output_open</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>options</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ff_format_io_close</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier><modifier>*</modifier></type><name>pb</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>int</name></type> <name>ff_is_http_proto</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>int</name></type> <name>ff_parse_creation_time_metadata</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>timestamp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>return_seconds</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> <name>ff_standardize_creation_time</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CONTAINS_PAL</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>









<function_decl><type><name>int</name></type> <name>ff_reshuffle_raw_rgb</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier><modifier>*</modifier></type><name>ppkt</name></decl></parameter>, <parameter><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>par</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>expected_stride</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>int</name></type> <name>ff_get_packet_palette</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ret</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>palette</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>ff_bprint_to_codecpar_extradata</name><parameter_list>(<parameter><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>par</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>AVBPrint</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>int</name></type> <name>ff_interleaved_peek</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>stream</name></decl></parameter>,
<parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>add_offset</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>int</name></type> <name>ff_lock_avformat</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ff_unlock_avformat</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>ff_format_set_url</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>url</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF_PACKETLIST_FLAG_REF_PACKET</name></cpp:macro> <cpp:value>(1 &lt;&lt; 0)</cpp:value></cpp:define> 














<function_decl><type><name>int</name></type> <name>ff_packet_list_put</name><parameter_list>(<parameter><decl><type><name>AVPacketList</name> <modifier>*</modifier><modifier>*</modifier></type><name>head</name></decl></parameter>, <parameter><decl><type><name>AVPacketList</name> <modifier>*</modifier><modifier>*</modifier></type><name>tail</name></decl></parameter>,
<parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>int</name></type> <name>ff_packet_list_get</name><parameter_list>(<parameter><decl><type><name>AVPacketList</name> <modifier>*</modifier><modifier>*</modifier></type><name>head</name></decl></parameter>, <parameter><decl><type><name>AVPacketList</name> <modifier>*</modifier><modifier>*</modifier></type><name>tail</name></decl></parameter>,
<parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>ff_packet_list_free</name><parameter_list>(<parameter><decl><type><name>AVPacketList</name> <modifier>*</modifier><modifier>*</modifier></type><name>head</name></decl></parameter>, <parameter><decl><type><name>AVPacketList</name> <modifier>*</modifier><modifier>*</modifier></type><name>tail</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>avpriv_register_devices</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AVOutputFormat</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>o</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>AVInputFormat</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>i</name><index>[]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
