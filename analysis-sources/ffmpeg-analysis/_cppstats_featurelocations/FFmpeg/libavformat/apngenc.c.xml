<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavformat\apngenc.c">






















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/avassert.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/crc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/intreadwrite.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/log.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/opt.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/png.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/apng.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>APNGMuxContext</name> <block>{
<decl_stmt><decl><type><name>AVClass</name> <modifier>*</modifier></type><name>class</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>plays</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVRational</name></type> <name>last_delay</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>acTL_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>frame_number</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>prev_packet</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVRational</name></type> <name>prev_delay</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>framerate_warned</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>extra_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>extra_data_size</name></decl>;</decl_stmt>
}</block></struct></type> <name>APNGMuxContext</name>;</typedef>

<function><type><specifier>static</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>apng_find_chunk</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>tag</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>length</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>b</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>b</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>b</name> <operator>&lt;</operator> <name>length</name></expr>;</condition> <incr><expr><name>b</name> <operator>+=</operator> <call><name>AV_RB32</name><argument_list>(<argument><expr><name>buf</name> <operator>+</operator> <name>b</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">12</literal></expr></incr>)</control><block type="pseudo"><block_content>
<if_stmt><if>if <condition>(<expr><call><name>AV_RB32</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>buf</name><index>[<expr><name>b</name> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>==</operator> <name>tag</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>&amp;</operator><name><name>buf</name><index>[<expr><name>b</name></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>apng_write_chunk</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>io_context</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>tag</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>length</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>AVCRC</name> <modifier>*</modifier></type><name>crc_table</name> <init>= <expr><call><name>av_crc_get_table</name><argument_list>(<argument><expr><name>AV_CRC_32_IEEE_LE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>crc</name> <init>= <expr><operator>~</operator><literal type="number">0U</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>tagbuf</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>av_assert0</name><argument_list>(<argument><expr><name>crc_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>avio_wb32</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><name>length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AV_WB32</name><argument_list>(<argument><expr><name>tagbuf</name></expr></argument>, <argument><expr><name>tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>crc</name> <operator>=</operator> <call><name>av_crc</name><argument_list>(<argument><expr><name>crc_table</name></expr></argument>, <argument><expr><name>crc</name></expr></argument>, <argument><expr><name>tagbuf</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>avio_wb32</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><name>tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>length</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>crc</name> <operator>=</operator> <call><name>av_crc</name><argument_list>(<argument><expr><name>crc_table</name></expr></argument>, <argument><expr><name>crc</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>avio_write</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>avio_wb32</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><operator>~</operator><name>crc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>apng_write_header</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>format_context</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>APNGMuxContext</name> <modifier>*</modifier></type><name>apng</name> <init>= <expr><name><name>format_context</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>par</name> <init>= <expr><name><name>format_context</name><operator>-&gt;</operator><name>streams</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>-&gt;</operator><name>codecpar</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>format_context</name><operator>-&gt;</operator><name>nb_streams</name></name> <operator>!=</operator> <literal type="number">1</literal> <operator>||</operator>
<name><name>format_context</name><operator>-&gt;</operator><name>streams</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>-&gt;</operator><name><name>codecpar</name><operator>-&gt;</operator><name>codec_type</name></name> <operator>!=</operator> <name>AVMEDIA_TYPE_VIDEO</name> <operator>||</operator>
<name><name>format_context</name><operator>-&gt;</operator><name>streams</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>-&gt;</operator><name><name>codecpar</name><operator>-&gt;</operator><name>codec_id</name></name> <operator>!=</operator> <name>AV_CODEC_ID_APNG</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>format_context</name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>,
<argument><expr><literal type="string">"APNG muxer supports only a single video APNG stream.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>apng</name><operator>-&gt;</operator><name>last_delay</name><operator>.</operator><name>num</name></name> <operator>&gt;</operator> <name>USHRT_MAX</name> <operator>||</operator> <name><name>apng</name><operator>-&gt;</operator><name>last_delay</name><operator>.</operator><name>den</name></name> <operator>&gt;</operator> <name>USHRT_MAX</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_reduce</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>apng</name><operator>-&gt;</operator><name>last_delay</name><operator>.</operator><name>num</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>apng</name><operator>-&gt;</operator><name>last_delay</name><operator>.</operator><name>den</name></name></expr></argument>,
<argument><expr><name><name>apng</name><operator>-&gt;</operator><name>last_delay</name><operator>.</operator><name>num</name></name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>last_delay</name><operator>.</operator><name>den</name></name></expr></argument>, <argument><expr><name>USHRT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>format_context</name></expr></argument>, <argument><expr><name>AV_LOG_WARNING</name></expr></argument>,
<argument><expr><literal type="string">"Last frame delay is too precise. Reducing to %d/%d (%f).\n"</literal></expr></argument>,
<argument><expr><name><name>apng</name><operator>-&gt;</operator><name>last_delay</name><operator>.</operator><name>num</name></name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>last_delay</name><operator>.</operator><name>den</name></name></expr></argument>, <argument><expr><operator>(</operator><name>double</name><operator>)</operator><name><name>apng</name><operator>-&gt;</operator><name>last_delay</name><operator>.</operator><name>num</name></name> <operator>/</operator> <name><name>apng</name><operator>-&gt;</operator><name>last_delay</name><operator>.</operator><name>den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>avio_wb64</name><argument_list>(<argument><expr><name><name>format_context</name><operator>-&gt;</operator><name>pb</name></name></expr></argument>, <argument><expr><name>PNGSIG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name><name>par</name><operator>-&gt;</operator><name>extradata_size</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name> <operator>=</operator> <call><name>av_mallocz</name><argument_list>(<argument><expr><name><name>par</name><operator>-&gt;</operator><name>extradata_size</name></name> <operator>+</operator> <name>AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data_size</name></name> <operator>=</operator> <name><name>par</name><operator>-&gt;</operator><name>extradata_size</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name></expr></argument>, <argument><expr><name><name>par</name><operator>-&gt;</operator><name>extradata</name></name></expr></argument>, <argument><expr><name><name>par</name><operator>-&gt;</operator><name>extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>flush_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>format_context</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>packet</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>APNGMuxContext</name> <modifier>*</modifier></type><name>apng</name> <init>= <expr><name><name>format_context</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>io_context</name> <init>= <expr><name><name>format_context</name><operator>-&gt;</operator><name>pb</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>codec_stream</name> <init>= <expr><name><name>format_context</name><operator>-&gt;</operator><name>streams</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>side_data</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>side_data_size</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>av_assert0</name><argument_list>(<argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>side_data</name> <operator>=</operator> <call><name>av_packet_get_side_data</name><argument_list>(<argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name></name></expr></argument>, <argument><expr><name>AV_PKT_DATA_NEW_EXTRADATA</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>side_data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>side_data_size</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_freep</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name> <operator>=</operator> <call><name>av_mallocz</name><argument_list>(<argument><expr><name>side_data_size</name> <operator>+</operator> <name>AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data_size</name></name> <operator>=</operator> <name>side_data_size</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name></expr></argument>, <argument><expr><name>side_data</name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>apng</name><operator>-&gt;</operator><name>frame_number</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <operator>!</operator><name>packet</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>existing_acTL_chunk</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>existing_fcTL_chunk</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>format_context</name></expr></argument>, <argument><expr><name>AV_LOG_INFO</name></expr></argument>, <argument><expr><literal type="string">"Only a single frame so saving as a normal PNG.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>existing_acTL_chunk</name> <operator>=</operator> <call><name>apng_find_chunk</name><argument_list>(<argument><expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'a'</literal></expr></argument>, <argument><expr><literal type="char">'c'</literal></expr></argument>, <argument><expr><literal type="char">'T'</literal></expr></argument>, <argument><expr><literal type="char">'L'</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>existing_acTL_chunk</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>chunk_after_acTL</name> <init>= <expr><name>existing_acTL_chunk</name> <operator>+</operator> <call><name>AV_RB32</name><argument_list>(<argument><expr><name>existing_acTL_chunk</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">12</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>avio_write</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name></expr></argument>, <argument><expr><name>existing_acTL_chunk</name> <operator>-</operator> <name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>avio_write</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><name>chunk_after_acTL</name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name> <operator>+</operator> <name><name>apng</name><operator>-&gt;</operator><name>extra_data_size</name></name> <operator>-</operator> <name>chunk_after_acTL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>avio_write</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>


<expr_stmt><expr><name>existing_fcTL_chunk</name> <operator>=</operator> <call><name>apng_find_chunk</name><argument_list>(<argument><expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'f'</literal></expr></argument>, <argument><expr><literal type="char">'c'</literal></expr></argument>, <argument><expr><literal type="char">'T'</literal></expr></argument>, <argument><expr><literal type="char">'L'</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name><operator>-&gt;</operator><name>size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>existing_fcTL_chunk</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>chunk_after_fcTL</name> <init>= <expr><name>existing_fcTL_chunk</name> <operator>+</operator> <call><name>AV_RB32</name><argument_list>(<argument><expr><name>existing_fcTL_chunk</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">12</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>avio_write</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><name>existing_fcTL_chunk</name> <operator>-</operator> <name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name><operator>-&gt;</operator><name>data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>avio_write</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><name>chunk_after_fcTL</name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name><operator>-&gt;</operator><name>data</name></name> <operator>+</operator> <name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name><operator>-&gt;</operator><name>size</name></name> <operator>-</operator> <name>chunk_after_fcTL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>avio_write</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name><operator>-&gt;</operator><name>size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>existing_fcTL_chunk</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>apng</name><operator>-&gt;</operator><name>frame_number</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>existing_acTL_chunk</name></decl>;</decl_stmt>


<expr_stmt><expr><call><name>avio_write</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>existing_acTL_chunk</name> <operator>=</operator> <call><name>apng_find_chunk</name><argument_list>(<argument><expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'a'</literal></expr></argument>, <argument><expr><literal type="char">'c'</literal></expr></argument>, <argument><expr><literal type="char">'T'</literal></expr></argument>, <argument><expr><literal type="char">'L'</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>existing_acTL_chunk</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>buf</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>apng</name><operator>-&gt;</operator><name>acTL_offset</name></name> <operator>=</operator> <call><name>avio_tell</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AV_WB32</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name>UINT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>AV_WB32</name><argument_list>(<argument><expr><name>buf</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>plays</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apng_write_chunk</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'a'</literal></expr></argument>, <argument><expr><literal type="char">'c'</literal></expr></argument>, <argument><expr><literal type="char">'T'</literal></expr></argument>, <argument><expr><literal type="char">'L'</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>existing_fcTL_chunk</name> <operator>=</operator> <call><name>apng_find_chunk</name><argument_list>(<argument><expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'f'</literal></expr></argument>, <argument><expr><literal type="char">'c'</literal></expr></argument>, <argument><expr><literal type="char">'T'</literal></expr></argument>, <argument><expr><literal type="char">'L'</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name><operator>-&gt;</operator><name>size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>existing_fcTL_chunk</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>AVRational</name></type> <name>delay</name></decl>;</decl_stmt>

<expr_stmt><expr><name>existing_fcTL_chunk</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>delay</name><operator>.</operator><name>num</name></name> <operator>=</operator> <call><name>AV_RB16</name><argument_list>(<argument><expr><name>existing_fcTL_chunk</name> <operator>+</operator> <literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>delay</name><operator>.</operator><name>den</name></name> <operator>=</operator> <call><name>AV_RB16</name><argument_list>(<argument><expr><name>existing_fcTL_chunk</name> <operator>+</operator> <literal type="number">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>delay</name><operator>.</operator><name>num</name></name> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name><name>delay</name><operator>.</operator><name>den</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>packet</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int64_t</name></type> <name>delay_num_raw</name> <init>= <expr><operator>(</operator><name><name>packet</name><operator>-&gt;</operator><name>dts</name></name> <operator>-</operator> <name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name><operator>-&gt;</operator><name>dts</name></name><operator>)</operator> <operator>*</operator> <name><name>codec_stream</name><operator>-&gt;</operator><name>time_base</name><operator>.</operator><name>num</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>delay_den_raw</name> <init>= <expr><name><name>codec_stream</name><operator>-&gt;</operator><name>time_base</name><operator>.</operator><name>den</name></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>av_reduce</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>delay</name><operator>.</operator><name>num</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>delay</name><operator>.</operator><name>den</name></name></expr></argument>, <argument><expr><name>delay_num_raw</name></expr></argument>, <argument><expr><name>delay_den_raw</name></expr></argument>, <argument><expr><name>USHRT_MAX</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
<operator>!</operator><name><name>apng</name><operator>-&gt;</operator><name>framerate_warned</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>format_context</name></expr></argument>, <argument><expr><name>AV_LOG_WARNING</name></expr></argument>,
<argument><expr><literal type="string">"Frame rate is too high or specified too precisely. Unable to copy losslessly.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>apng</name><operator>-&gt;</operator><name>framerate_warned</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name><name>apng</name><operator>-&gt;</operator><name>last_delay</name><operator>.</operator><name>num</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>delay</name> <operator>=</operator> <name><name>apng</name><operator>-&gt;</operator><name>last_delay</name></name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>delay</name> <operator>=</operator> <name><name>apng</name><operator>-&gt;</operator><name>prev_delay</name></name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>


<expr_stmt><expr><call><name>AV_WB16</name><argument_list>(<argument><expr><name>existing_fcTL_chunk</name> <operator>+</operator> <literal type="number">20</literal></expr></argument>, <argument><expr><name><name>delay</name><operator>.</operator><name>num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AV_WB16</name><argument_list>(<argument><expr><name>existing_fcTL_chunk</name> <operator>+</operator> <literal type="number">22</literal></expr></argument>, <argument><expr><name><name>delay</name><operator>.</operator><name>den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AV_WB32</name><argument_list>(<argument><expr><name>existing_fcTL_chunk</name> <operator>+</operator> <literal type="number">26</literal></expr></argument>, <argument><expr><operator>~</operator><call><name>av_crc</name><argument_list>(<argument><expr><call><name>av_crc_get_table</name><argument_list>(<argument><expr><name>AV_CRC_32_IEEE_LE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>~</operator><literal type="number">0U</literal></expr></argument>, <argument><expr><name>existing_fcTL_chunk</name> <operator>-</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">26</literal> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_delay</name></name> <operator>=</operator> <name>delay</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><call><name>avio_write</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name><operator>-&gt;</operator><name>data</name></name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name><operator>-&gt;</operator><name>size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><operator>++</operator><name><name>apng</name><operator>-&gt;</operator><name>frame_number</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>av_packet_unref</name><argument_list>(<argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>packet</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>av_packet_ref</name><argument_list>(<argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name></name></expr></argument>, <argument><expr><name>packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>apng_write_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>format_context</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>packet</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>APNGMuxContext</name> <modifier>*</modifier></type><name>apng</name> <init>= <expr><name><name>format_context</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name></name> <operator>=</operator> <call><name>av_packet_alloc</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>av_packet_ref</name><argument_list>(<argument><expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name></name></expr></argument>, <argument><expr><name>packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>flush_packet</name><argument_list>(<argument><expr><name>format_context</name></expr></argument>, <argument><expr><name>packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>apng_write_trailer</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>format_context</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>APNGMuxContext</name> <modifier>*</modifier></type><name>apng</name> <init>= <expr><name><name>format_context</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>io_context</name> <init>= <expr><name><name>format_context</name><operator>-&gt;</operator><name>pb</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>buf</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>flush_packet</name><argument_list>(<argument><expr><name>format_context</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>apng_write_chunk</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'I'</literal></expr></argument>, <argument><expr><literal type="char">'E'</literal></expr></argument>, <argument><expr><literal type="char">'N'</literal></expr></argument>, <argument><expr><literal type="char">'D'</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>apng</name><operator>-&gt;</operator><name>acTL_offset</name></name> <operator>&amp;&amp;</operator> <operator>(</operator><name><name>io_context</name><operator>-&gt;</operator><name>seekable</name></name> <operator>&amp;</operator> <name>AVIO_SEEKABLE_NORMAL</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>avio_seek</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>acTL_offset</name></name></expr></argument>, <argument><expr><name>SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>AV_WB32</name><argument_list>(<argument><expr><name>buf</name></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>frame_number</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>AV_WB32</name><argument_list>(<argument><expr><name>buf</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name><name>apng</name><operator>-&gt;</operator><name>plays</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>apng_write_chunk</name><argument_list>(<argument><expr><name>io_context</name></expr></argument>, <argument><expr><call><name>MKBETAG</name><argument_list>(<argument><expr><literal type="char">'a'</literal></expr></argument>, <argument><expr><literal type="char">'c'</literal></expr></argument>, <argument><expr><literal type="char">'T'</literal></expr></argument>, <argument><expr><literal type="char">'L'</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>apng_deinit</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>APNGMuxContext</name> <modifier>*</modifier></type><name>apng</name> <init>= <expr><name><name>s</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>av_packet_free</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>apng</name><operator>-&gt;</operator><name>prev_packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>av_freep</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>apng</name><operator>-&gt;</operator><name>extra_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>apng</name><operator>-&gt;</operator><name>extra_data_size</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OFFSET</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>offsetof(APNGMuxContext, x)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENC</name></cpp:macro> <cpp:value>AV_OPT_FLAG_ENCODING_PARAM</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVOption</name></type> <name><name>options</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"plays"</literal></expr>, <expr><literal type="string">"Number of times to play the output: 0 - infinite loop, 1 - no loop"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>plays</name></expr></argument>)</argument_list></call></expr>,
<expr><name>AV_OPT_TYPE_INT</name></expr>, <expr><block>{ <expr><operator>.</operator><name>i64</name> <operator>=</operator> <literal type="number">1</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>UINT_MAX</name></expr>, <expr><name>ENC</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"final_delay"</literal></expr>, <expr><literal type="string">"Force delay after the last frame"</literal></expr>, <expr><call><name>OFFSET</name><argument_list>(<argument><expr><name>last_delay</name></expr></argument>)</argument_list></call></expr>,
<expr><name>AV_OPT_TYPE_RATIONAL</name></expr>, <expr><block>{ <expr><operator>.</operator><name>dbl</name> <operator>=</operator> <literal type="number">0</literal></expr> }</block></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>USHRT_MAX</name></expr>, <expr><name>ENC</name></expr> }</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>AVClass</name></type> <name>apng_muxer_class</name> <init>= <expr><block>{
<expr><operator>.</operator><name>class_name</name> <operator>=</operator> <literal type="string">"APNG muxer"</literal></expr>,
<expr><operator>.</operator><name>item_name</name> <operator>=</operator> <name>av_default_item_name</name></expr>,
<expr><operator>.</operator><name>version</name> <operator>=</operator> <name>LIBAVUTIL_VERSION_INT</name></expr>,
<expr><operator>.</operator><name>option</name> <operator>=</operator> <name>options</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>AVOutputFormat</name></type> <name>ff_apng_muxer</name> <init>= <expr><block>{
<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"apng"</literal></expr>,
<expr><operator>.</operator><name>long_name</name> <operator>=</operator> <call><name>NULL_IF_CONFIG_SMALL</name><argument_list>(<argument><expr><literal type="string">"Animated Portable Network Graphics"</literal></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name>mime_type</name> <operator>=</operator> <literal type="string">"image/png"</literal></expr>,
<expr><operator>.</operator><name>extensions</name> <operator>=</operator> <literal type="string">"apng"</literal></expr>,
<expr><operator>.</operator><name>priv_data_size</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>APNGMuxContext</name></expr></argument>)</argument_list></sizeof></expr>,
<expr><operator>.</operator><name>audio_codec</name> <operator>=</operator> <name>AV_CODEC_ID_NONE</name></expr>,
<expr><operator>.</operator><name>video_codec</name> <operator>=</operator> <name>AV_CODEC_ID_APNG</name></expr>,
<expr><operator>.</operator><name>write_header</name> <operator>=</operator> <name>apng_write_header</name></expr>,
<expr><operator>.</operator><name>write_packet</name> <operator>=</operator> <name>apng_write_packet</name></expr>,
<expr><operator>.</operator><name>write_trailer</name> <operator>=</operator> <name>apng_write_trailer</name></expr>,
<expr><operator>.</operator><name>deinit</name> <operator>=</operator> <name>apng_deinit</name></expr>,
<expr><operator>.</operator><name>priv_class</name> <operator>=</operator> <operator>&amp;</operator><name>apng_muxer_class</name></expr>,
<expr><operator>.</operator><name>flags</name> <operator>=</operator> <name>AVFMT_VARIABLE_FPS</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
</unit>
