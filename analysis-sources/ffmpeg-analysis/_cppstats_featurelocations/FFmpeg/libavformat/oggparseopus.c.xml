<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavformat\oggparseopus.c">




















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/intreadwrite.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"oggdec.h"</cpp:file></cpp:include>

<struct>struct <name>oggopus_private</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>need_comments</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>pre_skip</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>cur_dts</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPUS_SEEK_PREROLL_MS</name></cpp:macro> <cpp:value>80</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPUS_HEAD_SIZE</name></cpp:macro> <cpp:value>19</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>int</name></type> <name>opus_header</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>avf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>ogg</name></name> <modifier>*</modifier></type><name>ogg</name> <init>= <expr><name><name>avf</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>ogg_stream</name></name> <modifier>*</modifier></type><name>os</name> <init>= <expr><operator>&amp;</operator><name><name>ogg</name><operator>-&gt;</operator><name>streams</name><index>[<expr><name>idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name> <init>= <expr><name><name>avf</name><operator>-&gt;</operator><name>streams</name><index>[<expr><name>idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>oggopus_private</name></name> <modifier>*</modifier></type><name>priv</name> <init>= <expr><name><name>os</name><operator>-&gt;</operator><name>private</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>packet</name> <init>= <expr><name><name>os</name><operator>-&gt;</operator><name>buf</name></name> <operator>+</operator> <name><name>os</name><operator>-&gt;</operator><name>pstart</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>priv</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>priv</name> <operator>=</operator> <name><name>os</name><operator>-&gt;</operator><name>private</name></name> <operator>=</operator> <call><name>av_mallocz</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>priv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>priv</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>AVERROR</name><argument_list>(<argument><expr><name>ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>os</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>OGG_FLAG_BOS</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>os</name><operator>-&gt;</operator><name>psize</name></name> <operator>&lt;</operator> <name>OPUS_HEAD_SIZE</name> <operator>||</operator> <operator>(</operator><call><name>AV_RL8</name><argument_list>(<argument><expr><name>packet</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call> <operator>&amp;</operator> <literal type="number">0xF0</literal><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>codec_type</name></name> <operator>=</operator> <name>AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>codec_id</name></name> <operator>=</operator> <name>AV_CODEC_ID_OPUS</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>channels</name></name> <operator>=</operator> <call><name>AV_RL8</name><argument_list>(<argument><expr><name>packet</name> <operator>+</operator> <literal type="number">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>priv</name><operator>-&gt;</operator><name>pre_skip</name></name> <operator>=</operator> <call><name>AV_RL16</name><argument_list>(<argument><expr><name>packet</name> <operator>+</operator> <literal type="number">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>initial_padding</name></name> <operator>=</operator> <name><name>priv</name><operator>-&gt;</operator><name>pre_skip</name></name></expr>;</expr_stmt>




<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>ff_alloc_extradata</name><argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name></name></expr></argument>, <argument><expr><name><name>os</name><operator>-&gt;</operator><name>psize</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>extradata</name></name></expr></argument>, <argument><expr><name>packet</name></expr></argument>, <argument><expr><name><name>os</name><operator>-&gt;</operator><name>psize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>sample_rate</name></name> <operator>=</operator> <literal type="number">48000</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>seek_preroll</name></name> <operator>=</operator> <call><name>av_rescale</name><argument_list>(<argument><expr><name>OPUS_SEEK_PREROLL_MS</name></expr></argument>,
<argument><expr><name><name>st</name><operator>-&gt;</operator><name>codecpar</name><operator>-&gt;</operator><name>sample_rate</name></name></expr></argument>, <argument><expr><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>avpriv_set_pts_info</name><argument_list>(<argument><expr><name>st</name></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">48000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>priv</name><operator>-&gt;</operator><name>need_comments</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>priv</name><operator>-&gt;</operator><name>need_comments</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>os</name><operator>-&gt;</operator><name>psize</name></name> <operator>&lt;</operator> <literal type="number">8</literal> <operator>||</operator> <call><name>memcmp</name><argument_list>(<argument><expr><name>packet</name></expr></argument>, <argument><expr><literal type="string">"OpusTags"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>ff_vorbis_stream_comment</name><argument_list>(<argument><expr><name>avf</name></expr></argument>, <argument><expr><name>st</name></expr></argument>, <argument><expr><name>packet</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name><name>os</name><operator>-&gt;</operator><name>psize</name></name> <operator>-</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>priv</name><operator>-&gt;</operator><name>need_comments</name></name><operator>--</operator></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>opus_duration</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name></type> <name>nb_frames</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>toc</name> <init>= <expr><name><name>src</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>toc_config</name> <init>= <expr><name>toc</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>toc_count</name> <init>= <expr><name>toc</name> <operator>&amp;</operator> <literal type="number">3</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>frame_size</name> <init>= <expr><ternary><condition><expr><name>toc_config</name> <operator>&lt;</operator> <literal type="number">12</literal></expr> ?</condition><then> <expr><call><name>FFMAX</name><argument_list>(<argument><expr><literal type="number">480</literal></expr></argument>, <argument><expr><literal type="number">960</literal> <operator>*</operator> <operator>(</operator><name>toc_config</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator></expr></argument>)</argument_list></call></expr> </then><else>:
<expr><ternary><condition><expr><name>toc_config</name> <operator>&lt;</operator> <literal type="number">16</literal></expr> ?</condition><then> <expr><literal type="number">480</literal> <operator>&lt;&lt;</operator> <operator>(</operator><name>toc_config</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator></expr> </then><else>:
<expr><literal type="number">120</literal> <operator>&lt;&lt;</operator> <operator>(</operator><name>toc_config</name> <operator>&amp;</operator> <literal type="number">3</literal><operator>)</operator></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>toc_count</name> <operator>==</operator> <literal type="number">3</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>size</name><operator>&lt;</operator><literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name>nb_frames</name> <operator>=</operator> <name><name>src</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>&amp;</operator> <literal type="number">0x3F</literal></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>toc_count</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>nb_frames</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>frame_size</name> <operator>*</operator> <name>nb_frames</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>opus_packet</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>avf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>ogg</name></name> <modifier>*</modifier></type><name>ogg</name> <init>= <expr><name><name>avf</name><operator>-&gt;</operator><name>priv_data</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>ogg_stream</name></name> <modifier>*</modifier></type><name>os</name> <init>= <expr><operator>&amp;</operator><name><name>ogg</name><operator>-&gt;</operator><name>streams</name><index>[<expr><name>idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>AVStream</name> <modifier>*</modifier></type><name>st</name> <init>= <expr><name><name>avf</name><operator>-&gt;</operator><name>streams</name><index>[<expr><name>idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>oggopus_private</name></name> <modifier>*</modifier></type><name>priv</name> <init>= <expr><name><name>os</name><operator>-&gt;</operator><name>private</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>packet</name> <init>= <expr><name><name>os</name><operator>-&gt;</operator><name>buf</name></name> <operator>+</operator> <name><name>os</name><operator>-&gt;</operator><name>pstart</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ret</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>os</name><operator>-&gt;</operator><name>psize</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>os</name><operator>-&gt;</operator><name>granule</name></name> <operator>&gt;</operator> <operator>(</operator><literal type="number">1LL</literal> <operator>&lt;&lt;</operator> <literal type="number">62</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>avf</name></expr></argument>, <argument><expr><name>AV_LOG_ERROR</name></expr></argument>, <argument><expr><literal type="string">"Unsupported huge granule pos %"</literal><name>PRId64</name> <literal type="string">"\n"</literal></expr></argument>, <argument><expr><name><name>os</name><operator>-&gt;</operator><name>granule</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>AVERROR_INVALIDDATA</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>!</operator><name><name>os</name><operator>-&gt;</operator><name>lastpts</name></name> <operator>||</operator> <name><name>os</name><operator>-&gt;</operator><name>lastpts</name></name> <operator>==</operator> <name>AV_NOPTS_VALUE</name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>!</operator><operator>(</operator><name><name>os</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>OGG_FLAG_EOS</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>seg</name></decl>, <decl><type ref="prev"/><name>d</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>duration</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>last_pkt</name> <init>= <expr><name><name>os</name><operator>-&gt;</operator><name>buf</name></name> <operator>+</operator> <name><name>os</name><operator>-&gt;</operator><name>pstart</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>next_pkt</name> <init>= <expr><name>last_pkt</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>duration</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>seg</name> <operator>=</operator> <name><name>os</name><operator>-&gt;</operator><name>segp</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>d</name> <operator>=</operator> <call><name>opus_duration</name><argument_list>(<argument><expr><name>last_pkt</name></expr></argument>, <argument><expr><name><name>os</name><operator>-&gt;</operator><name>psize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>d</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>os</name><operator>-&gt;</operator><name>pflags</name></name> <operator>|=</operator> <name>AV_PKT_FLAG_CORRUPT</name></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>duration</name> <operator>+=</operator> <name>d</name></expr>;</expr_stmt>
<expr_stmt><expr><name>last_pkt</name> <operator>=</operator> <name>next_pkt</name> <operator>=</operator> <name>next_pkt</name> <operator>+</operator> <name><name>os</name><operator>-&gt;</operator><name>psize</name></name></expr>;</expr_stmt>
<for>for <control>(<init>;</init> <condition><expr><name>seg</name> <operator>&lt;</operator> <name><name>os</name><operator>-&gt;</operator><name>nsegs</name></name></expr>;</condition> <incr><expr><name>seg</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>next_pkt</name> <operator>+=</operator> <name><name>os</name><operator>-&gt;</operator><name>segments</name><index>[<expr><name>seg</name></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>os</name><operator>-&gt;</operator><name>segments</name><index>[<expr><name>seg</name></expr>]</index></name> <operator>&lt;</operator> <literal type="number">255</literal> <operator>&amp;&amp;</operator> <name>next_pkt</name> <operator>!=</operator> <name>last_pkt</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>d</name> <init>= <expr><call><name>opus_duration</name><argument_list>(<argument><expr><name>last_pkt</name></expr></argument>, <argument><expr><name>next_pkt</name> <operator>-</operator> <name>last_pkt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>d</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>duration</name> <operator>+=</operator> <name>d</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name>last_pkt</name> <operator>=</operator> <name>next_pkt</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name><name>os</name><operator>-&gt;</operator><name>lastpts</name></name> <operator>=</operator>
<name><name>os</name><operator>-&gt;</operator><name>lastdts</name></name> <operator>=</operator> <name><name>os</name><operator>-&gt;</operator><name>granule</name></name> <operator>-</operator> <name>duration</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>ret</name> <operator>=</operator> <call><name>opus_duration</name><argument_list>(<argument><expr><name>packet</name></expr></argument>, <argument><expr><name><name>os</name><operator>-&gt;</operator><name>psize</name></name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>ret</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>os</name><operator>-&gt;</operator><name>pduration</name></name> <operator>=</operator> <name>ret</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>os</name><operator>-&gt;</operator><name>lastpts</name></name> <operator>!=</operator> <name>AV_NOPTS_VALUE</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>st</name><operator>-&gt;</operator><name>start_time</name></name> <operator>==</operator> <name>AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>start_time</name></name> <operator>=</operator> <name><name>os</name><operator>-&gt;</operator><name>lastpts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>priv</name><operator>-&gt;</operator><name>cur_dts</name></name> <operator>=</operator> <name><name>os</name><operator>-&gt;</operator><name>lastdts</name></name> <operator>=</operator> <name><name>os</name><operator>-&gt;</operator><name>lastpts</name></name> <operator>-=</operator> <name><name>priv</name><operator>-&gt;</operator><name>pre_skip</name></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>priv</name><operator>-&gt;</operator><name>cur_dts</name></name> <operator>+=</operator> <name><name>os</name><operator>-&gt;</operator><name>pduration</name></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name><name>os</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>OGG_FLAG_EOS</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>int64_t</name></type> <name>skip</name> <init>= <expr><name><name>priv</name><operator>-&gt;</operator><name>cur_dts</name></name> <operator>-</operator> <name><name>os</name><operator>-&gt;</operator><name>granule</name></name> <operator>+</operator> <name><name>priv</name><operator>-&gt;</operator><name>pre_skip</name></name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>skip</name> <operator>=</operator> <call><name>FFMIN</name><argument_list>(<argument><expr><name>skip</name></expr></argument>, <argument><expr><name><name>os</name><operator>-&gt;</operator><name>pduration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>skip</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>os</name><operator>-&gt;</operator><name>pduration</name></name> <operator>=</operator> <ternary><condition><expr><name>skip</name> <operator>&lt;</operator> <name><name>os</name><operator>-&gt;</operator><name>pduration</name></name></expr> ?</condition><then> <expr><name><name>os</name><operator>-&gt;</operator><name>pduration</name></name> <operator>-</operator> <name>skip</name></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name><name>os</name><operator>-&gt;</operator><name>end_trimming</name></name> <operator>=</operator> <name>skip</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>av_log</name><argument_list>(<argument><expr><name>avf</name></expr></argument>, <argument><expr><name>AV_LOG_DEBUG</name></expr></argument>,
<argument><expr><literal type="string">"Last packet was truncated to %d due to end trimming.\n"</literal></expr></argument>,
<argument><expr><name><name>os</name><operator>-&gt;</operator><name>pduration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>ogg_codec</name></name></type> <name>ff_opus_codec</name> <init>= <expr><block>{
<expr><operator>.</operator><name>name</name> <operator>=</operator> <literal type="string">"Opus"</literal></expr>,
<expr><operator>.</operator><name>magic</name> <operator>=</operator> <literal type="string">"OpusHead"</literal></expr>,
<expr><operator>.</operator><name>magicsize</name> <operator>=</operator> <literal type="number">8</literal></expr>,
<expr><operator>.</operator><name>header</name> <operator>=</operator> <name>opus_header</name></expr>,
<expr><operator>.</operator><name>packet</name> <operator>=</operator> <name>opus_packet</name></expr>,
<expr><operator>.</operator><name>nb_header</name> <operator>=</operator> <literal type="number">1</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>
</unit>
