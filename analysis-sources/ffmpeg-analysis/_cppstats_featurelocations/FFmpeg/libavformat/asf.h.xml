<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavformat\asf.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFORMAT_ASF_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFORMAT_ASF_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"metadata.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"riff.h"</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <name>ASFDataType</name> <block>{
<decl><name>ASF_UNICODE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>ASF_BYTE_ARRAY</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>ASF_BOOL</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>ASF_DWORD</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>ASF_QWORD</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>ASF_WORD</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,
<decl><name>ASF_GUID</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,
}</block></enum></type><name>ASFDataType</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ASFMainHeader</name> <block>{
<decl_stmt><decl><type><name>ff_asf_guid</name></type> <name>guid</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint64_t</name></type> <name>file_size</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint64_t</name></type> <name>create_time</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint64_t</name></type> <name>play_time</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint64_t</name></type> <name>send_time</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>preroll</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>ignore</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>uint32_t</name></type> <name>flags</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name>uint32_t</name></type> <name>min_pktsize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>max_pktsize</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>max_bitrate</name></decl>;</decl_stmt> 


}</block></struct></type> <name>ASFMainHeader</name>;</typedef>


<typedef>typedef <type><struct>struct <name>ASFIndex</name> <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>packet_number</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>packet_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>send_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>offset</name></decl>;</decl_stmt>
}</block></struct></type> <name>ASFIndex</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_file_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_stream_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_ext_stream_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_audio_stream</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_audio_conceal_none</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_audio_conceal_spread</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_video_stream</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_jfif_media</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_video_conceal_none</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_command_stream</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_comment_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_codec_comment_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_codec_comment1_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_data_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_head1_guid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_head2_guid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_extended_content_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_simple_index_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_ext_stream_embed_stream_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_ext_stream_audio_stream</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_metadata_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_metadata_library_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_marker_header</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_reserved_4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_my_guid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_language_guid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_content_encryption</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_ext_content_encryption</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_digital_signature</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_extended_stream_properties_object</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_group_mutual_exclusion_object</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>ff_asf_guid</name></type> <name>ff_asf_mutex_language</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>AVMetadataConv</name></type> <name><name>ff_asf_metadata_conv</name><index>[]</index></name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PACKET_FLAG_ERROR_CORRECTION_PRESENT</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define> 


















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PPI_FLAG_MULTIPLE_PAYLOADS_PRESENT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PPI_FLAG_SEQUENCE_FIELD_IS_BYTE</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PPI_FLAG_SEQUENCE_FIELD_IS_WORD</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PPI_FLAG_SEQUENCE_FIELD_IS_DWORD</name></cpp:macro> <cpp:value>0x06</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PPI_MASK_SEQUENCE_FIELD_SIZE</name></cpp:macro> <cpp:value>0x06</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PPI_FLAG_PADDING_LENGTH_FIELD_IS_BYTE</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PPI_FLAG_PADDING_LENGTH_FIELD_IS_WORD</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PPI_FLAG_PADDING_LENGTH_FIELD_IS_DWORD</name></cpp:macro> <cpp:value>0x18</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PPI_MASK_PADDING_LENGTH_FIELD_SIZE</name></cpp:macro> <cpp:value>0x18</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PPI_FLAG_PACKET_LENGTH_FIELD_IS_BYTE</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PPI_FLAG_PACKET_LENGTH_FIELD_IS_WORD</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PPI_FLAG_PACKET_LENGTH_FIELD_IS_DWORD</name></cpp:macro> <cpp:value>0x60</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PPI_MASK_PACKET_LENGTH_FIELD_SIZE</name></cpp:macro> <cpp:value>0x60</cpp:value></cpp:define> 


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_FLAG_REPLICATED_DATA_LENGTH_FIELD_IS_BYTE</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_FLAG_REPLICATED_DATA_LENGTH_FIELD_IS_WORD</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_FLAG_REPLICATED_DATA_LENGTH_FIELD_IS_DWORD</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_MASK_REPLICATED_DATA_LENGTH_FIELD_SIZE</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_FLAG_OFFSET_INTO_MEDIA_OBJECT_LENGTH_FIELD_IS_BYTE</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_FLAG_OFFSET_INTO_MEDIA_OBJECT_LENGTH_FIELD_IS_WORD</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_FLAG_OFFSET_INTO_MEDIA_OBJECT_LENGTH_FIELD_IS_DWORD</name></cpp:macro> <cpp:value>0x0c</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_MASK_OFFSET_INTO_MEDIA_OBJECT_LENGTH_FIELD_SIZE</name></cpp:macro> <cpp:value>0x0c</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_FLAG_MEDIA_OBJECT_NUMBER_LENGTH_FIELD_IS_BYTE</name></cpp:macro> <cpp:value>0x10</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_FLAG_MEDIA_OBJECT_NUMBER_LENGTH_FIELD_IS_WORD</name></cpp:macro> <cpp:value>0x20</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_FLAG_MEDIA_OBJECT_NUMBER_LENGTH_FIELD_IS_DWORD</name></cpp:macro> <cpp:value>0x30</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_MASK_MEDIA_OBJECT_NUMBER_LENGTH_FIELD_SIZE</name></cpp:macro> <cpp:value>0x30</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_FLAG_STREAM_NUMBER_LENGTH_FIELD_IS_BYTE</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_MASK_STREAM_NUMBER_LENGTH_FIELD_SIZE</name></cpp:macro> <cpp:value>0xc0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_FLAG_PAYLOAD_LENGTH_FIELD_IS_BYTE</name></cpp:macro> <cpp:value>0x40</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_FLAG_PAYLOAD_LENGTH_FIELD_IS_WORD</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_MASK_PAYLOAD_LENGTH_FIELD_SIZE</name></cpp:macro> <cpp:value>0xc0</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASF_PL_FLAG_KEY_FRAME</name></cpp:macro> <cpp:value>0x80</cpp:value></cpp:define> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
