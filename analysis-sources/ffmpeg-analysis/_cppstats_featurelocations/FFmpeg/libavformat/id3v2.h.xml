<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavformat\id3v2.h">




















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFORMAT_ID3V2_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFORMAT_ID3V2_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"avformat.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"metadata.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ID3v2_HEADER_SIZE</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ID3v2_DEFAULT_MAGIC</name></cpp:macro> <cpp:value>"ID3"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ID3v2_FLAG_DATALEN</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ID3v2_FLAG_UNSYNCH</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ID3v2_FLAG_ENCRYPTION</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ID3v2_FLAG_COMPRESSION</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ID3v2_PRIV_METADATA_PREFIX</name></cpp:macro> <cpp:value>"id3v2_priv."</cpp:value></cpp:define>

<enum>enum <name>ID3v2Encoding</name> <block>{
<decl><name>ID3v2_ENCODING_ISO8859</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>ID3v2_ENCODING_UTF16BOM</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>ID3v2_ENCODING_UTF16BE</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>ID3v2_ENCODING_UTF8</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
}</block>;</enum>

<typedef>typedef <type><struct>struct <name>ID3v2EncContext</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>version</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int64_t</name></type> <name>size_pos</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt> 
}</block></struct></type> <name>ID3v2EncContext</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ID3v2ExtraMeta</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>ID3v2ExtraMeta</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>
}</block></struct></type> <name>ID3v2ExtraMeta</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ID3v2ExtraMetaGEOB</name> <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>datasize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>mime_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>file_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>description</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>
}</block></struct></type> <name>ID3v2ExtraMetaGEOB</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ID3v2ExtraMetaAPIC</name> <block>{
<decl_stmt><decl><type><name>AVBufferRef</name> <modifier>*</modifier></type><name>buf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>description</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>id</name></decl>;</decl_stmt>
}</block></struct></type> <name>ID3v2ExtraMetaAPIC</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ID3v2ExtraMetaPRIV</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>owner</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>datasize</name></decl>;</decl_stmt>
}</block></struct></type> <name>ID3v2ExtraMetaPRIV</name>;</typedef>

<typedef>typedef <type><struct>struct <name>ID3v2ExtraMetaCHAP</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>element_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>start</name></decl>, <name>end</name>;</decl_stmt>
<decl_stmt><decl><type><name>AVDictionary</name> <modifier>*</modifier></type><name>meta</name></decl>;</decl_stmt>
}</block></struct></type> <name>ID3v2ExtraMetaCHAP</name>;</typedef>







<function_decl><type><name>int</name></type> <name>ff_id3v2_match</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>magic</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>ff_id3v2_tag_len</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uint8_t</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>void</name></type> <name>ff_id3v2_read_dict</name><parameter_list>(<parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>metadata</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>magic</name></decl></parameter>, <parameter><decl><type><name>ID3v2ExtraMeta</name> <modifier>*</modifier><modifier>*</modifier></type><name>extra_meta</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>ff_id3v2_read</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>magic</name></decl></parameter>, <parameter><decl><type><name>ID3v2ExtraMeta</name> <modifier>*</modifier><modifier>*</modifier></type><name>extra_meta</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>max_search_size</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ff_id3v2_start</name><parameter_list>(<parameter><decl><type><name>ID3v2EncContext</name> <modifier>*</modifier></type><name>id3</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id3v2_version</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>magic</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>ff_id3v2_write_metadata</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>ID3v2EncContext</name> <modifier>*</modifier></type><name>id3</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>ff_id3v2_write_apic</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>ID3v2EncContext</name> <modifier>*</modifier></type><name>id3</name></decl></parameter>, <parameter><decl><type><name>AVPacket</name> <modifier>*</modifier></type><name>pkt</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>ff_id3v2_finish</name><parameter_list>(<parameter><decl><type><name>ID3v2EncContext</name> <modifier>*</modifier></type><name>id3</name></decl></parameter>, <parameter><decl><type><name>AVIOContext</name> <modifier>*</modifier></type><name>pb</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>padding_bytes</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>int</name></type> <name>ff_id3v2_write_simple</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>AVFormatContext</name></name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id3v2_version</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>magic</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ff_id3v2_free_extra_meta</name><parameter_list>(<parameter><decl><type><name>ID3v2ExtraMeta</name> <modifier>*</modifier><modifier>*</modifier></type><name>extra_meta</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>ff_id3v2_parse_apic</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>ID3v2ExtraMeta</name> <modifier>*</modifier><modifier>*</modifier></type><name>extra_meta</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>int</name></type> <name>ff_id3v2_parse_chapters</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>ID3v2ExtraMeta</name> <modifier>*</modifier><modifier>*</modifier></type><name>extra_meta</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>ff_id3v2_parse_priv_dict</name><parameter_list>(<parameter><decl><type><name>AVDictionary</name> <modifier>*</modifier><modifier>*</modifier></type><name>d</name></decl></parameter>, <parameter><decl><type><name>ID3v2ExtraMeta</name> <modifier>*</modifier><modifier>*</modifier></type><name>extra_meta</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>ff_id3v2_parse_priv</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>ID3v2ExtraMeta</name> <modifier>*</modifier><modifier>*</modifier></type><name>extra_meta</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>AVMetadataConv</name></type> <name><name>ff_id3v2_34_metadata_conv</name><index>[]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>AVMetadataConv</name></type> <name><name>ff_id3v2_4_metadata_conv</name><index>[]</index></name></decl>;</decl_stmt>






<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>ff_id3v2_tags</name><index>[]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>ff_id3v2_4_tags</name><index>[]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>ff_id3v2_3_tags</name><index>[]</index><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>CodecMime</name></type> <name><name>ff_id3v2_mime_tags</name><index>[]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier> <specifier>const</specifier></type> <name><name>ff_id3v2_picture_types</name><index>[<expr><literal type="number">21</literal></expr>]</index></name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
