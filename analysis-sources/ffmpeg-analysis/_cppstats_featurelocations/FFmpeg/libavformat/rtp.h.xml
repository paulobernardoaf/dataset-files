<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ffmpeg-analysis\_cppstats_featurelocations\FFmpeg\libavformat\rtp.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>AVFORMAT_RTP_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AVFORMAT_RTP_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavformat/avformat.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavcodec/avcodec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libavutil/mathematics.h"</cpp:file></cpp:include>












<function_decl><type><name>int</name></type> <name>ff_rtp_get_payload_type</name><parameter_list>(<parameter><decl><type><name>AVFormatContext</name> <modifier>*</modifier></type><name>fmt</name></decl></parameter>, <parameter><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>par</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>int</name></type> <name>ff_rtp_get_codec_info</name><parameter_list>(<parameter><decl><type><name>AVCodecParameters</name> <modifier>*</modifier></type><name>par</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>payload_type</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ff_rtp_enc_name</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>payload_type</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name><name>enum</name> <name>AVCodecID</name></name></type> <name>ff_rtp_codec_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name><name>enum</name> <name>AVMediaType</name></name></type> <name>codec_type</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTP_PT_PRIVATE</name></cpp:macro> <cpp:value>96</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTP_VERSION</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTP_MAX_SDES</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define> 


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTCP_TX_RATIO_NUM</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTCP_TX_RATIO_DEN</name></cpp:macro> <cpp:value>1000</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTP_XIPH_IDENT</name></cpp:macro> <cpp:value>0xfecdba</cpp:value></cpp:define>


<enum>enum <name>RTCPType</name> <block>{
<decl><name>RTCP_FIR</name> <init>= <expr><literal type="number">192</literal></expr></init></decl>,
<decl><name>RTCP_NACK</name></decl>, 
<decl><name>RTCP_SMPTETC</name></decl>,
<decl><name>RTCP_IJ</name></decl>, 
<decl><name>RTCP_SR</name> <init>= <expr><literal type="number">200</literal></expr></init></decl>,
<decl><name>RTCP_RR</name></decl>, 
<decl><name>RTCP_SDES</name></decl>, 
<decl><name>RTCP_BYE</name></decl>, 
<decl><name>RTCP_APP</name></decl>, 
<decl><name>RTCP_RTPFB</name></decl>,
<decl><name>RTCP_PSFB</name></decl>, 
<decl><name>RTCP_XR</name></decl>, 
<decl><name>RTCP_AVB</name></decl>, 
<decl><name>RTCP_RSI</name></decl>, 
<decl><name>RTCP_TOKEN</name></decl>,
}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTP_PT_IS_RTCP</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((x) &gt;= RTCP_FIR &amp;&amp; (x) &lt;= RTCP_IJ) || ((x) &gt;= RTCP_SR &amp;&amp; (x) &lt;= RTCP_TOKEN))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NTP_TO_RTP_FORMAT</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>av_rescale((x), INT64_C(1) &lt;&lt; 32, 1000000)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
