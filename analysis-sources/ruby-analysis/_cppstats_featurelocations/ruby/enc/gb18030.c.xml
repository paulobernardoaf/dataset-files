<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats_featurelocations\ruby\enc\gb18030.c">





























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"regenc.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">1</literal></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEBUG_GB18030</name><parameter_list>(<parameter><type><name>arg</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEBUG_GB18030</name><parameter_list>(<parameter><type><name>arg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>printf arg</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<enum>enum <block>{
<decl><name>C1</name></decl>, 
<decl><name>C2</name></decl>, 
<decl><name>C4</name></decl>, 
<decl><name>CM</name></decl> 
}</block>;</enum>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>GB18030_MAP</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>,
<expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>,
<expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>,
<expr><name>C4</name></expr>, <expr><name>C4</name></expr>, <expr><name>C4</name></expr>, <expr><name>C4</name></expr>, <expr><name>C4</name></expr>, <expr><name>C4</name></expr>, <expr><name>C4</name></expr>, <expr><name>C4</name></expr>, <expr><name>C4</name></expr>, <expr><name>C4</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>, <expr><name>C1</name></expr>,
<expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>,
<expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>,
<expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>,
<expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C2</name></expr>, <expr><name>C1</name></expr>,
<expr><name>C2</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>,
<expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>,
<expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>,
<expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>,
<expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>,
<expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>,
<expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>,
<expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>CM</name></expr>, <expr><name>C1</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<typedef>typedef <type><enum>enum <block>{ <decl><name>FAILURE</name> <init>= <expr><operator>-</operator><literal type="number">2</literal></expr></init></decl>, <decl><name>ACCEPT</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>, <decl><name>S0</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><name>S1</name></decl>, <decl><name>S2</name></decl>, <decl><name>S3</name></decl> }</block></enum></type> <name>state_t</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>A</name></cpp:macro> <cpp:value>ACCEPT</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>F</name></cpp:macro> <cpp:value>FAILURE</cpp:value></cpp:define>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>signed</name> <name>char</name></type> <name><name>trans</name><index>[]</index><index>[<expr><literal type="number">0x100</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ 
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>F</name></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>,
<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>,
<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>,
<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>,
<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>,
<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>,
<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>,
<expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>F</name></expr>
}</block></expr>,
<expr><block>{ 
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>F</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>F</name></expr>
}</block></expr>,
<expr><block>{ 
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>,
<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>,
<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>,
<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>,
<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>,
<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>,
<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>,
<expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><name>F</name></expr>
}</block></expr>,
<expr><block>{ 
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>A</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>,
<expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>, <expr><name>F</name></expr>
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>A</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>F</name></cpp:undef>

<function><type><specifier>static</specifier> <name>int</name></type>
<name>gb18030_mbc_enc_len</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>UChar</name><modifier>*</modifier></type> <name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>UChar</name><modifier>*</modifier></type> <name>e</name></decl></parameter>, <parameter><decl><type><name>OnigEncoding</name> <name>enc</name></type> <name>ARG_UNUSED</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>firstbyte</name> <init>= <expr><operator>*</operator><name>p</name><operator>++</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>state_t</name></type> <name>s</name> <init>= <expr><name><name>trans</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>firstbyte</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RETURN</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>return s == ACCEPT ? ONIGENC_CONSTRUCT_MBCLEN_CHARFOUND(n) : ONIGENC_CONSTRUCT_MBCLEN_INVALID()</cpp:value></cpp:define>


<if_stmt><if>if <condition>(<expr><name>s</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>RETURN</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>p</name> <operator>==</operator> <name>e</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><call><name>ONIGENC_CONSTRUCT_MBCLEN_NEEDMORE</name><argument_list>(<argument><expr><literal type="number">2</literal><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name>s</name> <operator>=</operator> <name><name>trans</name><index>[<expr><name>s</name></expr>]</index><index>[<expr><operator>*</operator><name>p</name><operator>++</operator></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>s</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>RETURN</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>p</name> <operator>==</operator> <name>e</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><call><name>ONIGENC_CONSTRUCT_MBCLEN_NEEDMORE</name><argument_list>(<argument><expr><literal type="number">4</literal><operator>-</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name>s</name> <operator>=</operator> <name><name>trans</name><index>[<expr><name>s</name></expr>]</index><index>[<expr><operator>*</operator><name>p</name><operator>++</operator></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>s</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>RETURN</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>p</name> <operator>==</operator> <name>e</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><call><name>ONIGENC_CONSTRUCT_MBCLEN_NEEDMORE</name><argument_list>(<argument><expr><literal type="number">4</literal><operator>-</operator><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name>s</name> <operator>=</operator> <name><name>trans</name><index>[<expr><name>s</name></expr>]</index><index>[<expr><operator>*</operator><name>p</name><operator>++</operator></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RETURN</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>RETURN</name></cpp:undef>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>OnigCodePoint</name></type>
<name>gb18030_mbc_to_code</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>UChar</name><modifier>*</modifier></type> <name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>UChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>c</name></decl>, <decl><type ref="prev"/><name>i</name></decl>, <decl><type ref="prev"/><name>len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigCodePoint</name></type> <name>n</name></decl>;</decl_stmt>

<expr_stmt><expr><name>len</name> <operator>=</operator> <call><name>enclen</name><argument_list>(<argument><expr><name>enc</name></expr></argument>, <argument><expr><name>p</name></expr></argument>, <argument><expr><name>end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>n</name> <operator>=</operator> <operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><operator>(</operator><operator>*</operator><name>p</name><operator>++</operator><operator>)</operator></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>len</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>n</name></expr>;</return></block_content></block></if></if_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>len</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>p</name> <operator>&gt;=</operator> <name>end</name></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>
<expr_stmt><expr><name>c</name> <operator>=</operator> <operator>*</operator><name>p</name><operator>++</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>n</name> <operator>&lt;&lt;=</operator> <literal type="number">8</literal></expr>;</expr_stmt> <expr_stmt><expr><name>n</name> <operator>+=</operator> <name>c</name></expr>;</expr_stmt>
</block_content>}</block></for>
<return>return <expr><name>n</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type>
<name>gb18030_code_to_mbc</name><parameter_list>(<parameter><decl><type><name>OnigCodePoint</name></type> <name>code</name></decl></parameter>, <parameter><decl><type><name>UChar</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>onigenc_mb4_code_to_mbc</name><argument_list>(<argument><expr><name>enc</name></expr></argument>, <argument><expr><name>code</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type>
<name>gb18030_mbc_case_fold</name><parameter_list>(<parameter><decl><type><name>OnigCaseFoldType</name></type> <name>flag</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>UChar</name><modifier>*</modifier><modifier>*</modifier></type> <name>pp</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>UChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>,
<parameter><decl><type><name>UChar</name><modifier>*</modifier></type> <name>lower</name></decl></parameter>, <parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>onigenc_mbn_mbc_case_fold</name><argument_list>(<argument><expr><name>enc</name></expr></argument>, <argument><expr><name>flag</name></expr></argument>,
<argument><expr><name>pp</name></expr></argument>, <argument><expr><name>end</name></expr></argument>, <argument><expr><name>lower</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
static int
gb18030_is_mbc_ambiguous(OnigCaseFoldType flag,
const UChar** pp, const UChar* end, OnigEncoding enc)
{
return onigenc_mbn_is_mbc_ambiguous(enc, flag, pp, end);
}
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <name>int</name></type>
<name>gb18030_is_code_ctype</name><parameter_list>(<parameter><decl><type><name>OnigCodePoint</name></type> <name>code</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>ctype</name></decl></parameter>, <parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>onigenc_mb4_is_code_ctype</name><argument_list>(<argument><expr><name>enc</name></expr></argument>, <argument><expr><name>code</name></expr></argument>, <argument><expr><name>ctype</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<enum>enum <name>state</name> <block>{
<decl><name>S_START</name></decl>,
<decl><name>S_one_C2</name></decl>,
<decl><name>S_one_C4</name></decl>,
<decl><name>S_one_CM</name></decl>,

<decl><name>S_odd_CM_one_CX</name></decl>,
<decl><name>S_even_CM_one_CX</name></decl>,


<decl><name>S_one_CMC4</name></decl>,
<decl><name>S_odd_CMC4</name></decl>,
<decl><name>S_one_C4_odd_CMC4</name></decl>,
<decl><name>S_even_CMC4</name></decl>,
<decl><name>S_one_C4_even_CMC4</name></decl>,

<decl><name>S_odd_CM_odd_CMC4</name></decl>,
<decl><name>S_even_CM_odd_CMC4</name></decl>,

<decl><name>S_odd_CM_even_CMC4</name></decl>,
<decl><name>S_even_CM_even_CMC4</name></decl>,


<decl><name>S_odd_C4CM</name></decl>,
<decl><name>S_one_CM_odd_C4CM</name></decl>,
<decl><name>S_even_C4CM</name></decl>,
<decl><name>S_one_CM_even_C4CM</name></decl>,

<decl><name>S_even_CM_odd_C4CM</name></decl>,
<decl><name>S_odd_CM_odd_C4CM</name></decl>,
<decl><name>S_even_CM_even_C4CM</name></decl>,
<decl><name>S_odd_CM_even_C4CM</name></decl>
}</block>;</enum>

<function><type><specifier>static</specifier> <name>UChar</name><modifier>*</modifier></type>
<name>gb18030_left_adjust_char_head</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>UChar</name><modifier>*</modifier></type> <name>start</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>UChar</name><modifier>*</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>UChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>UChar</name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>enum</name> <name>state</name></name></type> <name>state</name> <init>= <expr><name>S_START</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>DEBUG_GB18030</name><argument_list>(<argument><expr><operator>(</operator><literal type="string">"----------------\n"</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>p</name> <operator>=</operator> <name>s</name></expr>;</init> <condition><expr><name>p</name> <operator>&gt;=</operator> <name>start</name></expr>;</condition> <incr><expr><name>p</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>DEBUG_GB18030</name><argument_list>(<argument><expr><operator>(</operator><literal type="string">"state %d --(%02x)--&gt;\n"</literal><operator>,</operator> <name>state</name><operator>,</operator> <operator>*</operator><name>p</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<switch>switch <condition>(<expr><name>state</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>S_START</name></expr>:</case>
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><name>s</name></expr>;</return>
<case>case <expr><name>C2</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_one_C2</name></expr>;</expr_stmt> 
<break>break;</break>
<case>case <expr><name>C4</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_one_C4</name></expr>;</expr_stmt> 
<break>break;</break>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_one_CM</name></expr>;</expr_stmt> 
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_one_C2</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><name>s</name></expr>;</return>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_odd_CM_one_CX</name></expr>;</expr_stmt> 
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_one_C4</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><name>s</name></expr>;</return>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_one_CMC4</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_one_CM</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><name>s</name></expr>;</return>
<case>case <expr><name>C4</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_odd_C4CM</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_odd_CM_one_CX</name></expr>;</expr_stmt> 
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>

<case>case <expr><name>S_odd_CM_one_CX</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_even_CM_one_CX</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_even_CM_one_CX</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><name>s</name></expr>;</return>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_odd_CM_one_CX</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>

<case>case <expr><name>S_one_CMC4</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>C4</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_one_C4_odd_CMC4</name></expr>;</expr_stmt> 
<break>break;</break>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_even_CM_one_CX</name></expr>;</expr_stmt> 
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_odd_CMC4</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>C4</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_one_C4_odd_CMC4</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_odd_CM_odd_CMC4</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_one_C4_odd_CMC4</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_even_CMC4</name></expr>;</expr_stmt> 
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_even_CMC4</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">3</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>C4</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_one_C4_even_CMC4</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_odd_CM_even_CMC4</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_one_C4_even_CMC4</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">3</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_odd_CMC4</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>

<case>case <expr><name>S_odd_CM_odd_CMC4</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">3</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_even_CM_odd_CMC4</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_even_CM_odd_CMC4</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_odd_CM_odd_CMC4</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>

<case>case <expr><name>S_odd_CM_even_CMC4</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_even_CM_even_CMC4</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_even_CM_even_CMC4</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">3</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_odd_CM_even_CMC4</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>

<case>case <expr><name>S_odd_C4CM</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><name>s</name></expr>;</return>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_one_CM_odd_C4CM</name></expr>;</expr_stmt> 
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_one_CM_odd_C4CM</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">2</literal><operator>)</operator></expr>;</return> 
<case>case <expr><name>C4</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_even_C4CM</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_even_CM_odd_C4CM</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_even_C4CM</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">2</literal><operator>)</operator></expr>;</return> 
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_one_CM_even_C4CM</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_one_CM_even_C4CM</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return> 
<case>case <expr><name>C4</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_odd_C4CM</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_even_CM_even_C4CM</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>

<case>case <expr><name>S_even_CM_odd_C4CM</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return> 
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_odd_CM_odd_C4CM</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_odd_CM_odd_C4CM</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">2</literal><operator>)</operator></expr>;</return> 
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_even_CM_odd_C4CM</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>

<case>case <expr><name>S_even_CM_even_C4CM</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">2</literal><operator>)</operator></expr>;</return> 
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_odd_CM_even_C4CM</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
<case>case <expr><name>S_odd_CM_even_C4CM</name></expr>:</case> 
<switch>switch <condition>(<expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>p</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>C1</name></expr>:</case>
<case>case <expr><name>C2</name></expr>:</case>
<case>case <expr><name>C4</name></expr>:</case>
<return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return> 
<case>case <expr><name>CM</name></expr>:</case>
<expr_stmt><expr><name>state</name> <operator>=</operator> <name>S_even_CM_even_C4CM</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<break>break;</break>
</block_content>}</block></switch>
</block_content>}</block></for>

<expr_stmt><expr><call><name>DEBUG_GB18030</name><argument_list>(<argument><expr><operator>(</operator><literal type="string">"state %d\n"</literal><operator>,</operator> <name>state</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<switch>switch <condition>(<expr><name>state</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>S_START</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_one_C2</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_one_C4</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_one_CM</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>

<case>case <expr><name>S_odd_CM_one_CX</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_even_CM_one_CX</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>

<case>case <expr><name>S_one_CMC4</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_odd_CMC4</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_one_C4_odd_CMC4</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_even_CMC4</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">3</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_one_C4_even_CMC4</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">3</literal><operator>)</operator></expr>;</return>

<case>case <expr><name>S_odd_CM_odd_CMC4</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">3</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_even_CM_odd_CMC4</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>

<case>case <expr><name>S_odd_CM_even_CMC4</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_even_CM_even_CMC4</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">3</literal><operator>)</operator></expr>;</return>

<case>case <expr><name>S_odd_C4CM</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_one_CM_odd_C4CM</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">2</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_even_C4CM</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">2</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_one_CM_even_C4CM</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>

<case>case <expr><name>S_even_CM_odd_C4CM</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_odd_CM_odd_C4CM</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">2</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_even_CM_even_C4CM</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">2</literal><operator>)</operator></expr>;</return>
<case>case <expr><name>S_odd_CM_even_C4CM</name></expr>:</case> <return>return <expr><operator>(</operator><name>UChar</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>s</name> <operator>-</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></switch>

<return>return <expr><operator>(</operator><name>UChar</name><operator>*</operator> <operator>)</operator><name>s</name></expr>;</return> 
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type>
<name>gb18030_is_allowed_reverse_match</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>UChar</name><modifier>*</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>UChar</name><modifier>*</modifier> <name>end</name></type> <name>ARG_UNUSED</name></decl></parameter>, <parameter><decl><type><name>OnigEncoding</name> <name>enc</name></type> <name>ARG_UNUSED</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><ternary><condition><expr><name><name>GB18030_MAP</name><index>[<expr><operator>*</operator><name>s</name></expr>]</index></name> <operator>==</operator> <name>C1</name></expr> ?</condition><then> <expr><name>TRUE</name></expr> </then><else>: <expr><name>FALSE</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>






<expr_stmt><expr><call><name>OnigEncodingDefine</name><argument_list>(<argument><expr><name>gb18030</name></expr></argument>, <argument><expr><name>GB18030</name></expr></argument>)</argument_list></call> <operator>=</operator> <block>{
<expr><name>gb18030_mbc_enc_len</name></expr>,
<expr><literal type="string">"GB18030"</literal></expr>, 
<expr><literal type="number">4</literal></expr>, 
<expr><literal type="number">1</literal></expr>, 
<expr><name>onigenc_is_mbc_newline_0x0a</name></expr>,
<expr><name>gb18030_mbc_to_code</name></expr>,
<expr><name>onigenc_mb4_code_to_mbclen</name></expr>,
<expr><name>gb18030_code_to_mbc</name></expr>,
<expr><name>gb18030_mbc_case_fold</name></expr>,
<expr><name>onigenc_ascii_apply_all_case_fold</name></expr>,
<expr><name>onigenc_ascii_get_case_fold_codes_by_str</name></expr>,
<expr><name>onigenc_minimum_property_name_to_ctype</name></expr>,
<expr><name>gb18030_is_code_ctype</name></expr>,
<expr><name>onigenc_not_support_get_ctype_code_range</name></expr>,
<expr><name>gb18030_left_adjust_char_head</name></expr>,
<expr><name>gb18030_is_allowed_reverse_match</name></expr>,
<expr><name>onigenc_ascii_only_case_map</name></expr>,
<expr><literal type="number">0</literal></expr>,
<expr><name>ONIGENC_FLAG_NONE</name></expr>,
}</block></expr>;</expr_stmt>
</unit>
