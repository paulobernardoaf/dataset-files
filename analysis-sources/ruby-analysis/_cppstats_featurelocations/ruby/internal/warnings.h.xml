<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats_featurelocations\ruby\internal\warnings.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>INTERNAL_WARNINGS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INTERNAL_WARNINGS_H</name></cpp:macro></cpp:define>









<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"internal/compilers.h"</cpp:file></cpp:include> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>MSC_VERSION_SINCE</name><argument_list>(<argument><expr><literal type="number">1200</literal></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:empty>#</cpp:empty>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_PUSH</name></cpp:macro> <cpp:value>__pragma(warning(push))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_POP</name></cpp:macro> <cpp:value>__pragma(warning(pop))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_ERROR</name><parameter_list>(<parameter><type><name>flag</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__pragma(warning(error: flag))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_IGNORED</name><parameter_list>(<parameter><type><name>flag</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__pragma(warning(disable: flag))</cpp:value></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__clang__</name></expr></argument>)</argument_list></call></expr></cpp:elif>
<cpp:empty>#</cpp:empty>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_PRAGMA0</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_Pragma(#x)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_PRAGMA1</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>COMPILER_WARNING_PRAGMA0(clang diagnostic x)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_PRAGMA2</name><parameter_list>(<parameter><type><name>x</name></type></parameter>, <parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>COMPILER_WARNING_PRAGMA1(x #y)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_PUSH</name></cpp:macro> <cpp:value>COMPILER_WARNING_PRAGMA1(push)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_POP</name></cpp:macro> <cpp:value>COMPILER_WARNING_PRAGMA1(pop)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_ERROR</name><parameter_list>(<parameter><type><name>flag</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>COMPILER_WARNING_PRAGMA2(error, flag)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_IGNORED</name><parameter_list>(<parameter><type><name>flag</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>COMPILER_WARNING_PRAGMA2(ignored, flag)</cpp:value></cpp:define>

<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>GCC_VERSION_SINCE</name><argument_list>(<argument><expr><literal type="number">4</literal><operator>,</operator> <literal type="number">6</literal><operator>,</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr></cpp:elif>
<cpp:empty>#</cpp:empty>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_PRAGMA0</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_Pragma(#x)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_PRAGMA1</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>COMPILER_WARNING_PRAGMA0(GCC diagnostic x)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_PRAGMA2</name><parameter_list>(<parameter><type><name>x</name></type></parameter>, <parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>COMPILER_WARNING_PRAGMA1(x #y)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_PUSH</name></cpp:macro> <cpp:value>COMPILER_WARNING_PRAGMA1(push)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_POP</name></cpp:macro> <cpp:value>COMPILER_WARNING_PRAGMA1(pop)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_ERROR</name><parameter_list>(<parameter><type><name>flag</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>COMPILER_WARNING_PRAGMA2(error, flag)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_IGNORED</name><parameter_list>(<parameter><type><name>flag</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>COMPILER_WARNING_PRAGMA2(ignored, flag)</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:empty>#</cpp:empty>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_PUSH</name></cpp:macro></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_POP</name></cpp:macro></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_ERROR</name><parameter_list>(<parameter><type><name>flag</name></type></parameter>)</parameter_list></cpp:macro></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMPILER_WARNING_IGNORED</name><parameter_list>(<parameter><type><name>flag</name></type></parameter>)</parameter_list></cpp:macro></cpp:define> 

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
