<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats_featurelocations\ruby\ext\openssl\ossl_pkcs7.c">








<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ossl.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NewPKCS7si</name><parameter_list>(<parameter><type><name>klass</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>TypedData_Wrap_Struct((klass), &amp;ossl_pkcs7_signer_info_type, 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SetPKCS7si</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>, <parameter><type><name>p7si</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { if (!(p7si)) { ossl_raise(rb_eRuntimeError, "PKCS7si wasn't initialized."); } RTYPEDDATA_DATA(obj) = (p7si); } while (0)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GetPKCS7si</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>, <parameter><type><name>p7si</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { TypedData_Get_Struct((obj), PKCS7_SIGNER_INFO, &amp;ossl_pkcs7_signer_info_type, (p7si)); if (!(p7si)) { ossl_raise(rb_eRuntimeError, "PKCS7si wasn't initialized."); } } while (0)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NewPKCS7ri</name><parameter_list>(<parameter><type><name>klass</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>TypedData_Wrap_Struct((klass), &amp;ossl_pkcs7_recip_info_type, 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SetPKCS7ri</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>, <parameter><type><name>p7ri</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { if (!(p7ri)) { ossl_raise(rb_eRuntimeError, "PKCS7ri wasn't initialized."); } RTYPEDDATA_DATA(obj) = (p7ri); } while (0)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GetPKCS7ri</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>, <parameter><type><name>p7ri</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { TypedData_Get_Struct((obj), PKCS7_RECIP_INFO, &amp;ossl_pkcs7_recip_info_type, (p7ri)); if (!(p7ri)) { ossl_raise(rb_eRuntimeError, "PKCS7ri wasn't initialized."); } } while (0)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>numberof</name><parameter_list>(<parameter><type><name>ary</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(int)(sizeof(ary)/sizeof((ary)[0]))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ossl_pkcs7_set_data</name><parameter_list>(<parameter><type><name>o</name></type></parameter>,<parameter><type><name>v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>rb_iv_set((o), "@data", (v))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ossl_pkcs7_get_data</name><parameter_list>(<parameter><type><name>o</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>rb_iv_get((o), "@data")</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ossl_pkcs7_set_err_string</name><parameter_list>(<parameter><type><name>o</name></type></parameter>,<parameter><type><name>v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>rb_iv_set((o), "@error_string", (v))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ossl_pkcs7_get_err_string</name><parameter_list>(<parameter><type><name>o</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>rb_iv_get((o), "@error_string")</cpp:value></cpp:define>




<decl_stmt><decl><type><name>VALUE</name></type> <name>cPKCS7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>cPKCS7Signer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>cPKCS7Recipient</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>ePKCS7Error</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>ossl_pkcs7_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>PKCS7_free</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>const</specifier> <name>rb_data_type_t</name></type> <name>ossl_pkcs7_type</name> <init>= <expr><block>{
<expr><literal type="string">"OpenSSL/PKCS7"</literal></expr>,
<expr><block>{
<expr><literal type="number">0</literal></expr>, <expr><name>ossl_pkcs7_free</name></expr>,
}</block></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>RUBY_TYPED_FREE_IMMEDIATELY</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>ossl_pkcs7_signer_info_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>PKCS7_SIGNER_INFO_free</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>rb_data_type_t</name></type> <name>ossl_pkcs7_signer_info_type</name> <init>= <expr><block>{
<expr><literal type="string">"OpenSSL/PKCS7/SIGNER_INFO"</literal></expr>,
<expr><block>{
<expr><literal type="number">0</literal></expr>, <expr><name>ossl_pkcs7_signer_info_free</name></expr>,
}</block></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>RUBY_TYPED_FREE_IMMEDIATELY</name></expr>,
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>ossl_pkcs7_recip_info_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>PKCS7_RECIP_INFO_free</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>rb_data_type_t</name></type> <name>ossl_pkcs7_recip_info_type</name> <init>= <expr><block>{
<expr><literal type="string">"OpenSSL/PKCS7/RECIP_INFO"</literal></expr>,
<expr><block>{
<expr><literal type="number">0</literal></expr>, <expr><name>ossl_pkcs7_recip_info_free</name></expr>,
}</block></expr>,
<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>RUBY_TYPED_FREE_IMMEDIATELY</name></expr>,
}</block></expr></init></decl>;</decl_stmt>





<function><type><specifier>static</specifier> <name>PKCS7_SIGNER_INFO</name> <modifier>*</modifier></type>
<name>ossl_PKCS7_SIGNER_INFO_dup</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>PKCS7_SIGNER_INFO</name> <modifier>*</modifier></type><name>si</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>PKCS7_SIGNER_INFO</name> <operator>*</operator><operator>)</operator><call><name>ASN1_dup</name><argument_list>(<argument><expr><operator>(</operator><name>i2d_of_void</name> <operator>*</operator><operator>)</operator><name>i2d_PKCS7_SIGNER_INFO</name></expr></argument>,
<argument><expr><operator>(</operator><name>d2i_of_void</name> <operator>*</operator><operator>)</operator><name>d2i_PKCS7_SIGNER_INFO</name></expr></argument>,
<argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><name>si</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>PKCS7_RECIP_INFO</name> <modifier>*</modifier></type>
<name>ossl_PKCS7_RECIP_INFO_dup</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>PKCS7_RECIP_INFO</name> <modifier>*</modifier></type><name>si</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>PKCS7_RECIP_INFO</name> <operator>*</operator><operator>)</operator><call><name>ASN1_dup</name><argument_list>(<argument><expr><operator>(</operator><name>i2d_of_void</name> <operator>*</operator><operator>)</operator><name>i2d_PKCS7_RECIP_INFO</name></expr></argument>,
<argument><expr><operator>(</operator><name>d2i_of_void</name> <operator>*</operator><operator>)</operator><name>d2i_PKCS7_RECIP_INFO</name></expr></argument>,
<argument><expr><operator>(</operator><name>char</name> <operator>*</operator><operator>)</operator><name>si</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7si_new</name><parameter_list>(<parameter><decl><type><name>PKCS7_SIGNER_INFO</name> <modifier>*</modifier></type><name>p7si</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_SIGNER_INFO</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>obj</name></decl>;</decl_stmt>

<expr_stmt><expr><name>obj</name> <operator>=</operator> <call><name>NewPKCS7si</name><argument_list>(<argument><expr><name>cPKCS7Signer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>pkcs7</name> <operator>=</operator> <ternary><condition><expr><name>p7si</name></expr> ?</condition><then> <expr><call><name>ossl_PKCS7_SIGNER_INFO_dup</name><argument_list>(<argument><expr><name>p7si</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><call><name>PKCS7_SIGNER_INFO_new</name><argument_list>()</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>pkcs7</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>SetPKCS7si</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>obj</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>PKCS7_SIGNER_INFO</name> <modifier>*</modifier></type>
<name>DupPKCS7SignerPtr</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>obj</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_SIGNER_INFO</name> <modifier>*</modifier></type><name>p7si</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7si</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>p7si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>pkcs7</name> <operator>=</operator> <call><name>ossl_PKCS7_SIGNER_INFO_dup</name><argument_list>(<argument><expr><name>p7si</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>pkcs7</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7ri_new</name><parameter_list>(<parameter><decl><type><name>PKCS7_RECIP_INFO</name> <modifier>*</modifier></type><name>p7ri</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_RECIP_INFO</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>obj</name></decl>;</decl_stmt>

<expr_stmt><expr><name>obj</name> <operator>=</operator> <call><name>NewPKCS7ri</name><argument_list>(<argument><expr><name>cPKCS7Recipient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>pkcs7</name> <operator>=</operator> <ternary><condition><expr><name>p7ri</name></expr> ?</condition><then> <expr><call><name>ossl_PKCS7_RECIP_INFO_dup</name><argument_list>(<argument><expr><name>p7ri</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><call><name>PKCS7_RECIP_INFO_new</name><argument_list>()</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>pkcs7</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>SetPKCS7ri</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>obj</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>PKCS7_RECIP_INFO</name> <modifier>*</modifier></type>
<name>DupPKCS7RecipientPtr</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>obj</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_RECIP_INFO</name> <modifier>*</modifier></type><name>p7ri</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7ri</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>p7ri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>pkcs7</name> <operator>=</operator> <call><name>ossl_PKCS7_RECIP_INFO_dup</name><argument_list>(<argument><expr><name>p7ri</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>pkcs7</name></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_s_read_smime</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>arg</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>BIO</name> <modifier>*</modifier></type><name>in</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>ret</name></decl>, <decl><type ref="prev"/><name>data</name></decl>;</decl_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>NewPKCS7</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>in</name> <operator>=</operator> <call><name>ossl_obj2bio</name><argument_list>(<argument><expr><operator>&amp;</operator><name>arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>pkcs7</name> <operator>=</operator> <call><name>SMIME_read_PKCS7</name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>pkcs7</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name>data</name> <operator>=</operator> <ternary><condition><expr><name>out</name></expr> ?</condition><then> <expr><call><name>ossl_membio2str</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><name>Qnil</name></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SetPKCS7</name><argument_list>(<argument><expr><name>ret</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_pkcs7_set_data</name><argument_list>(<argument><expr><name>ret</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_pkcs7_set_err_string</name><argument_list>(<argument><expr><name>ret</name></expr></argument>, <argument><expr><name>Qnil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_s_write_smime</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>VALUE</name></type> <name>pkcs7</name></decl>, <decl><type ref="prev"/><name>data</name></decl>, <decl><type ref="prev"/><name>flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>BIO</name> <modifier>*</modifier></type><name>out</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>p7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>str</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>flg</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>rb_scan_args</name><argument_list>(<argument><expr><name>argc</name></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><literal type="string">"12"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>pkcs7</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>data</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>flg</name> <operator>=</operator> <ternary><condition><expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>NUM2INT</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>data</name> <operator>=</operator> <call><name>ossl_pkcs7_get_data</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>NIL_P</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>PKCS7_is_detached</name><argument_list>(<argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>flg</name> <operator>|=</operator> <name>PKCS7_DETACHED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name>in</name> <operator>=</operator> <ternary><condition><expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><name>NULL</name></expr> </then><else>: <expr><call><name>ossl_obj2bio</name><argument_list>(<argument><expr><operator>&amp;</operator><name>data</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><operator>(</operator><name>out</name> <operator>=</operator> <call><name>BIO_new</name><argument_list>(<argument><expr><call><name>BIO_s_mem</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block>{<block_content>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>SMIME_write_PKCS7</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>, <argument><expr><name>in</name></expr></argument>, <argument><expr><name>flg</name></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>str</name> <operator>=</operator> <call><name>ossl_membio2str</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>str</name></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_s_sign</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>VALUE</name></type> <name>cert</name></decl>, <decl><type ref="prev"/><name>key</name></decl>, <decl><type ref="prev"/><name>data</name></decl>, <decl><type ref="prev"/><name>certs</name></decl>, <decl><type ref="prev"/><name>flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>X509</name> <modifier>*</modifier></type><name>x509</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type><name>pkey</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>BIO</name> <modifier>*</modifier></type><name>in</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>STACK_OF</name><argument_list>(<argument><expr><name>X509</name></expr></argument>)</argument_list></call> <operator>*</operator><name>x509s</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>flg</name></decl>, <decl><type ref="prev"/><name>status</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>ret</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>rb_scan_args</name><argument_list>(<argument><expr><name>argc</name></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><literal type="string">"32"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>cert</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>data</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>certs</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>x509</name> <operator>=</operator> <call><name>GetX509CertPtr</name><argument_list>(<argument><expr><name>cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name>pkey</name> <operator>=</operator> <call><name>GetPrivPKeyPtr</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name>flg</name> <operator>=</operator> <ternary><condition><expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>NUM2INT</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>NewPKCS7</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>in</name> <operator>=</operator> <call><name>ossl_obj2bio</name><argument_list>(<argument><expr><operator>&amp;</operator><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>certs</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>x509s</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></if>
<else>else<block>{<block_content>
<expr_stmt><expr><name>x509s</name> <operator>=</operator> <call><name>ossl_protect_x509_ary2sk</name><argument_list>(<argument><expr><name>certs</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>status</name></expr>)</condition><block>{<block_content>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_jump_tag</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><operator>(</operator><name>pkcs7</name> <operator>=</operator> <call><name>PKCS7_sign</name><argument_list>(<argument><expr><name>x509</name></expr></argument>, <argument><expr><name>pkey</name></expr></argument>, <argument><expr><name>x509s</name></expr></argument>, <argument><expr><name>in</name></expr></argument>, <argument><expr><name>flg</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block>{<block_content>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sk_X509_pop_free</name><argument_list>(<argument><expr><name>x509s</name></expr></argument>, <argument><expr><name>X509_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>SetPKCS7</name><argument_list>(<argument><expr><name>ret</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_pkcs7_set_data</name><argument_list>(<argument><expr><name>ret</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_pkcs7_set_err_string</name><argument_list>(<argument><expr><name>ret</name></expr></argument>, <argument><expr><name>Qnil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sk_X509_pop_free</name><argument_list>(<argument><expr><name>x509s</name></expr></argument>, <argument><expr><name>X509_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_s_encrypt</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>VALUE</name></type> <name>certs</name></decl>, <decl><type ref="prev"/><name>data</name></decl>, <decl><type ref="prev"/><name>cipher</name></decl>, <decl><type ref="prev"/><name>flags</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>STACK_OF</name><argument_list>(<argument><expr><name>X509</name></expr></argument>)</argument_list></call> <operator>*</operator><name>x509s</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>BIO</name> <modifier>*</modifier></type><name>in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>EVP_CIPHER</name> <modifier>*</modifier></type><name>ciph</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>flg</name></decl>, <decl><type ref="prev"/><name>status</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>ret</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>p7</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>rb_scan_args</name><argument_list>(<argument><expr><name>argc</name></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><literal type="string">"22"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>certs</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>data</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cipher</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>cipher</name></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>OPENSSL_NO_RC2</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name>ciph</name> <operator>=</operator> <call><name>EVP_rc2_40_cbc</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>OPENSSL_NO_DES</name></expr></argument>)</argument_list></call></expr></cpp:elif>
<expr_stmt><expr><name>ciph</name> <operator>=</operator> <call><name>EVP_des_ede3_cbc</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>OPENSSL_NO_RC2</name></expr></argument>)</argument_list></call></expr></cpp:elif>
<expr_stmt><expr><name>ciph</name> <operator>=</operator> <call><name>EVP_rc2_40_cbc</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>OPENSSL_NO_AES</name></expr></argument>)</argument_list></call></expr></cpp:elif>
<expr_stmt><expr><name>ciph</name> <operator>=</operator> <call><name>EVP_EVP_aes_128_cbc</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><literal type="string">"Must specify cipher"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name>ciph</name> <operator>=</operator> <call><name>ossl_evp_get_cipherbyname</name><argument_list>(<argument><expr><name>cipher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><name>flg</name> <operator>=</operator> <ternary><condition><expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>NUM2INT</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>NewPKCS7</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>in</name> <operator>=</operator> <call><name>ossl_obj2bio</name><argument_list>(<argument><expr><operator>&amp;</operator><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>x509s</name> <operator>=</operator> <call><name>ossl_protect_x509_ary2sk</name><argument_list>(<argument><expr><name>certs</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>status</name></expr>)</condition><block>{<block_content>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_jump_tag</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><operator>(</operator><name>p7</name> <operator>=</operator> <call><name>PKCS7_encrypt</name><argument_list>(<argument><expr><name>x509s</name></expr></argument>, <argument><expr><name>in</name></expr></argument>, <argument><expr><operator>(</operator><name>EVP_CIPHER</name><operator>*</operator><operator>)</operator><name>ciph</name></expr></argument>, <argument><expr><name>flg</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block>{<block_content>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sk_X509_pop_free</name><argument_list>(<argument><expr><name>x509s</name></expr></argument>, <argument><expr><name>X509_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SetPKCS7</name><argument_list>(<argument><expr><name>ret</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_pkcs7_set_data</name><argument_list>(<argument><expr><name>ret</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sk_X509_pop_free</name><argument_list>(<argument><expr><name>x509s</name></expr></argument>, <argument><expr><name>X509_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_alloc</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>obj</name></decl>;</decl_stmt>

<expr_stmt><expr><name>obj</name> <operator>=</operator> <call><name>NewPKCS7</name><argument_list>(<argument><expr><name>klass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>pkcs7</name> <operator>=</operator> <call><name>PKCS7_new</name><argument_list>()</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>SetPKCS7</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>obj</name></expr>;</return>
</block_content>}</block></function>








<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_initialize</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>p7</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>pkcs</name> <init>= <expr><call><name>DATA_PTR</name><argument_list>(<argument><expr><name>self</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>BIO</name> <modifier>*</modifier></type><name>in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>arg</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><call><name>rb_scan_args</name><argument_list>(<argument><expr><name>argc</name></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><literal type="string">"01"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>arg</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>self</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name>arg</name> <operator>=</operator> <call><name>ossl_to_der_if_possible</name><argument_list>(<argument><expr><name>arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>in</name> <operator>=</operator> <call><name>ossl_obj2bio</name><argument_list>(<argument><expr><operator>&amp;</operator><name>arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p7</name> <operator>=</operator> <call><name>PEM_read_bio_PKCS7</name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pkcs</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>p7</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>OSSL_BIO_reset</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p7</name> <operator>=</operator> <call><name>d2i_PKCS7_bio</name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>pkcs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>p7</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PKCS7_free</name><argument_list>(<argument><expr><name>pkcs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DATA_PTR</name><argument_list>(<argument><expr><name>self</name></expr></argument>)</argument_list></call> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>rb_eArgError</name></expr></argument>, <argument><expr><literal type="string">"Could not parse the PKCS7"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>DATA_PTR</name><argument_list>(<argument><expr><name>self</name></expr></argument>)</argument_list></call> <operator>=</operator> <name>pkcs</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_pkcs7_set_data</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>Qnil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_pkcs7_set_err_string</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>Qnil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>self</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_copy</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>other</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>a</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>b</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>rb_check_frozen</name><argument_list>(<argument><expr><name>self</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>self</name> <operator>==</operator> <name>other</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>self</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>other</name></expr></argument>, <argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>pkcs7</name> <operator>=</operator> <call><name>PKCS7_dup</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>pkcs7</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>DATA_PTR</name><argument_list>(<argument><expr><name>self</name></expr></argument>)</argument_list></call> <operator>=</operator> <name>pkcs7</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PKCS7_free</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>self</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type>
<name>ossl_pkcs7_sym2typeid</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>sym</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>ret</name> <init>= <expr><name>Qnil</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>l</name></decl>;</decl_stmt>

<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{
<decl_stmt><decl><type><name>char</name></type> <name><name>name</name><index>[<expr><literal type="number">20</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nid</name></decl>;</decl_stmt>
}</block> <decl><name><name>p7_type_tab</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"signed"</literal></expr>, <expr><name>NID_pkcs7_signed</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"data"</literal></expr>, <expr><name>NID_pkcs7_data</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"signedAndEnveloped"</literal></expr>, <expr><name>NID_pkcs7_signedAndEnveloped</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"enveloped"</literal></expr>, <expr><name>NID_pkcs7_enveloped</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"encrypted"</literal></expr>, <expr><name>NID_pkcs7_encrypted</name></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"digest"</literal></expr>, <expr><name>NID_pkcs7_digest</name></expr> }</block></expr>,
}</block></expr></init></decl>;</struct>

<if_stmt><if>if <condition>(<expr><call><name>SYMBOL_P</name><argument_list>(<argument><expr><name>sym</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>sym</name> <operator>=</operator> <call><name>rb_sym2str</name><argument_list>(<argument><expr><name>sym</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>StringValue</name><argument_list>(<argument><expr><name>sym</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><call><name>RSTRING_GETMEM</name><argument_list>(<argument><expr><name>sym</name></expr></argument>, <argument><expr><name>s</name></expr></argument>, <argument><expr><name>l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>i</name> <operator>==</operator> <call><name>numberof</name><argument_list>(<argument><expr><name>p7_type_tab</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><literal type="string">"unknown type \"%"</literal><name>PRIsVALUE</name><literal type="string">"\""</literal></expr></argument>, <argument><expr><name>sym</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name><name>p7_type_tab</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>l</name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><call><name>strcmp</name><argument_list>(<argument><expr><name><name>p7_type_tab</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>, <argument><expr><name>s</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block>{<block_content>
<expr_stmt><expr><name>ret</name> <operator>=</operator> <name><name>p7_type_tab</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>nid</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_set_type</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>type</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>p7</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>PKCS7_set_type</name><argument_list>(<argument><expr><name>p7</name></expr></argument>, <argument><expr><call><name>ossl_pkcs7_sym2typeid</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>type</name></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_get_type</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>p7</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><call><name>PKCS7_type_is_signed</name><argument_list>(<argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>ID2SYM</name><argument_list>(<argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"signed"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><call><name>PKCS7_type_is_encrypted</name><argument_list>(<argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>ID2SYM</name><argument_list>(<argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"encrypted"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><call><name>PKCS7_type_is_enveloped</name><argument_list>(<argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>ID2SYM</name><argument_list>(<argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"enveloped"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><call><name>PKCS7_type_is_signedAndEnveloped</name><argument_list>(<argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>ID2SYM</name><argument_list>(<argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"signedAndEnveloped"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><call><name>PKCS7_type_is_data</name><argument_list>(<argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>ID2SYM</name><argument_list>(<argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"data"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><name>Qnil</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_set_detached</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>flag</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>p7</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>flag</name> <operator>!=</operator> <name>Qtrue</name> <operator>&amp;&amp;</operator> <name>flag</name> <operator>!=</operator> <name>Qfalse</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><literal type="string">"must specify a boolean"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>PKCS7_set_detached</name><argument_list>(<argument><expr><name>p7</name></expr></argument>, <argument><expr><ternary><condition><expr><name>flag</name> <operator>==</operator> <name>Qtrue</name></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><name>flag</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_get_detached</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>p7</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><ternary><condition><expr><call><name>PKCS7_get_detached</name><argument_list>(<argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><name>Qtrue</name></expr> </then><else>: <expr><name>Qfalse</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_detached_p</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>p7</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><ternary><condition><expr><call><name>PKCS7_is_detached</name><argument_list>(<argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><name>Qtrue</name></expr> </then><else>: <expr><name>Qfalse</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_set_cipher</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>cipher</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>PKCS7_set_cipher</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>, <argument><expr><call><name>ossl_evp_get_cipherbyname</name><argument_list>(<argument><expr><name>cipher</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>cipher</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_add_signer</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>signer</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PKCS7_SIGNER_INFO</name> <modifier>*</modifier></type><name>p7si</name></decl>;</decl_stmt>

<expr_stmt><expr><name>p7si</name> <operator>=</operator> <call><name>DupPKCS7SignerPtr</name><argument_list>(<argument><expr><name>signer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>PKCS7_add_signer</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>, <argument><expr><name>p7si</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>PKCS7_SIGNER_INFO_free</name><argument_list>(<argument><expr><name>p7si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><literal type="string">"Could not add signer."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>PKCS7_type_is_signed</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
<expr_stmt><expr><call><name>PKCS7_add_signed_attribute</name><argument_list>(<argument><expr><name>p7si</name></expr></argument>, <argument><expr><name>NID_pkcs9_contentType</name></expr></argument>,
<argument><expr><name>V_ASN1_OBJECT</name></expr></argument>, <argument><expr><call><name>OBJ_nid2obj</name><argument_list>(<argument><expr><name>NID_pkcs7_data</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>self</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_get_signer</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>STACK_OF</name><argument_list>(<argument><expr><name>PKCS7_SIGNER_INFO</name></expr></argument>)</argument_list></call> <operator>*</operator><name>sk</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>PKCS7_SIGNER_INFO</name> <modifier>*</modifier></type><name>si</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>num</name></decl>, <decl><type ref="prev"/><name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>ary</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>sk</name> <operator>=</operator> <call><name>PKCS7_get_signer_info</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>OSSL_Debug</name><argument_list>(<argument><expr><literal type="string">"OpenSSL::PKCS7#get_signer_info == NULL!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>rb_ary_new</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>num</name> <operator>=</operator> <call><name>sk_PKCS7_SIGNER_INFO_num</name><argument_list>(<argument><expr><name>sk</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><literal type="string">"Negative number of signers!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>ary</name> <operator>=</operator> <call><name>rb_ary_new2</name><argument_list>(<argument><expr><name>num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>num</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>si</name> <operator>=</operator> <call><name>sk_PKCS7_SIGNER_INFO_value</name><argument_list>(<argument><expr><name>sk</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_ary_push</name><argument_list>(<argument><expr><name>ary</name></expr></argument>, <argument><expr><call><name>ossl_pkcs7si_new</name><argument_list>(<argument><expr><name>si</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<return>return <expr><name>ary</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_add_recipient</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>recip</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PKCS7_RECIP_INFO</name> <modifier>*</modifier></type><name>ri</name></decl>;</decl_stmt>

<expr_stmt><expr><name>ri</name> <operator>=</operator> <call><name>DupPKCS7RecipientPtr</name><argument_list>(<argument><expr><name>recip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>PKCS7_add_recipient_info</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>, <argument><expr><name>ri</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>PKCS7_RECIP_INFO_free</name><argument_list>(<argument><expr><name>ri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><literal type="string">"Could not add recipient."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>self</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_get_recipient</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>STACK_OF</name><argument_list>(<argument><expr><name>PKCS7_RECIP_INFO</name></expr></argument>)</argument_list></call> <operator>*</operator><name>sk</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>PKCS7_RECIP_INFO</name> <modifier>*</modifier></type><name>si</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>num</name></decl>, <decl><type ref="prev"/><name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>ary</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>PKCS7_type_is_enveloped</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>sk</name> <operator>=</operator> <name><name>pkcs7</name><operator>-&gt;</operator><name>d</name><operator>.</operator><name>enveloped</name><operator>-&gt;</operator><name>recipientinfo</name></name></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><call><name>PKCS7_type_is_signedAndEnveloped</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>sk</name> <operator>=</operator> <name><name>pkcs7</name><operator>-&gt;</operator><name>d</name><operator>.</operator><name>signed_and_enveloped</name><operator>-&gt;</operator><name>recipientinfo</name></name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name>sk</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>sk</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><call><name>rb_ary_new</name><argument_list>()</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>num</name> <operator>=</operator> <call><name>sk_PKCS7_RECIP_INFO_num</name><argument_list>(<argument><expr><name>sk</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><literal type="string">"Negative number of recipient!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>ary</name> <operator>=</operator> <call><name>rb_ary_new2</name><argument_list>(<argument><expr><name>num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name>num</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>si</name> <operator>=</operator> <call><name>sk_PKCS7_RECIP_INFO_value</name><argument_list>(<argument><expr><name>sk</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_ary_push</name><argument_list>(<argument><expr><name>ary</name></expr></argument>, <argument><expr><call><name>ossl_pkcs7ri_new</name><argument_list>(<argument><expr><name>si</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<return>return <expr><name>ary</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_add_certificate</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>cert</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>X509</name> <modifier>*</modifier></type><name>x509</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>x509</name> <operator>=</operator> <call><name>GetX509CertPtr</name><argument_list>(<argument><expr><name>cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>PKCS7_add_certificate</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>, <argument><expr><name>x509</name></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>self</name></expr>;</return>
</block_content>}</block></function>

<expr_stmt><expr><specifier>static</specifier> <call><name>STACK_OF</name><argument_list>(<argument><expr><name>X509</name></expr></argument>)</argument_list></call> <operator>*</operator>
<macro><name>pkcs7_get_certs</name><argument_list>(<argument>VALUE self</argument>)</argument_list></macro>
<block>{
<expr><name>PKCS7</name> <operator>*</operator><name>pkcs7</name></expr>;
<expr><call><name>STACK_OF</name><argument_list>(<argument><expr><name>X509</name></expr></argument>)</argument_list></call> <operator>*</operator><name>certs</name></expr>;
<expr><name>int</name> <name>i</name></expr>;

<expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;
<expr><name>i</name> <operator>=</operator> <call><name>OBJ_obj2nid</name><argument_list>(<argument><expr><name><name>pkcs7</name><operator>-&gt;</operator><name>type</name></name></expr></argument>)</argument_list></call></expr>;
<switch>switch<condition>(<expr><name>i</name></expr>)</condition><block>{<block_content>
<case>case <expr><name>NID_pkcs7_signed</name></expr>:</case>
<expr_stmt><expr><name>certs</name> <operator>=</operator> <name><name>pkcs7</name><operator>-&gt;</operator><name>d</name><operator>.</operator><name>sign</name><operator>-&gt;</operator><name>cert</name></name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>NID_pkcs7_signedAndEnveloped</name></expr>:</case>
<expr_stmt><expr><name>certs</name> <operator>=</operator> <name><name>pkcs7</name><operator>-&gt;</operator><name>d</name><operator>.</operator><name>signed_and_enveloped</name><operator>-&gt;</operator><name>cert</name></name></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<expr_stmt><expr><name>certs</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt/></block_content></block></switch>}</block></expr></expr_stmt>

<return>return <expr><name>certs</name></expr>;</return>
}

static <expr_stmt><expr><call><name>STACK_OF</name><argument_list>(<argument><expr><name>X509_CRL</name></expr></argument>)</argument_list></call> <operator>*</operator>
<macro><name>pkcs7_get_crls</name><argument_list>(<argument>VALUE self</argument>)</argument_list></macro>
<block>{
<expr><name>PKCS7</name> <operator>*</operator><name>pkcs7</name></expr>;
<expr><call><name>STACK_OF</name><argument_list>(<argument><expr><name>X509_CRL</name></expr></argument>)</argument_list></call> <operator>*</operator><name>crls</name></expr>;
<expr><name>int</name> <name>i</name></expr>;

<expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;
<expr><name>i</name> <operator>=</operator> <call><name>OBJ_obj2nid</name><argument_list>(<argument><expr><name><name>pkcs7</name><operator>-&gt;</operator><name>type</name></name></expr></argument>)</argument_list></call></expr>;
<switch>switch<condition>(<expr><name>i</name></expr>)</condition><block>{<block_content>
<case>case <expr><name>NID_pkcs7_signed</name></expr>:</case>
<expr_stmt><expr><name>crls</name> <operator>=</operator> <name><name>pkcs7</name><operator>-&gt;</operator><name>d</name><operator>.</operator><name>sign</name><operator>-&gt;</operator><name>crl</name></name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>NID_pkcs7_signedAndEnveloped</name></expr>:</case>
<expr_stmt><expr><name>crls</name> <operator>=</operator> <name><name>pkcs7</name><operator>-&gt;</operator><name>d</name><operator>.</operator><name>signed_and_enveloped</name><operator>-&gt;</operator><name>crl</name></name></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<expr_stmt><expr><name>crls</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt/></block_content></block></switch>}</block></expr></expr_stmt>

<return>return <expr><name>crls</name></expr>;</return>
}

static <decl_stmt><decl><type><name>VALUE</name></type>
<name>ossl_pkcs7_set_certs_i</name><argument_list>(<argument><expr><call><name>RB_BLOCK_CALL_FUNC_ARGLIST</name><argument_list>(<argument><expr><name>i</name></expr></argument>, <argument><expr><name>arg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list>
<block>{<block_content>
<return>return <expr><call><name>ossl_pkcs7_add_certificate</name><argument_list>(<argument><expr><name>arg</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_set_certificates</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>ary</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>STACK_OF</name><argument_list>(<argument><expr><name>X509</name></expr></argument>)</argument_list></call> <operator>*</operator><name>certs</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>X509</name> <modifier>*</modifier></type><name>cert</name></decl>;</decl_stmt>

<expr_stmt><expr><name>certs</name> <operator>=</operator> <call><name>pkcs7_get_certs</name><argument_list>(<argument><expr><name>self</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<while>while<condition>(<expr><operator>(</operator><name>cert</name> <operator>=</operator> <call><name>sk_X509_pop</name><argument_list>(<argument><expr><name>certs</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>X509_free</name><argument_list>(<argument><expr><name>cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>
<expr_stmt><expr><call><name>rb_block_call</name><argument_list>(<argument><expr><name>ary</name></expr></argument>, <argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"each"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_set_certs_i</name></expr></argument>, <argument><expr><name>self</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ary</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_get_certificates</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ossl_x509_sk2ary</name><argument_list>(<argument><expr><call><name>pkcs7_get_certs</name><argument_list>(<argument><expr><name>self</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_add_crl</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>crl</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>X509_CRL</name> <modifier>*</modifier></type><name>x509crl</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name>x509crl</name> <operator>=</operator> <call><name>GetX509CRLPtr</name><argument_list>(<argument><expr><name>crl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>PKCS7_add_crl</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>, <argument><expr><name>x509crl</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>self</name></expr>;</return>
</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_set_crls_i</name><argument_list>(<argument><expr><call><name>RB_BLOCK_CALL_FUNC_ARGLIST</name><argument_list>(<argument><expr><name>i</name></expr></argument>, <argument><expr><name>arg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list>
<block>{<block_content>
<return>return <expr><call><name>ossl_pkcs7_add_crl</name><argument_list>(<argument><expr><name>arg</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_set_crls</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>ary</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>STACK_OF</name><argument_list>(<argument><expr><name>X509_CRL</name></expr></argument>)</argument_list></call> <operator>*</operator><name>crls</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>X509_CRL</name> <modifier>*</modifier></type><name>crl</name></decl>;</decl_stmt>

<expr_stmt><expr><name>crls</name> <operator>=</operator> <call><name>pkcs7_get_crls</name><argument_list>(<argument><expr><name>self</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<while>while<condition>(<expr><operator>(</operator><name>crl</name> <operator>=</operator> <call><name>sk_X509_CRL_pop</name><argument_list>(<argument><expr><name>crls</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>X509_CRL_free</name><argument_list>(<argument><expr><name>crl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>
<expr_stmt><expr><call><name>rb_block_call</name><argument_list>(<argument><expr><name>ary</name></expr></argument>, <argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"each"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_set_crls_i</name></expr></argument>, <argument><expr><name>self</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>ary</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_get_crls</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ossl_x509crl_sk2ary</name><argument_list>(<argument><expr><call><name>pkcs7_get_crls</name><argument_list>(<argument><expr><name>self</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_verify</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>VALUE</name></type> <name>certs</name></decl>, <decl><type ref="prev"/><name>store</name></decl>, <decl><type ref="prev"/><name>indata</name></decl>, <decl><type ref="prev"/><name>flags</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>STACK_OF</name><argument_list>(<argument><expr><name>X509</name></expr></argument>)</argument_list></call> <operator>*</operator><name>x509s</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>x509st</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>flg</name></decl>, <decl><type ref="prev"/><name>ok</name></decl>, <decl><type ref="prev"/><name>status</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>BIO</name> <modifier>*</modifier></type><name>in</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>p7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>msg</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_scan_args</name><argument_list>(<argument><expr><name>argc</name></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><literal type="string">"22"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>certs</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>store</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>indata</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>x509st</name> <operator>=</operator> <call><name>GetX509StorePtr</name><argument_list>(<argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>flg</name> <operator>=</operator> <ternary><condition><expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>NUM2INT</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>indata</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>indata</name> <operator>=</operator> <call><name>ossl_pkcs7_get_data</name><argument_list>(<argument><expr><name>self</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name>in</name> <operator>=</operator> <ternary><condition><expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>indata</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><name>NULL</name></expr> </then><else>: <expr><call><name>ossl_obj2bio</name><argument_list>(<argument><expr><operator>&amp;</operator><name>indata</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>certs</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>x509s</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></if>
<else>else<block>{<block_content>
<expr_stmt><expr><name>x509s</name> <operator>=</operator> <call><name>ossl_protect_x509_ary2sk</name><argument_list>(<argument><expr><name>certs</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>status</name></expr>)</condition><block>{<block_content>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_jump_tag</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><operator>(</operator><name>out</name> <operator>=</operator> <call><name>BIO_new</name><argument_list>(<argument><expr><call><name>BIO_s_mem</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block>{<block_content>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sk_X509_pop_free</name><argument_list>(<argument><expr><name>x509s</name></expr></argument>, <argument><expr><name>X509_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>ok</name> <operator>=</operator> <call><name>PKCS7_verify</name><argument_list>(<argument><expr><name>p7</name></expr></argument>, <argument><expr><name>x509s</name></expr></argument>, <argument><expr><name>x509st</name></expr></argument>, <argument><expr><name>in</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>flg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sk_X509_pop_free</name><argument_list>(<argument><expr><name>x509s</name></expr></argument>, <argument><expr><name>X509_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ok</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><literal type="string">"PKCS7_verify"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name>msg</name> <operator>=</operator> <call><name>ERR_reason_error_string</name><argument_list>(<argument><expr><call><name>ERR_peek_error</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_pkcs7_set_err_string</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><ternary><condition><expr><name>msg</name></expr> ?</condition><then> <expr><call><name>rb_str_new2</name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><name>Qnil</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_clear_error</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>data</name> <operator>=</operator> <call><name>ossl_membio2str</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_pkcs7_set_data</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><ternary><condition><expr><operator>(</operator><name>ok</name> <operator>==</operator> <literal type="number">1</literal><operator>)</operator></expr> ?</condition><then> <expr><name>Qtrue</name></expr> </then><else>: <expr><name>Qfalse</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_decrypt</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>VALUE</name></type> <name>pkey</name></decl>, <decl><type ref="prev"/><name>cert</name></decl>, <decl><type ref="prev"/><name>flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>X509</name> <modifier>*</modifier></type><name>x509</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>flg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>p7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>BIO</name> <modifier>*</modifier></type><name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>str</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>rb_scan_args</name><argument_list>(<argument><expr><name>argc</name></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><literal type="string">"12"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>pkey</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cert</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>key</name> <operator>=</operator> <call><name>GetPrivPKeyPtr</name><argument_list>(<argument><expr><name>pkey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name>x509</name> <operator>=</operator> <ternary><condition><expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>cert</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><name>NULL</name></expr> </then><else>: <expr><call><name>GetX509CertPtr</name><argument_list>(<argument><expr><name>cert</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt> 
<expr_stmt><expr><name>flg</name> <operator>=</operator> <ternary><condition><expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><literal type="number">0</literal></expr> </then><else>: <expr><call><name>NUM2INT</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><operator>(</operator><name>out</name> <operator>=</operator> <call><name>BIO_new</name><argument_list>(<argument><expr><call><name>BIO_s_mem</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>PKCS7_decrypt</name><argument_list>(<argument><expr><name>p7</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><name>x509</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>flg</name></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>str</name> <operator>=</operator> <call><name>ossl_membio2str</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<return>return <expr><name>str</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_add_data</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>data</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>BIO</name> <modifier>*</modifier></type><name>out</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>in</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>buf</name><index>[<expr><literal type="number">4096</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>len</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><call><name>PKCS7_type_is_signed</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>PKCS7_content_new</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>, <argument><expr><name>NID_pkcs7_data</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>in</name> <operator>=</operator> <call><name>ossl_obj2bio</name><argument_list>(<argument><expr><operator>&amp;</operator><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><operator>(</operator><name>out</name> <operator>=</operator> <call><name>PKCS7_dataInit</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>err</name>;</goto></block_content></block></if></if_stmt>
<for>for<control>(<init>;</init><condition>;</condition><incr/>)</control><block>{<block_content>
<if_stmt><if>if<condition>(<expr><operator>(</operator><name>len</name> <operator>=</operator> <call><name>BIO_read</name><argument_list>(<argument><expr><name>in</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><call><name>BIO_write</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>len</name></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>err</name>;</goto></block_content></block></if></if_stmt>
</block_content>}</block></for>
<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>PKCS7_dataFinal</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>, <argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <goto>goto <name>err</name>;</goto></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>ossl_pkcs7_set_data</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>Qnil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label><name>err</name>:</label>
<expr_stmt><expr><call><name>BIO_free_all</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><call><name>ERR_peek_error</name><argument_list>()</argument_list></call></expr>)</condition><block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>data</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_to_der</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>str</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name></type> <name>len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>(</operator><name>len</name> <operator>=</operator> <call><name>i2d_PKCS7</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name>str</name> <operator>=</operator> <call><name>rb_str_new</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p</name> <operator>=</operator> <operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator><call><name>RSTRING_PTR</name><argument_list>(<argument><expr><name>str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><call><name>i2d_PKCS7</name><argument_list>(<argument><expr><name>pkcs7</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>p</name></expr></argument>)</argument_list></call> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>ossl_str_adjust</name><argument_list>(<argument><expr><name>str</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>str</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7_to_pem</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7</name> <modifier>*</modifier></type><name>pkcs7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>BIO</name> <modifier>*</modifier></type><name>out</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>str</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>out</name> <operator>=</operator> <call><name>BIO_new</name><argument_list>(<argument><expr><call><name>BIO_s_mem</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>PEM_write_bio_PKCS7</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><name>pkcs7</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>BIO_free</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>str</name> <operator>=</operator> <call><name>ossl_membio2str</name><argument_list>(<argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>str</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7si_alloc</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_SIGNER_INFO</name> <modifier>*</modifier></type><name>p7si</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>obj</name></decl>;</decl_stmt>

<expr_stmt><expr><name>obj</name> <operator>=</operator> <call><name>NewPKCS7si</name><argument_list>(<argument><expr><name>klass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>p7si</name> <operator>=</operator> <call><name>PKCS7_SIGNER_INFO_new</name><argument_list>()</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>SetPKCS7si</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>p7si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>obj</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7si_initialize</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>cert</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>key</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>digest</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_SIGNER_INFO</name> <modifier>*</modifier></type><name>p7si</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type><name>pkey</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>X509</name> <modifier>*</modifier></type><name>x509</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>EVP_MD</name> <modifier>*</modifier></type><name>md</name></decl>;</decl_stmt>

<expr_stmt><expr><name>pkey</name> <operator>=</operator> <call><name>GetPrivPKeyPtr</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name>x509</name> <operator>=</operator> <call><name>GetX509CertPtr</name><argument_list>(<argument><expr><name>cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><name>md</name> <operator>=</operator> <call><name>ossl_evp_get_digestbyname</name><argument_list>(<argument><expr><name>digest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>GetPKCS7si</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><call><name>PKCS7_SIGNER_INFO_set</name><argument_list>(<argument><expr><name>p7si</name></expr></argument>, <argument><expr><name>x509</name></expr></argument>, <argument><expr><name>pkey</name></expr></argument>, <argument><expr><operator>(</operator><name>EVP_MD</name><operator>*</operator><operator>)</operator><name>md</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>self</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7si_get_issuer</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_SIGNER_INFO</name> <modifier>*</modifier></type><name>p7si</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7si</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>ossl_x509name_new</name><argument_list>(<argument><expr><name><name>p7si</name><operator>-&gt;</operator><name>issuer_and_serial</name><operator>-&gt;</operator><name>issuer</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7si_get_serial</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_SIGNER_INFO</name> <modifier>*</modifier></type><name>p7si</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7si</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>asn1integer_to_num</name><argument_list>(<argument><expr><name><name>p7si</name><operator>-&gt;</operator><name>issuer_and_serial</name><operator>-&gt;</operator><name>serial</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7si_get_signed_time</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_SIGNER_INFO</name> <modifier>*</modifier></type><name>p7si</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ASN1_TYPE</name> <modifier>*</modifier></type><name>asn1obj</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7si</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>asn1obj</name> <operator>=</operator> <call><name>PKCS7_get_signed_attribute</name><argument_list>(<argument><expr><name>p7si</name></expr></argument>, <argument><expr><name>NID_pkcs9_signingTime</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>asn1obj</name><operator>-&gt;</operator><name>type</name></name> <operator>==</operator> <name>V_ASN1_UTCTIME</name></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>asn1time_to_time</name><argument_list>(<argument><expr><name><name>asn1obj</name><operator>-&gt;</operator><name>value</name><operator>.</operator><name>utctime</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>






<return>return <expr><name>Qnil</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7ri_alloc</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_RECIP_INFO</name> <modifier>*</modifier></type><name>p7ri</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>obj</name></decl>;</decl_stmt>

<expr_stmt><expr><name>obj</name> <operator>=</operator> <call><name>NewPKCS7ri</name><argument_list>(<argument><expr><name>klass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>p7ri</name> <operator>=</operator> <call><name>PKCS7_RECIP_INFO_new</name><argument_list>()</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>SetPKCS7ri</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>p7ri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>obj</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7ri_initialize</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>cert</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_RECIP_INFO</name> <modifier>*</modifier></type><name>p7ri</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>X509</name> <modifier>*</modifier></type><name>x509</name></decl>;</decl_stmt>

<expr_stmt><expr><name>x509</name> <operator>=</operator> <call><name>GetX509CertPtr</name><argument_list>(<argument><expr><name>cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>GetPKCS7ri</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7ri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>PKCS7_RECIP_INFO_set</name><argument_list>(<argument><expr><name>p7ri</name></expr></argument>, <argument><expr><name>x509</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>ePKCS7Error</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>self</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7ri_get_issuer</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_RECIP_INFO</name> <modifier>*</modifier></type><name>p7ri</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7ri</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7ri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>ossl_x509name_new</name><argument_list>(<argument><expr><name><name>p7ri</name><operator>-&gt;</operator><name>issuer_and_serial</name><operator>-&gt;</operator><name>issuer</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7ri_get_serial</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_RECIP_INFO</name> <modifier>*</modifier></type><name>p7ri</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7ri</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7ri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>asn1integer_to_num</name><argument_list>(<argument><expr><name><name>p7ri</name><operator>-&gt;</operator><name>issuer_and_serial</name><operator>-&gt;</operator><name>serial</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>ossl_pkcs7ri_get_enc_key</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>PKCS7_RECIP_INFO</name> <modifier>*</modifier></type><name>p7ri</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetPKCS7ri</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>p7ri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>asn1str_to_str</name><argument_list>(<argument><expr><name><name>p7ri</name><operator>-&gt;</operator><name>enc_key</name></name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




<function><type><name>void</name></type>
<name>Init_ossl_pkcs7</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>rb_intern</name></cpp:undef>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
mOSSL = rb_define_module("OpenSSL");
eOSSLError = rb_define_class_under(mOSSL, "OpenSSLError", rb_eStandardError);
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name>cPKCS7</name> <operator>=</operator> <call><name>rb_define_class_under</name><argument_list>(<argument><expr><name>mOSSL</name></expr></argument>, <argument><expr><literal type="string">"PKCS7"</literal></expr></argument>, <argument><expr><name>rb_cObject</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ePKCS7Error</name> <operator>=</operator> <call><name>rb_define_class_under</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"PKCS7Error"</literal></expr></argument>, <argument><expr><name>eOSSLError</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_singleton_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"read_smime"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_s_read_smime</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_singleton_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"write_smime"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_s_write_smime</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_singleton_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"sign"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_s_sign</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_singleton_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"encrypt"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_s_encrypt</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_attr</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"data"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>Qfalse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_attr</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"error_string"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>Qfalse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_alloc_func</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><name>ossl_pkcs7_alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"initialize_copy"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_copy</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"initialize"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_initialize</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"type="</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_set_type</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"type"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_get_type</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"detached="</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_set_detached</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"detached"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_get_detached</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"detached?"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_detached_p</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"cipher="</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_set_cipher</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"add_signer"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_add_signer</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"signers"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_get_signer</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"add_recipient"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_add_recipient</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"recipients"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_get_recipient</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"add_certificate"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_add_certificate</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"certificates="</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_set_certificates</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"certificates"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_get_certificates</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"add_crl"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_add_crl</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"crls="</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_set_crls</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"crls"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_get_crls</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"add_data"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_add_data</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_alias</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"data="</literal></expr></argument>, <argument><expr><literal type="string">"add_data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"verify"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_verify</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"decrypt"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_decrypt</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"to_pem"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_to_pem</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_alias</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"to_s"</literal></expr></argument>, <argument><expr><literal type="string">"to_pem"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"to_der"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7_to_der</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>cPKCS7Signer</name> <operator>=</operator> <call><name>rb_define_class_under</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"SignerInfo"</literal></expr></argument>, <argument><expr><name>rb_cObject</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_const</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>, <argument><expr><literal type="string">"Signer"</literal></expr></argument>, <argument><expr><name>cPKCS7Signer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_alloc_func</name><argument_list>(<argument><expr><name>cPKCS7Signer</name></expr></argument>, <argument><expr><name>ossl_pkcs7si_alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7Signer</name></expr></argument>, <argument><expr><literal type="string">"initialize"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7si_initialize</name></expr></argument>,<argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7Signer</name></expr></argument>, <argument><expr><literal type="string">"issuer"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7si_get_issuer</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7Signer</name></expr></argument>, <argument><expr><literal type="string">"serial"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7si_get_serial</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7Signer</name></expr></argument>,<argument><expr><literal type="string">"signed_time"</literal></expr></argument>,<argument><expr><name>ossl_pkcs7si_get_signed_time</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>cPKCS7Recipient</name> <operator>=</operator> <call><name>rb_define_class_under</name><argument_list>(<argument><expr><name>cPKCS7</name></expr></argument>,<argument><expr><literal type="string">"RecipientInfo"</literal></expr></argument>,<argument><expr><name>rb_cObject</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_alloc_func</name><argument_list>(<argument><expr><name>cPKCS7Recipient</name></expr></argument>, <argument><expr><name>ossl_pkcs7ri_alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7Recipient</name></expr></argument>, <argument><expr><literal type="string">"initialize"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7ri_initialize</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7Recipient</name></expr></argument>, <argument><expr><literal type="string">"issuer"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7ri_get_issuer</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7Recipient</name></expr></argument>, <argument><expr><literal type="string">"serial"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7ri_get_serial</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cPKCS7Recipient</name></expr></argument>, <argument><expr><literal type="string">"enc_key"</literal></expr></argument>, <argument><expr><name>ossl_pkcs7ri_get_enc_key</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DefPKCS7Const</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>rb_define_const(cPKCS7, #x, INT2NUM(PKCS7_##x))</cpp:value></cpp:define>

<expr_stmt><expr><call><name>DefPKCS7Const</name><argument_list>(<argument><expr><name>TEXT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DefPKCS7Const</name><argument_list>(<argument><expr><name>NOCERTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DefPKCS7Const</name><argument_list>(<argument><expr><name>NOSIGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DefPKCS7Const</name><argument_list>(<argument><expr><name>NOCHAIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DefPKCS7Const</name><argument_list>(<argument><expr><name>NOINTERN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DefPKCS7Const</name><argument_list>(<argument><expr><name>NOVERIFY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DefPKCS7Const</name><argument_list>(<argument><expr><name>DETACHED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DefPKCS7Const</name><argument_list>(<argument><expr><name>BINARY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DefPKCS7Const</name><argument_list>(<argument><expr><name>NOATTR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DefPKCS7Const</name><argument_list>(<argument><expr><name>NOSMIMECAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
