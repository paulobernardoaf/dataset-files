<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats_featurelocations\ruby\ext\digest\sha2\sha2init.c">


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ruby/ruby.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../digest.h"</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>SHA2_USE_OPENSSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sha2ossl.h"</cpp:file></cpp:include>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>SHA2_USE_COMMONDIGEST</name></expr></argument>)</argument_list></call></expr></cpp:elif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sha2cc.h"</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sha2.h"</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FOREACH_BITLEN</name><parameter_list>(<parameter><type><name>func</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>func(256) func(384) func(512)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFINE_ALGO_METADATA</name><parameter_list>(<parameter><type><name>bitlen</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>static const rb_digest_metadata_t sha##bitlen = { RUBY_DIGEST_API_VERSION, SHA##bitlen##_DIGEST_LENGTH, SHA##bitlen##_BLOCK_LENGTH, sizeof(SHA##bitlen##_CTX), (rb_digest_hash_init_func_t)SHA##bitlen##_Init, (rb_digest_hash_update_func_t)SHA##bitlen##_Update, (rb_digest_hash_finish_func_t)SHA##bitlen##_Finish, };</cpp:value></cpp:define>










<macro><name>FOREACH_BITLEN</name><argument_list>(<argument>DEFINE_ALGO_METADATA</argument>)</argument_list></macro>






<function><type><name>void</name></type>
<name>Init_sha2</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>VALUE</name></type> <name>mDigest</name></decl>, <decl><type ref="prev"/><name>cDigest_Base</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ID</name></type> <name>id_metadata</name> <init>= <expr><call><name>rb_id_metadata</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECLARE_ALGO_CLASS</name><parameter_list>(<parameter><type><name>bitlen</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>VALUE cDigest_SHA##bitlen;</cpp:value></cpp:define>


<macro><name>FOREACH_BITLEN</name><argument_list>(<argument>DECLARE_ALGO_CLASS</argument>)</argument_list></macro>

<expr_stmt><expr><name>mDigest</name> <operator>=</operator> <call><name>rb_digest_namespace</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>cDigest_Base</name> <operator>=</operator> <call><name>rb_path2class</name><argument_list>(<argument><expr><literal type="string">"Digest::Base"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFINE_ALGO_CLASS</name><parameter_list>(<parameter><type><name>bitlen</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>cDigest_SHA##bitlen = rb_define_class_under(mDigest, "SHA" #bitlen, cDigest_Base); rb_ivar_set(cDigest_SHA##bitlen, id_metadata, Data_Wrap_Struct(0, 0, 0, (void *)&amp;sha##bitlen));</cpp:value></cpp:define>





<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>RUBY_UNTYPED_DATA_WARNING</name></cpp:undef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_UNTYPED_DATA_WARNING</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<macro><name>FOREACH_BITLEN</name><argument_list>(<argument>DEFINE_ALGO_CLASS</argument>)</argument_list></macro>
</block_content>}</block></function>
</unit>
