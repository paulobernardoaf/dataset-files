<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats_featurelocations\ruby\ext\-test-\time\new.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ruby.h"</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>bug_time_s_nano_new</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>sec</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>nsec</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>rb_time_nano_new</name><argument_list>(<argument><expr><call><name>NUM2TIMET</name><argument_list>(<argument><expr><name>sec</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>NUM2LONG</name><argument_list>(<argument><expr><name>nsec</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>bug_time_s_timespec_new</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>sec</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>nsec</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>gmtoff</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>timespec</name></name></type> <name>ts</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ts</name><operator>.</operator><name>tv_sec</name></name> <operator>=</operator> <call><name>NUM2TIMET</name><argument_list>(<argument><expr><name>sec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ts</name><operator>.</operator><name>tv_nsec</name></name> <operator>=</operator> <call><name>NUM2LONG</name><argument_list>(<argument><expr><name>nsec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>rb_time_timespec_new</name><argument_list>(<argument><expr><operator>&amp;</operator><name>ts</name></expr></argument>, <argument><expr><call><name>NUM2INT</name><argument_list>(<argument><expr><name>gmtoff</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>bug_time_s_timespec_now</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>timespec</name></name></type> <name>ts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>v</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>rb_timespec_now</name><argument_list>(<argument><expr><operator>&amp;</operator><name>ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>v</name> <operator>=</operator> <call><name>rb_Rational</name><argument_list>(<argument><expr><call><name>LONG2NUM</name><argument_list>(<argument><expr><name><name>ts</name><operator>.</operator><name>tv_nsec</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>LONG2NUM</name><argument_list>(<argument><expr><literal type="number">1000000000L</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>rb_num_coerce_bin</name><argument_list>(<argument><expr><call><name>TIMET2NUM</name><argument_list>(<argument><expr><name><name>ts</name><operator>.</operator><name>tv_sec</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>v</name></expr></argument>, <argument><expr><literal type="char">'+'</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>Init_time_new</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>rb_define_singleton_method</name><argument_list>(<argument><expr><name>klass</name></expr></argument>, <argument><expr><literal type="string">"nano_new"</literal></expr></argument>, <argument><expr><name>bug_time_s_nano_new</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_singleton_method</name><argument_list>(<argument><expr><name>klass</name></expr></argument>, <argument><expr><literal type="string">"timespec_new"</literal></expr></argument>, <argument><expr><name>bug_time_s_timespec_new</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_define_singleton_method</name><argument_list>(<argument><expr><name>klass</name></expr></argument>, <argument><expr><literal type="string">"timespec_now"</literal></expr></argument>, <argument><expr><name>bug_time_s_timespec_now</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
