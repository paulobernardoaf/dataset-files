<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats_featurelocations\ruby\ext\-test-\load\protect\protect.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ruby.h&gt;</cpp:file></cpp:include>

<function><type><specifier>static</specifier> <name>VALUE</name></type>
<name>load_protect</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>path</name></decl>, <decl><type ref="prev"/><name>wrap</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>rb_scan_args</name><argument_list>(<argument><expr><name>argc</name></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><literal type="string">"11"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>path</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>wrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>rb_load_protect</name><argument_list>(<argument><expr><name>path</name></expr></argument>, <argument><expr><call><name>RTEST</name><argument_list>(<argument><expr><name>wrap</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>state</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>rb_jump_tag</name><argument_list>(<argument><expr><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>Qnil</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>Init_protect</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>VALUE</name></type> <name>mod</name> <init>= <expr><call><name>rb_define_module</name><argument_list>(<argument><expr><literal type="string">"Bug"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>rb_define_singleton_method</name><argument_list>(<argument><expr><name>mod</name></expr></argument>, <argument><expr><literal type="string">"load_protect"</literal></expr></argument>, <argument><expr><name>load_protect</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
