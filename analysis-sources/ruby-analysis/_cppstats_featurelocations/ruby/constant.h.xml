<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats_featurelocations\ruby\constant.h">









<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CONSTANT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CONSTANT_H</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ruby/ruby.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"id_table.h"</cpp:file></cpp:include>

<typedef>typedef <type><enum>enum <block>{
<decl><name>CONST_DEPRECATED</name> <init>= <expr><literal type="number">0x100</literal></expr></init></decl>,

<decl><name>CONST_VISIBILITY_MASK</name> <init>= <expr><literal type="number">0xff</literal></expr></init></decl>,
<decl><name>CONST_PUBLIC</name> <init>= <expr><literal type="number">0x00</literal></expr></init></decl>,
<decl><name>CONST_PRIVATE</name></decl>,
<decl><name>CONST_VISIBILITY_MAX</name></decl>
}</block></enum></type> <name>rb_const_flag_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RB_CONST_PRIVATE_P</name><parameter_list>(<parameter><type><name>ce</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((ce)-&gt;flag &amp; CONST_VISIBILITY_MASK) == CONST_PRIVATE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RB_CONST_PUBLIC_P</name><parameter_list>(<parameter><type><name>ce</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((ce)-&gt;flag &amp; CONST_VISIBILITY_MASK) == CONST_PUBLIC)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RB_CONST_DEPRECATED_P</name><parameter_list>(<parameter><type><name>ce</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((ce)-&gt;flag &amp; CONST_DEPRECATED)</cpp:value></cpp:define>


<typedef>typedef <type><struct>struct <name>rb_const_entry_struct</name> <block>{
<decl_stmt><decl><type><name>rb_const_flag_t</name></type> <name>flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>line</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>VALUE</name></type> <name>value</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>VALUE</name></type> <name>file</name></decl>;</decl_stmt> 
}</block></struct></type> <name>rb_const_entry_t</name>;</typedef>

<function_decl><type><name>VALUE</name></type> <name>rb_mod_private_constant</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>VALUE</name> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>obj</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_mod_public_constant</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>VALUE</name> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>obj</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_mod_deprecate_constant</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>VALUE</name> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>obj</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>rb_free_const_table</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rb_id_table</name></name> <modifier>*</modifier></type><name>tbl</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_const_source_location</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>, <parameter><decl><type><name>ID</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>MJIT_SYMBOL_EXPORT_BEGIN</name>
<name>int</name></type> <name>rb_autoloading_value</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>mod</name></decl></parameter>, <parameter><decl><type><name>ID</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>value</name></decl></parameter>, <parameter><decl><type><name>rb_const_flag_t</name> <modifier>*</modifier></type><name>flag</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>rb_const_entry_t</name> <modifier>*</modifier></type><name>rb_const_lookup</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>, <parameter><decl><type><name>ID</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_public_const_get_at</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>, <parameter><decl><type><name>ID</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_public_const_get_from</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>, <parameter><decl><type><name>ID</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>rb_public_const_defined_from</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>, <parameter><decl><type><name>ID</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_const_source_location_at</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>, <parameter><decl><type><name>ID</name></type></decl></parameter>)</parameter_list>;</function_decl>
<expr><name>MJIT_SYMBOL_EXPORT_END</name></expr>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
