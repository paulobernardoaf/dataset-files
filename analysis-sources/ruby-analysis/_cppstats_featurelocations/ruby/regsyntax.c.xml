<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats_featurelocations\ruby\regsyntax.c">





























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"regint.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxASIS</name> <init>= <expr><block>{
<expr><literal type="number">0</literal></expr>
, <expr><name>ONIG_SYN_OP2_INEFFECTIVE_ESCAPE</name></expr>
, <expr><literal type="number">0</literal></expr>
, <expr><name>ONIG_OPTION_NONE</name></expr>
,
<expr><block>{
<expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><literal type="char">'\\'</literal></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxPosixBasic</name> <init>= <expr><block>{
<expr><operator>(</operator> <name>SYN_POSIX_COMMON_OP</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_LPAREN_SUBEXP</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_BRACE_INTERVAL</name> <operator>)</operator></expr>
, <expr><literal type="number">0</literal></expr>
, <expr><literal type="number">0</literal></expr>
, <expr><operator>(</operator> <name>ONIG_OPTION_SINGLELINE</name> <operator>|</operator> <name>ONIG_OPTION_MULTILINE</name> <operator>)</operator></expr>
,
<expr><block>{
<expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><literal type="char">'\\'</literal></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxPosixExtended</name> <init>= <expr><block>{
<expr><operator>(</operator> <name>SYN_POSIX_COMMON_OP</name> <operator>|</operator> <name>ONIG_SYN_OP_LPAREN_SUBEXP</name> <operator>|</operator>
<name>ONIG_SYN_OP_BRACE_INTERVAL</name> <operator>|</operator>
<name>ONIG_SYN_OP_PLUS_ONE_INF</name> <operator>|</operator> <name>ONIG_SYN_OP_QMARK_ZERO_ONE</name> <operator>|</operator> <name>ONIG_SYN_OP_VBAR_ALT</name> <operator>)</operator></expr>
, <expr><literal type="number">0</literal></expr>
, <expr><operator>(</operator> <name>ONIG_SYN_CONTEXT_INDEP_ANCHORS</name> <operator>|</operator>
<name>ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS</name> <operator>|</operator> <name>ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS</name> <operator>|</operator>
<name>ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP</name> <operator>|</operator>
<name>ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC</name> <operator>)</operator></expr>
, <expr><operator>(</operator> <name>ONIG_OPTION_SINGLELINE</name> <operator>|</operator> <name>ONIG_OPTION_MULTILINE</name> <operator>)</operator></expr>
,
<expr><block>{
<expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><literal type="char">'\\'</literal></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxEmacs</name> <init>= <expr><block>{
<expr><operator>(</operator> <name>ONIG_SYN_OP_DOT_ANYCHAR</name> <operator>|</operator> <name>ONIG_SYN_OP_BRACKET_CC</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_BRACE_INTERVAL</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_LPAREN_SUBEXP</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_VBAR_ALT</name> <operator>|</operator>
<name>ONIG_SYN_OP_ASTERISK_ZERO_INF</name> <operator>|</operator> <name>ONIG_SYN_OP_PLUS_ONE_INF</name> <operator>|</operator>
<name>ONIG_SYN_OP_QMARK_ZERO_ONE</name> <operator>|</operator> <name>ONIG_SYN_OP_DECIMAL_BACKREF</name> <operator>|</operator>
<name>ONIG_SYN_OP_LINE_ANCHOR</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_CONTROL_CHARS</name> <operator>)</operator></expr>
, <expr><name>ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR</name></expr>
, <expr><name>ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC</name></expr>
, <expr><name>ONIG_OPTION_NONE</name></expr>
,
<expr><block>{
<expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><literal type="char">'\\'</literal></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxGrep</name> <init>= <expr><block>{
<expr><operator>(</operator> <name>ONIG_SYN_OP_DOT_ANYCHAR</name> <operator>|</operator> <name>ONIG_SYN_OP_BRACKET_CC</name> <operator>|</operator> <name>ONIG_SYN_OP_POSIX_BRACKET</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_BRACE_INTERVAL</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_LPAREN_SUBEXP</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_VBAR_ALT</name> <operator>|</operator>
<name>ONIG_SYN_OP_ASTERISK_ZERO_INF</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_PLUS_ONE_INF</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_QMARK_ZERO_ONE</name> <operator>|</operator> <name>ONIG_SYN_OP_LINE_ANCHOR</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_W_WORD</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_B_WORD_BOUND</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END</name> <operator>|</operator> <name>ONIG_SYN_OP_DECIMAL_BACKREF</name> <operator>)</operator></expr>
, <expr><literal type="number">0</literal></expr>
, <expr><operator>(</operator> <name>ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC</name> <operator>|</operator> <name>ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC</name> <operator>)</operator></expr>
, <expr><name>ONIG_OPTION_NONE</name></expr>
,
<expr><block>{
<expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><literal type="char">'\\'</literal></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxGnuRegex</name> <init>= <expr><block>{
<expr><name>SYN_GNU_REGEX_OP</name></expr>
, <expr><literal type="number">0</literal></expr>
, <expr><name>SYN_GNU_REGEX_BV</name></expr>
, <expr><name>ONIG_OPTION_NONE</name></expr>
,
<expr><block>{
<expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><literal type="char">'\\'</literal></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxJava</name> <init>= <expr><block>{
<expr><operator>(</operator><operator>(</operator> <name>SYN_GNU_REGEX_OP</name> <operator>|</operator> <name>ONIG_SYN_OP_QMARK_NON_GREEDY</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_CONTROL_CHARS</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_C_CONTROL</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_OCTAL3</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_X_HEX2</name> <operator>)</operator>
<operator>&amp;</operator> <operator>~</operator><name>ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END</name> <operator>)</operator></expr>
, <expr><operator>(</operator> <name>ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE</name> <operator>|</operator> <name>ONIG_SYN_OP2_QMARK_GROUP_EFFECT</name> <operator>|</operator>
<name>ONIG_SYN_OP2_OPTION_PERL</name> <operator>|</operator> <name>ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT</name> <operator>|</operator>
<name>ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL</name> <operator>|</operator> <name>ONIG_SYN_OP2_CCLASS_SET_OP</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_V_VTAB</name> <operator>|</operator> <name>ONIG_SYN_OP2_ESC_U_HEX4</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY</name> <operator>)</operator></expr>
, <expr><operator>(</operator> <name>SYN_GNU_REGEX_BV</name> <operator>|</operator> <name>ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND</name> <operator>)</operator></expr>
, <expr><operator>(</operator> <name>ONIG_OPTION_SINGLELINE</name> <operator>|</operator> <name>ONIG_OPTION_ASCII_RANGE</name> <operator>|</operator>
<name>ONIG_OPTION_WORD_BOUND_ALL_RANGE</name> <operator>)</operator></expr>
,
<expr><block>{
<expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><literal type="char">'\\'</literal></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxPerl58</name> <init>= <expr><block>{
<expr><operator>(</operator><operator>(</operator> <name>SYN_GNU_REGEX_OP</name> <operator>|</operator> <name>ONIG_SYN_OP_QMARK_NON_GREEDY</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_OCTAL3</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_X_HEX2</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_X_BRACE_HEX8</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_CONTROL_CHARS</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_C_CONTROL</name> <operator>)</operator>
<operator>&amp;</operator> <operator>~</operator><name>ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END</name> <operator>)</operator></expr>
, <expr><operator>(</operator> <name>ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE</name> <operator>|</operator>
<name>ONIG_SYN_OP2_QMARK_GROUP_EFFECT</name> <operator>|</operator> <name>ONIG_SYN_OP2_OPTION_PERL</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_CAPITAL_X_EXTENDED_GRAPHEME_CLUSTER</name> <operator>|</operator>
<name>ONIG_SYN_OP2_QMARK_LPAREN_CONDITION</name><operator>)</operator></expr>
, <expr><name>SYN_GNU_REGEX_BV</name></expr>
, <expr><name>ONIG_OPTION_SINGLELINE</name></expr>
,
<expr><block>{
<expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><literal type="char">'\\'</literal></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxPerl58_NG</name> <init>= <expr><block>{
<expr><operator>(</operator><operator>(</operator> <name>SYN_GNU_REGEX_OP</name> <operator>|</operator> <name>ONIG_SYN_OP_QMARK_NON_GREEDY</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_OCTAL3</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_X_HEX2</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_X_BRACE_HEX8</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_CONTROL_CHARS</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_C_CONTROL</name> <operator>)</operator>
<operator>&amp;</operator> <operator>~</operator><name>ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END</name> <operator>)</operator></expr>
, <expr><operator>(</operator> <name>ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE</name> <operator>|</operator>
<name>ONIG_SYN_OP2_QMARK_GROUP_EFFECT</name> <operator>|</operator> <name>ONIG_SYN_OP2_OPTION_PERL</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_CAPITAL_X_EXTENDED_GRAPHEME_CLUSTER</name> <operator>|</operator>
<name>ONIG_SYN_OP2_QMARK_LPAREN_CONDITION</name> <operator>|</operator>
<name>ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_K_NAMED_BACKREF</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_G_SUBEXP_CALL</name> <operator>)</operator></expr>
, <expr><operator>(</operator> <name>SYN_GNU_REGEX_BV</name> <operator>|</operator>
<name>ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP</name> <operator>|</operator>
<name>ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME</name> <operator>)</operator></expr>
, <expr><name>ONIG_OPTION_SINGLELINE</name></expr>
,
<expr><block>{
<expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><literal type="char">'\\'</literal></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxPerl</name> <init>= <expr><block>{
<expr><operator>(</operator><operator>(</operator> <name>SYN_GNU_REGEX_OP</name> <operator>|</operator> <name>ONIG_SYN_OP_QMARK_NON_GREEDY</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_OCTAL3</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_X_HEX2</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_X_BRACE_HEX8</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_CONTROL_CHARS</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_O_BRACE_OCTAL</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_C_CONTROL</name> <operator>)</operator>
<operator>&amp;</operator> <operator>~</operator><name>ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END</name> <operator>)</operator></expr>
, <expr><operator>(</operator> <name>ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE</name> <operator>|</operator>
<name>ONIG_SYN_OP2_QMARK_GROUP_EFFECT</name> <operator>|</operator> <name>ONIG_SYN_OP2_OPTION_PERL</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_CAPITAL_X_EXTENDED_GRAPHEME_CLUSTER</name> <operator>|</operator>
<name>ONIG_SYN_OP2_QMARK_LPAREN_CONDITION</name> <operator>|</operator>
<name>ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT</name> <operator>|</operator>
<name>ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_CAPITAL_R_LINEBREAK</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_CAPITAL_K_KEEP</name> <operator>|</operator>
<name>ONIG_SYN_OP2_QMARK_SUBEXP_CALL</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_G_BRACE_BACKREF</name> <operator>|</operator>
<name>ONIG_SYN_OP2_QMARK_CAPITAL_P_NAMED_GROUP</name> <operator>|</operator>
<name>ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_K_NAMED_BACKREF</name> <operator>)</operator></expr>
, <expr><operator>(</operator> <name>SYN_GNU_REGEX_BV</name> <operator>|</operator>
<name>ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME</name> <operator>|</operator>
<name>ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME_CALL</name> <operator>|</operator>
<name>ONIG_SYN_USE_LEFT_MOST_NAMED_GROUP</name> <operator>)</operator></expr>
, <expr><operator>(</operator> <name>ONIG_OPTION_SINGLELINE</name> <operator>|</operator> <name>ONIG_OPTION_CAPTURE_GROUP</name> <operator>)</operator></expr>
,
<expr><block>{
<expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><literal type="char">'\\'</literal></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxPython</name> <init>= <expr><block>{
<expr><operator>(</operator><operator>(</operator> <name>SYN_GNU_REGEX_OP</name> <operator>|</operator> <name>ONIG_SYN_OP_QMARK_NON_GREEDY</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_OCTAL3</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_X_HEX2</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_X_BRACE_HEX8</name> <operator>|</operator> <name>ONIG_SYN_OP_ESC_CONTROL_CHARS</name> <operator>|</operator>
<name>ONIG_SYN_OP_ESC_C_CONTROL</name> <operator>)</operator>
<operator>&amp;</operator> <operator>~</operator><name>ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END</name> <operator>)</operator></expr>
, <expr><operator>(</operator> <name>ONIG_SYN_OP2_QMARK_GROUP_EFFECT</name> <operator>|</operator> <name>ONIG_SYN_OP2_OPTION_PERL</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT</name> <operator>|</operator>
<name>ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_V_VTAB</name> <operator>|</operator>
<name>ONIG_SYN_OP2_ESC_U_HEX4</name> <operator>|</operator>
<name>ONIG_SYN_OP2_QMARK_LPAREN_CONDITION</name> <operator>|</operator>
<name>ONIG_SYN_OP2_QMARK_CAPITAL_P_NAMED_GROUP</name> <operator>)</operator></expr>
, <expr><operator>(</operator> <name>SYN_GNU_REGEX_BV</name> <operator>|</operator>
<name>ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV</name> <operator>)</operator></expr>
, <expr><operator>(</operator> <name>ONIG_OPTION_SINGLELINE</name> <operator>|</operator> <name>ONIG_OPTION_ASCII_RANGE</name> <operator>)</operator></expr>
,
<expr><block>{
<expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><literal type="char">'\\'</literal></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
, <expr><operator>(</operator><name>OnigCodePoint</name> <operator>)</operator><name>ONIG_INEFFECTIVE_META_CHAR</name></expr> 
}</block></expr>
}</block></expr></init></decl>;</decl_stmt>



<function><type><specifier>extern</specifier> <name>int</name></type>
<name>onig_set_default_syntax</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>IS_NULL</name><argument_list>(<argument><expr><name>syntax</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>syntax</name> <operator>=</operator> <name>ONIG_SYNTAX_RUBY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>OnigDefaultSyntax</name> <operator>=</operator> <name>syntax</name></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>void</name></type>
<name>onig_copy_syntax</name><parameter_list>(<parameter><decl><type><name>OnigSyntaxType</name><modifier>*</modifier></type> <name>to</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>from</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>to</name> <operator>=</operator> <operator>*</operator><name>from</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>void</name></type>
<name>onig_set_syntax_op</name><parameter_list>(<parameter><decl><type><name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>op</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>syntax</name><operator>-&gt;</operator><name>op</name></name> <operator>=</operator> <name>op</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>void</name></type>
<name>onig_set_syntax_op2</name><parameter_list>(<parameter><decl><type><name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>op2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>syntax</name><operator>-&gt;</operator><name>op2</name></name> <operator>=</operator> <name>op2</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>void</name></type>
<name>onig_set_syntax_behavior</name><parameter_list>(<parameter><decl><type><name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>behavior</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>syntax</name><operator>-&gt;</operator><name>behavior</name></name> <operator>=</operator> <name>behavior</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>void</name></type>
<name>onig_set_syntax_options</name><parameter_list>(<parameter><decl><type><name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>, <parameter><decl><type><name>OnigOptionType</name></type> <name>options</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>syntax</name><operator>-&gt;</operator><name>options</name></name> <operator>=</operator> <name>options</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>unsigned</name> <name>int</name></type>
<name>onig_get_syntax_op</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>syntax</name><operator>-&gt;</operator><name>op</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>unsigned</name> <name>int</name></type>
<name>onig_get_syntax_op2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>syntax</name><operator>-&gt;</operator><name>op2</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>unsigned</name> <name>int</name></type>
<name>onig_get_syntax_behavior</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>syntax</name><operator>-&gt;</operator><name>behavior</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>extern</specifier> <name>OnigOptionType</name></type>
<name>onig_get_syntax_options</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>syntax</name><operator>-&gt;</operator><name>options</name></name></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_VARIABLE_META_CHARS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><specifier>extern</specifier> <name>int</name></type> <name>onig_set_meta_char</name><parameter_list>(<parameter><decl><type><name>OnigSyntaxType</name><modifier>*</modifier></type> <name>enc</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>what</name></decl></parameter>, <parameter><decl><type><name>OnigCodePoint</name></type> <name>code</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><name>what</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>ONIG_META_CHAR_ESCAPE</name></expr>:</case>
<expr_stmt><expr><name><name>enc</name><operator>-&gt;</operator><name>meta_char_table</name><operator>.</operator><name>esc</name></name> <operator>=</operator> <name>code</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ONIG_META_CHAR_ANYCHAR</name></expr>:</case>
<expr_stmt><expr><name><name>enc</name><operator>-&gt;</operator><name>meta_char_table</name><operator>.</operator><name>anychar</name></name> <operator>=</operator> <name>code</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ONIG_META_CHAR_ANYTIME</name></expr>:</case>
<expr_stmt><expr><name><name>enc</name><operator>-&gt;</operator><name>meta_char_table</name><operator>.</operator><name>anytime</name></name> <operator>=</operator> <name>code</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ONIG_META_CHAR_ZERO_OR_ONE_TIME</name></expr>:</case>
<expr_stmt><expr><name><name>enc</name><operator>-&gt;</operator><name>meta_char_table</name><operator>.</operator><name>zero_or_one_time</name></name> <operator>=</operator> <name>code</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ONIG_META_CHAR_ONE_OR_MORE_TIME</name></expr>:</case>
<expr_stmt><expr><name><name>enc</name><operator>-&gt;</operator><name>meta_char_table</name><operator>.</operator><name>one_or_more_time</name></name> <operator>=</operator> <name>code</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>ONIG_META_CHAR_ANYCHAR_ANYTIME</name></expr>:</case>
<expr_stmt><expr><name><name>enc</name><operator>-&gt;</operator><name>meta_char_table</name><operator>.</operator><name>anychar_anytime</name></name> <operator>=</operator> <name>code</name></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<return>return <expr><name>ONIGERR_INVALID_ARGUMENT</name></expr>;</return>
<break>break;</break>
</block_content>}</block></switch>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
