<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats_featurelocations\ruby\id_table.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_ID_TABLE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_ID_TABLE_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ruby/config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ruby/ruby.h"</cpp:file></cpp:include>

<struct_decl>struct <name>rb_id_table</name>;</struct_decl>


<enum>enum <name>rb_id_table_iterator_result</name> <block>{
<decl><name>ID_TABLE_CONTINUE</name> <init>= <expr><name>ST_CONTINUE</name></expr></init></decl>,
<decl><name>ID_TABLE_STOP</name> <init>= <expr><name>ST_STOP</name></expr></init></decl>,
<decl><name>ID_TABLE_DELETE</name> <init>= <expr><name>ST_DELETE</name></expr></init></decl>,
<decl><name>ID_TABLE_REPLACE</name> <init>= <expr><name>ST_REPLACE</name></expr></init></decl>,
<decl><name>ID_TABLE_ITERATOR_RESULT_END</name></decl>
}</block>;</enum>

<function_decl><type><name><name>struct</name> <name>rb_id_table</name></name> <modifier>*</modifier></type><name>rb_id_table_create</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>rb_id_table_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rb_id_table</name></name> <modifier>*</modifier></type><name>tbl</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>rb_id_table_clear</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rb_id_table</name></name> <modifier>*</modifier></type><name>tbl</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>size_t</name></type> <name>rb_id_table_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>rb_id_table</name></name> <modifier>*</modifier></type><name>tbl</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>rb_id_table_memsize</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>rb_id_table</name></name> <modifier>*</modifier></type><name>tbl</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>rb_id_table_insert</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rb_id_table</name></name> <modifier>*</modifier></type><name>tbl</name></decl></parameter>, <parameter><decl><type><name>ID</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>rb_id_table_lookup</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rb_id_table</name></name> <modifier>*</modifier></type><name>tbl</name></decl></parameter>, <parameter><decl><type><name>ID</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>valp</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>rb_id_table_delete</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rb_id_table</name></name> <modifier>*</modifier></type><name>tbl</name></decl></parameter>, <parameter><decl><type><name>ID</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name><name>enum</name> <name>rb_id_table_iterator_result</name></name></type> <name>rb_id_table_update_callback_func_t</name><parameter_list>(<parameter><decl><type><name>ID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>val</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>existing</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name><name>enum</name> <name>rb_id_table_iterator_result</name></name></type> <name>rb_id_table_foreach_func_t</name><parameter_list>(<parameter><decl><type><name>ID</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>val</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name><name>enum</name> <name>rb_id_table_iterator_result</name></name></type> <name>rb_id_table_foreach_values_func_t</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>val</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>void</name></type> <name>rb_id_table_foreach</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rb_id_table</name></name> <modifier>*</modifier></type><name>tbl</name></decl></parameter>, <parameter><decl><type><name>rb_id_table_foreach_func_t</name> <modifier>*</modifier></type><name>func</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>rb_id_table_foreach_with_replace</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rb_id_table</name></name> <modifier>*</modifier></type><name>tbl</name></decl></parameter>, <parameter><decl><type><name>rb_id_table_foreach_func_t</name> <modifier>*</modifier></type><name>func</name></decl></parameter>, <parameter><decl><type><name>rb_id_table_update_callback_func_t</name> <modifier>*</modifier></type><name>replace</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>rb_id_table_foreach_values</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rb_id_table</name></name> <modifier>*</modifier></type><name>tbl</name></decl></parameter>, <parameter><decl><type><name>rb_id_table_foreach_values_func_t</name> <modifier>*</modifier></type><name>func</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
