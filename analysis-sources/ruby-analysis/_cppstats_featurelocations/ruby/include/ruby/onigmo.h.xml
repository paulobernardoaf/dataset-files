<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats_featurelocations\ruby\include\ruby\onigmo.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ONIGMO_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGMO_H</name></cpp:macro></cpp:define>






























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
} 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGMO_VERSION_MAJOR</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGMO_VERSION_MINOR</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGMO_VERSION_TEENY</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ONIG_EXTERN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_EXTERN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_EXTERN</name></cpp:macro> <cpp:value>RUBY_EXTERN</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__GNUC__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>EXPORT</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>RUBY_EXPORT</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_EXTERN</name></cpp:macro> <cpp:value>extern __declspec(dllexport)</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_EXTERN</name></cpp:macro> <cpp:value>extern __declspec(dllimport)</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ONIG_EXTERN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_EXTERN</name></cpp:macro> <cpp:value>extern</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_SYMBOL_EXPORT_BEGIN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_SYMBOL_EXPORT_BEGIN</name></cpp:macro></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_SYMBOL_EXPORT_END</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<macro><name>RUBY_SYMBOL_EXPORT_BEGIN</name></macro>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include> 



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ONIG_ESCAPE_UCHAR_COLLISION</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UChar</name></cpp:macro> <cpp:value>OnigUChar</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name>unsigned</name> <name>char</name></type> <name>OnigUChar</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>int</name></type> <name>OnigCodePoint</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>int</name></type> <name>OnigCtype</name>;</typedef>
<typedef>typedef <type><name>size_t</name></type> <name>OnigDistance</name>;</typedef>
<typedef>typedef <type><name>ptrdiff_t</name></type> <name>OnigPosition</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_INFINITE_DISTANCE</name></cpp:macro> <cpp:value>~((OnigDistance )0)</cpp:value></cpp:define>









<typedef>typedef <type><name>unsigned</name> <name>int</name></type> <name>OnigCaseFoldType</name>;</typedef> 

<decl_stmt><decl><type><name>ONIG_EXTERN</name> <name>OnigCaseFoldType</name></type> <name>OnigDefaultCaseFoldFlag</name></decl>;</decl_stmt>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OnigCodePointMaskWidth</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OnigCodePointMask</name></cpp:macro> <cpp:value>((1&lt;&lt;OnigCodePointMaskWidth)-1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OnigCodePointCount</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((n)&amp;OnigCodePointMask)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OnigCaseFoldFlags</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((n)&amp;~OnigCodePointMask)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OnigSpecialIndexShift</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OnigSpecialIndexWidth</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_UPCASE</name></cpp:macro> <cpp:value>(1&lt;&lt;13)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_DOWNCASE</name></cpp:macro> <cpp:value>(1&lt;&lt;14)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_TITLECASE</name></cpp:macro> <cpp:value>(1&lt;&lt;15)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_SPECIAL_OFFSET</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_UP_SPECIAL</name></cpp:macro> <cpp:value>(1&lt;&lt;16)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_DOWN_SPECIAL</name></cpp:macro> <cpp:value>(1&lt;&lt;17)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_MODIFIED</name></cpp:macro> <cpp:value>(1&lt;&lt;18)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_FOLD</name></cpp:macro> <cpp:value>(1&lt;&lt;19)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_FOLD_TURKISH_AZERI</name></cpp:macro> <cpp:value>(1&lt;&lt;20)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_FOLD_LITHUANIAN</name></cpp:macro> <cpp:value>(1&lt;&lt;21)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_ASCII_ONLY</name></cpp:macro> <cpp:value>(1&lt;&lt;22)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_IS_TITLECASE</name></cpp:macro> <cpp:value>(1&lt;&lt;23)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR</name></cpp:macro> <cpp:value>(1&lt;&lt;30)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_FOLD_MIN</name></cpp:macro> <cpp:value>INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CASE_FOLD_DEFAULT</name></cpp:macro> <cpp:value>OnigDefaultCaseFoldFlag</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MAX_COMP_CASE_FOLD_CODE_LEN</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CODE_RANGE_NUM</name><parameter_list>(<parameter><type><name>range</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((int )range[0])</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CODE_RANGE_FROM</name><parameter_list>(<parameter><type><name>range</name></type></parameter>,<parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>range[((i)*2) + 1]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CODE_RANGE_TO</name><parameter_list>(<parameter><type><name>range</name></type></parameter>,<parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>range[((i)*2) + 2]</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>byte_len</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>code_len</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OnigCodePoint</name></type> <name><name>code</name><index>[<expr><name>ONIGENC_MAX_COMP_CASE_FOLD_CODE_LEN</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>OnigCaseFoldCodeItem</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>OnigCodePoint</name></type> <name>esc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigCodePoint</name></type> <name>anychar</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigCodePoint</name></type> <name>anytime</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigCodePoint</name></type> <name>zero_or_one_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigCodePoint</name></type> <name>one_or_more_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigCodePoint</name></type> <name>anychar_anytime</name></decl>;</decl_stmt>
}</block></struct></type> <name>OnigMetaCharTableType</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>OnigApplyAllCaseFoldFunc</name>)<parameter_list>(<parameter><decl><type><name>OnigCodePoint</name></type> <name>from</name></decl></parameter>, <parameter><decl><type><name>OnigCodePoint</name><modifier>*</modifier></type> <name>to</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>to_len</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>arg</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>OnigEncodingTypeST</name> <block>{
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>precise_mbc_enc_len</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>p</name></decl></parameter>,<parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>e</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>max_enc_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>min_enc_len</name></decl>;</decl_stmt>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>is_mbc_newline</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>OnigCodePoint</name></type> (<modifier>*</modifier><name>mbc_to_code</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>code_to_mbclen</name>)<parameter_list>(<parameter><decl><type><name>OnigCodePoint</name></type> <name>code</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>code_to_mbc</name>)<parameter_list>(<parameter><decl><type><name>OnigCodePoint</name></type> <name>code</name></decl></parameter>, <parameter><decl><type><name>OnigUChar</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>mbc_case_fold</name>)<parameter_list>(<parameter><decl><type><name>OnigCaseFoldType</name></type> <name>flag</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier><modifier>*</modifier></type> <name>pp</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><name>OnigUChar</name><modifier>*</modifier></type> <name>to</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>apply_all_case_fold</name>)<parameter_list>(<parameter><decl><type><name>OnigCaseFoldType</name></type> <name>flag</name></decl></parameter>, <parameter><decl><type><name>OnigApplyAllCaseFoldFunc</name></type> <name>f</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>arg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>get_case_fold_codes_by_str</name>)<parameter_list>(<parameter><decl><type><name>OnigCaseFoldType</name></type> <name>flag</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><name>OnigCaseFoldCodeItem</name></type> <name><name>acs</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>property_name_to_ctype</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>is_code_ctype</name>)<parameter_list>(<parameter><decl><type><name>OnigCodePoint</name></type> <name>code</name></decl></parameter>, <parameter><decl><type><name>OnigCtype</name></type> <name>ctype</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>get_ctype_code_range</name>)<parameter_list>(<parameter><decl><type><name>OnigCtype</name></type> <name>ctype</name></decl></parameter>, <parameter><decl><type><name>OnigCodePoint</name><modifier>*</modifier></type> <name>sb_out</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigCodePoint</name><modifier>*</modifier></type> <name><name>ranges</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>OnigUChar</name><modifier>*</modifier></type> (<modifier>*</modifier><name>left_adjust_char_head</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>start</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>is_allowed_reverse_match</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>case_map</name>)<parameter_list>(<parameter><decl><type><name>OnigCaseFoldType</name><modifier>*</modifier></type> <name>flagP</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier><modifier>*</modifier></type> <name>pp</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><name>OnigUChar</name><modifier>*</modifier></type> <name>to</name></decl></parameter>, <parameter><decl><type><name>OnigUChar</name><modifier>*</modifier></type> <name>to_end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>int</name></type> <name>ruby_encoding_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>flags</name></decl>;</decl_stmt>
}</block></struct></type> <name>OnigEncodingType</name>;</typedef>

<typedef>typedef <type><specifier>const</specifier> <name>OnigEncodingType</name><modifier>*</modifier></type> <name>OnigEncoding</name>;</typedef>

<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingASCII</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_1</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_9</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_10</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_11</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_13</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_14</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_15</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingISO_8859_16</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingUTF_8</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingUTF_16BE</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingUTF_16LE</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingUTF_32BE</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingUTF_32LE</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingEUC_JP</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingEUC_TW</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingEUC_KR</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingEUC_CN</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingShift_JIS</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingWindows_31J</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingKOI8_R</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingKOI8_U</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingWindows_1250</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingWindows_1251</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingWindows_1252</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingWindows_1253</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingWindows_1254</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingWindows_1257</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingBIG5</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigEncodingType</name></type> <name>OnigEncodingGB18030</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ASCII</name></cpp:macro> <cpp:value>(&amp;OnigEncodingASCII)</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_1</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_2</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_3</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_4</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_5</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_5)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_6</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_6)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_7</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_7)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_8</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_8)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_9</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_9)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_10</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_10)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_11</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_11)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_13</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_13)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_14</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_14)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_15</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_15)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_ISO_8859_16</name></cpp:macro> <cpp:value>(&amp;OnigEncodingISO_8859_16)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_UTF_8</name></cpp:macro> <cpp:value>(&amp;OnigEncodingUTF_8)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_UTF_16BE</name></cpp:macro> <cpp:value>(&amp;OnigEncodingUTF_16BE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_UTF_16LE</name></cpp:macro> <cpp:value>(&amp;OnigEncodingUTF_16LE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_UTF_32BE</name></cpp:macro> <cpp:value>(&amp;OnigEncodingUTF_32BE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_UTF_32LE</name></cpp:macro> <cpp:value>(&amp;OnigEncodingUTF_32LE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_EUC_JP</name></cpp:macro> <cpp:value>(&amp;OnigEncodingEUC_JP)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_EUC_TW</name></cpp:macro> <cpp:value>(&amp;OnigEncodingEUC_TW)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_EUC_KR</name></cpp:macro> <cpp:value>(&amp;OnigEncodingEUC_KR)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_EUC_CN</name></cpp:macro> <cpp:value>(&amp;OnigEncodingEUC_CN)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_SHIFT_JIS</name></cpp:macro> <cpp:value>(&amp;OnigEncodingShift_JIS)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_WINDOWS_31J</name></cpp:macro> <cpp:value>(&amp;OnigEncodingWindows_31J)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_KOI8_R</name></cpp:macro> <cpp:value>(&amp;OnigEncodingKOI8_R)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_KOI8_U</name></cpp:macro> <cpp:value>(&amp;OnigEncodingKOI8_U)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_WINDOWS_1250</name></cpp:macro> <cpp:value>(&amp;OnigEncodingWindows_1250)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_WINDOWS_1251</name></cpp:macro> <cpp:value>(&amp;OnigEncodingWindows_1251)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_WINDOWS_1252</name></cpp:macro> <cpp:value>(&amp;OnigEncodingWindows_1252)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_WINDOWS_1253</name></cpp:macro> <cpp:value>(&amp;OnigEncodingWindows_1253)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_WINDOWS_1254</name></cpp:macro> <cpp:value>(&amp;OnigEncodingWindows_1254)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_WINDOWS_1257</name></cpp:macro> <cpp:value>(&amp;OnigEncodingWindows_1257)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_BIG5</name></cpp:macro> <cpp:value>(&amp;OnigEncodingBIG5)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_GB18030</name></cpp:macro> <cpp:value>(&amp;OnigEncodingGB18030)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_SJIS</name></cpp:macro> <cpp:value>ONIG_ENCODING_SHIFT_JIS</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_CP932</name></cpp:macro> <cpp:value>ONIG_ENCODING_WINDOWS_31J</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_CP1250</name></cpp:macro> <cpp:value>ONIG_ENCODING_WINDOWS_1250</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_CP1251</name></cpp:macro> <cpp:value>ONIG_ENCODING_WINDOWS_1251</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_CP1252</name></cpp:macro> <cpp:value>ONIG_ENCODING_WINDOWS_1252</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_CP1253</name></cpp:macro> <cpp:value>ONIG_ENCODING_WINDOWS_1253</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_CP1254</name></cpp:macro> <cpp:value>ONIG_ENCODING_WINDOWS_1254</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_CP1257</name></cpp:macro> <cpp:value>ONIG_ENCODING_WINDOWS_1257</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_UTF8</name></cpp:macro> <cpp:value>ONIG_ENCODING_UTF_8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_UTF16_BE</name></cpp:macro> <cpp:value>ONIG_ENCODING_UTF_16BE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_UTF16_LE</name></cpp:macro> <cpp:value>ONIG_ENCODING_UTF_16LE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_UTF32_BE</name></cpp:macro> <cpp:value>ONIG_ENCODING_UTF_32BE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_UTF32_LE</name></cpp:macro> <cpp:value>ONIG_ENCODING_UTF_32LE</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_ENCODING_UNDEF</name></cpp:macro> <cpp:value>((OnigEncoding )0)</cpp:value></cpp:define>


<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onigenc_ascii_only_case_map</name><parameter_list>(<parameter><decl><type><name>OnigCaseFoldType</name><modifier>*</modifier></type> <name>flagP</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier><modifier>*</modifier></type> <name>pp</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><name>OnigUChar</name><modifier>*</modifier></type> <name>to</name></decl></parameter>, <parameter><decl><type><name>OnigUChar</name><modifier>*</modifier></type> <name>to_end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CODE_TO_MBC_MAXLEN</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MBC_CASE_FOLD_MAXLEN</name></cpp:macro> <cpp:value>18</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_NEWLINE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_ALPHA</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_BLANK</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_CNTRL</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_DIGIT</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_GRAPH</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_LOWER</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_PRINT</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_PUNCT</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_SPACE</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_UPPER</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_XDIGIT</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_WORD</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_ALNUM</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CTYPE_ASCII</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MAX_STD_CTYPE</name></cpp:macro> <cpp:value>ONIGENC_CTYPE_ASCII</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_FLAG_NONE</name></cpp:macro> <cpp:value>0U</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_FLAG_UNICODE</name></cpp:macro> <cpp:value>1U</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>onig_enc_len</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>p</name></type></parameter>,<parameter><type><name>e</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_MBC_ENC_LEN(enc, p, e)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_UNDEF</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((enc) == ONIG_ENCODING_UNDEF)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_SINGLEBYTE</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(ONIGENC_MBC_MAXLEN(enc) == 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_MBC_HEAD</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>p</name></type></parameter>,<parameter><type><name>e</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(ONIGENC_MBC_ENC_LEN(enc,p,e) != 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_MBC_ASCII</name><parameter_list>(<parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(*(p) &lt; 128)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_ASCII</name><parameter_list>(<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((code) &lt; 128)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_MBC_WORD</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>end</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_WORD(enc,ONIGENC_MBC_TO_CODE(enc,s,end))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_MBC_ASCII_WORD</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>end</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>onigenc_ascii_is_code_ctype( ONIGENC_MBC_TO_CODE(enc,s,end),ONIGENC_CTYPE_WORD,enc)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_UNICODE</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((enc)-&gt;flags &amp; ONIGENC_FLAG_UNICODE)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_NAME</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((enc)-&gt;name)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MBC_CASE_FOLD</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>flag</name></type></parameter>,<parameter><type><name>pp</name></type></parameter>,<parameter><type><name>end</name></type></parameter>,<parameter><type><name>buf</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(enc)-&gt;mbc_case_fold(flag,(const OnigUChar** )pp,end,buf,enc)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_ALLOWED_REVERSE_MATCH</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>end</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(enc)-&gt;is_allowed_reverse_match(s,end,enc)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_LEFT_ADJUST_CHAR_HEAD</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>start</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>end</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(enc)-&gt;left_adjust_char_head(start, s, end, enc)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_APPLY_ALL_CASE_FOLD</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>case_fold_flag</name></type></parameter>,<parameter><type><name>f</name></type></parameter>,<parameter><type><name>arg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(enc)-&gt;apply_all_case_fold(case_fold_flag,f,arg,enc)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_GET_CASE_FOLD_CODES_BY_STR</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>case_fold_flag</name></type></parameter>,<parameter><type><name>p</name></type></parameter>,<parameter><type><name>end</name></type></parameter>,<parameter><type><name>acs</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(enc)-&gt;get_case_fold_codes_by_str(case_fold_flag,p,end,acs,enc)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_STEP_BACK</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>start</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>end</name></type></parameter>,<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>onigenc_step_back((enc),(start),(s),(end),(n))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CONSTRUCT_MBCLEN_CHARFOUND</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(n)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MBCLEN_CHARFOUND_P</name><parameter_list>(<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(0 &lt; (r))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MBCLEN_CHARFOUND_LEN</name><parameter_list>(<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(r)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CONSTRUCT_MBCLEN_INVALID</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>(-1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MBCLEN_INVALID_P</name><parameter_list>(<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((r) == -1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CONSTRUCT_MBCLEN_NEEDMORE</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(-1-(n))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MBCLEN_NEEDMORE_P</name><parameter_list>(<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((r) &lt; -1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MBCLEN_NEEDMORE_LEN</name><parameter_list>(<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(-1-(r))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_PRECISE_MBC_ENC_LEN</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>p</name></type></parameter>,<parameter><type><name>e</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(enc)-&gt;precise_mbc_enc_len(p,e,enc)</cpp:value></cpp:define>

<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onigenc_mbclen_approximate</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>p</name></decl></parameter>,<parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>e</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>OnigEncodingTypeST</name></name><modifier>*</modifier></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MBC_ENC_LEN</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>p</name></type></parameter>,<parameter><type><name>e</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>onigenc_mbclen_approximate(p,e,enc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MBC_MAXLEN</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((enc)-&gt;max_enc_len)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MBC_MAXLEN_DIST</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_MBC_MAXLEN(enc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MBC_MINLEN</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((enc)-&gt;min_enc_len)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_MBC_NEWLINE</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>p</name></type></parameter>,<parameter><type><name>end</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(enc)-&gt;is_mbc_newline((p),(end),enc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_MBC_TO_CODE</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>p</name></type></parameter>,<parameter><type><name>end</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(enc)-&gt;mbc_to_code((p),(end),enc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CODE_TO_MBCLEN</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(enc)-&gt;code_to_mbclen(code,enc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_CODE_TO_MBC</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>,<parameter><type><name>buf</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(enc)-&gt;code_to_mbc(code,buf,enc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_PROPERTY_NAME_TO_CTYPE</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>p</name></type></parameter>,<parameter><type><name>end</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(enc)-&gt;property_name_to_ctype(enc,p,end)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_CTYPE</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>,<parameter><type><name>ctype</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(enc)-&gt;is_code_ctype(code,ctype,enc)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_NEWLINE</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_NEWLINE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_GRAPH</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_GRAPH)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_PRINT</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_PRINT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_ALNUM</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_ALNUM)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_ALPHA</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_ALPHA)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_LOWER</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_LOWER)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_UPPER</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_UPPER)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_CNTRL</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_CNTRL)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_PUNCT</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_PUNCT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_SPACE</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_SPACE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_BLANK</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_BLANK)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_DIGIT</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_DIGIT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_XDIGIT</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_XDIGIT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_IS_CODE_WORD</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>code</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>ONIGENC_IS_CODE_CTYPE(enc,code,ONIGENC_CTYPE_WORD)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGENC_GET_CTYPE_CODE_RANGE</name><parameter_list>(<parameter><type><name>enc</name></type></parameter>,<parameter><type><name>ctype</name></type></parameter>,<parameter><type><name>sbout</name></type></parameter>,<parameter><type><name>ranges</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(enc)-&gt;get_ctype_code_range(ctype,sbout,ranges,enc)</cpp:value></cpp:define>


<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigUChar</name><modifier>*</modifier></type> <name>onigenc_step_back</name><parameter_list>(<parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>start</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onigenc_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onigenc_set_default_encoding</name><parameter_list>(<parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigEncoding</name></type> <name>onigenc_get_default_encoding</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigUChar</name><modifier>*</modifier></type> <name>onigenc_get_right_adjust_char_head_with_prev</name><parameter_list>(<parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>start</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier><modifier>*</modifier></type> <name>prev</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigUChar</name><modifier>*</modifier></type> <name>onigenc_get_prev_char_head</name><parameter_list>(<parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>start</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigUChar</name><modifier>*</modifier></type> <name>onigenc_get_left_adjust_char_head</name><parameter_list>(<parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>start</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigUChar</name><modifier>*</modifier></type> <name>onigenc_get_right_adjust_char_head</name><parameter_list>(<parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>start</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onigenc_strlen</name><parameter_list>(<parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onigenc_strlen_null</name><parameter_list>(<parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>p</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onigenc_str_bytelen_null</name><parameter_list>(<parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>p</name></decl></parameter>)</parameter_list>;</function_decl>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_NREGION</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_MAX_CAPTURE_GROUP_NUM</name></cpp:macro> <cpp:value>32767</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_MAX_BACKREF_NUM</name></cpp:macro> <cpp:value>1000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_MAX_REPEAT_NUM</name></cpp:macro> <cpp:value>100000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_MAX_MULTI_BYTE_RANGES_NUM</name></cpp:macro> <cpp:value>10000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_MAX_ERROR_MESSAGE_LEN</name></cpp:macro> <cpp:value>90</cpp:value></cpp:define>

<typedef>typedef <type><name>unsigned</name> <name>int</name></type> <name>OnigOptionType</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_DEFAULT</name></cpp:macro> <cpp:value>ONIG_OPTION_NONE</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_NONE</name></cpp:macro> <cpp:value>0U</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_IGNORECASE</name></cpp:macro> <cpp:value>1U</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_EXTEND</name></cpp:macro> <cpp:value>(ONIG_OPTION_IGNORECASE &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_MULTILINE</name></cpp:macro> <cpp:value>(ONIG_OPTION_EXTEND &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_DOTALL</name></cpp:macro> <cpp:value>ONIG_OPTION_MULTILINE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_SINGLELINE</name></cpp:macro> <cpp:value>(ONIG_OPTION_MULTILINE &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_FIND_LONGEST</name></cpp:macro> <cpp:value>(ONIG_OPTION_SINGLELINE &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_FIND_NOT_EMPTY</name></cpp:macro> <cpp:value>(ONIG_OPTION_FIND_LONGEST &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_NEGATE_SINGLELINE</name></cpp:macro> <cpp:value>(ONIG_OPTION_FIND_NOT_EMPTY &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_DONT_CAPTURE_GROUP</name></cpp:macro> <cpp:value>(ONIG_OPTION_NEGATE_SINGLELINE &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_CAPTURE_GROUP</name></cpp:macro> <cpp:value>(ONIG_OPTION_DONT_CAPTURE_GROUP &lt;&lt; 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_NOTBOL</name></cpp:macro> <cpp:value>(ONIG_OPTION_CAPTURE_GROUP &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_NOTEOL</name></cpp:macro> <cpp:value>(ONIG_OPTION_NOTBOL &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_NOTBOS</name></cpp:macro> <cpp:value>(ONIG_OPTION_NOTEOL &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_NOTEOS</name></cpp:macro> <cpp:value>(ONIG_OPTION_NOTBOS &lt;&lt; 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_ASCII_RANGE</name></cpp:macro> <cpp:value>(ONIG_OPTION_NOTEOS &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_POSIX_BRACKET_ALL_RANGE</name></cpp:macro> <cpp:value>(ONIG_OPTION_ASCII_RANGE &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_WORD_BOUND_ALL_RANGE</name></cpp:macro> <cpp:value>(ONIG_OPTION_POSIX_BRACKET_ALL_RANGE &lt;&lt; 1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_NEWLINE_CRLF</name></cpp:macro> <cpp:value>(ONIG_OPTION_WORD_BOUND_ALL_RANGE &lt;&lt; 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_MAXBIT</name></cpp:macro> <cpp:value>ONIG_OPTION_NEWLINE_CRLF</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_ON</name><parameter_list>(<parameter><type><name>options</name></type></parameter>,<parameter><type><name>regopt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((options) |= (regopt))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_OPTION_OFF</name><parameter_list>(<parameter><type><name>options</name></type></parameter>,<parameter><type><name>regopt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((options) &amp;= ~(regopt))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_IS_OPTION_ON</name><parameter_list>(<parameter><type><name>options</name></type></parameter>,<parameter><type><name>option</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((options) &amp; (option))</cpp:value></cpp:define>


<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>op</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>op2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>behavior</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigOptionType</name></type> <name>options</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OnigMetaCharTableType</name></type> <name>meta_char_table</name></decl>;</decl_stmt>
}</block></struct></type> <name>OnigSyntaxType</name>;</typedef>

<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxASIS</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxPosixBasic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxPosixExtended</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxEmacs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxGrep</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxGnuRegex</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxJava</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxPerl58</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxPerl58_NG</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxPerl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxRuby</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigSyntaxType</name></type> <name>OnigSyntaxPython</name></decl>;</decl_stmt>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYNTAX_ASIS</name></cpp:macro> <cpp:value>(&amp;OnigSyntaxASIS)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYNTAX_POSIX_BASIC</name></cpp:macro> <cpp:value>(&amp;OnigSyntaxPosixBasic)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYNTAX_POSIX_EXTENDED</name></cpp:macro> <cpp:value>(&amp;OnigSyntaxPosixExtended)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYNTAX_EMACS</name></cpp:macro> <cpp:value>(&amp;OnigSyntaxEmacs)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYNTAX_GREP</name></cpp:macro> <cpp:value>(&amp;OnigSyntaxGrep)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYNTAX_GNU_REGEX</name></cpp:macro> <cpp:value>(&amp;OnigSyntaxGnuRegex)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYNTAX_JAVA</name></cpp:macro> <cpp:value>(&amp;OnigSyntaxJava)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYNTAX_PERL58</name></cpp:macro> <cpp:value>(&amp;OnigSyntaxPerl58)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYNTAX_PERL58_NG</name></cpp:macro> <cpp:value>(&amp;OnigSyntaxPerl58_NG)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYNTAX_PERL</name></cpp:macro> <cpp:value>(&amp;OnigSyntaxPerl)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYNTAX_RUBY</name></cpp:macro> <cpp:value>(&amp;OnigSyntaxRuby)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYNTAX_PYTHON</name></cpp:macro> <cpp:value>(&amp;OnigSyntaxPython)</cpp:value></cpp:define>


<decl_stmt><decl><type><name>ONIG_EXTERN</name> <specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>OnigDefaultSyntax</name></decl>;</decl_stmt>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYNTAX_DEFAULT</name></cpp:macro> <cpp:value>OnigDefaultSyntax</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_VARIABLE_META_CHARACTERS</name></cpp:macro> <cpp:value>(1U&lt;&lt;0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_DOT_ANYCHAR</name></cpp:macro> <cpp:value>(1U&lt;&lt;1)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ASTERISK_ZERO_INF</name></cpp:macro> <cpp:value>(1U&lt;&lt;2)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF</name></cpp:macro> <cpp:value>(1U&lt;&lt;3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_PLUS_ONE_INF</name></cpp:macro> <cpp:value>(1U&lt;&lt;4)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_PLUS_ONE_INF</name></cpp:macro> <cpp:value>(1U&lt;&lt;5)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_QMARK_ZERO_ONE</name></cpp:macro> <cpp:value>(1U&lt;&lt;6)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_QMARK_ZERO_ONE</name></cpp:macro> <cpp:value>(1U&lt;&lt;7)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_BRACE_INTERVAL</name></cpp:macro> <cpp:value>(1U&lt;&lt;8)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_BRACE_INTERVAL</name></cpp:macro> <cpp:value>(1U&lt;&lt;9)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_VBAR_ALT</name></cpp:macro> <cpp:value>(1U&lt;&lt;10)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_VBAR_ALT</name></cpp:macro> <cpp:value>(1U&lt;&lt;11)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_LPAREN_SUBEXP</name></cpp:macro> <cpp:value>(1U&lt;&lt;12)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_LPAREN_SUBEXP</name></cpp:macro> <cpp:value>(1U&lt;&lt;13)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR</name></cpp:macro> <cpp:value>(1U&lt;&lt;14)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR</name></cpp:macro> <cpp:value>(1U&lt;&lt;15)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_DECIMAL_BACKREF</name></cpp:macro> <cpp:value>(1U&lt;&lt;16)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_BRACKET_CC</name></cpp:macro> <cpp:value>(1U&lt;&lt;17)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_W_WORD</name></cpp:macro> <cpp:value>(1U&lt;&lt;18)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END</name></cpp:macro> <cpp:value>(1U&lt;&lt;19)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_B_WORD_BOUND</name></cpp:macro> <cpp:value>(1U&lt;&lt;20)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_S_WHITE_SPACE</name></cpp:macro> <cpp:value>(1U&lt;&lt;21)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_D_DIGIT</name></cpp:macro> <cpp:value>(1U&lt;&lt;22)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_LINE_ANCHOR</name></cpp:macro> <cpp:value>(1U&lt;&lt;23)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_POSIX_BRACKET</name></cpp:macro> <cpp:value>(1U&lt;&lt;24)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_QMARK_NON_GREEDY</name></cpp:macro> <cpp:value>(1U&lt;&lt;25)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_CONTROL_CHARS</name></cpp:macro> <cpp:value>(1U&lt;&lt;26)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_C_CONTROL</name></cpp:macro> <cpp:value>(1U&lt;&lt;27)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_OCTAL3</name></cpp:macro> <cpp:value>(1U&lt;&lt;28)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_X_HEX2</name></cpp:macro> <cpp:value>(1U&lt;&lt;29)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_X_BRACE_HEX8</name></cpp:macro> <cpp:value>(1U&lt;&lt;30)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP_ESC_O_BRACE_OCTAL</name></cpp:macro> <cpp:value>(1U&lt;&lt;31)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE</name></cpp:macro> <cpp:value>(1U&lt;&lt;0)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_QMARK_GROUP_EFFECT</name></cpp:macro> <cpp:value>(1U&lt;&lt;1)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_OPTION_PERL</name></cpp:macro> <cpp:value>(1U&lt;&lt;2)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_OPTION_RUBY</name></cpp:macro> <cpp:value>(1U&lt;&lt;3)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT</name></cpp:macro> <cpp:value>(1U&lt;&lt;4)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL</name></cpp:macro> <cpp:value>(1U&lt;&lt;5)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_CCLASS_SET_OP</name></cpp:macro> <cpp:value>(1U&lt;&lt;6)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP</name></cpp:macro> <cpp:value>(1U&lt;&lt;7)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_K_NAMED_BACKREF</name></cpp:macro> <cpp:value>(1U&lt;&lt;8)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_G_SUBEXP_CALL</name></cpp:macro> <cpp:value>(1U&lt;&lt;9)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY</name></cpp:macro> <cpp:value>(1U&lt;&lt;10)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL</name></cpp:macro> <cpp:value>(1U&lt;&lt;11)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META</name></cpp:macro> <cpp:value>(1U&lt;&lt;12)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_V_VTAB</name></cpp:macro> <cpp:value>(1U&lt;&lt;13)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_U_HEX4</name></cpp:macro> <cpp:value>(1U&lt;&lt;14)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR</name></cpp:macro> <cpp:value>(1U&lt;&lt;15)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY</name></cpp:macro> <cpp:value>(1U&lt;&lt;16)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT</name></cpp:macro> <cpp:value>(1U&lt;&lt;17)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_H_XDIGIT</name></cpp:macro> <cpp:value>(1U&lt;&lt;19)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_INEFFECTIVE_ESCAPE</name></cpp:macro> <cpp:value>(1U&lt;&lt;20)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_CAPITAL_R_LINEBREAK</name></cpp:macro> <cpp:value>(1U&lt;&lt;21)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_CAPITAL_X_EXTENDED_GRAPHEME_CLUSTER</name></cpp:macro> <cpp:value>(1U&lt;&lt;22)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_V_VERTICAL_WHITESPACE</name></cpp:macro> <cpp:value>(1U&lt;&lt;23)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_H_HORIZONTAL_WHITESPACE</name></cpp:macro> <cpp:value>(1U&lt;&lt;24)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_CAPITAL_K_KEEP</name></cpp:macro> <cpp:value>(1U&lt;&lt;25)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_ESC_G_BRACE_BACKREF</name></cpp:macro> <cpp:value>(1U&lt;&lt;26)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_QMARK_SUBEXP_CALL</name></cpp:macro> <cpp:value>(1U&lt;&lt;27)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_QMARK_VBAR_BRANCH_RESET</name></cpp:macro> <cpp:value>(1U&lt;&lt;28)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_QMARK_LPAREN_CONDITION</name></cpp:macro> <cpp:value>(1U&lt;&lt;29)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_QMARK_CAPITAL_P_NAMED_GROUP</name></cpp:macro> <cpp:value>(1U&lt;&lt;30)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_OP2_QMARK_TILDE_ABSENT</name></cpp:macro> <cpp:value>(1U&lt;&lt;31)</cpp:value></cpp:define> 



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_CONTEXT_INDEP_ANCHORS</name></cpp:macro> <cpp:value>(1U&lt;&lt;31)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS</name></cpp:macro> <cpp:value>(1U&lt;&lt;0)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS</name></cpp:macro> <cpp:value>(1U&lt;&lt;1)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP</name></cpp:macro> <cpp:value>(1U&lt;&lt;2)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_ALLOW_INVALID_INTERVAL</name></cpp:macro> <cpp:value>(1U&lt;&lt;3)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV</name></cpp:macro> <cpp:value>(1U&lt;&lt;4)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_STRICT_CHECK_BACKREF</name></cpp:macro> <cpp:value>(1U&lt;&lt;5)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND</name></cpp:macro> <cpp:value>(1U&lt;&lt;6)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP</name></cpp:macro> <cpp:value>(1U&lt;&lt;7)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME</name></cpp:macro> <cpp:value>(1U&lt;&lt;8)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY</name></cpp:macro> <cpp:value>(1U&lt;&lt;9)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME_CALL</name></cpp:macro> <cpp:value>(1U&lt;&lt;10)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_USE_LEFT_MOST_NAMED_GROUP</name></cpp:macro> <cpp:value>(1U&lt;&lt;11)</cpp:value></cpp:define> 


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC</name></cpp:macro> <cpp:value>(1U&lt;&lt;20)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_BACKSLASH_ESCAPE_IN_CC</name></cpp:macro> <cpp:value>(1U&lt;&lt;21)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC</name></cpp:macro> <cpp:value>(1U&lt;&lt;22)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC</name></cpp:macro> <cpp:value>(1U&lt;&lt;23)</cpp:value></cpp:define> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_WARN_CC_OP_NOT_ESCAPED</name></cpp:macro> <cpp:value>(1U&lt;&lt;24)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT</name></cpp:macro> <cpp:value>(1U&lt;&lt;25)</cpp:value></cpp:define> 
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_SYN_WARN_CC_DUP</name></cpp:macro> <cpp:value>(1U&lt;&lt;26)</cpp:value></cpp:define> 


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_META_CHAR_ESCAPE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_META_CHAR_ANYCHAR</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_META_CHAR_ANYTIME</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_META_CHAR_ZERO_OR_ONE_TIME</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_META_CHAR_ONE_OR_MORE_TIME</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_META_CHAR_ANYCHAR_ANYTIME</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_INEFFECTIVE_META_CHAR</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_IS_PATTERN_ERROR</name><parameter_list>(<parameter><type><name>ecode</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((ecode) &lt;= -100 &amp;&amp; (ecode) &gt; -1000)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_NORMAL</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_MISMATCH</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_NO_SUPPORT_CONFIG</name></cpp:macro> <cpp:value>-2</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_MEMORY</name></cpp:macro> <cpp:value>-5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_TYPE_BUG</name></cpp:macro> <cpp:value>-6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_PARSER_BUG</name></cpp:macro> <cpp:value>-11</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_STACK_BUG</name></cpp:macro> <cpp:value>-12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_UNDEFINED_BYTECODE</name></cpp:macro> <cpp:value>-13</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_UNEXPECTED_BYTECODE</name></cpp:macro> <cpp:value>-14</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_MATCH_STACK_LIMIT_OVER</name></cpp:macro> <cpp:value>-15</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_PARSE_DEPTH_LIMIT_OVER</name></cpp:macro> <cpp:value>-16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_DEFAULT_ENCODING_IS_NOT_SET</name></cpp:macro> <cpp:value>-21</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_SPECIFIED_ENCODING_CANT_CONVERT_TO_WIDE_CHAR</name></cpp:macro> <cpp:value>-22</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_INVALID_ARGUMENT</name></cpp:macro> <cpp:value>-30</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_END_PATTERN_AT_LEFT_BRACE</name></cpp:macro> <cpp:value>-100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_END_PATTERN_AT_LEFT_BRACKET</name></cpp:macro> <cpp:value>-101</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_EMPTY_CHAR_CLASS</name></cpp:macro> <cpp:value>-102</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_PREMATURE_END_OF_CHAR_CLASS</name></cpp:macro> <cpp:value>-103</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_END_PATTERN_AT_ESCAPE</name></cpp:macro> <cpp:value>-104</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_END_PATTERN_AT_META</name></cpp:macro> <cpp:value>-105</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_END_PATTERN_AT_CONTROL</name></cpp:macro> <cpp:value>-106</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_META_CODE_SYNTAX</name></cpp:macro> <cpp:value>-108</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_CONTROL_CODE_SYNTAX</name></cpp:macro> <cpp:value>-109</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE</name></cpp:macro> <cpp:value>-110</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_CHAR_CLASS_VALUE_AT_START_OF_RANGE</name></cpp:macro> <cpp:value>-111</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS</name></cpp:macro> <cpp:value>-112</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED</name></cpp:macro> <cpp:value>-113</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID</name></cpp:macro> <cpp:value>-114</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_NESTED_REPEAT_OPERATOR</name></cpp:macro> <cpp:value>-115</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_UNMATCHED_CLOSE_PARENTHESIS</name></cpp:macro> <cpp:value>-116</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS</name></cpp:macro> <cpp:value>-117</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_END_PATTERN_IN_GROUP</name></cpp:macro> <cpp:value>-118</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_UNDEFINED_GROUP_OPTION</name></cpp:macro> <cpp:value>-119</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_INVALID_POSIX_BRACKET_TYPE</name></cpp:macro> <cpp:value>-121</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_INVALID_LOOK_BEHIND_PATTERN</name></cpp:macro> <cpp:value>-122</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_INVALID_REPEAT_RANGE_PATTERN</name></cpp:macro> <cpp:value>-123</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_INVALID_CONDITION_PATTERN</name></cpp:macro> <cpp:value>-124</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_TOO_BIG_NUMBER</name></cpp:macro> <cpp:value>-200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE</name></cpp:macro> <cpp:value>-201</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE</name></cpp:macro> <cpp:value>-202</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS</name></cpp:macro> <cpp:value>-203</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE</name></cpp:macro> <cpp:value>-204</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_TOO_MANY_MULTI_BYTE_RANGES</name></cpp:macro> <cpp:value>-205</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_TOO_SHORT_MULTI_BYTE_STRING</name></cpp:macro> <cpp:value>-206</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_TOO_BIG_BACKREF_NUMBER</name></cpp:macro> <cpp:value>-207</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_INVALID_BACKREF</name></cpp:macro> <cpp:value>-208</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED</name></cpp:macro> <cpp:value>-209</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_TOO_MANY_CAPTURE_GROUPS</name></cpp:macro> <cpp:value>-210</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_TOO_SHORT_DIGITS</name></cpp:macro> <cpp:value>-211</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_TOO_LONG_WIDE_CHAR_VALUE</name></cpp:macro> <cpp:value>-212</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_EMPTY_GROUP_NAME</name></cpp:macro> <cpp:value>-214</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_INVALID_GROUP_NAME</name></cpp:macro> <cpp:value>-215</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_INVALID_CHAR_IN_GROUP_NAME</name></cpp:macro> <cpp:value>-216</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_UNDEFINED_NAME_REFERENCE</name></cpp:macro> <cpp:value>-217</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_UNDEFINED_GROUP_REFERENCE</name></cpp:macro> <cpp:value>-218</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_MULTIPLEX_DEFINED_NAME</name></cpp:macro> <cpp:value>-219</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL</name></cpp:macro> <cpp:value>-220</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_NEVER_ENDING_RECURSION</name></cpp:macro> <cpp:value>-221</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY</name></cpp:macro> <cpp:value>-222</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_INVALID_CHAR_PROPERTY_NAME</name></cpp:macro> <cpp:value>-223</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_INVALID_CODE_POINT_VALUE</name></cpp:macro> <cpp:value>-400</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_INVALID_WIDE_CHAR_VALUE</name></cpp:macro> <cpp:value>-400</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_TOO_BIG_WIDE_CHAR_VALUE</name></cpp:macro> <cpp:value>-401</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_NOT_SUPPORTED_ENCODING_COMBINATION</name></cpp:macro> <cpp:value>-402</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIGERR_INVALID_COMBINATION_OF_OPTIONS</name></cpp:macro> <cpp:value>-403</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_MAX_CAPTURE_HISTORY_GROUP</name></cpp:macro> <cpp:value>31</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_IS_CAPTURE_HISTORY_GROUP</name><parameter_list>(<parameter><type><name>r</name></type></parameter>, <parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((i) &lt;= ONIG_MAX_CAPTURE_HISTORY_GROUP &amp;&amp; (r)-&gt;list &amp;&amp; (r)-&gt;list[i])</cpp:value></cpp:define>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_CAPTURE_HISTORY</name></expr></argument>)</argument_list></call></expr></cpp:if>
<typedef>typedef <type><struct>struct <name>OnigCaptureTreeNodeStruct</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>group</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OnigPosition</name></type> <name>beg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigPosition</name></type> <name>end</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>allocated</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>num_childs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>OnigCaptureTreeNodeStruct</name></name><modifier>*</modifier><modifier>*</modifier></type> <name>childs</name></decl>;</decl_stmt>
}</block></struct></type> <name>OnigCaptureTreeNode</name>;</typedef>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<struct>struct <name>re_registers</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>allocated</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>num_regs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigPosition</name><modifier>*</modifier></type> <name>beg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigPosition</name><modifier>*</modifier></type> <name>end</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_CAPTURE_HISTORY</name></expr></argument>)</argument_list></call></expr></cpp:if>

<decl_stmt><decl><type><name>OnigCaptureTreeNode</name><modifier>*</modifier></type> <name>history_root</name></decl>;</decl_stmt> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block>;</struct>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_TRAVERSE_CALLBACK_AT_FIRST</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_TRAVERSE_CALLBACK_AT_LAST</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_TRAVERSE_CALLBACK_AT_BOTH</name></cpp:macro> <cpp:value>( ONIG_TRAVERSE_CALLBACK_AT_FIRST | ONIG_TRAVERSE_CALLBACK_AT_LAST )</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_REGION_NOTPOS</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>

<typedef>typedef <type><name><name>struct</name> <name>re_registers</name></name></type> <name>OnigRegion</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigUChar</name><modifier>*</modifier></type> <name>par</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigUChar</name><modifier>*</modifier></type> <name>par_end</name></decl>;</decl_stmt>
}</block></struct></type> <name>OnigErrorInfo</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>lower</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>upper</name></decl>;</decl_stmt>
}</block></struct></type> <name>OnigRepeatRange</name>;</typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>OnigWarnFunc</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>s</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>onig_null_warn</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_NULL_WARN</name></cpp:macro> <cpp:value>onig_null_warn</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ONIG_CHAR_TABLE_SIZE</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>re_pattern_buffer</name> <block>{

<decl_stmt><decl><type><name>unsigned</name> <name>char</name><modifier>*</modifier></type> <name>p</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>used</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>alloc</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>num_mem</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_repeat</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_null_check</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_comb_exp_check</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>num_call</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>capture_history</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>bt_mem_start</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>bt_mem_end</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>stack_pop_level</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>repeat_range_alloc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OnigOptionType</name></type> <name>options</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OnigRepeatRange</name><modifier>*</modifier></type> <name>repeat_range</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>name_table</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigCaseFoldType</name></type> <name>case_fold_flag</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>optimize</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>threshold_len</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>anchor</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OnigDistance</name></type> <name>anchor_dmin</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OnigDistance</name></type> <name>anchor_dmax</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>sub_anchor</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>exact</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>exact_end</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>map</name><index>[<expr><name>ONIG_CHAR_TABLE_SIZE</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>int_map</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>int_map_backward</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OnigDistance</name></type> <name>dmin</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>OnigDistance</name></type> <name>dmax</name></decl>;</decl_stmt> 


<decl_stmt><decl><type><name><name>struct</name> <name>re_pattern_buffer</name></name><modifier>*</modifier></type> <name>chain</name></decl>;</decl_stmt> 
}</block></struct></type> <name>OnigRegexType</name>;</typedef>

<typedef>typedef <type><name>OnigRegexType</name><modifier>*</modifier></type> <name>OnigRegex</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ONIG_ESCAPE_REGEX_T_COLLISION</name></expr></argument>)</argument_list></call></expr></cpp:if>
<typedef>typedef <type><name>OnigRegexType</name></type> <name>regex_t</name>;</typedef>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>num_of_elements</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigEncoding</name></type> <name>pattern_enc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigEncoding</name></type> <name>target_enc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigOptionType</name></type> <name>option</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>OnigCaseFoldType</name></type> <name>case_fold_flag</name></decl>;</decl_stmt>
}</block></struct></type> <name>OnigCompileInfo</name>;</typedef>


<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_initialize</name><parameter_list>(<parameter><decl><type><name>OnigEncoding</name></type> <name><name>encodings</name><index>[]</index></name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_error_code_to_str</name><parameter_list>(<parameter><decl><type><name>OnigUChar</name><modifier>*</modifier></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>OnigPosition</name></type> <name>err_code</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_set_warn_func</name><parameter_list>(<parameter><decl><type><name>OnigWarnFunc</name></type> <name>f</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_set_verb_warn_func</name><parameter_list>(<parameter><decl><type><name>OnigWarnFunc</name></type> <name>f</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_new</name><parameter_list>(<parameter><decl><type><name>OnigRegex</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>pattern</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>pattern_end</name></decl></parameter>, <parameter><decl><type><name>OnigOptionType</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>, <parameter><decl><type><name>OnigErrorInfo</name><modifier>*</modifier></type> <name>einfo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_reg_init</name><parameter_list>(<parameter><decl><type><name>OnigRegex</name></type> <name>reg</name></decl></parameter>, <parameter><decl><type><name>OnigOptionType</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><name>OnigCaseFoldType</name></type> <name>case_fold_flag</name></decl></parameter>, <parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_new_without_alloc</name><parameter_list>(<parameter><decl><type><name>OnigRegex</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>pattern</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>pattern_end</name></decl></parameter>, <parameter><decl><type><name>OnigOptionType</name></type> <name>option</name></decl></parameter>, <parameter><decl><type><name>OnigEncoding</name></type> <name>enc</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>, <parameter><decl><type><name>OnigErrorInfo</name><modifier>*</modifier></type> <name>einfo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_new_deluxe</name><parameter_list>(<parameter><decl><type><name>OnigRegex</name><modifier>*</modifier></type> <name>reg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>pattern</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>pattern_end</name></decl></parameter>, <parameter><decl><type><name>OnigCompileInfo</name><modifier>*</modifier></type> <name>ci</name></decl></parameter>, <parameter><decl><type><name>OnigErrorInfo</name><modifier>*</modifier></type> <name>einfo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_free</name><parameter_list>(<parameter><decl><type><name>OnigRegex</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_free_body</name><parameter_list>(<parameter><decl><type><name>OnigRegex</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigPosition</name></type> <name>onig_scan</name><parameter_list>(<parameter><decl><type><name>OnigRegex</name></type> <name>reg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>str</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><name>OnigRegion</name><modifier>*</modifier></type> <name>region</name></decl></parameter>, <parameter><decl><type><name>OnigOptionType</name></type> <name>option</name></decl></parameter>, <parameter><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>scan_callback</name>)<parameter_list>(<parameter><decl><type><name>OnigPosition</name></type></decl></parameter>, <parameter><decl><type><name>OnigPosition</name></type></decl></parameter>, <parameter><decl><type><name>OnigRegion</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>callback_arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigPosition</name></type> <name>onig_search</name><parameter_list>(<parameter><decl><type><name>OnigRegex</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>str</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>start</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>range</name></decl></parameter>, <parameter><decl><type><name>OnigRegion</name><modifier>*</modifier></type> <name>region</name></decl></parameter>, <parameter><decl><type><name>OnigOptionType</name></type> <name>option</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigPosition</name></type> <name>onig_search_gpos</name><parameter_list>(<parameter><decl><type><name>OnigRegex</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>str</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>global_pos</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>start</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>range</name></decl></parameter>, <parameter><decl><type><name>OnigRegion</name><modifier>*</modifier></type> <name>region</name></decl></parameter>, <parameter><decl><type><name>OnigOptionType</name></type> <name>option</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigPosition</name></type> <name>onig_match</name><parameter_list>(<parameter><decl><type><name>OnigRegex</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>str</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>at</name></decl></parameter>, <parameter><decl><type><name>OnigRegion</name><modifier>*</modifier></type> <name>region</name></decl></parameter>, <parameter><decl><type><name>OnigOptionType</name></type> <name>option</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigRegion</name><modifier>*</modifier></type> <name>onig_region_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_region_init</name><parameter_list>(<parameter><decl><type><name>OnigRegion</name><modifier>*</modifier></type> <name>region</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_region_free</name><parameter_list>(<parameter><decl><type><name>OnigRegion</name><modifier>*</modifier></type> <name>region</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>free_self</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_region_copy</name><parameter_list>(<parameter><decl><type><name>OnigRegion</name><modifier>*</modifier></type> <name>to</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigRegion</name><modifier>*</modifier></type> <name>from</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_region_clear</name><parameter_list>(<parameter><decl><type><name>OnigRegion</name><modifier>*</modifier></type> <name>region</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_region_resize</name><parameter_list>(<parameter><decl><type><name>OnigRegion</name><modifier>*</modifier></type> <name>region</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_region_set</name><parameter_list>(<parameter><decl><type><name>OnigRegion</name><modifier>*</modifier></type> <name>region</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>at</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>beg</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>end</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_name_to_group_numbers</name><parameter_list>(<parameter><decl><type><name>OnigRegex</name></type> <name>reg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>name_end</name></decl></parameter>, <parameter><decl><type><name>int</name><modifier>*</modifier><modifier>*</modifier></type> <name>nums</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_name_to_backref_number</name><parameter_list>(<parameter><decl><type><name>OnigRegex</name></type> <name>reg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type> <name>name_end</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigRegion</name> <modifier>*</modifier></type><name>region</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_foreach_name</name><parameter_list>(<parameter><decl><type><name>OnigRegex</name></type> <name>reg</name></decl></parameter>, <parameter><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>func</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigUChar</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>int</name></type></decl></parameter>,<parameter><decl><type><name>int</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>OnigRegex</name></type></decl></parameter>,<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_number_of_names</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigRegexType</name> <modifier>*</modifier></type><name>reg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_number_of_captures</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigRegexType</name> <modifier>*</modifier></type><name>reg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_number_of_capture_histories</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigRegexType</name> <modifier>*</modifier></type><name>reg</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_CAPTURE_HISTORY</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigCaptureTreeNode</name><modifier>*</modifier></type> <name>onig_get_capture_tree</name><parameter_list>(<parameter><decl><type><name>OnigRegion</name><modifier>*</modifier></type> <name>region</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_capture_tree_traverse</name><parameter_list>(<parameter><decl><type><name>OnigRegion</name><modifier>*</modifier></type> <name>region</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>at</name></decl></parameter>, <parameter><function_decl><type><name>int</name></type>(<modifier>*</modifier><name>callback_func</name>)<parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>,<parameter><decl><type><name>OnigPosition</name></type></decl></parameter>,<parameter><decl><type><name>OnigPosition</name></type></decl></parameter>,<parameter><decl><type><name>int</name></type></decl></parameter>,<parameter><decl><type><name>int</name></type></decl></parameter>,<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_noname_group_capture_is_active</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigRegexType</name> <modifier>*</modifier></type><name>reg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigEncoding</name></type> <name>onig_get_encoding</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigRegexType</name> <modifier>*</modifier></type><name>reg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigOptionType</name></type> <name>onig_get_options</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigRegexType</name> <modifier>*</modifier></type><name>reg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigCaseFoldType</name></type> <name>onig_get_case_fold_flag</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigRegexType</name> <modifier>*</modifier></type><name>reg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>onig_get_syntax</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigRegexType</name> <modifier>*</modifier></type><name>reg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_set_default_syntax</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_copy_syntax</name><parameter_list>(<parameter><decl><type><name>OnigSyntaxType</name><modifier>*</modifier></type> <name>to</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>from</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>unsigned</name> <name>int</name></type> <name>onig_get_syntax_op</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>unsigned</name> <name>int</name></type> <name>onig_get_syntax_op2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>unsigned</name> <name>int</name></type> <name>onig_get_syntax_behavior</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigOptionType</name></type> <name>onig_get_syntax_options</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_set_syntax_op</name><parameter_list>(<parameter><decl><type><name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_set_syntax_op2</name><parameter_list>(<parameter><decl><type><name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>op2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_set_syntax_behavior</name><parameter_list>(<parameter><decl><type><name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>behavior</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_set_syntax_options</name><parameter_list>(<parameter><decl><type><name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>, <parameter><decl><type><name>OnigOptionType</name></type> <name>options</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_set_meta_char</name><parameter_list>(<parameter><decl><type><name>OnigSyntaxType</name><modifier>*</modifier></type> <name>syntax</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>what</name></decl></parameter>, <parameter><decl><type><name>OnigCodePoint</name></type> <name>code</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>void</name></type> <name>onig_copy_encoding</name><parameter_list>(<parameter><decl><type><name>OnigEncodingType</name> <modifier>*</modifier></type><name>to</name></decl></parameter>, <parameter><decl><type><name>OnigEncoding</name></type> <name>from</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>OnigCaseFoldType</name></type> <name>onig_get_default_case_fold_flag</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_set_default_case_fold_flag</name><parameter_list>(<parameter><decl><type><name>OnigCaseFoldType</name></type> <name>case_fold_flag</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>unsigned</name> <name>int</name></type> <name>onig_get_match_stack_limit_size</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_set_match_stack_limit_size</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>unsigned</name> <name>int</name></type> <name>onig_get_parse_depth_limit</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_set_parse_depth_limit</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>depth</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<name>int</name></type> <name>onig_end</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>onig_version</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>ONIG_EXTERN</name>
<specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>onig_copyright</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<expr_stmt><expr><name>RUBY_SYMBOL_EXPORT_END</name></expr></expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
{ 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
