<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats_featurelocations\ruby\include\ruby\debug.h">










<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RB_DEBUG_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RB_DEBUG_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
} 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>RUBY_SYMBOL_EXPORT_BEGIN</name>






<name>int</name></type> <name>rb_profile_frames</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>start</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>limit</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>buff</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>lines</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_profile_frame_path</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_profile_frame_absolute_path</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_profile_frame_label</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_profile_frame_base_label</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_profile_frame_full_label</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_profile_frame_first_lineno</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_profile_frame_classpath</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_profile_frame_singleton_method_p</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_profile_frame_method_name</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>frame</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_profile_frame_qualified_method_name</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>frame</name></decl></parameter>)</parameter_list>;</function_decl>


<typedef>typedef <type><name><name>struct</name> <name>rb_debug_inspector_struct</name></name></type> <name>rb_debug_inspector_t</name>;</typedef>
<typedef>typedef <function_decl><type><name>VALUE</name></type> (<modifier>*</modifier><name>rb_debug_inspector_func_t</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>rb_debug_inspector_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name>VALUE</name></type> <name>rb_debug_inspector_open</name><parameter_list>(<parameter><decl><type><name>rb_debug_inspector_func_t</name></type> <name>func</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_debug_inspector_frame_self_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>rb_debug_inspector_t</name> <modifier>*</modifier></type><name>dc</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>index</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_debug_inspector_frame_class_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>rb_debug_inspector_t</name> <modifier>*</modifier></type><name>dc</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>index</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_debug_inspector_frame_binding_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>rb_debug_inspector_t</name> <modifier>*</modifier></type><name>dc</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>index</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_debug_inspector_frame_iseq_get</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>rb_debug_inspector_t</name> <modifier>*</modifier></type><name>dc</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>index</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_debug_inspector_backtrace_locations</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>rb_debug_inspector_t</name> <modifier>*</modifier></type><name>dc</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>rb_add_event_hook</name><parameter_list>(<parameter><decl><type><name>rb_event_hook_func_t</name></type> <name>func</name></decl></parameter>, <parameter><decl><type><name>rb_event_flag_t</name></type> <name>events</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>rb_remove_event_hook</name><parameter_list>(<parameter><decl><type><name>rb_event_hook_func_t</name></type> <name>func</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>rb_remove_event_hook_with_data</name><parameter_list>(<parameter><decl><type><name>rb_event_hook_func_t</name></type> <name>func</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>rb_thread_add_event_hook</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>thval</name></decl></parameter>, <parameter><decl><type><name>rb_event_hook_func_t</name></type> <name>func</name></decl></parameter>, <parameter><decl><type><name>rb_event_flag_t</name></type> <name>events</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>rb_thread_remove_event_hook</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>thval</name></decl></parameter>, <parameter><decl><type><name>rb_event_hook_func_t</name></type> <name>func</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>rb_thread_remove_event_hook_with_data</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>thval</name></decl></parameter>, <parameter><decl><type><name>rb_event_hook_func_t</name></type> <name>func</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>data</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>VALUE</name></type> <name>rb_tracepoint_new</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>target_thread_not_supported_yet</name></decl></parameter>, <parameter><decl><type><name>rb_event_flag_t</name></type> <name>events</name></decl></parameter>, <parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>func</name>)<parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracepoint_enable</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>tpval</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracepoint_disable</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>tpval</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracepoint_enabled_p</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>tpval</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><name><name>struct</name> <name>rb_trace_arg_struct</name></name></type> <name>rb_trace_arg_t</name>;</typedef>
<function_decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>rb_tracearg_from_tracepoint</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>tpval</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>rb_event_flag_t</name></type> <name>rb_tracearg_event_flag</name><parameter_list>(<parameter><decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>trace_arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracearg_event</name><parameter_list>(<parameter><decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>trace_arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracearg_lineno</name><parameter_list>(<parameter><decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>trace_arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracearg_path</name><parameter_list>(<parameter><decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>trace_arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracearg_method_id</name><parameter_list>(<parameter><decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>trace_arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracearg_callee_id</name><parameter_list>(<parameter><decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>trace_arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracearg_defined_class</name><parameter_list>(<parameter><decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>trace_arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracearg_binding</name><parameter_list>(<parameter><decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>trace_arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracearg_self</name><parameter_list>(<parameter><decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>trace_arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracearg_return_value</name><parameter_list>(<parameter><decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>trace_arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracearg_raised_exception</name><parameter_list>(<parameter><decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>trace_arg</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>VALUE</name></type> <name>rb_tracearg_object</name><parameter_list>(<parameter><decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>trace_arg</name></decl></parameter>)</parameter_list>;</function_decl>






<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>rb_postponed_job_func_t</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><name>int</name></type> <name>rb_postponed_job_register</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>rb_postponed_job_func_t</name></type> <name>func</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>rb_postponed_job_register_one</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>rb_postponed_job_func_t</name></type> <name>func</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>



<typedef>typedef <type><enum>enum <block>{
<decl><name>RUBY_EVENT_HOOK_FLAG_SAFE</name> <init>= <expr><literal type="number">0x01</literal></expr></init></decl>,
<decl><name>RUBY_EVENT_HOOK_FLAG_DELETED</name> <init>= <expr><literal type="number">0x02</literal></expr></init></decl>,
<decl><name>RUBY_EVENT_HOOK_FLAG_RAW_ARG</name> <init>= <expr><literal type="number">0x04</literal></expr></init></decl>
}</block></enum></type> <name>rb_event_hook_flag_t</name>;</typedef>

<function_decl><type><name>void</name></type> <name>rb_add_event_hook2</name><parameter_list>(<parameter><decl><type><name>rb_event_hook_func_t</name></type> <name>func</name></decl></parameter>, <parameter><decl><type><name>rb_event_flag_t</name></type> <name>events</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>rb_event_hook_flag_t</name></type> <name>hook_flag</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>rb_thread_add_event_hook2</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>thval</name></decl></parameter>, <parameter><decl><type><name>rb_event_hook_func_t</name></type> <name>func</name></decl></parameter>, <parameter><decl><type><name>rb_event_flag_t</name></type> <name>events</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>rb_event_hook_flag_t</name></type> <name>hook_flag</name></decl></parameter>)</parameter_list>;</function_decl>

<expr_stmt><expr><name>RUBY_SYMBOL_EXPORT_END</name></expr></expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
{ 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></extern> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
