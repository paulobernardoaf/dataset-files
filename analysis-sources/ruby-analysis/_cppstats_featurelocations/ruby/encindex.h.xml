<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats_featurelocations\ruby\encindex.h">










<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_ENCINDEX_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_ENCINDEX_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ruby/encoding.h"</cpp:file></cpp:include> 
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
} 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<enum>enum <name>ruby_preserved_encindex</name> <block>{
<decl><name>RUBY_ENCINDEX_ASCII</name></decl>,
<decl><name>RUBY_ENCINDEX_UTF_8</name></decl>,
<decl><name>RUBY_ENCINDEX_US_ASCII</name></decl>,


<decl><name>RUBY_ENCINDEX_UTF_16BE</name></decl>,
<decl><name>RUBY_ENCINDEX_UTF_16LE</name></decl>,
<decl><name>RUBY_ENCINDEX_UTF_32BE</name></decl>,
<decl><name>RUBY_ENCINDEX_UTF_32LE</name></decl>,
<decl><name>RUBY_ENCINDEX_UTF_16</name></decl>,
<decl><name>RUBY_ENCINDEX_UTF_32</name></decl>,
<decl><name>RUBY_ENCINDEX_UTF8_MAC</name></decl>,


<decl><name>RUBY_ENCINDEX_EUC_JP</name></decl>,
<decl><name>RUBY_ENCINDEX_Windows_31J</name></decl>,

<decl><name>RUBY_ENCINDEX_BUILTIN_MAX</name></decl>
}</block>;</enum>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCINDEX_ASCII</name></cpp:macro> <cpp:value>RUBY_ENCINDEX_ASCII</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCINDEX_UTF_8</name></cpp:macro> <cpp:value>RUBY_ENCINDEX_UTF_8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCINDEX_US_ASCII</name></cpp:macro> <cpp:value>RUBY_ENCINDEX_US_ASCII</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCINDEX_UTF_16BE</name></cpp:macro> <cpp:value>RUBY_ENCINDEX_UTF_16BE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCINDEX_UTF_16LE</name></cpp:macro> <cpp:value>RUBY_ENCINDEX_UTF_16LE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCINDEX_UTF_32BE</name></cpp:macro> <cpp:value>RUBY_ENCINDEX_UTF_32BE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCINDEX_UTF_32LE</name></cpp:macro> <cpp:value>RUBY_ENCINDEX_UTF_32LE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCINDEX_UTF_16</name></cpp:macro> <cpp:value>RUBY_ENCINDEX_UTF_16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCINDEX_UTF_32</name></cpp:macro> <cpp:value>RUBY_ENCINDEX_UTF_32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCINDEX_UTF8_MAC</name></cpp:macro> <cpp:value>RUBY_ENCINDEX_UTF8_MAC</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCINDEX_EUC_JP</name></cpp:macro> <cpp:value>RUBY_ENCINDEX_EUC_JP</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCINDEX_Windows_31J</name></cpp:macro> <cpp:value>RUBY_ENCINDEX_Windows_31J</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ENCINDEX_BUILTIN_MAX</name></cpp:macro> <cpp:value>RUBY_ENCINDEX_BUILTIN_MAX</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rb_ascii8bit_encindex</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>RUBY_ENCINDEX_ASCII</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rb_utf8_encindex</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>RUBY_ENCINDEX_UTF_8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rb_usascii_encindex</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>RUBY_ENCINDEX_US_ASCII</cpp:value></cpp:define>

<function_decl><type><name>int</name></type> <name>rb_enc_find_index2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>long</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>
{ 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></extern> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 
</unit>
