




































#if defined(CHAR_BITS)
#if CHAR_BITS != 8
#error C_block structure assumes 8 bit characters
#endif
#endif

#if !defined(LONG_LONG)
#if SIZEOF_LONG_LONG > 0
#define LONG_LONG long long
#elif SIZEOF___INT64 > 0
#define HAVE_LONG_LONG 1
#define LONG_LONG __int64
#undef SIZEOF_LONG_LONG
#define SIZEOF_LONG_LONG SIZEOF___INT64
#endif
#endif





#if SIZEOF_LONG == 4
#define LONG_IS_32_BITS
#endif





#if SIZEOF_LONG == 8
#define B64 long
#elif SIZEOF_LONG_LONG == 8
#define B64 LONG_LONG
#endif






#if defined(notdef)
#define LARGEDATA
#endif


#if !defined(STATIC)
#define STATIC static
#endif





















































































































typedef union {
unsigned char b[8];
struct {
#if defined(LONG_IS_32_BITS)

long i0;
long i1;
#else
long i0: 32;
long i1: 32;
#endif
} b32;
#if defined(B64)
B64 b64;
#endif
} C_block;

#if defined(LARGEDATA)

#define LGCHUNKBITS 3
#define CHUNKBITS (1<<LGCHUNKBITS)
#else

#define LGCHUNKBITS 2
#define CHUNKBITS (1<<LGCHUNKBITS)
#endif

struct crypt_data {

#define KS_SIZE 16
C_block KS[KS_SIZE];



char cryptresult[1+4+4+11+1]; 
};

char *crypt(const char *key, const char *setting);
void setkey(const char *key);
void encrypt(char *block, int flag);

char *crypt_r(const char *key, const char *setting, struct crypt_data *data);
void setkey_r(const char *key, struct crypt_data *data);
void encrypt_r(char *block, int flag, struct crypt_data *data);


