<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats\ruby\missing\signbit.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ruby.h"</cpp:file></cpp:include>

<function><type><name>int</name></type>

<name>signbit</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>x</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<enum>enum <block>{<decl><name>double_per_long</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>double</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> sizeof<operator>(</operator><name>long</name><operator>)</operator></expr></init></decl>}</block>;</enum>

<enum>enum <block>{<decl><name>long_msb</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>long</name></expr></argument>)</argument_list></sizeof> <operator>*</operator> <name>CHAR_BIT</name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>}</block>;</enum>

<union>union <block>{<decl_stmt><decl><type><name>double</name></type> <name>d</name></decl>;</decl_stmt> <decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name><name>i</name><index>[<expr><name>double_per_long</name></expr>]</index></name></decl>;</decl_stmt>}</block> <decl><name>u</name></decl>;</union>

<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>l</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>u</name><operator>.</operator><name>d</name></name> <operator>=</operator> <name>x</name></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>WORDS_BIGENDIAN</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name>l</name> <operator>=</operator> <name><name>u</name><operator>.</operator><name>i</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><name>l</name> <operator>=</operator> <name><name>u</name><operator>.</operator><name>i</name><index>[<expr><name>double_per_long</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<return>return <expr><operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><name>l</name> <operator>&gt;&gt;</operator> <name>long_msb</name><operator>)</operator></expr>;</return>

</block_content>}</block></function>

</unit>
