<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats\ruby\loadpath.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"verconf.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ruby/ruby.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_REVISION</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"version.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_ARCH</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_ARCH</name></cpp:macro> <cpp:value>RUBY_PLATFORM</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_SITEARCH</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_SITEARCH</name></cpp:macro> <cpp:value>RUBY_ARCH</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_PLATFORM_CPU</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_THINARCH</name></cpp:macro> <cpp:value>RUBY_PLATFORM_CPU"-"RUBY_PLATFORM_OS</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_LIB_PREFIX</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_EXEC_PREFIX</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:error>#<cpp:directive>error</cpp:directive> RUBY_EXEC_PREFIX must be defined</cpp:error>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_LIB_PREFIX</name></cpp:macro> <cpp:value>RUBY_EXEC_PREFIX"/lib/ruby"</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_SITE_LIB</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_SITE_LIB</name></cpp:macro> <cpp:value>RUBY_LIB_PREFIX"/site_ruby"</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_VENDOR_LIB</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_VENDOR_LIB</name></cpp:macro> <cpp:value>RUBY_LIB_PREFIX"/vendor_ruby"</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name>char</name></type> <name><name>ruby_lib_version_string</name><index>[<expr><operator>(</operator><name>int</name><operator>)</operator><sizeof>sizeof<argument_list>(<argument><expr><name>RUBY_LIB_VERSION</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">2</literal></expr>]</index></name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_LIB</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_LIB</name></cpp:macro> <cpp:value>RUBY_LIB_PREFIX "/"RUBY_LIB_VERSION</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_SITE_LIB2</name></cpp:macro> <cpp:value>RUBY_SITE_LIB "/"RUBY_LIB_VERSION</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_VENDOR_LIB2</name></cpp:macro> <cpp:value>RUBY_VENDOR_LIB "/"RUBY_LIB_VERSION</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_ARCH_LIB_FOR</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_ARCH_LIB_FOR</name><parameter_list>(<parameter><type><name>arch</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>RUBY_LIB "/"arch</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_SITE_ARCH_LIB_FOR</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_SITE_ARCH_LIB_FOR</name><parameter_list>(<parameter><type><name>arch</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>RUBY_SITE_LIB2 "/"arch</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_VENDOR_ARCH_LIB_FOR</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RUBY_VENDOR_ARCH_LIB_FOR</name><parameter_list>(<parameter><type><name>arch</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>RUBY_VENDOR_LIB2 "/"arch</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LOAD_RELATIVE</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><name>LOAD_RELATIVE</name></expr></cpp:if>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>ruby_exec_prefix</name><index>[]</index></name> <init>= <expr><name>RUBY_EXEC_PREFIX</name></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>ruby_initial_load_paths</name><index>[]</index></name> <init>=

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NO_INITIAL_LOAD_PATH</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_SEARCH_PATH</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr><name>RUBY_SEARCH_PATH</name> <literal type="string">"\0"</literal>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NO_RUBY_SITE_LIB</name></expr></argument>)</argument_list></call></expr></cpp:if>
<name>RUBY_SITE_LIB2</name> <literal type="string">"\0"</literal>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_THINARCH</name></expr></argument>)</argument_list></call></expr></cpp:if>
<call><name>RUBY_SITE_ARCH_LIB_FOR</name><argument_list>(<argument><expr><name>RUBY_THINARCH</name></expr></argument>)</argument_list></call> <literal type="string">"\0"</literal>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<call><name>RUBY_SITE_ARCH_LIB_FOR</name><argument_list>(<argument><expr><name>RUBY_SITEARCH</name></expr></argument>)</argument_list></call> <literal type="string">"\0"</literal>

<name>RUBY_SITE_LIB</name> <literal type="string">"\0"</literal>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NO_RUBY_VENDOR_LIB</name></expr></argument>)</argument_list></call></expr></cpp:if>
<name>RUBY_VENDOR_LIB2</name> <literal type="string">"\0"</literal>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_THINARCH</name></expr></argument>)</argument_list></call></expr></cpp:if>
<call><name>RUBY_VENDOR_ARCH_LIB_FOR</name><argument_list>(<argument><expr><name>RUBY_THINARCH</name></expr></argument>)</argument_list></call> <literal type="string">"\0"</literal>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<call><name>RUBY_VENDOR_ARCH_LIB_FOR</name><argument_list>(<argument><expr><name>RUBY_SITEARCH</name></expr></argument>)</argument_list></call> <literal type="string">"\0"</literal>

<name>RUBY_VENDOR_LIB</name> <literal type="string">"\0"</literal>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<name>RUBY_LIB</name> <literal type="string">"\0"</literal>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RUBY_THINARCH</name></expr></argument>)</argument_list></call></expr></cpp:if>
<call><name>RUBY_ARCH_LIB_FOR</name><argument_list>(<argument><expr><name>RUBY_THINARCH</name></expr></argument>)</argument_list></call> <literal type="string">"\0"</literal>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<call><name>RUBY_ARCH_LIB_FOR</name><argument_list>(<argument><expr><name>RUBY_ARCH</name></expr></argument>)</argument_list></call> <literal type="string">"\0"</literal>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<literal type="string">""</literal></expr></init></decl>;</decl_stmt>

</unit>
