<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats\ruby\ext\date\date_tmx.h"><struct>struct <name>tmx_funcs</name> <block>{

<function_decl><type><name>VALUE</name></type> (<modifier>*</modifier><name>year</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>yday</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>mon</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>mday</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VALUE</name></type> (<modifier>*</modifier><name>cwyear</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>cweek</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>cwday</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>wnum0</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>wnum1</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>wday</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>hour</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>min</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>sec</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VALUE</name></type> (<modifier>*</modifier><name>sec_fraction</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VALUE</name></type> (<modifier>*</modifier><name>secs</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VALUE</name></type> (<modifier>*</modifier><name>msecs</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>offset</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>char</name> <modifier>*</modifier></type>(<modifier>*</modifier><name>zone</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl></parameter>)</parameter_list>;</function_decl>

}</block>;</struct>

<struct>struct <name>tmx</name> <block>{

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>dat</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>tmx_funcs</name></name> <modifier>*</modifier></type><name>funcs</name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_attr</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(tmx-&gt;funcs-&gt;x)(tmx-&gt;dat)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_year</name></cpp:macro> <cpp:value>tmx_attr(year)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_yday</name></cpp:macro> <cpp:value>tmx_attr(yday)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_mon</name></cpp:macro> <cpp:value>tmx_attr(mon)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_mday</name></cpp:macro> <cpp:value>tmx_attr(mday)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_cwyear</name></cpp:macro> <cpp:value>tmx_attr(cwyear)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_cweek</name></cpp:macro> <cpp:value>tmx_attr(cweek)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_cwday</name></cpp:macro> <cpp:value>tmx_attr(cwday)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_wnum0</name></cpp:macro> <cpp:value>tmx_attr(wnum0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_wnum1</name></cpp:macro> <cpp:value>tmx_attr(wnum1)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_wday</name></cpp:macro> <cpp:value>tmx_attr(wday)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_hour</name></cpp:macro> <cpp:value>tmx_attr(hour)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_min</name></cpp:macro> <cpp:value>tmx_attr(min)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_sec</name></cpp:macro> <cpp:value>tmx_attr(sec)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_sec_fraction</name></cpp:macro> <cpp:value>tmx_attr(sec_fraction)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_secs</name></cpp:macro> <cpp:value>tmx_attr(secs)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_msecs</name></cpp:macro> <cpp:value>tmx_attr(msecs)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_offset</name></cpp:macro> <cpp:value>tmx_attr(offset)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tmx_zone</name></cpp:macro> <cpp:value>tmx_attr(zone)</cpp:value></cpp:define>

</unit>
