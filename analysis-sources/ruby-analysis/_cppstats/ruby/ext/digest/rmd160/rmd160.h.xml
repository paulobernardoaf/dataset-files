<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats\ruby\ext\digest\rmd160\rmd160.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"../defs.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>state</name><index>[<expr><literal type="number">5</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>length</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>bbuffer</name><index>[<expr><literal type="number">64</literal></expr>]</index></name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>uint32_t</name></type> <name>buflen</name></decl>;</decl_stmt> 

}</block></struct></type> <name>RMD160_CTX</name>;</typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RUBY</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RMD160_Init</name></cpp:macro> <cpp:value>rb_Digest_RMD160_Init</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RMD160_Transform</name></cpp:macro> <cpp:value>rb_Digest_RMD160_Transform</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RMD160_Update</name></cpp:macro> <cpp:value>rb_Digest_RMD160_Update</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RMD160_Finish</name></cpp:macro> <cpp:value>rb_Digest_RMD160_Finish</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>__BEGIN_DECLS</name>

<name>int</name> <name>RMD160_Init</name></type> <name>_</name><argument_list>(<argument><expr><operator>(</operator><name>RMD160_CTX</name> <operator>*</operator><operator>)</operator></expr></argument>)</argument_list></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <name>RMD160_Transform</name></type> <name>_</name><argument_list>(<argument><expr><operator>(</operator><name><name>uint32_t</name><index>[<expr><literal type="number">5</literal></expr>]</index></name><operator>,</operator> <specifier>const</specifier> <name><name>uint32_t</name><index>[<expr><literal type="number">16</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <name>RMD160_Update</name></type> <name>_</name><argument_list>(<argument><expr><operator>(</operator><name>RMD160_CTX</name> <operator>*</operator><operator>,</operator> <specifier>const</specifier> <name>uint8_t</name> <operator>*</operator><operator>,</operator> <name>size_t</name><operator>)</operator></expr></argument>)</argument_list></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name> <name>RMD160_Finish</name></type> <name>_</name><argument_list>(<argument><expr><operator>(</operator><name>RMD160_CTX</name> <operator>*</operator><operator>,</operator> <name><name>uint8_t</name><index>[<expr><literal type="number">20</literal></expr>]</index></name><operator>)</operator></expr></argument>)</argument_list></decl>;</decl_stmt>

<expr><name>__END_DECLS</name></expr>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RMD160_BLOCK_LENGTH</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RMD160_DIGEST_LENGTH</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RMD160_DIGEST_STRING_LENGTH</name></cpp:macro> <cpp:value>(RMD160_DIGEST_LENGTH * 2 + 1)</cpp:value></cpp:define>

</unit>
