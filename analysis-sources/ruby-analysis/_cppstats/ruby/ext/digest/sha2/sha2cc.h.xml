<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats\ruby\ext\digest\sha2\sha2cc.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>COMMON_DIGEST_FOR_OPENSSL</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;CommonCrypto/CommonDigest.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA256_BLOCK_LENGTH</name></cpp:macro> <cpp:value>CC_SHA256_BLOCK_BYTES</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA384_BLOCK_LENGTH</name></cpp:macro> <cpp:value>CC_SHA384_BLOCK_BYTES</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA512_BLOCK_LENGTH</name></cpp:macro> <cpp:value>CC_SHA512_BLOCK_BYTES</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA384_CTX</name></cpp:macro> <cpp:value>CC_SHA512_CTX</cpp:value></cpp:define>

<expr><specifier>static</specifier> <macro><name>DEFINE_UPDATE_FUNC_FOR_UINT</name><argument_list>(<argument>SHA256</argument>)</argument_list></macro>

<specifier>static</specifier> <macro><name>DEFINE_FINISH_FUNC_FROM_FINAL</name><argument_list>(<argument>SHA256</argument>)</argument_list></macro>

<specifier>static</specifier> <macro><name>DEFINE_UPDATE_FUNC_FOR_UINT</name><argument_list>(<argument>SHA384</argument>)</argument_list></macro>

<specifier>static</specifier> <macro><name>DEFINE_FINISH_FUNC_FROM_FINAL</name><argument_list>(<argument>SHA384</argument>)</argument_list></macro>

<specifier>static</specifier> <macro><name>DEFINE_UPDATE_FUNC_FOR_UINT</name><argument_list>(<argument>SHA512</argument>)</argument_list></macro>

<specifier>static</specifier> <macro><name>DEFINE_FINISH_FUNC_FROM_FINAL</name><argument_list>(<argument>SHA512</argument>)</argument_list></macro></expr>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SHA256_Update</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SHA256_Finish</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA256_Update</name></cpp:macro> <cpp:value>rb_digest_SHA256_update</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA256_Finish</name></cpp:macro> <cpp:value>rb_digest_SHA256_finish</cpp:value></cpp:define>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SHA384_Update</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SHA384_Finish</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA384_Update</name></cpp:macro> <cpp:value>rb_digest_SHA384_update</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA384_Finish</name></cpp:macro> <cpp:value>rb_digest_SHA384_finish</cpp:value></cpp:define>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SHA512_Update</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SHA512_Finish</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA512_Update</name></cpp:macro> <cpp:value>rb_digest_SHA512_update</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHA512_Finish</name></cpp:macro> <cpp:value>rb_digest_SHA512_finish</cpp:value></cpp:define>

</unit>
