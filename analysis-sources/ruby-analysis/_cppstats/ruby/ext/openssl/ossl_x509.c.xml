<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats\ruby\ext\openssl\ossl_x509.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ossl.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>VALUE</name></type> <name>mX509</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DefX509Const</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>rb_define_const(mX509, #x, INT2NUM(X509_##x))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DefX509Default</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>rb_define_const(mX509, "DEFAULT_" #x, rb_str_new2(X509_get_default_##i()))</cpp:value></cpp:define>

<function><type><name>ASN1_TIME</name> <modifier>*</modifier></type>

<name>ossl_x509_time_adjust</name><parameter_list>(<parameter><decl><type><name>ASN1_TIME</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>time</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>time_t</name></type> <name>sec</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>off_days</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>ossl_time_split</name><argument_list>(<argument><expr><name>time</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>sec</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>off_days</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>X509_time_adj_ex</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><name>off_days</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>sec</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type>

<name>Init_ossl_x509</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

mOSSL = rb_define_module("OpenSSL");

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name>mX509</name> <operator>=</operator> <call><name>rb_define_module_under</name><argument_list>(<argument><expr><name>mOSSL</name></expr></argument>, <argument><expr><literal type="string">"X509"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Init_ossl_x509attr</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Init_ossl_x509cert</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Init_ossl_x509crl</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Init_ossl_x509ext</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Init_ossl_x509name</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Init_ossl_x509req</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Init_ossl_x509revoked</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>Init_ossl_x509store</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_ERR_UNSPECIFIED</name></expr></argument>)</argument_list></call></expr></cpp:if> 

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNSPECIFIED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNABLE_TO_GET_ISSUER_CERT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNABLE_TO_GET_CRL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_CERT_SIGNATURE_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_CRL_SIGNATURE_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_CERT_NOT_YET_VALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_CERT_HAS_EXPIRED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_CRL_NOT_YET_VALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_CRL_HAS_EXPIRED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_OUT_OF_MEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_SELF_SIGNED_CERT_IN_CHAIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_CERT_CHAIN_TOO_LONG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_CERT_REVOKED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_INVALID_CA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_PATH_LENGTH_EXCEEDED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_INVALID_PURPOSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_CERT_UNTRUSTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_CERT_REJECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_SUBJECT_ISSUER_MISMATCH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_AKID_SKID_MISMATCH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_AKID_ISSUER_SERIAL_MISMATCH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_KEYUSAGE_NO_CERTSIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNABLE_TO_GET_CRL_ISSUER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNHANDLED_CRITICAL_EXTENSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_KEYUSAGE_NO_CRL_SIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_INVALID_NON_CA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_PROXY_PATH_LENGTH_EXCEEDED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_INVALID_EXTENSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_INVALID_POLICY_EXTENSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_NO_EXPLICIT_POLICY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_DIFFERENT_CRL_SCOPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNSUPPORTED_EXTENSION_FEATURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNNESTED_RESOURCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_PERMITTED_VIOLATION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_EXCLUDED_VIOLATION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_SUBTREE_MINMAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_APPLICATION_VERIFICATION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNSUPPORTED_CONSTRAINT_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_UNSUPPORTED_NAME_SYNTAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_CRL_PATH_VALIDATION_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_ERR_PATH_LOOP</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_PATH_LOOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_ERR_SUITE_B_INVALID_VERSION</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_SUITE_B_INVALID_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_SUITE_B_INVALID_ALGORITHM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_SUITE_B_INVALID_CURVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_SUITE_B_INVALID_SIGNATURE_ALGORITHM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_SUITE_B_LOS_NOT_ALLOWED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_SUITE_B_CANNOT_SIGN_P_384_WITH_P_256</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_ERR_HOSTNAME_MISMATCH</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_HOSTNAME_MISMATCH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_EMAIL_MISMATCH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_IP_ADDRESS_MISMATCH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_ERR_DANE_NO_MATCH</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_DANE_NO_MATCH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_ERR_EE_KEY_TOO_SMALL</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_EE_KEY_TOO_SMALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_CA_KEY_TOO_SMALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_CA_MD_TOO_WEAK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_ERR_INVALID_CALL</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_INVALID_CALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_ERR_STORE_LOOKUP</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_STORE_LOOKUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_ERR_NO_VALID_SCTS</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_NO_VALID_SCTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_ERR_PROXY_SUBJECT_NAME_VIOLATION</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_PROXY_SUBJECT_NAME_VIOLATION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_ERR_OCSP_VERIFY_NEEDED</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_OCSP_VERIFY_NEEDED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_OCSP_VERIFY_FAILED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_ERR_OCSP_CERT_UNKNOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_USE_CHECK_TIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_CRL_CHECK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_CRL_CHECK_ALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_IGNORE_CRITICAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_X509_STRICT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_ALLOW_PROXY_CERTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_POLICY_CHECK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_EXPLICIT_POLICY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_INHIBIT_ANY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_INHIBIT_MAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_NOTIFY_POLICY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_EXTENDED_CRL_SUPPORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_USE_DELTAS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_CHECK_SS_SIGNATURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_FLAG_TRUSTED_FIRST</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_TRUSTED_FIRST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_FLAG_SUITEB_128_LOS_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_SUITEB_128_LOS_ONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_FLAG_SUITEB_192_LOS</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_SUITEB_192_LOS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_FLAG_SUITEB_128_LOS</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_SUITEB_128_LOS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_FLAG_PARTIAL_CHAIN</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_PARTIAL_CHAIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_FLAG_NO_ALT_CHAINS</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_NO_ALT_CHAINS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>X509_V_FLAG_NO_CHECK_TIME</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>V_FLAG_NO_CHECK_TIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>PURPOSE_SSL_CLIENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>PURPOSE_SSL_SERVER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>PURPOSE_NS_SSL_SERVER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>PURPOSE_SMIME_SIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>PURPOSE_SMIME_ENCRYPT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>PURPOSE_CRL_SIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>PURPOSE_ANY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>PURPOSE_OCSP_HELPER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>PURPOSE_TIMESTAMP_SIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>TRUST_COMPAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>TRUST_SSL_CLIENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>TRUST_SSL_SERVER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>TRUST_EMAIL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>TRUST_OBJECT_SIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>TRUST_OCSP_SIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>TRUST_OCSP_REQUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Const</name><argument_list>(<argument><expr><name>TRUST_TSA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Default</name><argument_list>(<argument><expr><name>CERT_AREA</name></expr></argument>, <argument><expr><name>cert_area</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Default</name><argument_list>(<argument><expr><name>CERT_DIR</name></expr></argument>, <argument><expr><name>cert_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Default</name><argument_list>(<argument><expr><name>CERT_FILE</name></expr></argument>, <argument><expr><name>cert_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Default</name><argument_list>(<argument><expr><name>CERT_DIR_ENV</name></expr></argument>, <argument><expr><name>cert_dir_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Default</name><argument_list>(<argument><expr><name>CERT_FILE_ENV</name></expr></argument>, <argument><expr><name>cert_file_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DefX509Default</name><argument_list>(<argument><expr><name>PRIVATE_DIR</name></expr></argument>, <argument><expr><name>private_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
