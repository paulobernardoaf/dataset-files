<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats\ruby\ext\openssl\ossl_x509store.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ossl.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NewX509Store</name><parameter_list>(<parameter><type><name>klass</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>TypedData_Wrap_Struct((klass), &amp;ossl_x509store_type, 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SetX509Store</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>, <parameter><type><name>st</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { if (!(st)) { ossl_raise(rb_eRuntimeError, "STORE wasn't initialized!"); } RTYPEDDATA_DATA(obj) = (st); } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GetX509Store</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>, <parameter><type><name>st</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { TypedData_Get_Struct((obj), X509_STORE, &amp;ossl_x509store_type, (st)); if (!(st)) { ossl_raise(rb_eRuntimeError, "STORE wasn't initialized!"); } } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NewX509StCtx</name><parameter_list>(<parameter><type><name>klass</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>TypedData_Wrap_Struct((klass), &amp;ossl_x509stctx_type, 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SetX509StCtx</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>, <parameter><type><name>ctx</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { if (!(ctx)) { ossl_raise(rb_eRuntimeError, "STORE_CTX wasn't initialized!"); } RTYPEDDATA_DATA(obj) = (ctx); } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GetX509StCtx</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>, <parameter><type><name>ctx</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { TypedData_Get_Struct((obj), X509_STORE_CTX, &amp;ossl_x509stctx_type, (ctx)); if (!(ctx)) { ossl_raise(rb_eRuntimeError, "STORE_CTX is out of scope!"); } } while (0)</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>stctx_ex_verify_cb_idx</name></decl>, <decl><type ref="prev"/><name>store_ex_verify_cb_idx</name></decl>;</decl_stmt>

<function_decl><type><specifier>static</specifier> <name>VALUE</name></type> <name>ossl_x509stctx_new</name><parameter_list>(<parameter><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<struct>struct <name>ossl_verify_cb_args</name> <block>{

<decl_stmt><decl><type><name>VALUE</name></type> <name>proc</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name>preverify_ok</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name>store_ctx</name></decl>;</decl_stmt>

}</block>;</struct>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>call_verify_cb_proc</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ossl_verify_cb_args</name></name> <modifier>*</modifier></type><name>args</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>rb_funcall</name><argument_list>(<argument><expr><name><name>args</name><operator>-&gt;</operator><name>proc</name></name></expr></argument>, <argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"call"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>,

<argument><expr><name><name>args</name><operator>-&gt;</operator><name>preverify_ok</name></name></expr></argument>, <argument><expr><name><name>args</name><operator>-&gt;</operator><name>store_ctx</name></name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type>

<name>ossl_verify_cb_call</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>proc</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ok</name></decl></parameter>, <parameter><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>VALUE</name></type> <name>rctx</name></decl>, <decl><type ref="prev"/><name>ret</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>ossl_verify_cb_args</name></name></type> <name>args</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>state</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>NIL_P</name><argument_list>(<argument><expr><name>proc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>ok</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <name>Qfalse</name></expr>;</expr_stmt>

<expr_stmt><expr><name>rctx</name> <operator>=</operator> <call><name>rb_protect</name><argument_list>(<argument><expr><operator>(</operator><call><call><name>VALUE</name><argument_list>(<argument><expr><operator>*</operator></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>VALUE</name></expr></argument>)</argument_list></call><operator>)</operator><name>ossl_x509stctx_new</name></expr></argument>, <argument><expr><operator>(</operator><name>VALUE</name><operator>)</operator><name>ctx</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>state</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>rb_set_errinfo</name><argument_list>(<argument><expr><name>Qnil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_warn</name><argument_list>(<argument><expr><literal type="string">"StoreContext initialization failure"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else <block>{<block_content>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>proc</name></name> <operator>=</operator> <name>proc</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>preverify_ok</name></name> <operator>=</operator> <ternary><condition><expr><name>ok</name></expr> ?</condition><then> <expr><name>Qtrue</name></expr> </then><else>: <expr><name>Qfalse</name></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>args</name><operator>.</operator><name>store_ctx</name></name> <operator>=</operator> <name>rctx</name></expr>;</expr_stmt>

<expr_stmt><expr><name>ret</name> <operator>=</operator> <call><name>rb_protect</name><argument_list>(<argument><expr><operator>(</operator><call><call><name>VALUE</name><argument_list>(<argument><expr><operator>*</operator></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>VALUE</name></expr></argument>)</argument_list></call><operator>)</operator><name>call_verify_cb_proc</name></expr></argument>, <argument><expr><operator>(</operator><name>VALUE</name><operator>)</operator><operator>&amp;</operator><name>args</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>state</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>rb_set_errinfo</name><argument_list>(<argument><expr><name>Qnil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_warn</name><argument_list>(<argument><expr><literal type="string">"exception in verify_callback is ignored"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>RTYPEDDATA_DATA</name><argument_list>(<argument><expr><name>rctx</name></expr></argument>)</argument_list></call> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>==</operator> <name>Qtrue</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>X509_STORE_CTX_set_error</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>X509_V_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ok</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else <block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>X509_STORE_CTX_get_error</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>X509_V_OK</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>X509_STORE_CTX_set_error</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>X509_V_ERR_CERT_REJECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>ok</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<return>return <expr><name>ok</name></expr>;</return>

</block_content>}</block></function>

<decl_stmt><decl><type><name>VALUE</name></type> <name>cX509Store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name>cX509StoreContext</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name>eX509StoreError</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>ossl_x509store_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>X509_STORE_free</name><argument_list>(<argument><expr><name>ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>rb_data_type_t</name></type> <name>ossl_x509store_type</name> <init>= <expr><block>{

<expr><literal type="string">"OpenSSL/X509/STORE"</literal></expr>,

<expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><name>ossl_x509store_free</name></expr>,

}</block></expr>,

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>RUBY_TYPED_FREE_IMMEDIATELY</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<function><type><name>X509_STORE</name> <modifier>*</modifier></type>

<name>GetX509StorePtr</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>obj</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509Store</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>store</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type>

<name>x509store_verify_cb</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>ok</name></decl></parameter>, <parameter><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>VALUE</name></type> <name>proc</name></decl>;</decl_stmt>

<expr_stmt><expr><name>proc</name> <operator>=</operator> <operator>(</operator><name>VALUE</name><operator>)</operator><call><name>X509_STORE_CTX_get_ex_data</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>stctx_ex_verify_cb_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>proc</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name>proc</name> <operator>=</operator> <operator>(</operator><name>VALUE</name><operator>)</operator><call><name>X509_STORE_get_ex_data</name><argument_list>(<argument><expr><call><name>X509_STORE_CTX_get0_store</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr></argument>,

<argument><expr><name>store_ex_verify_cb_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>proc</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>ok</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><call><name>ossl_verify_cb_call</name><argument_list>(<argument><expr><name>proc</name></expr></argument>, <argument><expr><name>ok</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509store_alloc</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name>obj</name></decl>;</decl_stmt>

<expr_stmt><expr><name>obj</name> <operator>=</operator> <call><name>NewX509Store</name><argument_list>(<argument><expr><name>klass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name>store</name> <operator>=</operator> <call><name>X509_STORE_new</name><argument_list>()</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition><block>{<block_content>

<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>eX509StoreError</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>SetX509Store</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>obj</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509store_set_vfy_cb</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>cb</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509Store</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>X509_STORE_set_ex_data</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><name>store_ex_verify_cb_idx</name></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><name>cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_iv_set</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><literal type="string">"@verify_callback"</literal></expr></argument>, <argument><expr><name>cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>cb</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509store_initialize</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509Store</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_OPAQUE_OPENSSL</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><name><name>store</name><operator>-&gt;</operator><name>ex_data</name><operator>.</operator><name>sk</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><call><name>X509_STORE_set_verify_cb</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><name>x509store_verify_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ossl_x509store_set_vfy_cb</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>Qnil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_iv_set</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><literal type="string">"@error"</literal></expr></argument>, <argument><expr><name>Qnil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_iv_set</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><literal type="string">"@error_string"</literal></expr></argument>, <argument><expr><name>Qnil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_iv_set</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><literal type="string">"@chain"</literal></expr></argument>, <argument><expr><name>Qnil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_iv_set</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><literal type="string">"@time"</literal></expr></argument>, <argument><expr><name>Qnil</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>self</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509store_set_flags</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>flags</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>long</name></type> <name>f</name> <init>= <expr><call><name>NUM2LONG</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509Store</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>X509_STORE_set_flags</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>flags</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509store_set_purpose</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>purpose</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>p</name> <init>= <expr><call><name>NUM2INT</name><argument_list>(<argument><expr><name>purpose</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509Store</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>X509_STORE_set_purpose</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>purpose</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509store_set_trust</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>trust</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>t</name> <init>= <expr><call><name>NUM2INT</name><argument_list>(<argument><expr><name>trust</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509Store</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>X509_STORE_set_trust</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>trust</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509store_set_time</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>time</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>rb_iv_set</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><literal type="string">"@time"</literal></expr></argument>, <argument><expr><name>time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>time</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509store_add_file</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>file</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>X509_LOOKUP</name> <modifier>*</modifier></type><name>lookup</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>path</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>file</name> <operator>!=</operator> <name>Qnil</name></expr>)</condition><block>{<block_content>

<expr_stmt><expr><name>path</name> <operator>=</operator> <call><name>StringValueCStr</name><argument_list>(<argument><expr><name>file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>GetX509Store</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>lookup</name> <operator>=</operator> <call><name>X509_STORE_add_lookup</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><call><name>X509_LOOKUP_file</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>lookup</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>eX509StoreError</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><call><name>X509_LOOKUP_load_file</name><argument_list>(<argument><expr><name>lookup</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><name>X509_FILETYPE_PEM</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition><block>{<block_content>

<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>eX509StoreError</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>OPENSSL_VERSION_NUMBER</name> <operator>&lt;</operator> <literal type="number">0x10101000</literal> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>LIBRESSL_VERSION_NUMBER</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr_stmt><expr><call><name>ossl_clear_error</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<return>return <expr><name>self</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509store_add_path</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>dir</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>X509_LOOKUP</name> <modifier>*</modifier></type><name>lookup</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>path</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>dir</name> <operator>!=</operator> <name>Qnil</name></expr>)</condition><block>{<block_content>

<expr_stmt><expr><name>path</name> <operator>=</operator> <call><name>StringValueCStr</name><argument_list>(<argument><expr><name>dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>GetX509Store</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>lookup</name> <operator>=</operator> <call><name>X509_STORE_add_lookup</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><call><name>X509_LOOKUP_hash_dir</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><name>lookup</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>eX509StoreError</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><call><name>X509_LOOKUP_add_dir</name><argument_list>(<argument><expr><name>lookup</name></expr></argument>, <argument><expr><name>path</name></expr></argument>, <argument><expr><name>X509_FILETYPE_PEM</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition><block>{<block_content>

<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>eX509StoreError</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>self</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509store_set_default_paths</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509Store</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>X509_STORE_set_default_paths</name><argument_list>(<argument><expr><name>store</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition><block>{<block_content>

<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>eX509StoreError</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>Qnil</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509store_add_cert</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>arg</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>X509</name> <modifier>*</modifier></type><name>cert</name></decl>;</decl_stmt>

<expr_stmt><expr><name>cert</name> <operator>=</operator> <call><name>GetX509CertPtr</name><argument_list>(<argument><expr><name>arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>GetX509Store</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>X509_STORE_add_cert</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><name>cert</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition><block>{<block_content>

<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>eX509StoreError</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>self</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509store_add_crl</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>arg</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>X509_CRL</name> <modifier>*</modifier></type><name>crl</name></decl>;</decl_stmt>

<expr_stmt><expr><name>crl</name> <operator>=</operator> <call><name>GetX509CRLPtr</name><argument_list>(<argument><expr><name>arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>GetX509Store</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>X509_STORE_add_crl</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><name>crl</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition><block>{<block_content>

<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>eX509StoreError</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<return>return <expr><name>self</name></expr>;</return>

</block_content>}</block></function>

<function_decl><type><specifier>static</specifier> <name>VALUE</name></type> <name>ossl_x509stctx_get_err</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>VALUE</name></type> <name>ossl_x509stctx_get_err_string</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>VALUE</name></type> <name>ossl_x509stctx_get_chain</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509store_verify</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>VALUE</name></type> <name>cert</name></decl>, <decl><type ref="prev"/><name>chain</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name>ctx</name></decl>, <decl><type ref="prev"/><name>proc</name></decl>, <decl><type ref="prev"/><name>result</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>rb_scan_args</name><argument_list>(<argument><expr><name>argc</name></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><literal type="string">"11"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>cert</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>chain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ctx</name> <operator>=</operator> <call><name>rb_funcall</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"new"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>self</name></expr></argument>, <argument><expr><name>cert</name></expr></argument>, <argument><expr><name>chain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>proc</name> <operator>=</operator> <ternary><condition><expr><call><name>rb_block_given_p</name><argument_list>()</argument_list></call></expr> ?</condition><then> <expr><call><name>rb_block_proc</name><argument_list>()</argument_list></call></expr> </then><else>:

<expr><call><name>rb_iv_get</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><literal type="string">"@verify_callback"</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_iv_set</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><literal type="string">"@verify_callback"</literal></expr></argument>, <argument><expr><name>proc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>rb_funcall</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"verify"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_iv_set</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><literal type="string">"@error"</literal></expr></argument>, <argument><expr><call><name>ossl_x509stctx_get_err</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_iv_set</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><literal type="string">"@error_string"</literal></expr></argument>, <argument><expr><call><name>ossl_x509stctx_get_err_string</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_iv_set</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><literal type="string">"@chain"</literal></expr></argument>, <argument><expr><call><name>ossl_x509stctx_get_chain</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>result</name></expr>;</return>

</block_content>}</block></function>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>ossl_x509stctx_free</name><parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>rb_data_type_t</name></type> <name>ossl_x509stctx_type</name> <init>= <expr><block>{

<expr><literal type="string">"OpenSSL/X509/STORE_CTX"</literal></expr>,

<expr><block>{

<expr><literal type="number">0</literal></expr>, <expr><name>ossl_x509stctx_free</name></expr>,

}</block></expr>,

<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>RUBY_TYPED_FREE_IMMEDIATELY</name></expr>,

}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>ossl_x509stctx_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name> <init>= <expr><name>ptr</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>X509_STORE_CTX_get0_untrusted</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>sk_X509_pop_free</name><argument_list>(<argument><expr><call><name>X509_STORE_CTX_get0_untrusted</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>X509_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>X509_STORE_CTX_get0_cert</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>X509_free</name><argument_list>(<argument><expr><call><name>X509_STORE_CTX_get0_cert</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>X509_STORE_CTX_free</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_alloc</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name>obj</name></decl>;</decl_stmt>

<expr_stmt><expr><name>obj</name> <operator>=</operator> <call><name>NewX509StCtx</name><argument_list>(<argument><expr><name>klass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name>ctx</name> <operator>=</operator> <call><name>X509_STORE_CTX_new</name><argument_list>()</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition><block>{<block_content>

<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>eX509StoreError</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>SetX509StCtx</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>obj</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_new</name><parameter_list>(<parameter><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>VALUE</name></type> <name>obj</name></decl>;</decl_stmt>

<expr_stmt><expr><name>obj</name> <operator>=</operator> <call><name>NewX509StCtx</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SetX509StCtx</name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>obj</name></expr>;</return>

</block_content>}</block></function>

<function_decl><type><specifier>static</specifier> <name>VALUE</name></type> <name>ossl_x509stctx_set_flags</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>, <parameter><decl><type><name>VALUE</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>VALUE</name></type> <name>ossl_x509stctx_set_purpose</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>, <parameter><decl><type><name>VALUE</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>VALUE</name></type> <name>ossl_x509stctx_set_trust</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>, <parameter><decl><type><name>VALUE</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>VALUE</name></type> <name>ossl_x509stctx_set_time</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>, <parameter><decl><type><name>VALUE</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_initialize</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>VALUE</name> <modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>VALUE</name></type> <name>store</name></decl>, <decl><type ref="prev"/><name>cert</name></decl>, <decl><type ref="prev"/><name>chain</name></decl>, <decl><type ref="prev"/><name>t</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>X509_STORE</name> <modifier>*</modifier></type><name>x509st</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>X509</name> <modifier>*</modifier></type><name>x509</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>STACK_OF</name><argument_list>(<argument><expr><name>X509</name></expr></argument>)</argument_list></call> <operator>*</operator><name>x509s</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_scan_args</name><argument_list>(<argument><expr><name>argc</name></expr></argument>, <argument><expr><name>argv</name></expr></argument>, <argument><expr><literal type="string">"12"</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>store</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>cert</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>chain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>GetX509StCtx</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>GetX509Store</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><name>x509st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>NIL_P</name><argument_list>(<argument><expr><name>cert</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>x509</name> <operator>=</operator> <call><name>DupX509CertPtr</name><argument_list>(<argument><expr><name>cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> 

<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>NIL_P</name><argument_list>(<argument><expr><name>chain</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>x509s</name> <operator>=</operator> <call><name>ossl_x509_ary2sk</name><argument_list>(<argument><expr><name>chain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><call><name>X509_STORE_CTX_init</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>x509st</name></expr></argument>, <argument><expr><name>x509</name></expr></argument>, <argument><expr><name>x509s</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition><block>{<block_content>

<expr_stmt><expr><call><name>sk_X509_pop_free</name><argument_list>(<argument><expr><name>x509s</name></expr></argument>, <argument><expr><name>X509_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>eX509StoreError</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>NIL_P</name><argument_list>(<argument><expr><name>t</name> <operator>=</operator> <call><name>rb_iv_get</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><literal type="string">"@time"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>ossl_x509stctx_set_time</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>rb_iv_set</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><literal type="string">"@verify_callback"</literal></expr></argument>, <argument><expr><call><name>rb_iv_get</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><literal type="string">"@verify_callback"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_iv_set</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><literal type="string">"@cert"</literal></expr></argument>, <argument><expr><name>cert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>self</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_verify</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509StCtx</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>X509_STORE_CTX_set_ex_data</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>stctx_ex_verify_cb_idx</name></expr></argument>,

<argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><call><name>rb_iv_get</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><literal type="string">"@verify_callback"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<switch>switch <condition>(<expr><call><name>X509_verify_cert</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<case>case <expr><literal type="number">1</literal></expr>:</case>

<return>return <expr><name>Qtrue</name></expr>;</return>

<case>case <expr><literal type="number">0</literal></expr>:</case>

<expr_stmt><expr><call><name>ossl_clear_error</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>Qfalse</name></expr>;</return>

<default>default:</default>

<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>eX509CertError</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></switch>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_get_chain</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>STACK_OF</name><argument_list>(<argument><expr><name>X509</name></expr></argument>)</argument_list></call> <operator>*</operator><name>chain</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>X509</name> <modifier>*</modifier></type><name>x509</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>num</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name>ary</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509StCtx</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name>chain</name> <operator>=</operator> <call><name>X509_STORE_CTX_get0_chain</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition><block>{<block_content>

<return>return <expr><name>Qnil</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><operator>(</operator><name>num</name> <operator>=</operator> <call><name>sk_X509_num</name><argument_list>(<argument><expr><name>chain</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block>{<block_content>

<expr_stmt><expr><call><name>OSSL_Debug</name><argument_list>(<argument><expr><literal type="string">"certs in chain &lt; 0???"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>rb_ary_new</name><argument_list>()</argument_list></call></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>ary</name> <operator>=</operator> <call><name>rb_ary_new2</name><argument_list>(<argument><expr><name>num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>num</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>x509</name> <operator>=</operator> <call><name>sk_X509_value</name><argument_list>(<argument><expr><name>chain</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_ary_push</name><argument_list>(<argument><expr><name>ary</name></expr></argument>, <argument><expr><call><name>ossl_x509_new</name><argument_list>(<argument><expr><name>x509</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<return>return <expr><name>ary</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_get_err</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509StCtx</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>INT2NUM</name><argument_list>(<argument><expr><call><name>X509_STORE_CTX_get_error</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_set_error</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>err</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509StCtx</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>X509_STORE_CTX_set_error</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><call><name>NUM2INT</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>err</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_get_err_string</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>long</name></type> <name>err</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509StCtx</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>err</name> <operator>=</operator> <call><name>X509_STORE_CTX_get_error</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>rb_str_new2</name><argument_list>(<argument><expr><call><name>X509_verify_cert_error_string</name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_get_err_depth</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509StCtx</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>INT2NUM</name><argument_list>(<argument><expr><call><name>X509_STORE_CTX_get_error_depth</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_get_curr_cert</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509StCtx</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><call><name>ossl_x509_new</name><argument_list>(<argument><expr><call><name>X509_STORE_CTX_get_current_cert</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_get_curr_crl</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>ctx</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>X509_CRL</name> <modifier>*</modifier></type><name>crl</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509StCtx</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>crl</name> <operator>=</operator> <call><name>X509_STORE_CTX_get0_current_crl</name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>crl</name></expr>)</condition><block type="pseudo"><block_content>

<return>return <expr><name>Qnil</name></expr>;</return></block_content></block></if></if_stmt>

<return>return <expr><call><name>ossl_x509crl_new</name><argument_list>(<argument><expr><name>crl</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_set_flags</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>flags</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>long</name></type> <name>f</name> <init>= <expr><call><name>NUM2LONG</name><argument_list>(<argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509StCtx</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>X509_STORE_CTX_set_flags</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><name>f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>flags</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_set_purpose</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>purpose</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>p</name> <init>= <expr><call><name>NUM2INT</name><argument_list>(<argument><expr><name>purpose</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509StCtx</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>X509_STORE_CTX_set_purpose</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>purpose</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_set_trust</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>trust</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>t</name> <init>= <expr><call><name>NUM2INT</name><argument_list>(<argument><expr><name>trust</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>GetX509StCtx</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>X509_STORE_CTX_set_trust</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>trust</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>ossl_x509stctx_set_time</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>time</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>X509_STORE_CTX</name> <modifier>*</modifier></type><name>store</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>long</name></type> <name>t</name></decl>;</decl_stmt>

<expr_stmt><expr><name>t</name> <operator>=</operator> <call><name>NUM2LONG</name><argument_list>(<argument><expr><call><name>rb_Integer</name><argument_list>(<argument><expr><name>time</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>GetX509StCtx</name><argument_list>(<argument><expr><name>self</name></expr></argument>, <argument><expr><name>store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>X509_STORE_CTX_set_time</name><argument_list>(<argument><expr><name>store</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>time</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type>

<name>Init_ossl_x509store</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>rb_intern</name></cpp:undef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><literal type="number">0</literal></expr></cpp:if>

mOSSL = rb_define_module("OpenSSL");

eOSSLError = rb_define_class_under(mOSSL, "OpenSSLError", rb_eStandardError);

mX509 = rb_define_module_under(mOSSL, "X509");

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name>stctx_ex_verify_cb_idx</name> <operator>=</operator> <call><name>X509_STORE_CTX_get_ex_new_index</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><literal type="string">"stctx_ex_verify_cb_idx"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>stctx_ex_verify_cb_idx</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>eOSSLError</name></expr></argument>, <argument><expr><literal type="string">"X509_STORE_CTX_get_ex_new_index"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>store_ex_verify_cb_idx</name> <operator>=</operator> <call><name>X509_STORE_get_ex_new_index</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><literal type="string">"store_ex_verify_cb_idx"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>store_ex_verify_cb_idx</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>ossl_raise</name><argument_list>(<argument><expr><name>eOSSLError</name></expr></argument>, <argument><expr><literal type="string">"X509_STORE_get_ex_new_index"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>eX509StoreError</name> <operator>=</operator> <call><name>rb_define_class_under</name><argument_list>(<argument><expr><name>mX509</name></expr></argument>, <argument><expr><literal type="string">"StoreError"</literal></expr></argument>, <argument><expr><name>eOSSLError</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>cX509Store</name> <operator>=</operator> <call><name>rb_define_class_under</name><argument_list>(<argument><expr><name>mX509</name></expr></argument>, <argument><expr><literal type="string">"Store"</literal></expr></argument>, <argument><expr><name>rb_cObject</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_attr</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"verify_callback"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>Qfalse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_attr</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"error"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>Qfalse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_attr</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"error_string"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>Qfalse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_attr</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><call><name>rb_intern</name><argument_list>(<argument><expr><literal type="string">"chain"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>Qfalse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_alloc_func</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><name>ossl_x509store_alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><literal type="string">"initialize"</literal></expr></argument>, <argument><expr><name>ossl_x509store_initialize</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_undef_method</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><literal type="string">"initialize_copy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><literal type="string">"verify_callback="</literal></expr></argument>, <argument><expr><name>ossl_x509store_set_vfy_cb</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><literal type="string">"flags="</literal></expr></argument>, <argument><expr><name>ossl_x509store_set_flags</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><literal type="string">"purpose="</literal></expr></argument>, <argument><expr><name>ossl_x509store_set_purpose</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><literal type="string">"trust="</literal></expr></argument>, <argument><expr><name>ossl_x509store_set_trust</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><literal type="string">"time="</literal></expr></argument>, <argument><expr><name>ossl_x509store_set_time</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><literal type="string">"add_path"</literal></expr></argument>, <argument><expr><name>ossl_x509store_add_path</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><literal type="string">"add_file"</literal></expr></argument>, <argument><expr><name>ossl_x509store_add_file</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><literal type="string">"set_default_paths"</literal></expr></argument>, <argument><expr><name>ossl_x509store_set_default_paths</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><literal type="string">"add_cert"</literal></expr></argument>, <argument><expr><name>ossl_x509store_add_cert</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><literal type="string">"add_crl"</literal></expr></argument>, <argument><expr><name>ossl_x509store_add_crl</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509Store</name></expr></argument>, <argument><expr><literal type="string">"verify"</literal></expr></argument>, <argument><expr><name>ossl_x509store_verify</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>cX509StoreContext</name> <operator>=</operator> <call><name>rb_define_class_under</name><argument_list>(<argument><expr><name>mX509</name></expr></argument>,<argument><expr><literal type="string">"StoreContext"</literal></expr></argument>, <argument><expr><name>rb_cObject</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_alloc_func</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><name>ossl_x509stctx_alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"initialize"</literal></expr></argument>, <argument><expr><name>ossl_x509stctx_initialize</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_undef_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"initialize_copy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"verify"</literal></expr></argument>, <argument><expr><name>ossl_x509stctx_verify</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"chain"</literal></expr></argument>, <argument><expr><name>ossl_x509stctx_get_chain</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"error"</literal></expr></argument>, <argument><expr><name>ossl_x509stctx_get_err</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"error="</literal></expr></argument>, <argument><expr><name>ossl_x509stctx_set_error</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"error_string"</literal></expr></argument>, <argument><expr><name>ossl_x509stctx_get_err_string</name></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"error_depth"</literal></expr></argument>, <argument><expr><name>ossl_x509stctx_get_err_depth</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"current_cert"</literal></expr></argument>, <argument><expr><name>ossl_x509stctx_get_curr_cert</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"current_crl"</literal></expr></argument>, <argument><expr><name>ossl_x509stctx_get_curr_crl</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"flags="</literal></expr></argument>, <argument><expr><name>ossl_x509stctx_set_flags</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"purpose="</literal></expr></argument>, <argument><expr><name>ossl_x509stctx_set_purpose</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"trust="</literal></expr></argument>, <argument><expr><name>ossl_x509stctx_set_trust</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_method</name><argument_list>(<argument><expr><name>cX509StoreContext</name></expr></argument>, <argument><expr><literal type="string">"time="</literal></expr></argument>, <argument><expr><name>ossl_x509stctx_set_time</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
