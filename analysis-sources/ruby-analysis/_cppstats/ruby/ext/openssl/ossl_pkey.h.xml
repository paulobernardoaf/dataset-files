<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats\ruby\ext\openssl\ossl_pkey.h"><decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>mPKey</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>cPKey</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>ePKeyError</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>rb_data_type_t</name></type> <name>ossl_evp_pkey_type</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSSL_PKEY_SET_PRIVATE</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>rb_iv_set((obj), "private", Qtrue)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSSL_PKEY_SET_PUBLIC</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>rb_iv_set((obj), "private", Qfalse)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSSL_PKEY_IS_PRIVATE</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(rb_iv_get((obj), "private") == Qtrue)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NewPKey</name><parameter_list>(<parameter><type><name>klass</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>TypedData_Wrap_Struct((klass), &amp;ossl_evp_pkey_type, 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SetPKey</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>, <parameter><type><name>pkey</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { if (!(pkey)) { rb_raise(rb_eRuntimeError, "PKEY wasn't initialized!"); } RTYPEDDATA_DATA(obj) = (pkey); OSSL_PKEY_SET_PUBLIC(obj); } while (0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GetPKey</name><parameter_list>(<parameter><type><name>obj</name></type></parameter>, <parameter><type><name>pkey</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do {TypedData_Get_Struct((obj), EVP_PKEY, &amp;ossl_evp_pkey_type, (pkey)); if (!(pkey)) { rb_raise(rb_eRuntimeError, "PKEY wasn't initialized!");} } while (0)</cpp:value></cpp:define>

<struct>struct <name>ossl_generate_cb_arg</name> <block>{

<decl_stmt><decl><type><name>int</name></type> <name>yield</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>interrupted</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>state</name></decl>;</decl_stmt>

}</block>;</struct>

<function_decl><type><name>int</name></type> <name>ossl_generate_cb_2</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><name>BN_GENCB</name> <modifier>*</modifier></type><name>cb</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ossl_generate_cb_stop</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>VALUE</name></type> <name>ossl_pkey_new</name><parameter_list>(<parameter><decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ossl_pkey_check_public_key</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>EVP_PKEY</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type><name>GetPKeyPtr</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type><name>DupPKeyPtr</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type><name>GetPrivPKeyPtr</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>Init_ossl_pkey</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>cRSA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>eRSAError</name></decl>;</decl_stmt>

<function_decl><type><name>VALUE</name></type> <name>ossl_rsa_new</name><parameter_list>(<parameter><decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>Init_ossl_rsa</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>cDSA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>eDSAError</name></decl>;</decl_stmt>

<function_decl><type><name>VALUE</name></type> <name>ossl_dsa_new</name><parameter_list>(<parameter><decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>Init_ossl_dsa</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>cDH</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>eDHError</name></decl>;</decl_stmt>

<function_decl><type><name>VALUE</name></type> <name>ossl_dh_new</name><parameter_list>(<parameter><decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>Init_ossl_dh</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>cEC</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>eECError</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>cEC_GROUP</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>eEC_GROUP</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>cEC_POINT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>VALUE</name></type> <name>eEC_POINT</name></decl>;</decl_stmt>

<function_decl><type><name>VALUE</name></type> <name>ossl_ec_new</name><parameter_list>(<parameter><decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>Init_ossl_ec</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSSL_PKEY_BN_DEF_GETTER0</name><parameter_list>(<parameter><type><name>_keytype</name></type></parameter>, <parameter><type><name>_type</name></type></parameter>, <parameter><type><name>_name</name></type></parameter>, <parameter><type><name>_get</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>static VALUE ossl_##_keytype##_get_##_name(VALUE self) { _type *obj; const BIGNUM *bn; Get##_type(self, obj); _get; if (bn == NULL) return Qnil; return ossl_bn_new(bn); }</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSSL_PKEY_BN_DEF_GETTER3</name><parameter_list>(<parameter><type><name>_keytype</name></type></parameter>, <parameter><type><name>_type</name></type></parameter>, <parameter><type><name>_group</name></type></parameter>, <parameter><type><name>a1</name></type></parameter>, <parameter><type><name>a2</name></type></parameter>, <parameter><type><name>a3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>OSSL_PKEY_BN_DEF_GETTER0(_keytype, _type, a1, _type##_get0_##_group(obj, &amp;bn, NULL, NULL)) OSSL_PKEY_BN_DEF_GETTER0(_keytype, _type, a2, _type##_get0_##_group(obj, NULL, &amp;bn, NULL)) OSSL_PKEY_BN_DEF_GETTER0(_keytype, _type, a3, _type##_get0_##_group(obj, NULL, NULL, &amp;bn))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSSL_PKEY_BN_DEF_GETTER2</name><parameter_list>(<parameter><type><name>_keytype</name></type></parameter>, <parameter><type><name>_type</name></type></parameter>, <parameter><type><name>_group</name></type></parameter>, <parameter><type><name>a1</name></type></parameter>, <parameter><type><name>a2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>OSSL_PKEY_BN_DEF_GETTER0(_keytype, _type, a1, _type##_get0_##_group(obj, &amp;bn, NULL)) OSSL_PKEY_BN_DEF_GETTER0(_keytype, _type, a2, _type##_get0_##_group(obj, NULL, &amp;bn))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSSL_PKEY_BN_DEF_SETTER3</name><parameter_list>(<parameter><type><name>_keytype</name></type></parameter>, <parameter><type><name>_type</name></type></parameter>, <parameter><type><name>_group</name></type></parameter>, <parameter><type><name>a1</name></type></parameter>, <parameter><type><name>a2</name></type></parameter>, <parameter><type><name>a3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>static VALUE ossl_##_keytype##_set_##_group(VALUE self, VALUE v1, VALUE v2, VALUE v3) { _type *obj; BIGNUM *bn1 = NULL, *orig_bn1 = NIL_P(v1) ? NULL : GetBNPtr(v1);BIGNUM *bn2 = NULL, *orig_bn2 = NIL_P(v2) ? NULL : GetBNPtr(v2);BIGNUM *bn3 = NULL, *orig_bn3 = NIL_P(v3) ? NULL : GetBNPtr(v3);Get##_type(self, obj); if ((orig_bn1 &amp;&amp; !(bn1 = BN_dup(orig_bn1))) || (orig_bn2 &amp;&amp; !(bn2 = BN_dup(orig_bn2))) || (orig_bn3 &amp;&amp; !(bn3 = BN_dup(orig_bn3)))) { BN_clear_free(bn1); BN_clear_free(bn2); BN_clear_free(bn3); ossl_raise(eBNError, NULL); } if (!_type##_set0_##_group(obj, bn1, bn2, bn3)) { BN_clear_free(bn1); BN_clear_free(bn2); BN_clear_free(bn3); ossl_raise(ePKeyError, #_type"_set0_"#_group); } return self; }</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSSL_PKEY_BN_DEF_SETTER2</name><parameter_list>(<parameter><type><name>_keytype</name></type></parameter>, <parameter><type><name>_type</name></type></parameter>, <parameter><type><name>_group</name></type></parameter>, <parameter><type><name>a1</name></type></parameter>, <parameter><type><name>a2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>static VALUE ossl_##_keytype##_set_##_group(VALUE self, VALUE v1, VALUE v2) { _type *obj; BIGNUM *bn1 = NULL, *orig_bn1 = NIL_P(v1) ? NULL : GetBNPtr(v1);BIGNUM *bn2 = NULL, *orig_bn2 = NIL_P(v2) ? NULL : GetBNPtr(v2);Get##_type(self, obj); if ((orig_bn1 &amp;&amp; !(bn1 = BN_dup(orig_bn1))) || (orig_bn2 &amp;&amp; !(bn2 = BN_dup(orig_bn2)))) { BN_clear_free(bn1); BN_clear_free(bn2); ossl_raise(eBNError, NULL); } if (!_type##_set0_##_group(obj, bn1, bn2)) { BN_clear_free(bn1); BN_clear_free(bn2); ossl_raise(ePKeyError, #_type"_set0_"#_group); } return self; }</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSSL_PKEY_BN_DEF_SETTER_OLD</name><parameter_list>(<parameter><type><name>_keytype</name></type></parameter>, <parameter><type><name>_type</name></type></parameter>, <parameter><type><name>_group</name></type></parameter>, <parameter><type><name>_name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>static VALUE ossl_##_keytype##_set_##_name(VALUE self, VALUE bignum) { _type *obj; BIGNUM *bn; rb_warning("#"#_name"= is deprecated; use #set_"#_group); Get##_type(self, obj); if (NIL_P(bignum)) { BN_clear_free(obj-&gt;_name); obj-&gt;_name = NULL; return Qnil; } bn = GetBNPtr(bignum); if (obj-&gt;_name == NULL) obj-&gt;_name = BN_new(); if (obj-&gt;_name == NULL) ossl_raise(eBNError, NULL); if (BN_copy(obj-&gt;_name, bn) == NULL) ossl_raise(eBNError, NULL); return bignum; }</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_OPAQUE_OPENSSL</name></expr></argument>)</argument_list></call></expr></cpp:if> 

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSSL_PKEY_BN_DEF3</name><parameter_list>(<parameter><type><name>_keytype</name></type></parameter>, <parameter><type><name>_type</name></type></parameter>, <parameter><type><name>_group</name></type></parameter>, <parameter><type><name>a1</name></type></parameter>, <parameter><type><name>a2</name></type></parameter>, <parameter><type><name>a3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>OSSL_PKEY_BN_DEF_GETTER3(_keytype, _type, _group, a1, a2, a3) OSSL_PKEY_BN_DEF_SETTER3(_keytype, _type, _group, a1, a2, a3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSSL_PKEY_BN_DEF2</name><parameter_list>(<parameter><type><name>_keytype</name></type></parameter>, <parameter><type><name>_type</name></type></parameter>, <parameter><type><name>_group</name></type></parameter>, <parameter><type><name>a1</name></type></parameter>, <parameter><type><name>a2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>OSSL_PKEY_BN_DEF_GETTER2(_keytype, _type, _group, a1, a2) OSSL_PKEY_BN_DEF_SETTER2(_keytype, _type, _group, a1, a2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEF_OSSL_PKEY_BN</name><parameter_list>(<parameter><type><name>class</name></type></parameter>, <parameter><type><name>keytype</name></type></parameter>, <parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>rb_define_method((class), #name, ossl_##keytype##_get_##name, 0)</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSSL_PKEY_BN_DEF3</name><parameter_list>(<parameter><type><name>_keytype</name></type></parameter>, <parameter><type><name>_type</name></type></parameter>, <parameter><type><name>_group</name></type></parameter>, <parameter><type><name>a1</name></type></parameter>, <parameter><type><name>a2</name></type></parameter>, <parameter><type><name>a3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>OSSL_PKEY_BN_DEF_GETTER3(_keytype, _type, _group, a1, a2, a3) OSSL_PKEY_BN_DEF_SETTER3(_keytype, _type, _group, a1, a2, a3) OSSL_PKEY_BN_DEF_SETTER_OLD(_keytype, _type, _group, a1) OSSL_PKEY_BN_DEF_SETTER_OLD(_keytype, _type, _group, a2) OSSL_PKEY_BN_DEF_SETTER_OLD(_keytype, _type, _group, a3)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OSSL_PKEY_BN_DEF2</name><parameter_list>(<parameter><type><name>_keytype</name></type></parameter>, <parameter><type><name>_type</name></type></parameter>, <parameter><type><name>_group</name></type></parameter>, <parameter><type><name>a1</name></type></parameter>, <parameter><type><name>a2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>OSSL_PKEY_BN_DEF_GETTER2(_keytype, _type, _group, a1, a2) OSSL_PKEY_BN_DEF_SETTER2(_keytype, _type, _group, a1, a2) OSSL_PKEY_BN_DEF_SETTER_OLD(_keytype, _type, _group, a1) OSSL_PKEY_BN_DEF_SETTER_OLD(_keytype, _type, _group, a2)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEF_OSSL_PKEY_BN</name><parameter_list>(<parameter><type><name>class</name></type></parameter>, <parameter><type><name>keytype</name></type></parameter>, <parameter><type><name>name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { rb_define_method((class), #name, ossl_##keytype##_get_##name, 0);rb_define_method((class), #name "=", ossl_##keytype##_set_##name, 1);} while (0)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

</unit>
