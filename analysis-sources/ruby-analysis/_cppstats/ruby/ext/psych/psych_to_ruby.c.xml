<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats\ruby\ext\psych\psych_to_ruby.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;psych.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>VALUE</name></type> <name>cPsychVisitorsToRuby</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>VALUE</name></type> <name>build_exception</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>klass</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>mesg</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>VALUE</name></type> <name>e</name> <init>= <expr><call><name>rb_obj_alloc</name><argument_list>(<argument><expr><name>klass</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>rb_iv_set</name><argument_list>(<argument><expr><name>e</name></expr></argument>, <argument><expr><literal type="string">"mesg"</literal></expr></argument>, <argument><expr><name>mesg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>e</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type> <name>path2class</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>, <parameter><decl><type><name>VALUE</name></type> <name>path</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><call><name>rb_path_to_class</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>Init_psych_to_ruby</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>VALUE</name></type> <name>psych</name> <init>= <expr><call><name>rb_define_module</name><argument_list>(<argument><expr><literal type="string">"Psych"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name>class_loader</name> <init>= <expr><call><name>rb_define_class_under</name><argument_list>(<argument><expr><name>psych</name></expr></argument>, <argument><expr><literal type="string">"ClassLoader"</literal></expr></argument>, <argument><expr><name>rb_cObject</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name>visitors</name> <init>= <expr><call><name>rb_define_module_under</name><argument_list>(<argument><expr><name>psych</name></expr></argument>, <argument><expr><literal type="string">"Visitors"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name>visitor</name> <init>= <expr><call><name>rb_define_class_under</name><argument_list>(<argument><expr><name>visitors</name></expr></argument>, <argument><expr><literal type="string">"Visitor"</literal></expr></argument>, <argument><expr><name>rb_cObject</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>cPsychVisitorsToRuby</name> <operator>=</operator> <call><name>rb_define_class_under</name><argument_list>(<argument><expr><name>visitors</name></expr></argument>, <argument><expr><literal type="string">"ToRuby"</literal></expr></argument>, <argument><expr><name>visitor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_private_method</name><argument_list>(<argument><expr><name>cPsychVisitorsToRuby</name></expr></argument>, <argument><expr><literal type="string">"build_exception"</literal></expr></argument>, <argument><expr><name>build_exception</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_private_method</name><argument_list>(<argument><expr><name>class_loader</name></expr></argument>, <argument><expr><literal type="string">"path2class"</literal></expr></argument>, <argument><expr><name>path2class</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
