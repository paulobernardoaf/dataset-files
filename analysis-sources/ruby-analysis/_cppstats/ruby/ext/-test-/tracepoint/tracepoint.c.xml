<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\ruby-analysis\_cppstats\ruby\ext\-test-\tracepoint\tracepoint.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ruby/ruby.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ruby/debug.h"</cpp:file></cpp:include>

<struct>struct <name>tracepoint_track</name> <block>{

<decl_stmt><decl><type><name>size_t</name></type> <name>newobj_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>free_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>gc_start_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>gc_end_mark_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>gc_end_sweep_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>objects_count</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name><name>objects</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></decl>;</decl_stmt>

}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>objects_max</name></cpp:macro> <cpp:value>(sizeof(((struct tracepoint_track *)NULL)-&gt;objects)/sizeof(VALUE))</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>void</name></type>

<name>tracepoint_track_objspace_events_i</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>tpval</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>rb_trace_arg_t</name> <modifier>*</modifier></type><name>tparg</name> <init>= <expr><call><name>rb_tracearg_from_tracepoint</name><argument_list>(<argument><expr><name>tpval</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>tracepoint_track</name></name> <modifier>*</modifier></type><name>track</name> <init>= <expr><name>data</name></expr></init></decl>;</decl_stmt>

<switch>switch <condition>(<expr><call><name>rb_tracearg_event_flag</name><argument_list>(<argument><expr><name>tparg</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<case>case <expr><name>RUBY_INTERNAL_EVENT_NEWOBJ</name></expr>:</case>

<block>{<block_content>

<decl_stmt><decl><type><name>VALUE</name></type> <name>obj</name> <init>= <expr><call><name>rb_tracearg_object</name><argument_list>(<argument><expr><name>tparg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>track</name><operator>-&gt;</operator><name>objects_count</name></name> <operator>&lt;</operator> <name>objects_max</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><name><name>track</name><operator>-&gt;</operator><name>objects</name><index>[<expr><name><name>track</name><operator>-&gt;</operator><name>objects_count</name></name><operator>++</operator></expr>]</index></name> <operator>=</operator> <name>obj</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>track</name><operator>-&gt;</operator><name>newobj_count</name></name><operator>++</operator></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>RUBY_INTERNAL_EVENT_FREEOBJ</name></expr>:</case>

<block>{<block_content>

<expr_stmt><expr><name><name>track</name><operator>-&gt;</operator><name>free_count</name></name><operator>++</operator></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>RUBY_INTERNAL_EVENT_GC_START</name></expr>:</case>

<block>{<block_content>

<expr_stmt><expr><name><name>track</name><operator>-&gt;</operator><name>gc_start_count</name></name><operator>++</operator></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>RUBY_INTERNAL_EVENT_GC_END_MARK</name></expr>:</case>

<block>{<block_content>

<expr_stmt><expr><name><name>track</name><operator>-&gt;</operator><name>gc_end_mark_count</name></name><operator>++</operator></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<case>case <expr><name>RUBY_INTERNAL_EVENT_GC_END_SWEEP</name></expr>:</case>

<block>{<block_content>

<expr_stmt><expr><name><name>track</name><operator>-&gt;</operator><name>gc_end_sweep_count</name></name><operator>++</operator></expr>;</expr_stmt>

<break>break;</break>

</block_content>}</block>

<default>default:</default>

<expr_stmt><expr><call><name>rb_raise</name><argument_list>(<argument><expr><name>rb_eRuntimeError</name></expr></argument>, <argument><expr><literal type="string">"unknown event"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></switch>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>tracepoint_track_objspace_events</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name><name>struct</name> <name>tracepoint_track</name></name></type> <name>track</name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>,}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name>tpval</name> <init>= <expr><call><name>rb_tracepoint_new</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>RUBY_INTERNAL_EVENT_NEWOBJ</name> <operator>|</operator> <name>RUBY_INTERNAL_EVENT_FREEOBJ</name> <operator>|</operator>

<name>RUBY_INTERNAL_EVENT_GC_START</name> <operator>|</operator> <name>RUBY_INTERNAL_EVENT_GC_END_MARK</name> <operator>|</operator>

<name>RUBY_INTERNAL_EVENT_GC_END_SWEEP</name></expr></argument>,

<argument><expr><name>tracepoint_track_objspace_events_i</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>track</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>VALUE</name></type> <name>result</name> <init>= <expr><call><name>rb_ary_new</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>rb_tracepoint_enable</name><argument_list>(<argument><expr><name>tpval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_ensure</name><argument_list>(<argument><expr><name>rb_yield</name></expr></argument>, <argument><expr><name>Qundef</name></expr></argument>, <argument><expr><name>rb_tracepoint_disable</name></expr></argument>, <argument><expr><name>tpval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_ary_push</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><call><name>SIZET2NUM</name><argument_list>(<argument><expr><name><name>track</name><operator>.</operator><name>newobj_count</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_ary_push</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><call><name>SIZET2NUM</name><argument_list>(<argument><expr><name><name>track</name><operator>.</operator><name>free_count</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_ary_push</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><call><name>SIZET2NUM</name><argument_list>(<argument><expr><name><name>track</name><operator>.</operator><name>gc_start_count</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_ary_push</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><call><name>SIZET2NUM</name><argument_list>(<argument><expr><name><name>track</name><operator>.</operator><name>gc_end_mark_count</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_ary_push</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><call><name>SIZET2NUM</name><argument_list>(<argument><expr><name><name>track</name><operator>.</operator><name>gc_end_sweep_count</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_ary_cat</name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><name><name>track</name><operator>.</operator><name>objects</name></name></expr></argument>, <argument><expr><name><name>track</name><operator>.</operator><name>objects_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>result</name></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>VALUE</name></type>

<name>tracepoint_specify_normal_and_internal_events</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type> <name>self</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>VALUE</name></type> <name>tpval</name> <init>= <expr><call><name>rb_tracepoint_new</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>RUBY_INTERNAL_EVENT_NEWOBJ</name> <operator>|</operator> <name>RUBY_EVENT_CALL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>rb_tracepoint_enable</name><argument_list>(<argument><expr><name>tpval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>Qnil</name></expr>;</return> 

</block_content>}</block></function>

<function_decl><type><name>void</name></type> <name>Init_gc_hook</name><parameter_list>(<parameter><decl><type><name>VALUE</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>void</name></type>

<name>Init_tracepoint</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>VALUE</name></type> <name>mBug</name> <init>= <expr><call><name>rb_define_module</name><argument_list>(<argument><expr><literal type="string">"Bug"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>Init_gc_hook</name><argument_list>(<argument><expr><name>mBug</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_module_function</name><argument_list>(<argument><expr><name>mBug</name></expr></argument>, <argument><expr><literal type="string">"tracepoint_track_objspace_events"</literal></expr></argument>, <argument><expr><name>tracepoint_track_objspace_events</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>rb_define_module_function</name><argument_list>(<argument><expr><name>mBug</name></expr></argument>, <argument><expr><literal type="string">"tracepoint_specify_normal_and_internal_events"</literal></expr></argument>, <argument><expr><name>tracepoint_specify_normal_and_internal_events</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

</unit>
