<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats\raylib\src\external\glfw\src\glx_context.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_VENDOR</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_RGBA_BIT</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_WINDOW_BIT</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_DRAWABLE_TYPE</name></cpp:macro> <cpp:value>0x8010</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_RENDER_TYPE</name></cpp:macro> <cpp:value>0x8011</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_RGBA_TYPE</name></cpp:macro> <cpp:value>0x8014</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_DOUBLEBUFFER</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_STEREO</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_AUX_BUFFERS</name></cpp:macro> <cpp:value>7</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_RED_SIZE</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_GREEN_SIZE</name></cpp:macro> <cpp:value>9</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_BLUE_SIZE</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_ALPHA_SIZE</name></cpp:macro> <cpp:value>11</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_DEPTH_SIZE</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_STENCIL_SIZE</name></cpp:macro> <cpp:value>13</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_ACCUM_RED_SIZE</name></cpp:macro> <cpp:value>14</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_ACCUM_GREEN_SIZE</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_ACCUM_BLUE_SIZE</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_ACCUM_ALPHA_SIZE</name></cpp:macro> <cpp:value>17</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_SAMPLES</name></cpp:macro> <cpp:value>0x186a1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_VISUAL_ID</name></cpp:macro> <cpp:value>0x800b</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB</name></cpp:macro> <cpp:value>0x20b2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_DEBUG_BIT_ARB</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_CORE_PROFILE_BIT_ARB</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_PROFILE_MASK_ARB</name></cpp:macro> <cpp:value>0x9126</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_MAJOR_VERSION_ARB</name></cpp:macro> <cpp:value>0x2091</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_MINOR_VERSION_ARB</name></cpp:macro> <cpp:value>0x2092</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_FLAGS_ARB</name></cpp:macro> <cpp:value>0x2094</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_ES2_PROFILE_BIT_EXT</name></cpp:macro> <cpp:value>0x00000004</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB</name></cpp:macro> <cpp:value>0x00000004</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_LOSE_CONTEXT_ON_RESET_ARB</name></cpp:macro> <cpp:value>0x8252</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB</name></cpp:macro> <cpp:value>0x8256</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_NO_RESET_NOTIFICATION_ARB</name></cpp:macro> <cpp:value>0x8261</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_RELEASE_BEHAVIOR_ARB</name></cpp:macro> <cpp:value>0x2097</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB</name></cpp:macro> <cpp:value>0x2098</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLX_CONTEXT_OPENGL_NO_ERROR_ARB</name></cpp:macro> <cpp:value>0x31b3</cpp:value></cpp:define>

<typedef>typedef <type><name>XID</name></type> <name>GLXWindow</name>;</typedef>

<typedef>typedef <type><name>XID</name></type> <name>GLXDrawable</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>__GLXFBConfig</name></name><modifier>*</modifier></type> <name>GLXFBConfig</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>__GLXcontext</name></name><modifier>*</modifier></type> <name>GLXContext</name>;</typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>__GLXextproc</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>PFNGLXGETFBCONFIGATTRIBPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>GLXFBConfig</name></type></decl></parameter>,<parameter><decl><type><name>int</name></type></decl></parameter>,<parameter><decl><type><name>int</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> (<modifier>*</modifier><name>PFNGLXGETCLIENTSTRINGPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>Bool</name></type> (<modifier>*</modifier><name>PFNGLXQUERYEXTENSIONPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>int</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>int</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>Bool</name></type> (<modifier>*</modifier><name>PFNGLXQUERYVERSIONPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>int</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>int</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>PFNGLXDESTROYCONTEXTPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>GLXContext</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>Bool</name></type> (<modifier>*</modifier><name>PFNGLXMAKECURRENTPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>GLXDrawable</name></type></decl></parameter>,<parameter><decl><type><name>GLXContext</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>PFNGLXSWAPBUFFERSPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>GLXDrawable</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> (<modifier>*</modifier><name>PFNGLXQUERYEXTENSIONSSTRINGPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>GLXFBConfig</name><modifier>*</modifier></type> (<modifier>*</modifier><name>PFNGLXGETFBCONFIGSPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>int</name></type></decl></parameter>,<parameter><decl><type><name>int</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>GLXContext</name></type> (<modifier>*</modifier><name>PFNGLXCREATENEWCONTEXTPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>GLXFBConfig</name></type></decl></parameter>,<parameter><decl><type><name>int</name></type></decl></parameter>,<parameter><decl><type><name>GLXContext</name></type></decl></parameter>,<parameter><decl><type><name>Bool</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>__GLXextproc</name></type> (<modifier>*</modifier> <name>PFNGLXGETPROCADDRESSPROC</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>GLubyte</name> <modifier>*</modifier></type><name>procName</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>PFNGLXSWAPINTERVALEXTPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>GLXDrawable</name></type></decl></parameter>,<parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>XVisualInfo</name><modifier>*</modifier></type> (<modifier>*</modifier><name>PFNGLXGETVISUALFROMFBCONFIGPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>GLXFBConfig</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>GLXWindow</name></type> (<modifier>*</modifier><name>PFNGLXCREATEWINDOWPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>GLXFBConfig</name></type></decl></parameter>,<parameter><decl><type><name>Window</name></type></decl></parameter>,<parameter><decl><type><specifier>const</specifier> <name>int</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>PFNGLXDESTROYWINDOWPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>GLXWindow</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>PFNGLXSWAPINTERVALMESAPROC</name>)<parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>PFNGLXSWAPINTERVALSGIPROC</name>)<parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>GLXContext</name></type> (<modifier>*</modifier><name>PFNGLXCREATECONTEXTATTRIBSARBPROC</name>)<parameter_list>(<parameter><decl><type><name>Display</name><modifier>*</modifier></type></decl></parameter>,<parameter><decl><type><name>GLXFBConfig</name></type></decl></parameter>,<parameter><decl><type><name>GLXContext</name></type></decl></parameter>,<parameter><decl><type><name>Bool</name></type></decl></parameter>,<parameter><decl><type><specifier>const</specifier> <name>int</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glXGetFBConfigs</name></cpp:macro> <cpp:value>_glfw.glx.GetFBConfigs</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glXGetFBConfigAttrib</name></cpp:macro> <cpp:value>_glfw.glx.GetFBConfigAttrib</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glXGetClientString</name></cpp:macro> <cpp:value>_glfw.glx.GetClientString</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glXQueryExtension</name></cpp:macro> <cpp:value>_glfw.glx.QueryExtension</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glXQueryVersion</name></cpp:macro> <cpp:value>_glfw.glx.QueryVersion</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glXDestroyContext</name></cpp:macro> <cpp:value>_glfw.glx.DestroyContext</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glXMakeCurrent</name></cpp:macro> <cpp:value>_glfw.glx.MakeCurrent</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glXSwapBuffers</name></cpp:macro> <cpp:value>_glfw.glx.SwapBuffers</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glXQueryExtensionsString</name></cpp:macro> <cpp:value>_glfw.glx.QueryExtensionsString</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glXCreateNewContext</name></cpp:macro> <cpp:value>_glfw.glx.CreateNewContext</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glXGetVisualFromFBConfig</name></cpp:macro> <cpp:value>_glfw.glx.GetVisualFromFBConfig</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glXCreateWindow</name></cpp:macro> <cpp:value>_glfw.glx.CreateWindow</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>glXDestroyWindow</name></cpp:macro> <cpp:value>_glfw.glx.DestroyWindow</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_GLFW_PLATFORM_CONTEXT_STATE</name></cpp:macro> <cpp:value>_GLFWcontextGLX glx</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_GLFW_PLATFORM_LIBRARY_CONTEXT_STATE</name></cpp:macro> <cpp:value>_GLFWlibraryGLX glx</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>_GLFWcontextGLX</name>

<block>{

<decl_stmt><decl><type><name>GLXContext</name></type> <name>handle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLXWindow</name></type> <name>window</name></decl>;</decl_stmt>

}</block></struct></type> <name>_GLFWcontextGLX</name>;</typedef>

<typedef>typedef <type><struct>struct <name>_GLFWlibraryGLX</name>

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>major</name></decl>, <name>minor</name>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>eventBase</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>errorBase</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>handle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXGETFBCONFIGSPROC</name></type> <name>GetFBConfigs</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXGETFBCONFIGATTRIBPROC</name></type> <name>GetFBConfigAttrib</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXGETCLIENTSTRINGPROC</name></type> <name>GetClientString</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXQUERYEXTENSIONPROC</name></type> <name>QueryExtension</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXQUERYVERSIONPROC</name></type> <name>QueryVersion</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXDESTROYCONTEXTPROC</name></type> <name>DestroyContext</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXMAKECURRENTPROC</name></type> <name>MakeCurrent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXSWAPBUFFERSPROC</name></type> <name>SwapBuffers</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXQUERYEXTENSIONSSTRINGPROC</name></type> <name>QueryExtensionsString</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXCREATENEWCONTEXTPROC</name></type> <name>CreateNewContext</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXGETVISUALFROMFBCONFIGPROC</name></type> <name>GetVisualFromFBConfig</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXCREATEWINDOWPROC</name></type> <name>CreateWindow</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXDESTROYWINDOWPROC</name></type> <name>DestroyWindow</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXGETPROCADDRESSPROC</name></type> <name>GetProcAddress</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXGETPROCADDRESSPROC</name></type> <name>GetProcAddressARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXSWAPINTERVALSGIPROC</name></type> <name>SwapIntervalSGI</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXSWAPINTERVALEXTPROC</name></type> <name>SwapIntervalEXT</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXSWAPINTERVALMESAPROC</name></type> <name>SwapIntervalMESA</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>PFNGLXCREATECONTEXTATTRIBSARBPROC</name></type> <name>CreateContextAttribsARB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLFWbool</name></type> <name>SGI_swap_control</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLFWbool</name></type> <name>EXT_swap_control</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLFWbool</name></type> <name>MESA_swap_control</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLFWbool</name></type> <name>ARB_multisample</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLFWbool</name></type> <name>ARB_framebuffer_sRGB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLFWbool</name></type> <name>EXT_framebuffer_sRGB</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLFWbool</name></type> <name>ARB_create_context</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLFWbool</name></type> <name>ARB_create_context_profile</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLFWbool</name></type> <name>ARB_create_context_robustness</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLFWbool</name></type> <name>EXT_create_context_es2_profile</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLFWbool</name></type> <name>ARB_create_context_no_error</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLFWbool</name></type> <name>ARB_context_flush_control</name></decl>;</decl_stmt>

}</block></struct></type> <name>_GLFWlibraryGLX</name>;</typedef>

<function_decl><type><name>GLFWbool</name></type> <name>_glfwInitGLX</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_glfwTerminateGLX</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>GLFWbool</name></type> <name>_glfwCreateContextGLX</name><parameter_list>(<parameter><decl><type><name>_GLFWwindow</name><modifier>*</modifier></type> <name>window</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>_GLFWctxconfig</name><modifier>*</modifier></type> <name>ctxconfig</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>_GLFWfbconfig</name><modifier>*</modifier></type> <name>fbconfig</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_glfwDestroyContextGLX</name><parameter_list>(<parameter><decl><type><name>_GLFWwindow</name><modifier>*</modifier></type> <name>window</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>GLFWbool</name></type> <name>_glfwChooseVisualGLX</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>_GLFWwndconfig</name><modifier>*</modifier></type> <name>wndconfig</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>_GLFWctxconfig</name><modifier>*</modifier></type> <name>ctxconfig</name></decl></parameter>,

<parameter><decl><type><specifier>const</specifier> <name>_GLFWfbconfig</name><modifier>*</modifier></type> <name>fbconfig</name></decl></parameter>,

<parameter><decl><type><name>Visual</name><modifier>*</modifier><modifier>*</modifier></type> <name>visual</name></decl></parameter>, <parameter><decl><type><name>int</name><modifier>*</modifier></type> <name>depth</name></decl></parameter>)</parameter_list>;</function_decl>

</unit>
