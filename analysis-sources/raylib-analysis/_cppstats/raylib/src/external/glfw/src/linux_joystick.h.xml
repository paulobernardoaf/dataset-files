<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats\raylib\src\external\glfw\src\linux_joystick.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;linux/input.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;linux/limits.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;regex.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_GLFW_PLATFORM_JOYSTICK_STATE</name></cpp:macro> <cpp:value>_GLFWjoystickLinux linjs</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_GLFW_PLATFORM_LIBRARY_JOYSTICK_STATE</name></cpp:macro> <cpp:value>_GLFWlibraryLinux linjs</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_GLFW_PLATFORM_MAPPING_NAME</name></cpp:macro> <cpp:value>"Linux"</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>_GLFWjoystickLinux</name>

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>fd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name></type> <name><name>path</name><index>[<expr><name>PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>keyMap</name><index>[<expr><name>KEY_CNT</name> <operator>-</operator> <name>BTN_MISC</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>absMap</name><index>[<expr><name>ABS_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>input_absinfo</name></name></type> <name><name>absInfo</name><index>[<expr><name>ABS_CNT</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>hats</name><index>[<expr><literal type="number">4</literal></expr>]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>

}</block></struct></type> <name>_GLFWjoystickLinux</name>;</typedef>

<typedef>typedef <type><struct>struct <name>_GLFWlibraryLinux</name>

<block>{

<decl_stmt><decl><type><name>int</name></type> <name>inotify</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>watch</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>regex_t</name></type> <name>regex</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GLFWbool</name></type> <name>dropped</name></decl>;</decl_stmt>

}</block></struct></type> <name>_GLFWlibraryLinux</name>;</typedef>

<function_decl><type><name>GLFWbool</name></type> <name>_glfwInitJoysticksLinux</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_glfwTerminateJoysticksLinux</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>_glfwDetectJoystickConnectionLinux</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

</unit>
