<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats\raylib\examples\text\text_unicode.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SIZEOF</name><parameter_list>(<parameter><type><name>A</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(sizeof(A)/sizeof(A[0]))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EMOJI_PER_WIDTH</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EMOJI_PER_HEIGHT</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name>emojiCodepoints</name> <init>= <expr><literal type="string">"\xF0\x9F\x8C\x80\x00\xF0\x9F\x98\x80\x00\xF0\x9F\x98\x82\x00\xF0\x9F\xA4\xA3\x00\xF0\x9F\x98\x83\x00\xF0\x9F\x98\x86\x00\xF0\x9F\x98\x89\x00"</literal>

<literal type="string">"\xF0\x9F\x98\x8B\x00\xF0\x9F\x98\x8E\x00\xF0\x9F\x98\x8D\x00\xF0\x9F\x98\x98\x00\xF0\x9F\x98\x97\x00\xF0\x9F\x98\x99\x00\xF0\x9F\x98\x9A\x00\xF0\x9F\x99\x82\x00"</literal>

<literal type="string">"\xF0\x9F\xA4\x97\x00\xF0\x9F\xA4\xA9\x00\xF0\x9F\xA4\x94\x00\xF0\x9F\xA4\xA8\x00\xF0\x9F\x98\x90\x00\xF0\x9F\x98\x91\x00\xF0\x9F\x98\xB6\x00\xF0\x9F\x99\x84\x00"</literal>

<literal type="string">"\xF0\x9F\x98\x8F\x00\xF0\x9F\x98\xA3\x00\xF0\x9F\x98\xA5\x00\xF0\x9F\x98\xAE\x00\xF0\x9F\xA4\x90\x00\xF0\x9F\x98\xAF\x00\xF0\x9F\x98\xAA\x00\xF0\x9F\x98\xAB\x00"</literal>

<literal type="string">"\xF0\x9F\x98\xB4\x00\xF0\x9F\x98\x8C\x00\xF0\x9F\x98\x9B\x00\xF0\x9F\x98\x9D\x00\xF0\x9F\xA4\xA4\x00\xF0\x9F\x98\x92\x00\xF0\x9F\x98\x95\x00\xF0\x9F\x99\x83\x00"</literal>

<literal type="string">"\xF0\x9F\xA4\x91\x00\xF0\x9F\x98\xB2\x00\xF0\x9F\x99\x81\x00\xF0\x9F\x98\x96\x00\xF0\x9F\x98\x9E\x00\xF0\x9F\x98\x9F\x00\xF0\x9F\x98\xA4\x00\xF0\x9F\x98\xA2\x00"</literal>

<literal type="string">"\xF0\x9F\x98\xAD\x00\xF0\x9F\x98\xA6\x00\xF0\x9F\x98\xA9\x00\xF0\x9F\xA4\xAF\x00\xF0\x9F\x98\xAC\x00\xF0\x9F\x98\xB0\x00\xF0\x9F\x98\xB1\x00\xF0\x9F\x98\xB3\x00"</literal>

<literal type="string">"\xF0\x9F\xA4\xAA\x00\xF0\x9F\x98\xB5\x00\xF0\x9F\x98\xA1\x00\xF0\x9F\x98\xA0\x00\xF0\x9F\xA4\xAC\x00\xF0\x9F\x98\xB7\x00\xF0\x9F\xA4\x92\x00\xF0\x9F\xA4\x95\x00"</literal>

<literal type="string">"\xF0\x9F\xA4\xA2\x00\xF0\x9F\xA4\xAE\x00\xF0\x9F\xA4\xA7\x00\xF0\x9F\x98\x87\x00\xF0\x9F\xA4\xA0\x00\xF0\x9F\xA4\xAB\x00\xF0\x9F\xA4\xAD\x00\xF0\x9F\xA7\x90\x00"</literal>

<literal type="string">"\xF0\x9F\xA4\x93\x00\xF0\x9F\x98\x88\x00\xF0\x9F\x91\xBF\x00\xF0\x9F\x91\xB9\x00\xF0\x9F\x91\xBA\x00\xF0\x9F\x92\x80\x00\xF0\x9F\x91\xBB\x00\xF0\x9F\x91\xBD\x00"</literal>

<literal type="string">"\xF0\x9F\x91\xBE\x00\xF0\x9F\xA4\x96\x00\xF0\x9F\x92\xA9\x00\xF0\x9F\x98\xBA\x00\xF0\x9F\x98\xB8\x00\xF0\x9F\x98\xB9\x00\xF0\x9F\x98\xBB\x00\xF0\x9F\x98\xBD\x00"</literal>

<literal type="string">"\xF0\x9F\x99\x80\x00\xF0\x9F\x98\xBF\x00\xF0\x9F\x8C\xBE\x00\xF0\x9F\x8C\xBF\x00\xF0\x9F\x8D\x80\x00\xF0\x9F\x8D\x83\x00\xF0\x9F\x8D\x87\x00\xF0\x9F\x8D\x93\x00"</literal>

<literal type="string">"\xF0\x9F\xA5\x9D\x00\xF0\x9F\x8D\x85\x00\xF0\x9F\xA5\xA5\x00\xF0\x9F\xA5\x91\x00\xF0\x9F\x8D\x86\x00\xF0\x9F\xA5\x94\x00\xF0\x9F\xA5\x95\x00\xF0\x9F\x8C\xBD\x00"</literal>

<literal type="string">"\xF0\x9F\x8C\xB6\x00\xF0\x9F\xA5\x92\x00\xF0\x9F\xA5\xA6\x00\xF0\x9F\x8D\x84\x00\xF0\x9F\xA5\x9C\x00\xF0\x9F\x8C\xB0\x00\xF0\x9F\x8D\x9E\x00\xF0\x9F\xA5\x90\x00"</literal>

<literal type="string">"\xF0\x9F\xA5\x96\x00\xF0\x9F\xA5\xA8\x00\xF0\x9F\xA5\x9E\x00\xF0\x9F\xA7\x80\x00\xF0\x9F\x8D\x96\x00\xF0\x9F\x8D\x97\x00\xF0\x9F\xA5\xA9\x00\xF0\x9F\xA5\x93\x00"</literal>

<literal type="string">"\xF0\x9F\x8D\x94\x00\xF0\x9F\x8D\x9F\x00\xF0\x9F\x8D\x95\x00\xF0\x9F\x8C\xAD\x00\xF0\x9F\xA5\xAA\x00\xF0\x9F\x8C\xAE\x00\xF0\x9F\x8C\xAF\x00\xF0\x9F\xA5\x99\x00"</literal>

<literal type="string">"\xF0\x9F\xA5\x9A\x00\xF0\x9F\x8D\xB3\x00\xF0\x9F\xA5\x98\x00\xF0\x9F\x8D\xB2\x00\xF0\x9F\xA5\xA3\x00\xF0\x9F\xA5\x97\x00\xF0\x9F\x8D\xBF\x00\xF0\x9F\xA5\xAB\x00"</literal>

<literal type="string">"\xF0\x9F\x8D\xB1\x00\xF0\x9F\x8D\x98\x00\xF0\x9F\x8D\x9D\x00\xF0\x9F\x8D\xA0\x00\xF0\x9F\x8D\xA2\x00\xF0\x9F\x8D\xA5\x00\xF0\x9F\x8D\xA1\x00\xF0\x9F\xA5\x9F\x00"</literal>

<literal type="string">"\xF0\x9F\xA5\xA1\x00\xF0\x9F\x8D\xA6\x00\xF0\x9F\x8D\xAA\x00\xF0\x9F\x8E\x82\x00\xF0\x9F\x8D\xB0\x00\xF0\x9F\xA5\xA7\x00\xF0\x9F\x8D\xAB\x00\xF0\x9F\x8D\xAF\x00"</literal>

<literal type="string">"\xF0\x9F\x8D\xBC\x00\xF0\x9F\xA5\x9B\x00\xF0\x9F\x8D\xB5\x00\xF0\x9F\x8D\xB6\x00\xF0\x9F\x8D\xBE\x00\xF0\x9F\x8D\xB7\x00\xF0\x9F\x8D\xBB\x00\xF0\x9F\xA5\x82\x00"</literal>

<literal type="string">"\xF0\x9F\xA5\x83\x00\xF0\x9F\xA5\xA4\x00\xF0\x9F\xA5\xA2\x00\xF0\x9F\x91\x81\x00\xF0\x9F\x91\x85\x00\xF0\x9F\x91\x84\x00\xF0\x9F\x92\x8B\x00\xF0\x9F\x92\x98\x00"</literal>

<literal type="string">"\xF0\x9F\x92\x93\x00\xF0\x9F\x92\x97\x00\xF0\x9F\x92\x99\x00\xF0\x9F\x92\x9B\x00\xF0\x9F\xA7\xA1\x00\xF0\x9F\x92\x9C\x00\xF0\x9F\x96\xA4\x00\xF0\x9F\x92\x9D\x00"</literal>

<literal type="string">"\xF0\x9F\x92\x9F\x00\xF0\x9F\x92\x8C\x00\xF0\x9F\x92\xA4\x00\xF0\x9F\x92\xA2\x00\xF0\x9F\x92\xA3\x00"</literal></expr></init></decl>;</decl_stmt>

<struct>struct <block>{

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>text</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>language</name></decl>;</decl_stmt>

}</block> <decl>const <name><name>messages</name><index>[]</index></name> <init>= <expr><block>{ 

<expr><block>{<expr><literal type="string">"\x46\x61\x6C\x73\x63\x68\x65\x73\x20\xC3\x9C\x62\x65\x6E\x20\x76\x6F\x6E\x20\x58\x79\x6C\x6F\x70\x68\x6F\x6E\x6D\x75\x73\x69\x6B\x20\x71\x75\xC3\xA4\x6C"</literal>

<literal type="string">"\x74\x20\x6A\x65\x64\x65\x6E\x20\x67\x72\xC3\xB6\xC3\x9F\x65\x72\x65\x6E\x20\x5A\x77\x65\x72\x67"</literal></expr>, <expr><literal type="string">"German"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\x42\x65\x69\xC3\x9F\x20\x6E\x69\x63\x68\x74\x20\x69\x6E\x20\x64\x69\x65\x20\x48\x61\x6E\x64\x2C\x20\x64\x69\x65\x20\x64\x69\x63\x68\x20\x66\xC3\xBC\x74"</literal>

<literal type="string">"\x74\x65\x72\x74\x2E"</literal></expr>, <expr><literal type="string">"German"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\x41\x75\xC3\x9F\x65\x72\x6F\x72\x64\x65\x6E\x74\x6C\x69\x63\x68\x65\x20\xC3\x9C\x62\x65\x6C\x20\x65\x72\x66\x6F\x72\x64\x65\x72\x6E\x20\x61\x75\xC3\x9F"</literal>

<literal type="string">"\x65\x72\x6F\x72\x64\x65\x6E\x74\x6C\x69\x63\x68\x65\x20\x4D\x69\x74\x74\x65\x6C\x2E"</literal></expr>, <expr><literal type="string">"German"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xD4\xBF\xD6\x80\xD5\xB6\xD5\xA1\xD5\xB4\x20\xD5\xA1\xD5\xBA\xD5\xA1\xD5\xAF\xD5\xAB\x20\xD5\xB8\xD6\x82\xD5\xBF\xD5\xA5\xD5\xAC\x20\xD6\x87\x20\xD5\xAB"</literal>

<literal type="string">"\xD5\xB6\xD5\xAE\xD5\xAB\x20\xD5\xA1\xD5\xB6\xD5\xB0\xD5\xA1\xD5\xB6\xD5\xA3\xD5\xAB\xD5\xBD\xD5\xBF\x20\xD5\xB9\xD5\xA8\xD5\xB6\xD5\xA5\xD6\x80"</literal></expr>, <expr><literal type="string">"Armenian"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xD4\xB5\xD6\x80\xD5\xA2\x20\xD5\xB8\xD6\x80\x20\xD5\xAF\xD5\xA1\xD6\x81\xD5\xAB\xD5\xB6\xD5\xA8\x20\xD5\xA5\xD5\xAF\xD5\xA1\xD6\x82\x20\xD5\xA1\xD5\xB6\xD5"</literal>

<literal type="string">"\xBF\xD5\xA1\xD5\xBC\x2C\x20\xD5\xAE\xD5\xA1\xD5\xBC\xD5\xA5\xD6\x80\xD5\xA8\x20\xD5\xA1\xD5\xBD\xD5\xA1\xD6\x81\xD5\xAB\xD5\xB6\x2E\x2E\x2E\x20\xC2\xAB\xD4\xBF"</literal>

<literal type="string">"\xD5\xB8\xD5\xBF\xD5\xA8\x20\xD5\xB4\xD5\xA5\xD6\x80\xD5\xB8\xD5\xB6\xD6\x81\xD5\xAB\xD6\x81\x20\xD5\xA7\x3A\xC2\xBB"</literal></expr>, <expr><literal type="string">"Armenian"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xD4\xB3\xD5\xA1\xD5\xBC\xD5\xA8\xD5\x9D\x20\xD5\xA3\xD5\xA1\xD6\x80\xD5\xB6\xD5\xA1\xD5\xB6\x2C\x20\xD5\xB1\xD5\xAB\xD6\x82\xD5\xB6\xD5\xA8\xD5\x9D\x20\xD5"</literal>

<literal type="string">"\xB1\xD5\xB4\xD5\xBC\xD5\xA1\xD5\xB6"</literal></expr>, <expr><literal type="string">"Armenian"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\x4A\x65\xC5\xBC\x75\x20\x6B\x6C\xC4\x85\x74\x77\x2C\x20\x73\x70\xC5\x82\xC3\xB3\x64\xC5\xBA\x20\x46\x69\x6E\x6F\x6D\x20\x63\x7A\xC4\x99\xC5\x9B\xC4\x87"</literal>

<literal type="string">"\x20\x67\x72\x79\x20\x68\x61\xC5\x84\x62\x21"</literal></expr>, <expr><literal type="string">"Polish"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\x44\x6F\x62\x72\x79\x6D\x69\x20\x63\x68\xC4\x99\x63\x69\x61\x6D\x69\x20\x6A\x65\x73\x74\x20\x70\x69\x65\x6B\xC5\x82\x6F\x20\x77\x79\x62\x72\x75\x6B\x6F"</literal>

<literal type="string">"\x77\x61\x6E\x65\x2E"</literal></expr>, <expr><literal type="string">"Polish"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xC3\x8E\xC8\x9B\x69\x20\x6D\x75\x6C\xC8\x9B\x75\x6D\x65\x73\x63\x20\x63\xC4\x83\x20\x61\x69\x20\x61\x6C\x65\x73\x20\x72\x61\x79\x6C\x69\x62\x2E\x0A\xC8\x98"</literal>

<literal type="string">"\x69\x20\x73\x70\x65\x72\x20\x73\xC4\x83\x20\x61\x69\x20\x6F\x20\x7A\x69\x20\x62\x75\x6E\xC4\x83\x21"</literal></expr>, <expr><literal type="string">"Romanian"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xD0\xAD\xD1\x85\x2C\x20\xD1\x87\xD1\x83\xD0\xB6\xD0\xB0\xD0\xBA\x2C\x20\xD0\xBE\xD0\xB1\xD1\x89\xD0\xB8\xD0\xB9\x20\xD1\x81\xD1\x8A\xD1\x91\xD0\xBC\x20"</literal>

<literal type="string">"\xD1\x86\xD0\xB5\xD0\xBD\x20\xD1\x88\xD0\xBB\xD1\x8F\xD0\xBF\x20\x28\xD1\x8E\xD1\x84\xD1\x82\xD1\x8C\x29\x20\xD0\xB2\xD0\xB4\xD1\x80\xD1\x8B\xD0\xB7\xD0\xB3\x21"</literal></expr>, <expr><literal type="string">"Russian"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xD0\xAF\x20\xD0\xBB\xD1\x8E\xD0\xB1\xD0\xBB\xD1\x8E\x20\x72\x61\x79\x6C\x69\x62\x21"</literal></expr>, <expr><literal type="string">"Russian"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xD0\x9C\xD0\xBE\xD0\xBB\xD1\x87\xD0\xB8\x2C\x20\xD1\x81\xD0\xBA\xD1\x80\xD1\x8B\xD0\xB2\xD0\xB0\xD0\xB9\xD1\x81\xD1\x8F\x20\xD0\xB8\x20\xD1\x82\xD0\xB0\xD0\xB8"</literal>

<literal type="string">"\x0A\xD0\x98\x20\xD1\x87\xD1\x83\xD0\xB2\xD1\x81\xD1\x82\xD0\xB2\xD0\xB0\x20\xD0\xB8\x20\xD0\xBC\xD0\xB5\xD1\x87\xD1\x82\xD1\x8B\x20\xD1\x81\xD0\xB2\xD0\xBE\xD0\xB8\x20"</literal>

<literal type="string">"\xE2\x80\x93\x0A\xD0\x9F\xD1\x83\xD1\x81\xD0\xBA\xD0\xB0\xD0\xB9\x20\xD0\xB2\x20\xD0\xB4\xD1\x83\xD1\x88\xD0\xB5\xD0\xB2\xD0\xBD\xD0\xBE\xD0\xB9\x20\xD0\xB3\xD0\xBB\xD1"</literal>

<literal type="string">"\x83\xD0\xB1\xD0\xB8\xD0\xBD\xD0\xB5\x0A\xD0\x98\x20\xD0\xB2\xD1\x81\xD1\x85\xD0\xBE\xD0\xB4\xD1\x8F\xD1\x82\x20\xD0\xB8\x20\xD0\xB7\xD0\xB0\xD0\xB9\xD0\xB4\xD1\x83\xD1"</literal>

<literal type="string">"\x82\x20\xD0\xBE\xD0\xBD\xD0\xB5\x0A\xD0\x9A\xD0\xB0\xD0\xBA\x20\xD0\xB7\xD0\xB2\xD0\xB5\xD0\xB7\xD0\xB4\xD1\x8B\x20\xD1\x8F\xD1\x81\xD0\xBD\xD1\x8B\xD0\xB5\x20\xD0\xB2"</literal>

<literal type="string">"\x20\xD0\xBD\xD0\xBE\xD1\x87\xD0\xB8\x2D\x0A\xD0\x9B\xD1\x8E\xD0\xB1\xD1\x83\xD0\xB9\xD1\x81\xD1\x8F\x20\xD0\xB8\xD0\xBC\xD0\xB8\x20\xE2\x80\x93\x20\xD0\xB8\x20\xD0\xBC"</literal>

<literal type="string">"\xD0\xBE\xD0\xBB\xD1\x87\xD0\xB8\x2E"</literal></expr>, <expr><literal type="string">"Russian"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\x56\x6F\x69\x78\x20\x61\x6D\x62\x69\x67\x75\xC3\xAB\x20\x64\xE2\x80\x99\x75\x6E\x20\x63\xC5\x93\x75\x72\x20\x71\x75\x69\x20\x61\x75\x20\x7A\xC3\xA9\x70"</literal>

<literal type="string">"\x68\x79\x72\x20\x70\x72\xC3\xA9\x66\xC3\xA8\x72\x65\x20\x6C\x65\x73\x20\x6A\x61\x74\x74\x65\x73\x20\x64\x65\x20\x6B\x69\x77\x69"</literal></expr>, <expr><literal type="string">"French"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\x42\x65\x6E\x6A\x61\x6D\xC3\xAD\x6E\x20\x70\x69\x64\x69\xC3\xB3\x20\x75\x6E\x61\x20\x62\x65\x62\x69\x64\x61\x20\x64\x65\x20\x6B\x69\x77\x69\x20\x79\x20"</literal>

<literal type="string">"\x66\x72\x65\x73\x61\x3B\x20\x4E\x6F\xC3\xA9\x2C\x20\x73\x69\x6E\x20\x76\x65\x72\x67\xC3\xBC\x65\x6E\x7A\x61\x2C\x20\x6C\x61\x20\x6D\xC3\xA1\x73\x20\x65\x78"</literal>

<literal type="string">"\x71\x75\x69\x73\x69\x74\x61\x20\x63\x68\x61\x6D\x70\x61\xC3\xB1\x61\x20\x64\x65\x6C\x20\x6D\x65\x6E\xC3\xBA\x2E"</literal></expr>, <expr><literal type="string">"Spanish"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xCE\xA4\xCE\xB1\xCF\x87\xCE\xAF\xCF\x83\xCF\x84\xCE\xB7\x20\xCE\xB1\xCE\xBB\xCF\x8E\xCF\x80\xCE\xB7\xCE\xBE\x20\xCE\xB2\xCE\xB1\xCF\x86\xCE\xAE\xCF\x82\x20"</literal>

<literal type="string">"\xCF\x88\xCE\xB7\xCE\xBC\xCE\xAD\xCE\xBD\xCE\xB7\x20\xCE\xB3\xCE\xB7\x2C\x20\xCE\xB4\xCF\x81\xCE\xB1\xCF\x83\xCE\xBA\xCE\xB5\xCE\xBB\xCE\xAF\xCE\xB6\xCE\xB5\xCE"</literal>

<literal type="string">"\xB9\x20\xCF\x85\xCF\x80\xCE\xAD\xCF\x81\x20\xCE\xBD\xCF\x89\xCE\xB8\xCF\x81\xCE\xBF\xCF\x8D\x20\xCE\xBA\xCF\x85\xCE\xBD\xCF\x8C\xCF\x82"</literal></expr>, <expr><literal type="string">"Greek"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xCE\x97\x20\xCE\xBA\xCE\xB1\xCE\xBB\xCF\x8D\xCF\x84\xCE\xB5\xCF\x81\xCE\xB7\x20\xCE\xAC\xCE\xBC\xCF\x85\xCE\xBD\xCE\xB1\x20\xCE\xB5\xCE\xAF\xCE\xBD"</literal>

<literal type="string">"\xCE\xB1\xCE\xB9\x20\xCE\xB7\x20\xCE\xB5\xCF\x80\xCE\xAF\xCE\xB8\xCE\xB5\xCF\x83\xCE\xB7\x2E"</literal></expr>, <expr><literal type="string">"Greek"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xCE\xA7\xCF\x81\xCF\x8C\xCE\xBD\xCE\xB9\xCE\xB1\x20\xCE\xBA\xCE\xB1\xCE\xB9\x20\xCE\xB6\xCE\xB1\xCE\xBC\xCE\xAC\xCE\xBD\xCE\xB9\xCE\xB1\x21"</literal></expr>, <expr><literal type="string">"Greek"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xCE\xA0\xCF\x8E\xCF\x82\x20\xCF\x84\xCE\xB1\x20\xCF\x80\xCE\xB1\xCF\x82\x20\xCF\x83\xCE\xAE\xCE\xBC\xCE\xB5\xCF\x81\xCE\xB1\x3B"</literal></expr>, <expr><literal type="string">"Greek"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE6\x88\x91\xE8\x83\xBD\xE5\x90\x9E\xE4\xB8\x8B\xE7\x8E\xBB\xE7\x92\x83\xE8\x80\x8C\xE4\xB8\x8D\xE4\xBC\xA4\xE8\xBA\xAB\xE4\xBD\x93\xE3\x80\x82"</literal></expr>, <expr><literal type="string">"Chinese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE4\xBD\xA0\xE5\x90\x83\xE4\xBA\x86\xE5\x90\x97\xEF\xBC\x9F"</literal></expr>, <expr><literal type="string">"Chinese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE4\xB8\x8D\xE4\xBD\x9C\xE4\xB8\x8D\xE6\xAD\xBB\xE3\x80\x82"</literal></expr>, <expr><literal type="string">"Chinese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE6\x9C\x80\xE8\xBF\x91\xE5\xA5\xBD\xE5\x90\x97\xEF\xBC\x9F"</literal></expr>, <expr><literal type="string">"Chinese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE5\xA1\x9E\xE7\xBF\x81\xE5\xA4\xB1\xE9\xA9\xAC\xEF\xBC\x8C\xE7\x84\x89\xE7\x9F\xA5\xE9\x9D\x9E\xE7\xA6\x8F\xE3\x80\x82"</literal></expr>, <expr><literal type="string">"Chinese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE5\x8D\x83\xE5\x86\x9B\xE6\x98\x93\xE5\xBE\x97\x2C\x20\xE4\xB8\x80\xE5\xB0\x86\xE9\x9A\xBE\xE6\xB1\x82"</literal></expr>, <expr><literal type="string">"Chinese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE4\xB8\x87\xE4\xBA\x8B\xE5\xBC\x80\xE5\xA4\xB4\xE9\x9A\xBE\xE3\x80\x82"</literal></expr>, <expr><literal type="string">"Chinese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE9\xA3\x8E\xE6\x97\xA0\xE5\xB8\xB8\xE9\xA1\xBA\xEF\xBC\x8C\xE5\x85\xB5\xE6\x97\xA0\xE5\xB8\xB8\xE8\x83\x9C\xE3\x80\x82"</literal></expr>, <expr><literal type="string">"Chinese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE6\xB4\xBB\xE5\x88\xB0\xE8\x80\x81\xEF\xBC\x8C\xE5\xAD\xA6\xE5\x88\xB0\xE8\x80\x81\xE3\x80\x82"</literal></expr>, <expr><literal type="string">"Chinese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE4\xB8\x80\xE8\xA8\x80\xE6\x97\xA2\xE5\x87\xBA\xEF\xBC\x8C\xE9\xA9\xB7\xE9\xA9\xAC\xE9\x9A\xBE\xE8\xBF\xBD\xE3\x80\x82"</literal></expr>, <expr><literal type="string">"Chinese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE8\xB7\xAF\xE9\x81\xA5\xE7\x9F\xA5\xE9\xA9\xAC\xE5\x8A\x9B\xEF\xBC\x8C\xE6\x97\xA5\xE4\xB9\x85\xE8\xA7\x81\xE4\xBA\xBA\xE5\xBF\x83"</literal></expr>, <expr><literal type="string">"Chinese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE6\x9C\x89\xE7\x90\x86\xE8\xB5\xB0\xE9\x81\x8D\xE5\xA4\xA9\xE4\xB8\x8B\xEF\xBC\x8C\xE6\x97\xA0\xE7\x90\x86\xE5\xAF\xB8\xE6\xAD\xA5\xE9\x9A\xBE\xE8\xA1\x8C\xE3\x80\x82"</literal></expr>, <expr><literal type="string">"Chinese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE7\x8C\xBF\xE3\x82\x82\xE6\x9C\xA8\xE3\x81\x8B\xE3\x82\x89\xE8\x90\xBD\xE3\x81\xA1\xE3\x82\x8B"</literal></expr>, <expr><literal type="string">"Japanese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE4\xBA\x80\xE3\x81\xAE\xE7\x94\xB2\xE3\x82\x88\xE3\x82\x8A\xE5\xB9\xB4\xE3\x81\xAE\xE5\x8A\x9F"</literal></expr>, <expr><literal type="string">"Japanese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE3\x81\x86\xE3\x82\x89\xE3\x82\x84\xE3\x81\xBE\xE3\x81\x97\x20\x20\xE6\x80\x9D\xE3\x81\xB2\xE5\x88\x87\xE3\x82\x8B\xE6\x99\x82\x20\x20\xE7\x8C\xAB\xE3\x81\xAE\xE6\x81\x8B"</literal></expr>, <expr><literal type="string">"Japanese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE8\x99\x8E\xE7\xA9\xB4\xE3\x81\xAB\xE5\x85\xA5\xE3\x82\x89\xE3\x81\x9A\xE3\x82\x93\xE3\x81\xB0\xE8\x99\x8E\xE5\xAD\x90\xE3\x82\x92\xE5\xBE\x97\xE3\x81\x9A\xE3\x80\x82"</literal></expr>, <expr><literal type="string">"Japanese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE4\xBA\x8C\xE5\x85\x8E\xE3\x82\x92\xE8\xBF\xBD\xE3\x81\x86\xE8\x80\x85\xE3\x81\xAF\xE4\xB8\x80\xE5\x85\x8E\xE3\x82\x92\xE3\x82\x82\xE5\xBE\x97\xE3\x81\x9A\xE3\x80\x82"</literal></expr>, <expr><literal type="string">"Japanese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE9\xA6\xAC\xE9\xB9\xBF\xE3\x81\xAF\xE6\xAD\xBB\xE3\x81\xAA\xE3\x81\xAA\xE3\x81\x8D\xE3\x82\x83\xE6\xB2\xBB\xE3\x82\x89\xE3\x81\xAA\xE3\x81\x84\xE3\x80\x82"</literal></expr>, <expr><literal type="string">"Japanese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE6\x9E\xAF\xE9\x87\x8E\xE8\xB7\xAF\xE3\x81\xAB\xE3\x80\x80\xE5\xBD\xB1\xE3\x81\x8B\xE3\x81\x95\xE3\x81\xAA\xE3\x82\x8A\xE3\x81\xA6\xE3\x80\x80\xE3\x82\x8F\xE3\x81\x8B\xE3\x82\x8C\xE3\x81\x91\xE3\x82\x8A"</literal></expr>, <expr><literal type="string">"Japanese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xE7\xB9\xB0\xE3\x82\x8A\xE8\xBF\x94\xE3\x81\x97\xE9\xBA\xA6\xE3\x81\xAE\xE7\x95\x9D\xE7\xB8\xAB\xE3\x81\xB5\xE8\x83\xA1\xE8\x9D\xB6\xE5\x93\x89"</literal></expr>, <expr><literal type="string">"Japanese"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xEC\x95\x84\xEB\x93\x9D\xED\x95\x9C\x20\xEB\xB0\x94\xEB\x8B\xA4\x20\xEC\x9C\x84\xEC\x97\x90\x20\xEA\xB0\x88\xEB\xA7\xA4\xEA\xB8\xB0\x20\xEB\x91\x90\xEC\x97\x87\x20"</literal>

<literal type="string">"\xEB\x82\xA0\xEC\x95\x84\x20\xEB\x8F\x88\xEB\x8B\xA4\x2E\x0A\xEB\x84\x88\xED\x9B\x8C\xEB\x84\x88\xED\x9B\x8C\x20\xEC\x8B\x9C\xEB\xA5\xBC\x20\xEC\x93\xB4\xEB\x8B\xA4\x2E"</literal>

<literal type="string">"\x20\xEB\xAA\xA8\xEB\xA5\xB4\xEB\x8A\x94\x20\xEB\x82\x98\xEB\x9D\xBC\x20\xEA\xB8\x80\xEC\x9E\x90\xEB\x8B\xA4\x2E\x0A\xEB\x84\x90\xEB\x94\xB0\xEB\x9E\x80\x20\xED\x95\x98"</literal>

<literal type="string">"\xEB\x8A\x98\x20\xEB\xB3\xB5\xED\x8C\x90\xEC\x97\x90\x20\xEB\x82\x98\xEB\x8F\x84\x20\xEA\xB0\x99\xEC\x9D\xB4\x20\xEC\x8B\x9C\xEB\xA5\xBC\x20\xEC\x93\xB4\xEB\x8B\xA4\x2E"</literal></expr>, <expr><literal type="string">"Korean"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xEC\xA0\x9C\x20\xEB\x88\x88\xEC\x97\x90\x20\xEC\x95\x88\xEA\xB2\xBD\xEC\x9D\xB4\xEB\x8B\xA4"</literal></expr>, <expr><literal type="string">"Korean"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xEA\xBF\xA9\x20\xEB\xA8\xB9\xEA\xB3\xA0\x20\xEC\x95\x8C\x20\xEB\xA8\xB9\xEB\x8A\x94\xEB\x8B\xA4"</literal></expr>, <expr><literal type="string">"Korean"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xEB\xA1\x9C\xEB\xA7\x88\xEB\x8A\x94\x20\xED\x95\x98\xEB\xA3\xA8\xEC\x95\x84\xEC\xB9\xA8\xEC\x97\x90\x20\xEC\x9D\xB4\xEB\xA3\xA8\xEC\x96\xB4\xEC\xA7\x84\x20\xEA\xB2\x83\xEC\x9D\xB4"</literal>

<literal type="string">"\x20\xEC\x95\x84\xEB\x8B\x88\xEB\x8B\xA4"</literal></expr>, <expr><literal type="string">"Korean"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xEA\xB3\xA0\xEC\x83\x9D\x20\xEB\x81\x9D\xEC\x97\x90\x20\xEB\x82\x99\xEC\x9D\xB4\x20\xEC\x98\xA8\xEB\x8B\xA4"</literal></expr>, <expr><literal type="string">"Korean"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xEA\xB0\x9C\xEC\xB2\x9C\xEC\x97\x90\xEC\x84\x9C\x20\xEC\x9A\xA9\x20\xEB\x82\x9C\xEB\x8B\xA4"</literal></expr>, <expr><literal type="string">"Korean"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xEC\x95\x88\xEB\x85\x95\xED\x95\x98\xEC\x84\xB8\xEC\x9A\x94\x3F"</literal></expr>, <expr><literal type="string">"Korean"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xEB\xA7\x8C\xEB\x82\x98\xEC\x84\x9C\x20\xEB\xB0\x98\xEA\xB0\x91\xEC\x8A\xB5\xEB\x8B\x88\xEB\x8B\xA4"</literal></expr>, <expr><literal type="string">"Korean"</literal></expr>}</block></expr>,

<expr><block>{<expr><literal type="string">"\xED\x95\x9C\xEA\xB5\xAD\xEB\xA7\x90\x20\xED\x95\x98\xEC\x8B\xA4\x20\xEC\xA4\x84\x20\xEC\x95\x84\xEC\x84\xB8\xEC\x9A\x94\x3F"</literal></expr>, <expr><literal type="string">"Korean"</literal></expr>}</block></expr>,

}</block></expr></init></decl>;</struct>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>RandomizeEmoji</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl> 

<struct>struct <block>{

<decl_stmt><decl><type><name>int</name></type> <name>index</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>message</name></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>Color</name></type> <name>color</name></decl>;</decl_stmt> 

}</block> <decl><name><name>emoji</name><index>[<expr><name>EMOJI_PER_WIDTH</name><operator>*</operator><name>EMOJI_PER_HEIGHT</name></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</struct>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>hovered</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>, <decl><type ref="prev"/><name>selected</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenWidth</name> <init>= <expr><literal type="number">800</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenHeight</name> <init>= <expr><literal type="number">450</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SetConfigFlags</name><argument_list>(<argument><expr><name>FLAG_MSAA_4X_HINT</name> <operator>|</operator> <name>FLAG_VSYNC_HINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>InitWindow</name><argument_list>(<argument><expr><name>screenWidth</name></expr></argument>, <argument><expr><name>screenHeight</name></expr></argument>, <argument><expr><literal type="string">"raylib [text] example - unicode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>Font</name></type> <name>fontDefault</name> <init>= <expr><call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/dejavu.fnt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Font</name></type> <name>fontAsian</name> <init>= <expr><call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/notoCJK.fnt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Font</name></type> <name>fontEmoji</name> <init>= <expr><call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/emoji.fnt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Vector2</name></type> <name>hoveredPos</name> <init>= <expr><block>{ <expr><literal type="number">0.0f</literal></expr>, <expr><literal type="number">0.0f</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Vector2</name></type> <name>selectedPos</name> <init>= <expr><block>{ <expr><literal type="number">0.0f</literal></expr>, <expr><literal type="number">0.0f</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>RandomizeEmoji</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SetTargetFPS</name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<while>while <condition>(<expr><operator>!</operator><call><name>WindowShouldClose</name><argument_list>()</argument_list></call></expr>)</condition> 

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_SPACE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>RandomizeEmoji</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>IsMouseButtonPressed</name><argument_list>(<argument><expr><name>MOUSE_LEFT_BUTTON</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><name>hovered</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>hovered</name> <operator>!=</operator> <name>selected</name><operator>)</operator></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>selected</name> <operator>=</operator> <name>hovered</name></expr>;</expr_stmt>

<expr_stmt><expr><name>selectedPos</name> <operator>=</operator> <name>hoveredPos</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>SetClipboardText</name><argument_list>(<argument><expr><name><name>messages</name><index>[<expr><name><name>emoji</name><index>[<expr><name>selected</name></expr>]</index></name><operator>.</operator><name>message</name></expr>]</index></name><operator>.</operator><name>text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<decl_stmt><decl><type><name>Vector2</name></type> <name>mouse</name> <init>= <expr><call><name>GetMousePosition</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Vector2</name></type> <name>pos</name> <init>= <expr><block>{ <expr><literal type="number">28.8f</literal></expr>, <expr><literal type="number">10.0f</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>hovered</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>BeginDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ClearBackground</name><argument_list>(<argument><expr><name>RAYWHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>SIZEOF</name><argument_list>(<argument><expr><name>emoji</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>txt</name> <init>= <expr><operator>&amp;</operator><name><name>emojiCodepoints</name><index>[<expr><name><name>emoji</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Rectangle</name></type> <name>emojiRect</name> <init>= <expr><block>{ <expr><name><name>pos</name><operator>.</operator><name>x</name></name></expr>, <expr><name><name>pos</name><operator>.</operator><name>y</name></name></expr>, <expr><name><name>fontEmoji</name><operator>.</operator><name>baseSize</name></name></expr>, <expr><name><name>fontEmoji</name><operator>.</operator><name>baseSize</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>CheckCollisionPointRec</name><argument_list>(<argument><expr><name>mouse</name></expr></argument>, <argument><expr><name>emojiRect</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>DrawTextEx</name><argument_list>(<argument><expr><name>fontEmoji</name></expr></argument>, <argument><expr><name>txt</name></expr></argument>, <argument><expr><name>pos</name></expr></argument>, <argument><expr><name><name>fontEmoji</name><operator>.</operator><name>baseSize</name></name></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><ternary><condition><expr><name>selected</name> <operator>==</operator> <name>i</name></expr> ?</condition><then> <expr><name><name>emoji</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>color</name></expr> </then><else>: <expr><call><name>Fade</name><argument_list>(<argument><expr><name>LIGHTGRAY</name></expr></argument>, <argument><expr><literal type="number">0.4f</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><call><name>DrawTextEx</name><argument_list>(<argument><expr><name>fontEmoji</name></expr></argument>, <argument><expr><name>txt</name></expr></argument>, <argument><expr><name>pos</name></expr></argument>, <argument><expr><name><name>fontEmoji</name><operator>.</operator><name>baseSize</name></name></expr></argument>, <argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><name><name>emoji</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>color</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hovered</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>

<expr_stmt><expr><name>hoveredPos</name> <operator>=</operator> <name>pos</name></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>i</name> <operator>!=</operator> <literal type="number">0</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>i</name><operator>%</operator><name>EMOJI_PER_WIDTH</name> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr>)</condition> <block>{<block_content> <expr_stmt><expr><name><name>pos</name><operator>.</operator><name>y</name></name> <operator>+=</operator> <name><name>fontEmoji</name><operator>.</operator><name>baseSize</name></name> <operator>+</operator> <literal type="number">24.25f</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>pos</name><operator>.</operator><name>x</name></name> <operator>=</operator> <literal type="number">28.8f</literal></expr>;</expr_stmt> </block_content>}</block></if>

<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>pos</name><operator>.</operator><name>x</name></name> <operator>+=</operator> <name><name>fontEmoji</name><operator>.</operator><name>baseSize</name></name> <operator>+</operator> <literal type="number">28.8f</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name>selected</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>message</name> <init>= <expr><name><name>emoji</name><index>[<expr><name>selected</name></expr>]</index></name><operator>.</operator><name>message</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>horizontalPadding</name> <init>= <expr><literal type="number">20</literal></expr></init></decl>, <decl><type ref="prev"/><name>verticalPadding</name> <init>= <expr><literal type="number">30</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Font</name> <modifier>*</modifier></type><name>font</name> <init>= <expr><operator>&amp;</operator><name>fontDefault</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>TextIsEqual</name><argument_list>(<argument><expr><name><name>messages</name><index>[<expr><name>message</name></expr>]</index></name><operator>.</operator><name>language</name></expr></argument>, <argument><expr><literal type="string">"Chinese"</literal></expr></argument>)</argument_list></call> <operator>||</operator>

<call><name>TextIsEqual</name><argument_list>(<argument><expr><name><name>messages</name><index>[<expr><name>message</name></expr>]</index></name><operator>.</operator><name>language</name></expr></argument>, <argument><expr><literal type="string">"Korean"</literal></expr></argument>)</argument_list></call> <operator>||</operator>

<call><name>TextIsEqual</name><argument_list>(<argument><expr><name><name>messages</name><index>[<expr><name>message</name></expr>]</index></name><operator>.</operator><name>language</name></expr></argument>, <argument><expr><literal type="string">"Japanese"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>font</name> <operator>=</operator> <operator>&amp;</operator><name>fontAsian</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>Vector2</name></type> <name>sz</name> <init>= <expr><call><name>MeasureTextEx</name><argument_list>(<argument><expr><operator>*</operator><name>font</name></expr></argument>, <argument><expr><name><name>messages</name><index>[<expr><name>message</name></expr>]</index></name><operator>.</operator><name>text</name></expr></argument>, <argument><expr><name><name>font</name><operator>-&gt;</operator><name>baseSize</name></name></expr></argument>, <argument><expr><literal type="number">1.0f</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>sz</name><operator>.</operator><name>x</name></name> <operator>&gt;</operator> <literal type="number">300</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><name><name>sz</name><operator>.</operator><name>y</name></name> <operator>*=</operator> <name><name>sz</name><operator>.</operator><name>x</name></name><operator>/</operator><literal type="number">300</literal></expr>;</expr_stmt> <expr_stmt><expr><name><name>sz</name><operator>.</operator><name>x</name></name> <operator>=</operator> <literal type="number">300</literal></expr>;</expr_stmt> </block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><name><name>sz</name><operator>.</operator><name>x</name></name> <operator>&lt;</operator> <literal type="number">160</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>sz</name><operator>.</operator><name>x</name></name> <operator>=</operator> <literal type="number">160</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name>Rectangle</name></type> <name>msgRect</name> <init>= <expr><block>{ <expr><name><name>selectedPos</name><operator>.</operator><name>x</name></name> <operator>-</operator> <literal type="number">38.8f</literal></expr>, <expr><name><name>selectedPos</name><operator>.</operator><name>y</name></name></expr>, <expr><literal type="number">2</literal> <operator>*</operator> <name>horizontalPadding</name> <operator>+</operator> <name><name>sz</name><operator>.</operator><name>x</name></name></expr>, <expr><literal type="number">2</literal> <operator>*</operator> <name>verticalPadding</name> <operator>+</operator> <name><name>sz</name><operator>.</operator><name>y</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>msgRect</name><operator>.</operator><name>y</name></name> <operator>-=</operator> <name><name>msgRect</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>Vector2</name></type> <name>a</name> <init>= <expr><block>{ <expr><name><name>selectedPos</name><operator>.</operator><name>x</name></name></expr>, <expr><name><name>msgRect</name><operator>.</operator><name>y</name></name> <operator>+</operator> <name><name>msgRect</name><operator>.</operator><name>height</name></name></expr> }</block></expr></init></decl>, <decl><type ref="prev"/><name>b</name> <init>= <expr><block>{<expr><name><name>a</name><operator>.</operator><name>x</name></name> <operator>+</operator> <literal type="number">8</literal></expr>, <expr><name><name>a</name><operator>.</operator><name>y</name></name> <operator>+</operator> <literal type="number">10</literal></expr>}</block></expr></init></decl>, <decl><type ref="prev"/><name>c</name><init>= <expr><block>{ <expr><name><name>a</name><operator>.</operator><name>x</name></name> <operator>+</operator> <literal type="number">10</literal></expr>, <expr><name><name>a</name><operator>.</operator><name>y</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>msgRect</name><operator>.</operator><name>x</name></name> <operator>&lt;</operator> <literal type="number">10</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>msgRect</name><operator>.</operator><name>x</name></name> <operator>+=</operator> <literal type="number">28</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>msgRect</name><operator>.</operator><name>y</name></name> <operator>&lt;</operator> <literal type="number">10</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>msgRect</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>selectedPos</name><operator>.</operator><name>y</name></name> <operator>+</operator> <literal type="number">84</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>a</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>msgRect</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>a</name><operator>.</operator><name>y</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>a</name><operator>.</operator><name>y</name></name> <operator>-</operator> <literal type="number">10</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><name>Vector2</name></type> <name>tmp</name> <init>= <expr><name>a</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>a</name> <operator>=</operator> <name>b</name></expr>;</expr_stmt>

<expr_stmt><expr><name>b</name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>msgRect</name><operator>.</operator><name>x</name></name> <operator>+</operator> <name><name>msgRect</name><operator>.</operator><name>width</name></name> <operator>&gt;</operator> <name>screenWidth</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>msgRect</name><operator>.</operator><name>x</name></name> <operator>-=</operator> <operator>(</operator><name><name>msgRect</name><operator>.</operator><name>x</name></name> <operator>+</operator> <name><name>msgRect</name><operator>.</operator><name>width</name></name><operator>)</operator> <operator>-</operator> <name>screenWidth</name> <operator>+</operator> <literal type="number">10</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>DrawRectangleRec</name><argument_list>(<argument><expr><name>msgRect</name></expr></argument>, <argument><expr><name><name>emoji</name><index>[<expr><name>selected</name></expr>]</index></name><operator>.</operator><name>color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawTriangle</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name><name>emoji</name><index>[<expr><name>selected</name></expr>]</index></name><operator>.</operator><name>color</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>Rectangle</name></type> <name>textRect</name> <init>= <expr><block>{ <expr><name><name>msgRect</name><operator>.</operator><name>x</name></name> <operator>+</operator> <name>horizontalPadding</name><operator>/</operator><literal type="number">2</literal></expr>, <expr><name><name>msgRect</name><operator>.</operator><name>y</name></name> <operator>+</operator> <name>verticalPadding</name><operator>/</operator><literal type="number">2</literal></expr>, <expr><name><name>msgRect</name><operator>.</operator><name>width</name></name> <operator>-</operator> <name>horizontalPadding</name></expr>, <expr><name><name>msgRect</name><operator>.</operator><name>height</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>DrawTextRec</name><argument_list>(<argument><expr><operator>*</operator><name>font</name></expr></argument>, <argument><expr><name><name>messages</name><index>[<expr><name>message</name></expr>]</index></name><operator>.</operator><name>text</name></expr></argument>, <argument><expr><name>textRect</name></expr></argument>, <argument><expr><name><name>font</name><operator>-&gt;</operator><name>baseSize</name></name></expr></argument>, <argument><expr><literal type="number">1.0f</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>size</name> <init>= <expr><call><name>strlen</name><argument_list>(<argument><expr><name><name>messages</name><index>[<expr><name>message</name></expr>]</index></name><operator>.</operator><name>text</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>len</name> <init>= <expr><call><name>GetCodepointsCount</name><argument_list>(<argument><expr><name><name>messages</name><index>[<expr><name>message</name></expr>]</index></name><operator>.</operator><name>text</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>info</name> <init>= <expr><call><name>TextFormat</name><argument_list>(<argument><expr><literal type="string">"%s %u characters %i bytes"</literal></expr></argument>, <argument><expr><name><name>messages</name><index>[<expr><name>message</name></expr>]</index></name><operator>.</operator><name>language</name></expr></argument>, <argument><expr><name>len</name></expr></argument>, <argument><expr><name>size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>sz</name> <operator>=</operator> <call><name>MeasureTextEx</name><argument_list>(<argument><expr><call><name>GetFontDefault</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>info</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">1.0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>Vector2</name></type> <name>pos</name> <init>= <expr><block>{ <expr><name><name>textRect</name><operator>.</operator><name>x</name></name> <operator>+</operator> <name><name>textRect</name><operator>.</operator><name>width</name></name> <operator>-</operator> <name><name>sz</name><operator>.</operator><name>x</name></name></expr>, <expr><name><name>msgRect</name><operator>.</operator><name>y</name></name> <operator>+</operator> <name><name>msgRect</name><operator>.</operator><name>height</name></name> <operator>-</operator> <name><name>sz</name><operator>.</operator><name>y</name></name> <operator>-</operator> <literal type="number">2</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><name>info</name></expr></argument>, <argument><expr><name><name>pos</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>pos</name><operator>.</operator><name>y</name></name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>RAYWHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"These emojis have something to tell you, click each to find out!"</literal></expr></argument>, <argument><expr><operator>(</operator><name>screenWidth</name> <operator>-</operator> <literal type="number">650</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>screenHeight</name> <operator>-</operator> <literal type="number">40</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"Each emoji is a unicode character from a font, not a texture... Press [SPACEBAR] to refresh"</literal></expr></argument>, <argument><expr><operator>(</operator><name>screenWidth</name> <operator>-</operator> <literal type="number">484</literal><operator>)</operator><operator>/</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>screenHeight</name> <operator>-</operator> <literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>EndDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>UnloadFont</name><argument_list>(<argument><expr><name>fontDefault</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>UnloadFont</name><argument_list>(<argument><expr><name>fontAsian</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>UnloadFont</name><argument_list>(<argument><expr><name>fontEmoji</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>CloseWindow</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>RandomizeEmoji</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name>hovered</name> <operator>=</operator> <name>selected</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>start</name> <init>= <expr><call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">45</literal></expr></argument>, <argument><expr><literal type="number">360</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>SIZEOF</name><argument_list>(<argument><expr><name>emoji</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><name><name>emoji</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>index</name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">179</literal></expr></argument>)</argument_list></call><operator>*</operator><literal type="number">5</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><name>Vector3</name></type> <name>hsv</name> <init>= <expr><block>{<expr><operator>(</operator><name>start</name><operator>*</operator><operator>(</operator><name>i</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator><operator>)</operator><operator>%</operator><literal type="number">360</literal></expr>, <expr><literal type="number">0.6f</literal></expr>, <expr><literal type="number">0.85f</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>emoji</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>color</name> <operator>=</operator> <call><name>Fade</name><argument_list>(<argument><expr><call><name>ColorFromHSV</name><argument_list>(<argument><expr><name>hsv</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0.8f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>emoji</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>message</name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>SIZEOF</name><argument_list>(<argument><expr><name>messages</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></function>

</unit>
