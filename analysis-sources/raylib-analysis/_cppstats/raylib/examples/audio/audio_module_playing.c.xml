<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats\raylib\examples\audio\audio_module_playing.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_CIRCLES</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><name>Vector2</name></type> <name>position</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>radius</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>alpha</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>speed</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Color</name></type> <name>color</name></decl>;</decl_stmt>

}</block></struct></type> <name>CircleWave</name>;</typedef>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenWidth</name> <init>= <expr><literal type="number">800</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenHeight</name> <init>= <expr><literal type="number">450</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SetConfigFlags</name><argument_list>(<argument><expr><name>FLAG_MSAA_4X_HINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>InitWindow</name><argument_list>(<argument><expr><name>screenWidth</name></expr></argument>, <argument><expr><name>screenHeight</name></expr></argument>, <argument><expr><literal type="string">"raylib [audio] example - module playing (streaming)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>InitAudioDevice</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 

<decl_stmt><decl><type><name>Color</name></type> <name><name>colors</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <init>= <expr><block>{ <expr><name>ORANGE</name></expr>, <expr><name>RED</name></expr>, <expr><name>GOLD</name></expr>, <expr><name>LIME</name></expr>, <expr><name>BLUE</name></expr>, <expr><name>VIOLET</name></expr>, <expr><name>BROWN</name></expr>, <expr><name>LIGHTGRAY</name></expr>, <expr><name>PINK</name></expr>,

<expr><name>YELLOW</name></expr>, <expr><name>GREEN</name></expr>, <expr><name>SKYBLUE</name></expr>, <expr><name>PURPLE</name></expr>, <expr><name>BEIGE</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>CircleWave</name></type> <name><name>circles</name><index>[<expr><name>MAX_CIRCLES</name></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>MAX_CIRCLES</name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>alpha</name> <operator>=</operator> <literal type="number">0.0f</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>radius</name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>position</name><operator>.</operator><name>x</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>radius</name></expr></argument>, <argument><expr><name>screenWidth</name> <operator>-</operator> <name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>radius</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>position</name><operator>.</operator><name>y</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>radius</name></expr></argument>, <argument><expr><name>screenHeight</name> <operator>-</operator> <name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>radius</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>speed</name> <operator>=</operator> <operator>(</operator><name>float</name><operator>)</operator><call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call><operator>/</operator><literal type="number">2000.0f</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>color</name> <operator>=</operator> <name><name>colors</name><index>[<expr><call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></for>

<decl_stmt><decl><type><name>Music</name></type> <name>music</name> <init>= <expr><call><name>LoadMusicStream</name><argument_list>(<argument><expr><literal type="string">"resources/mini1111.xm"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>PlayMusicStream</name><argument_list>(<argument><expr><name>music</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>timePlayed</name> <init>= <expr><literal type="number">0.0f</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>pause</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SetTargetFPS</name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<while>while <condition>(<expr><operator>!</operator><call><name>WindowShouldClose</name><argument_list>()</argument_list></call></expr>)</condition> 

<block>{<block_content>

<expr_stmt><expr><call><name>UpdateMusicStream</name><argument_list>(<argument><expr><name>music</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<if_stmt><if>if <condition>(<expr><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_SPACE</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>StopMusicStream</name><argument_list>(<argument><expr><name>music</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PlayMusicStream</name><argument_list>(<argument><expr><name>music</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_P</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>pause</name> <operator>=</operator> <operator>!</operator><name>pause</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pause</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>PauseMusicStream</name><argument_list>(<argument><expr><name>music</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>ResumeMusicStream</name><argument_list>(<argument><expr><name>music</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>timePlayed</name> <operator>=</operator> <call><name>GetMusicTimePlayed</name><argument_list>(<argument><expr><name>music</name></expr></argument>)</argument_list></call><operator>/</operator><call><name>GetMusicTimeLength</name><argument_list>(<argument><expr><name>music</name></expr></argument>)</argument_list></call><operator>*</operator><operator>(</operator><name>screenWidth</name> <operator>-</operator> <literal type="number">40</literal><operator>)</operator></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>MAX_CIRCLES</name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><operator>(</operator><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>!</operator><name>pause</name></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>alpha</name> <operator>+=</operator> <name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>speed</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>radius</name> <operator>+=</operator> <name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>speed</name><operator>*</operator><literal type="number">10.0f</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>alpha</name> <operator>&gt;</operator> <literal type="number">1.0f</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>speed</name> <operator>*=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>alpha</name> <operator>&lt;=</operator> <literal type="number">0.0f</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>alpha</name> <operator>=</operator> <literal type="number">0.0f</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>radius</name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>position</name><operator>.</operator><name>x</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>radius</name></expr></argument>, <argument><expr><name>screenWidth</name> <operator>-</operator> <name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>radius</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name><name>position</name><operator>.</operator><name>y</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>radius</name></expr></argument>, <argument><expr><name>screenHeight</name> <operator>-</operator> <name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>radius</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>color</name> <operator>=</operator> <name><name>colors</name><index>[<expr><call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>speed</name> <operator>=</operator> <operator>(</operator><name>float</name><operator>)</operator><call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call><operator>/</operator><literal type="number">2000.0f</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>BeginDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ClearBackground</name><argument_list>(<argument><expr><name>RAYWHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>MAX_CIRCLES</name> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><call><name>DrawCircleV</name><argument_list>(<argument><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>position</name></expr></argument>, <argument><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>radius</name></expr></argument>, <argument><expr><call><name>Fade</name><argument_list>(<argument><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>color</name></expr></argument>, <argument><expr><name><name>circles</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>alpha</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>screenHeight</name> <operator>-</operator> <literal type="number">20</literal> <operator>-</operator> <literal type="number">12</literal></expr></argument>, <argument><expr><name>screenWidth</name> <operator>-</operator> <literal type="number">40</literal></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>LIGHTGRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>screenHeight</name> <operator>-</operator> <literal type="number">20</literal> <operator>-</operator> <literal type="number">12</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name>timePlayed</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>MAROON</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawRectangleLines</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>screenHeight</name> <operator>-</operator> <literal type="number">20</literal> <operator>-</operator> <literal type="number">12</literal></expr></argument>, <argument><expr><name>screenWidth</name> <operator>-</operator> <literal type="number">40</literal></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>EndDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>UnloadMusicStream</name><argument_list>(<argument><expr><name>music</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>CloseAudioDevice</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>CloseWindow</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function></unit>
