<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats\raylib\examples\textures\textures_rectangle.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_FRAME_SPEED</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIN_FRAME_SPEED</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenWidth</name> <init>= <expr><literal type="number">800</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenHeight</name> <init>= <expr><literal type="number">450</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>InitWindow</name><argument_list>(<argument><expr><name>screenWidth</name></expr></argument>, <argument><expr><name>screenHeight</name></expr></argument>, <argument><expr><literal type="string">"raylib [texture] example - texture rectangle"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>Texture2D</name></type> <name>scarfy</name> <init>= <expr><call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/scarfy.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>Vector2</name></type> <name>position</name> <init>= <expr><block>{ <expr><literal type="number">350.0f</literal></expr>, <expr><literal type="number">280.0f</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Rectangle</name></type> <name>frameRec</name> <init>= <expr><block>{ <expr><literal type="number">0.0f</literal></expr>, <expr><literal type="number">0.0f</literal></expr>, <expr><operator>(</operator><name>float</name><operator>)</operator><name><name>scarfy</name><operator>.</operator><name>width</name></name><operator>/</operator><literal type="number">6</literal></expr>, <expr><operator>(</operator><name>float</name><operator>)</operator><name><name>scarfy</name><operator>.</operator><name>height</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>currentFrame</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>framesCounter</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>framesSpeed</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>;</decl_stmt> 

<expr_stmt><expr><call><name>SetTargetFPS</name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<while>while <condition>(<expr><operator>!</operator><call><name>WindowShouldClose</name><argument_list>()</argument_list></call></expr>)</condition> 

<block>{<block_content>

<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>framesCounter</name> <operator>&gt;=</operator> <operator>(</operator><literal type="number">60</literal><operator>/</operator><name>framesSpeed</name><operator>)</operator></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>currentFrame</name><operator>++</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>currentFrame</name> <operator>&gt;</operator> <literal type="number">5</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>currentFrame</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>frameRec</name><operator>.</operator><name>x</name></name> <operator>=</operator> <operator>(</operator><name>float</name><operator>)</operator><name>currentFrame</name><operator>*</operator><operator>(</operator><name>float</name><operator>)</operator><name><name>scarfy</name><operator>.</operator><name>width</name></name><operator>/</operator><literal type="number">6</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_RIGHT</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>framesSpeed</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_LEFT</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>framesSpeed</name><operator>--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>framesSpeed</name> <operator>&gt;</operator> <name>MAX_FRAME_SPEED</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>framesSpeed</name> <operator>=</operator> <name>MAX_FRAME_SPEED</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>framesSpeed</name> <operator>&lt;</operator> <name>MIN_FRAME_SPEED</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>framesSpeed</name> <operator>=</operator> <name>MIN_FRAME_SPEED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>BeginDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ClearBackground</name><argument_list>(<argument><expr><name>RAYWHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>scarfy</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawRectangleLines</name><argument_list>(<argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><name><name>scarfy</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>scarfy</name><operator>.</operator><name>height</name></name></expr></argument>, <argument><expr><name>LIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawRectangleLines</name><argument_list>(<argument><expr><literal type="number">15</literal> <operator>+</operator> <name><name>frameRec</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><literal type="number">40</literal> <operator>+</operator> <name><name>frameRec</name><operator>.</operator><name>y</name></name></expr></argument>, <argument><expr><name><name>frameRec</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>frameRec</name><operator>.</operator><name>height</name></name></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"FRAME SPEED: "</literal></expr></argument>, <argument><expr><literal type="number">165</literal></expr></argument>, <argument><expr><literal type="number">210</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>DARKGRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><call><name>FormatText</name><argument_list>(<argument><expr><literal type="string">"%02i FPS"</literal></expr></argument>, <argument><expr><name>framesSpeed</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">575</literal></expr></argument>, <argument><expr><literal type="number">210</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>DARKGRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"PRESS RIGHT/LEFT KEYS to CHANGE SPEED!"</literal></expr></argument>, <argument><expr><literal type="number">290</literal></expr></argument>, <argument><expr><literal type="number">240</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>DARKGRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_FRAME_SPEED</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>i</name> <operator>&lt;</operator> <name>framesSpeed</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><literal type="number">250</literal> <operator>+</operator> <literal type="number">21</literal><operator>*</operator><name>i</name></expr></argument>, <argument><expr><literal type="number">205</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>DrawRectangleLines</name><argument_list>(<argument><expr><literal type="number">250</literal> <operator>+</operator> <literal type="number">21</literal><operator>*</operator><name>i</name></expr></argument>, <argument><expr><literal type="number">205</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>MAROON</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>DrawTextureRec</name><argument_list>(<argument><expr><name>scarfy</name></expr></argument>, <argument><expr><name>frameRec</name></expr></argument>, <argument><expr><name>position</name></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"(c) Scarfy sprite by Eiden Marsal"</literal></expr></argument>, <argument><expr><name>screenWidth</name> <operator>-</operator> <literal type="number">200</literal></expr></argument>, <argument><expr><name>screenHeight</name> <operator>-</operator> <literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>EndDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>scarfy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>CloseWindow</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function></unit>
