<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats\raylib\games\skully_escape\player.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"player.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAYER_ANIM_FRAMES</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAYER_ANIM_SEQ</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>movingAnim</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>moveDirection</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>nextMovePoint</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Vector2</name></type> <name>pointerPosition</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>pointerAnim</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>float</name></type> <name>pointerAlpha</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>framesCounter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>outControl</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>animTimer</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Texture2D</name></type> <name>texLife</name></decl>;</decl_stmt>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>DrawLifes</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>void</name></type> <name>InitPlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>texture</name></name> <operator>=</operator> <call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/textures/skully.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>position</name></name> <operator>=</operator> <operator>(</operator><name>Vector2</name><operator>)</operator><block>{ <expr><literal type="number">350</literal></expr>, <expr><literal type="number">400</literal></expr> }</block></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>numLifes</name></name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ResetPlayer</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>texLife</name> <operator>=</operator> <call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/textures/skully_icon.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>UpdatePlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>outControl</name></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><call><name>IsKeyDown</name><argument_list>(<argument><expr><name>KEY_LEFT</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>||</operator> <operator>(</operator><call><name>IsKeyDown</name><argument_list>(<argument><expr><name>KEY_RIGHT</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>moveDirection</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>movingAnim</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><call><name>IsKeyDown</name><argument_list>(<argument><expr><name>KEY_RIGHT</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>||</operator> <operator>(</operator><name>moveDirection</name> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentSeq</name></name> <operator>=</operator> <name>WALK_RIGHT</name></expr>;</expr_stmt>

<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>framesCounter</name> <operator>&gt;</operator> <literal type="number">15</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name> <operator>&gt;</operator> <name>PLAYER_ANIM_FRAMES</name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>+=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<if type="elseif">else if <condition>(<expr><operator>(</operator><call><name>IsKeyDown</name><argument_list>(<argument><expr><name>KEY_LEFT</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>||</operator> <operator>(</operator><name>moveDirection</name> <operator>==</operator> <literal type="number">1</literal><operator>)</operator></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentSeq</name></name> <operator>=</operator> <name>WALK_LEFT</name></expr>;</expr_stmt>

<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>framesCounter</name> <operator>&gt;</operator> <literal type="number">15</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name> <operator>&gt;</operator> <name>PLAYER_ANIM_FRAMES</name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>-=</operator> <literal type="number">4</literal></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>animTimer</name><operator>++</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>framesCounter</name> <operator>&gt;</operator> <literal type="number">10</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name> <operator>&gt;</operator> <name>PLAYER_ANIM_FRAMES</name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<switch>switch <condition>(<expr><name><name>player</name><operator>.</operator><name>currentSeq</name></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>SCARE_RIGHT</name></expr>:</case>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>animTimer</name> <operator>&gt;</operator> <literal type="number">180</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>animTimer</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>outControl</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentSeq</name></name> <operator>=</operator> <name>WALK_LEFT</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block> <break>break;</break>

<case>case <expr><name>SCARE_LEFT</name></expr>:</case>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>animTimer</name> <operator>&gt;</operator> <literal type="number">240</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>animTimer</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>outControl</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentSeq</name></name> <operator>=</operator> <name>WALK_RIGHT</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block> <break>break;</break>

<case>case <expr><name>SEARCH</name></expr>:</case>

<case>case <expr><name>FIND_KEY</name></expr>:</case>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>animTimer</name> <operator>&gt;</operator> <literal type="number">240</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>animTimer</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>outControl</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentSeq</name></name> <operator>=</operator> <name>WALK_RIGHT</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block> <break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if></if_stmt>

</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>&lt;</operator> <literal type="number">30</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>=</operator> <literal type="number">30</literal></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>&gt;</operator> <operator>(</operator><call><name>GetScreenWidth</name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">200</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>=</operator> <call><name>GetScreenWidth</name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">200</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>IsMouseButtonPressed</name><argument_list>(<argument><expr><name>MOUSE_LEFT_BUTTON</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content> 

<expr_stmt><expr><name>pointerPosition</name> <operator>=</operator> <call><name>GetMousePosition</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>pointerAnim</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><name>pointerAlpha</name> <operator>=</operator> <literal type="number">1.0f</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>nextMovePoint</name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><name><name>pointerPosition</name><operator>.</operator><name>x</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>movingAnim</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>movingAnim</name></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>nextMovePoint</name> <operator>&gt;</operator> <operator>(</operator><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>+</operator> <operator>(</operator><name><name>player</name><operator>.</operator><name>frameRec</name><operator>.</operator><name>width</name></name><operator>/</operator><literal type="number">2</literal><operator>)</operator> <operator>+</operator> <literal type="number">5</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>moveDirection</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if> 

<if type="elseif">else if <condition>(<expr><name>nextMovePoint</name> <operator>&lt;</operator> <operator>(</operator><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>+</operator> <operator>(</operator><name><name>player</name><operator>.</operator><name>frameRec</name><operator>.</operator><name>width</name></name><operator>/</operator><literal type="number">2</literal><operator>)</operator> <operator>-</operator> <literal type="number">5</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>moveDirection</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if> 

<else>else 

<block>{<block_content>

<expr_stmt><expr><name>moveDirection</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>movingAnim</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>frameRec</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>player</name><operator>.</operator><name>currentFrame</name></name><operator>*</operator><name><name>player</name><operator>.</operator><name>texture</name><operator>.</operator><name>width</name></name><operator>/</operator><name>PLAYER_ANIM_FRAMES</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>frameRec</name><operator>.</operator><name>y</name></name> <operator>=</operator> <operator>(</operator><name><name>player</name><operator>.</operator><name>currentSeq</name></name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator><operator>*</operator><name><name>player</name><operator>.</operator><name>texture</name><operator>.</operator><name>height</name></name><operator>/</operator><name>PLAYER_ANIM_SEQ</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>bounds</name></name> <operator>=</operator> <operator>(</operator><name>Rectangle</name><operator>)</operator><block>{ <expr><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>+</operator> <literal type="number">50</literal></expr>, <expr><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>y</name></name> <operator>-</operator> <literal type="number">60</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">300</literal></expr> }</block></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pointerAnim</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>pointerAlpha</name> <operator>-=</operator> <literal type="number">0.1f</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pointerAlpha</name> <operator>&lt;=</operator> <literal type="number">0.0f</literal></expr>)</condition> 

<block>{<block_content>

<expr_stmt><expr><name>pointerAlpha</name> <operator>=</operator> <literal type="number">0.0f</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>pointerAnim</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>DrawPlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>DrawTextureRec</name><argument_list>(<argument><expr><name><name>player</name><operator>.</operator><name>texture</name></name></expr></argument>, <argument><expr><name><name>player</name><operator>.</operator><name>frameRec</name></name></expr></argument>, <argument><expr><name><name>player</name><operator>.</operator><name>position</name></name></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pointerAnim</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawCircleV</name><argument_list>(<argument><expr><name>pointerPosition</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><call><name>Fade</name><argument_list>(<argument><expr><name>RED</name></expr></argument>, <argument><expr><name>pointerAlpha</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>DrawLifes</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>UnloadPlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name><name>player</name><operator>.</operator><name>texture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>texLife</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ResetPlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content> 

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>frameRec</name></name> <operator>=</operator> <operator>(</operator><name>Rectangle</name><operator>)</operator><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name><name>player</name><operator>.</operator><name>texture</name><operator>.</operator><name>width</name></name><operator>/</operator><name>PLAYER_ANIM_FRAMES</name></expr>, <expr><name><name>player</name><operator>.</operator><name>texture</name><operator>.</operator><name>height</name></name><operator>/</operator><name>PLAYER_ANIM_SEQ</name></expr> }</block></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentSeq</name></name> <operator>=</operator> <name>WALK_RIGHT</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>key</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>dead</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>&lt;</operator> <literal type="number">400</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>=</operator> <call><name>GetScreenWidth</name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">350</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>&gt;</operator> <operator>(</operator><call><name>GetScreenWidth</name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">400</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>player</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>=</operator> <literal type="number">350</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>movingAnim</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name>moveDirection</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>nextMovePoint</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>outControl</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name>animTimer</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>pointerAlpha</name> <operator>=</operator> <literal type="number">0.0f</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>pointerAnim</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>ScarePlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>moveDirection</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentSeq</name></name> <operator>=</operator> <name>SCARE_RIGHT</name></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>moveDirection</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentSeq</name></name> <operator>=</operator> <name>SCARE_LEFT</name></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentSeq</name></name> <operator>=</operator> <name>SCARE_RIGHT</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>numLifes</name></name><operator>--</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>numLifes</name></name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>player</name><operator>.</operator><name>dead</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>outControl</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>SearchKeyPlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name>moveDirection</name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>movingAnim</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentSeq</name></name> <operator>=</operator> <name>SEARCH</name></expr>;</expr_stmt>

<expr_stmt><expr><name>outControl</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>FindKeyPlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentFrame</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>currentSeq</name></name> <operator>=</operator> <name>FIND_KEY</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>player</name><operator>.</operator><name>key</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><name>outControl</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>DrawLifes</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>numLifes</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>

<block>{<block_content>

<decl_stmt><decl><type><name>Vector2</name></type> <name>position</name> <init>= <expr><block>{ <expr><literal type="number">20</literal></expr>, <expr><call><name>GetScreenHeight</name><argument_list>()</argument_list></call> <operator>-</operator> <name><name>texLife</name><operator>.</operator><name>height</name></name> <operator>-</operator> <literal type="number">20</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>player</name><operator>.</operator><name>numLifes</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>texLife</name></expr></argument>, <argument><expr><name><name>position</name><operator>.</operator><name>x</name></name> <operator>+</operator> <name>i</name><operator>*</operator><name><name>texLife</name><operator>.</operator><name>width</name></name></expr></argument>, <argument><expr><name><name>position</name><operator>.</operator><name>y</name></name></expr></argument>, <argument><expr><call><name>Fade</name><argument_list>(<argument><expr><name>RAYWHITE</name></expr></argument>, <argument><expr><literal type="number">0.7f</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function></unit>
