<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats\raylib\games\drturtle\03_drturtle_enemies.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_ENEMIES</name></cpp:macro> <cpp:value>10</cpp:value></cpp:define>

<typedef>typedef <type><enum>enum <block>{ <decl><name>TITLE</name></decl>, <decl><name>GAMEPLAY</name></decl>, <decl><name>ENDING</name></decl> }</block></enum></type> <name>GameScreen</name>;</typedef>

<function><type><name>int</name></type> <name>main</name><parameter_list>()</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenWidth</name> <init>= <expr><literal type="number">1280</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenHeight</name> <init>= <expr><literal type="number">720</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>InitWindow</name><argument_list>(<argument><expr><name>screenWidth</name></expr></argument>, <argument><expr><name>screenHeight</name></expr></argument>, <argument><expr><literal type="string">"Dr. Turtle &amp; Mr. GAMERA"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<decl_stmt><decl><type><name>Texture2D</name></type> <name>sky</name> <init>= <expr><call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/sky.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Texture2D</name></type> <name>mountains</name> <init>= <expr><call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/mountains.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Texture2D</name></type> <name>sea</name> <init>= <expr><call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/sea.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Texture2D</name></type> <name>title</name> <init>= <expr><call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/title.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Texture2D</name></type> <name>turtle</name> <init>= <expr><call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/turtle.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Texture2D</name></type> <name>gamera</name> <init>= <expr><call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/gamera.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Texture2D</name></type> <name>shark</name> <init>= <expr><call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/shark.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Texture2D</name></type> <name>orca</name> <init>= <expr><call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/orca.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Texture2D</name></type> <name>swhale</name> <init>= <expr><call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/swhale.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Texture2D</name></type> <name>fish</name> <init>= <expr><call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/fish.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>backScrolling</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>seaScrolling</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>GameScreen</name></type> <name>currentScreen</name> <init>= <expr><name>TITLE</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>playerRail</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Rectangle</name></type> <name>playerBounds</name> <init>= <expr><block>{ <expr><literal type="number">30</literal> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><name>playerRail</name><operator>*</operator><literal type="number">120</literal> <operator>+</operator> <literal type="number">90</literal> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">100</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>gameraMode</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Rectangle</name></type> <name><name>enemyBounds</name><index>[<expr><name>MAX_ENEMIES</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>enemyRail</name><index>[<expr><name>MAX_ENEMIES</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name><name>enemyType</name><index>[<expr><name>MAX_ENEMIES</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name><name>enemyActive</name><index>[<expr><name>MAX_ENEMIES</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>float</name></type> <name>enemySpeed</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_ENEMIES</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<expr_stmt><expr><name><name>enemyType</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyRail</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyBounds</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>Rectangle</name><operator>)</operator><block>{ <expr><name>screenWidth</name> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><literal type="number">120</literal><operator>*</operator><name><name>enemyRail</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <literal type="number">90</literal> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">100</literal></expr> }</block></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyActive</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></for>

<decl_stmt><decl><type><name>int</name></type> <name>foodBar</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>framesCounter</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SetTargetFPS</name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<while>while <condition>(<expr><operator>!</operator><call><name>WindowShouldClose</name><argument_list>()</argument_list></call></expr>)</condition> 

<block>{<block_content>

<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name>currentScreen</name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>TITLE</name></expr>:</case>

<block>{<block_content>

<expr_stmt><expr><name>seaScrolling</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>seaScrolling</name> <operator>&lt;=</operator> <operator>-</operator><name>screenWidth</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>seaScrolling</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> 

<if_stmt><if>if <condition>(<expr><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_ENTER</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>currentScreen</name> <operator>=</operator> <name>GAMEPLAY</name></expr>;</expr_stmt>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block> <break>break;</break>

<case>case <expr><name>GAMEPLAY</name></expr>:</case>

<block>{<block_content>

<expr_stmt><expr><name>backScrolling</name><operator>--</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>backScrolling</name> <operator>&lt;=</operator> <operator>-</operator><name>screenWidth</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>backScrolling</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> 

<expr_stmt><expr><name>seaScrolling</name> <operator>-=</operator> <operator>(</operator><name>enemySpeed</name> <operator>-</operator> <literal type="number">2</literal><operator>)</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>seaScrolling</name> <operator>&lt;=</operator> <operator>-</operator><name>screenWidth</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>seaScrolling</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> 

<if_stmt><if>if <condition>(<expr><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_DOWN</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>playerRail</name><operator>++</operator></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_UP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>playerRail</name><operator>--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>playerRail</name> <operator>&gt;</operator> <literal type="number">4</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>playerRail</name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><name>playerRail</name> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>playerRail</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><name>playerBounds</name> <operator>=</operator> <operator>(</operator><name>Rectangle</name><operator>)</operator><block>{ <expr><literal type="number">30</literal> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><name>playerRail</name><operator>*</operator><literal type="number">120</literal> <operator>+</operator> <literal type="number">90</literal> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">100</literal></expr> }</block></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>framesCounter</name> <operator>&gt;</operator> <literal type="number">40</literal></expr>)</condition>

<block>{<block_content>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_ENEMIES</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>enemyActive</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <name>false</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>enemyActive</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><name>i</name> <operator>=</operator> <name>MAX_ENEMIES</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_ENEMIES</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>enemyActive</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>enemyBounds</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>-=</operator> <name>enemySpeed</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>enemyBounds</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>-</operator> <literal type="number">128</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name><name>enemyType</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyRail</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><name><name>enemyBounds</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>Rectangle</name><operator>)</operator><block>{ <expr><name>screenWidth</name> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><literal type="number">120</literal><operator>*</operator><name><name>enemyRail</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <literal type="number">90</literal> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">100</literal></expr> }</block></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyActive</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>gameraMode</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>enemySpeed</name> <operator>+=</operator> <literal type="number">0.005</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_ENEMIES</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>enemyActive</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>CheckCollisionRecs</name><argument_list>(<argument><expr><name>playerBounds</name></expr></argument>, <argument><expr><name><name>enemyBounds</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content> 

<if_stmt><if>if <condition>(<expr><name><name>enemyType</name><index>[<expr><name>i</name></expr>]</index></name> <operator>&lt;</operator> <literal type="number">3</literal></expr>)</condition> 

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>gameraMode</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>foodBar</name> <operator>+=</operator> <literal type="number">15</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyType</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyRail</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyBounds</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>Rectangle</name><operator>)</operator><block>{ <expr><name>screenWidth</name> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><literal type="number">120</literal><operator>*</operator><name><name>enemyRail</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <literal type="number">90</literal> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">100</literal></expr> }</block></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyActive</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><name>currentScreen</name> <operator>=</operator> <name>ENDING</name></expr>;</expr_stmt>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if>

<else>else 

<block>{<block_content>

<expr_stmt><expr><name><name>enemyActive</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyType</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyRail</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyBounds</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>Rectangle</name><operator>)</operator><block>{ <expr><name>screenWidth</name> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><literal type="number">120</literal><operator>*</operator><name><name>enemyRail</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <literal type="number">90</literal> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">100</literal></expr> }</block></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>gameraMode</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>foodBar</name> <operator>+=</operator> <literal type="number">80</literal></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name>foodBar</name> <operator>+=</operator> <literal type="number">25</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>foodBar</name> <operator>==</operator> <literal type="number">400</literal></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>gameraMode</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name>gameraMode</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>foodBar</name><operator>--</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>foodBar</name> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition> 

<block>{<block_content>

<expr_stmt><expr><name>gameraMode</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name>enemySpeed</name> <operator>-=</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>enemySpeed</name> <operator>&lt;</operator> <literal type="number">10</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>enemySpeed</name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block> <break>break;</break>

<case>case <expr><name>ENDING</name></expr>:</case>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_ENTER</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><name>currentScreen</name> <operator>=</operator> <name>GAMEPLAY</name></expr>;</expr_stmt>

<expr_stmt><expr><name>playerRail</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>playerBounds</name> <operator>=</operator> <operator>(</operator><name>Rectangle</name><operator>)</operator><block>{ <expr><literal type="number">30</literal> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><name>playerRail</name><operator>*</operator><literal type="number">120</literal> <operator>+</operator> <literal type="number">90</literal> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">100</literal></expr> }</block></expr>;</expr_stmt>

<expr_stmt><expr><name>gameraMode</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_ENEMIES</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content> 

<expr_stmt><expr><name><name>enemyType</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyRail</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyBounds</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>Rectangle</name><operator>)</operator><block>{ <expr><name>screenWidth</name> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><literal type="number">120</literal><operator>*</operator><name><name>enemyRail</name><index>[<expr><name>i</name></expr>]</index></name> <operator>+</operator> <literal type="number">90</literal> <operator>+</operator> <literal type="number">14</literal></expr>, <expr><literal type="number">100</literal></expr>, <expr><literal type="number">100</literal></expr> }</block></expr>;</expr_stmt>

<expr_stmt><expr><name><name>enemyActive</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>enemySpeed</name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>foodBar</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block> <break>break;</break>

<default>default:</default> <break>break;</break>

</block_content>}</block></switch>

<expr_stmt><expr><call><name>BeginDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ClearBackground</name><argument_list>(<argument><expr><name>RAYWHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>sky</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>mountains</name></expr></argument>, <argument><expr><name>backScrolling</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>mountains</name></expr></argument>, <argument><expr><name>screenWidth</name> <operator>+</operator> <name>backScrolling</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>gameraMode</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>sea</name></expr></argument>, <argument><expr><name>seaScrolling</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>BLUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>sea</name></expr></argument>, <argument><expr><name>screenWidth</name> <operator>+</operator> <name>seaScrolling</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>BLUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if>

<else>else

<block>{<block_content>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>sea</name></expr></argument>, <argument><expr><name>seaScrolling</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>sea</name></expr></argument>, <argument><expr><name>screenWidth</name> <operator>+</operator> <name>seaScrolling</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></else></if_stmt>

<switch>switch <condition>(<expr><name>currentScreen</name></expr>)</condition>

<block>{<block_content>

<case>case <expr><name>TITLE</name></expr>:</case>

<block>{<block_content>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>title</name></expr></argument>, <argument><expr><name>screenWidth</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <name><name>title</name><operator>.</operator><name>width</name></name><operator>/</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>screenHeight</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <name><name>title</name><operator>.</operator><name>height</name></name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>framesCounter</name><operator>/</operator><literal type="number">30</literal><operator>)</operator> <operator>%</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"PRESS ENTER"</literal></expr></argument>, <argument><expr><literal type="number">480</literal></expr></argument>, <argument><expr><literal type="number">480</literal></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><name>BLACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block> <break>break;</break>

<case>case <expr><name>GAMEPLAY</name></expr>:</case>

<block>{<block_content>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">5</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>i</name><operator>*</operator><literal type="number">120</literal> <operator>+</operator> <literal type="number">120</literal></expr></argument>, <argument><expr><name>screenWidth</name></expr></argument>, <argument><expr><literal type="number">110</literal></expr></argument>, <argument><expr><call><name>Fade</name><argument_list>(<argument><expr><name>SKYBLUE</name></expr></argument>, <argument><expr><literal type="number">0.1f</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>gameraMode</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>turtle</name></expr></argument>, <argument><expr><name><name>playerBounds</name><operator>.</operator><name>x</name></name> <operator>-</operator> <literal type="number">14</literal></expr></argument>, <argument><expr><name><name>playerBounds</name><operator>.</operator><name>y</name></name> <operator>-</operator> <literal type="number">14</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>gamera</name></expr></argument>, <argument><expr><name><name>playerBounds</name><operator>.</operator><name>x</name></name> <operator>-</operator> <literal type="number">64</literal></expr></argument>, <argument><expr><name><name>playerBounds</name><operator>.</operator><name>y</name></name> <operator>-</operator> <literal type="number">64</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_ENEMIES</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>

<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>enemyActive</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition> 

<block>{<block_content>

<switch>switch<condition>(<expr><name><name>enemyType</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition>

<block>{<block_content>

<case>case <expr><literal type="number">0</literal></expr>:</case> <expr_stmt><expr><call><name>DrawRectangleRec</name><argument_list>(<argument><expr><name><name>enemyBounds</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">1</literal></expr>:</case> <expr_stmt><expr><call><name>DrawRectangleRec</name><argument_list>(<argument><expr><name><name>enemyBounds</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">2</literal></expr>:</case> <expr_stmt><expr><call><name>DrawRectangleRec</name><argument_list>(<argument><expr><name><name>enemyBounds</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>

<case>case <expr><literal type="number">3</literal></expr>:</case> <expr_stmt><expr><call><name>DrawRectangleRec</name><argument_list>(<argument><expr><name><name>enemyBounds</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>GREEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>

<default>default:</default> <break>break;</break>

</block_content>}</block></switch>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><call><name>Fade</name><argument_list>(<argument><expr><name>GRAY</name></expr></argument>, <argument><expr><literal type="number">0.4f</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>foodBar</name></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><name>ORANGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawRectangleLines</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><name>BLACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>gameraMode</name></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"GAMERA MODE"</literal></expr></argument>, <argument><expr><literal type="number">60</literal></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block> <break>break;</break>

<case>case <expr><name>ENDING</name></expr>:</case>

<block>{<block_content>

<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>screenWidth</name></expr></argument>, <argument><expr><name>screenHeight</name></expr></argument>, <argument><expr><call><name>Fade</name><argument_list>(<argument><expr><name>BLACK</name></expr></argument>, <argument><expr><literal type="number">0.4f</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"GAME OVER"</literal></expr></argument>, <argument><expr><literal type="number">300</literal></expr></argument>, <argument><expr><literal type="number">200</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>, <argument><expr><name>MAROON</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>framesCounter</name><operator>/</operator><literal type="number">30</literal><operator>)</operator> <operator>%</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"PRESS ENTER to REPLAY"</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><literal type="number">420</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><name>LIGHTGRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block> <break>break;</break>

<default>default:</default> <break>break;</break>

</block_content>}</block></switch>

<expr_stmt><expr><call><name>EndDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>sky</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>mountains</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>sea</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>title</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>turtle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>gamera</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>shark</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>orca</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>swhale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>fish</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>CloseWindow</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function></unit>
