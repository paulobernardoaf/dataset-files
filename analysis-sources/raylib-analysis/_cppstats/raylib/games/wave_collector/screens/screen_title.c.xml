<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats\raylib\games\wave_collector\screens\screen_title.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"screens.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>framesCounter</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>finishScreen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Texture2D</name></type> <name>texBackground</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Texture2D</name></type> <name>texTitle</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Texture2D</name></type> <name>texLogo</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>float</name></type> <name>titleAlpha</name> <init>= <expr><literal type="number">0.0f</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Sound</name></type> <name>fxStart</name></decl>;</decl_stmt>

<function><type><name>void</name></type> <name>InitTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>finishScreen</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>texBackground</name> <operator>=</operator> <call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/textures/background_title.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>texTitle</name> <operator>=</operator> <call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/textures/title.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>texLogo</name> <operator>=</operator> <call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/textures/logo_raylib.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>fxStart</name> <operator>=</operator> <call><name>LoadSound</name><argument_list>(<argument><expr><literal type="string">"resources/audio/start.wav"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>UpdateTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>titleAlpha</name> <operator>+=</operator> <literal type="number">0.005f</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>titleAlpha</name> <operator>&gt;=</operator> <literal type="number">1.0f</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>titleAlpha</name> <operator>=</operator> <literal type="number">1.0f</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>IsMouseButtonPressed</name><argument_list>(<argument><expr><name>MOUSE_LEFT_BUTTON</name></expr></argument>)</argument_list></call></expr>)</condition>

<block>{<block_content>

<expr_stmt><expr><call><name>PlaySound</name><argument_list>(<argument><expr><name>fxStart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>StopMusicStream</name><argument_list>(<argument><expr><name>music</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>finishScreen</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>DrawTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>texBackground</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>texTitle</name></expr></argument>, <argument><expr><call><name>GetScreenWidth</name><argument_list>()</argument_list></call><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <name><name>texTitle</name><operator>.</operator><name>width</name></name><operator>/</operator><literal type="number">2</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">25</literal></expr></argument>, <argument><expr><call><name>Fade</name><argument_list>(<argument><expr><name>WHITE</name></expr></argument>, <argument><expr><name>titleAlpha</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>GetScreenHeight</name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">70</literal></expr></argument>, <argument><expr><literal type="number">560</literal></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><call><name>Fade</name><argument_list>(<argument><expr><name>RAYWHITE</name></expr></argument>, <argument><expr><literal type="number">0.8f</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"(c) Developed by Ramon Santamaria (@raysan5)"</literal></expr></argument>, <argument><expr><literal type="number">36</literal></expr></argument>, <argument><expr><call><name>GetScreenHeight</name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">60</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>DARKBLUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"powered by"</literal></expr></argument>, <argument><expr><call><name>GetScreenWidth</name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">162</literal></expr></argument>, <argument><expr><call><name>GetScreenHeight</name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">190</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>DARKGRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>texLogo</name></expr></argument>, <argument><expr><call><name>GetScreenWidth</name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">128</literal> <operator>-</operator> <literal type="number">34</literal></expr></argument>, <argument><expr><call><name>GetScreenHeight</name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">128</literal> <operator>-</operator> <literal type="number">36</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>framesCounter</name> <operator>&gt;</operator> <literal type="number">160</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name>framesCounter</name><operator>/</operator><literal type="number">40</literal><operator>)</operator><operator>%</operator><literal type="number">2</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"mouse click to start"</literal></argument>, <argument>(Vector2){ <literal type="number">325</literal></argument>, <argument><literal type="number">500</literal> }</argument>, <argument>font.baseSize</argument>, <argument><literal type="number">0</literal></argument>, <argument>SKYBLUE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type> <name>UnloadTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>texBackground</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>texTitle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>texLogo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>UnloadSound</name><argument_list>(<argument><expr><name>fxStart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>FinishTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<return>return <expr><name>finishScreen</name></expr>;</return>

</block_content>}</block></function></unit>
