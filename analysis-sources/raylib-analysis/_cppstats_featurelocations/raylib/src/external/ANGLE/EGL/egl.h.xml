<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\src\external\ANGLE\EGL\egl.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__egl_h_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__egl_h_</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
































<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;EGL/eglplatform.h&gt;</cpp:file></cpp:include>












<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>EGL_VERSION_1_0</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VERSION_1_0</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<typedef>typedef <type><name>unsigned</name> <name>int</name></type> <name>EGLBoolean</name>;</typedef>
<typedef>typedef <type><name>void</name> <modifier>*</modifier></type><name>EGLDisplay</name>;</typedef>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;KHR/khrplatform.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;EGL/eglplatform.h&gt;</cpp:file></cpp:include>
<typedef>typedef <type><name>void</name> <modifier>*</modifier></type><name>EGLConfig</name>;</typedef>
<typedef>typedef <type><name>void</name> <modifier>*</modifier></type><name>EGLSurface</name>;</typedef>
<typedef>typedef <type><name>void</name> <modifier>*</modifier></type><name>EGLContext</name>;</typedef>
<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>__eglMustCastToProperFunctionPointerType</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_ALPHA_SIZE</name></cpp:macro> <cpp:value>0x3021</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BAD_ACCESS</name></cpp:macro> <cpp:value>0x3002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BAD_ALLOC</name></cpp:macro> <cpp:value>0x3003</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BAD_ATTRIBUTE</name></cpp:macro> <cpp:value>0x3004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BAD_CONFIG</name></cpp:macro> <cpp:value>0x3005</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BAD_CONTEXT</name></cpp:macro> <cpp:value>0x3006</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BAD_CURRENT_SURFACE</name></cpp:macro> <cpp:value>0x3007</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BAD_DISPLAY</name></cpp:macro> <cpp:value>0x3008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BAD_MATCH</name></cpp:macro> <cpp:value>0x3009</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BAD_NATIVE_PIXMAP</name></cpp:macro> <cpp:value>0x300A</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BAD_NATIVE_WINDOW</name></cpp:macro> <cpp:value>0x300B</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BAD_PARAMETER</name></cpp:macro> <cpp:value>0x300C</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BAD_SURFACE</name></cpp:macro> <cpp:value>0x300D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BLUE_SIZE</name></cpp:macro> <cpp:value>0x3022</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BUFFER_SIZE</name></cpp:macro> <cpp:value>0x3020</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONFIG_CAVEAT</name></cpp:macro> <cpp:value>0x3027</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONFIG_ID</name></cpp:macro> <cpp:value>0x3028</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CORE_NATIVE_ENGINE</name></cpp:macro> <cpp:value>0x305B</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_DEPTH_SIZE</name></cpp:macro> <cpp:value>0x3025</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_DONT_CARE</name></cpp:macro> <cpp:value>((EGLint)-1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_DRAW</name></cpp:macro> <cpp:value>0x3059</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_EXTENSIONS</name></cpp:macro> <cpp:value>0x3055</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_FALSE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GREEN_SIZE</name></cpp:macro> <cpp:value>0x3023</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_HEIGHT</name></cpp:macro> <cpp:value>0x3056</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_LARGEST_PBUFFER</name></cpp:macro> <cpp:value>0x3058</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_LEVEL</name></cpp:macro> <cpp:value>0x3029</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_MAX_PBUFFER_HEIGHT</name></cpp:macro> <cpp:value>0x302A</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_MAX_PBUFFER_PIXELS</name></cpp:macro> <cpp:value>0x302B</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_MAX_PBUFFER_WIDTH</name></cpp:macro> <cpp:value>0x302C</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_NATIVE_RENDERABLE</name></cpp:macro> <cpp:value>0x302D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_NATIVE_VISUAL_ID</name></cpp:macro> <cpp:value>0x302E</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_NATIVE_VISUAL_TYPE</name></cpp:macro> <cpp:value>0x302F</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_NONE</name></cpp:macro> <cpp:value>0x3038</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_NON_CONFORMANT_CONFIG</name></cpp:macro> <cpp:value>0x3051</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_NOT_INITIALIZED</name></cpp:macro> <cpp:value>0x3001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_NO_CONTEXT</name></cpp:macro> <cpp:value>((EGLContext)0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_NO_DISPLAY</name></cpp:macro> <cpp:value>((EGLDisplay)0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_NO_SURFACE</name></cpp:macro> <cpp:value>((EGLSurface)0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_PBUFFER_BIT</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_PIXMAP_BIT</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_READ</name></cpp:macro> <cpp:value>0x305A</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_RED_SIZE</name></cpp:macro> <cpp:value>0x3024</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SAMPLES</name></cpp:macro> <cpp:value>0x3031</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SAMPLE_BUFFERS</name></cpp:macro> <cpp:value>0x3032</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SLOW_CONFIG</name></cpp:macro> <cpp:value>0x3050</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_STENCIL_SIZE</name></cpp:macro> <cpp:value>0x3026</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SUCCESS</name></cpp:macro> <cpp:value>0x3000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SURFACE_TYPE</name></cpp:macro> <cpp:value>0x3033</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_TRANSPARENT_BLUE_VALUE</name></cpp:macro> <cpp:value>0x3035</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_TRANSPARENT_GREEN_VALUE</name></cpp:macro> <cpp:value>0x3036</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_TRANSPARENT_RED_VALUE</name></cpp:macro> <cpp:value>0x3037</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_TRANSPARENT_RGB</name></cpp:macro> <cpp:value>0x3052</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_TRANSPARENT_TYPE</name></cpp:macro> <cpp:value>0x3034</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_TRUE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VENDOR</name></cpp:macro> <cpp:value>0x3053</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VERSION</name></cpp:macro> <cpp:value>0x3054</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_WIDTH</name></cpp:macro> <cpp:value>0x3057</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_WINDOW_BIT</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglChooseConfig</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>EGLint</name> <modifier>*</modifier></type><name>attrib_list</name></decl></parameter>, <parameter><decl><type><name>EGLConfig</name> <modifier>*</modifier></type><name>configs</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>config_size</name></decl></parameter>, <parameter><decl><type><name>EGLint</name> <modifier>*</modifier></type><name>num_config</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglCopyBuffers</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLSurface</name></type> <name>surface</name></decl></parameter>, <parameter><decl><type><name>EGLNativePixmapType</name></type> <name>target</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLContext</name> <name>EGLAPIENTRY</name></type> <name>eglCreateContext</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLConfig</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>EGLContext</name></type> <name>share_context</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>EGLint</name> <modifier>*</modifier></type><name>attrib_list</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLSurface</name> <name>EGLAPIENTRY</name></type> <name>eglCreatePbufferSurface</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLConfig</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>EGLint</name> <modifier>*</modifier></type><name>attrib_list</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLSurface</name> <name>EGLAPIENTRY</name></type> <name>eglCreatePixmapSurface</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLConfig</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>EGLNativePixmapType</name></type> <name>pixmap</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>EGLint</name> <modifier>*</modifier></type><name>attrib_list</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLSurface</name> <name>EGLAPIENTRY</name></type> <name>eglCreateWindowSurface</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLConfig</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>EGLNativeWindowType</name></type> <name>win</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>EGLint</name> <modifier>*</modifier></type><name>attrib_list</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglDestroyContext</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLContext</name></type> <name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglDestroySurface</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLSurface</name></type> <name>surface</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglGetConfigAttrib</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLConfig</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>attribute</name></decl></parameter>, <parameter><decl><type><name>EGLint</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglGetConfigs</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLConfig</name> <modifier>*</modifier></type><name>configs</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>config_size</name></decl></parameter>, <parameter><decl><type><name>EGLint</name> <modifier>*</modifier></type><name>num_config</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLDisplay</name> <name>EGLAPIENTRY</name></type> <name>eglGetCurrentDisplay</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLSurface</name> <name>EGLAPIENTRY</name></type> <name>eglGetCurrentSurface</name> <parameter_list>(<parameter><decl><type><name>EGLint</name></type> <name>readdraw</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLDisplay</name> <name>EGLAPIENTRY</name></type> <name>eglGetDisplay</name> <parameter_list>(<parameter><decl><type><name>EGLNativeDisplayType</name></type> <name>display_id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLint</name> <name>EGLAPIENTRY</name></type> <name>eglGetError</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>__eglMustCastToProperFunctionPointerType</name> <name>EGLAPIENTRY</name></type> <name>eglGetProcAddress</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>procname</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglInitialize</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLint</name> <modifier>*</modifier></type><name>major</name></decl></parameter>, <parameter><decl><type><name>EGLint</name> <modifier>*</modifier></type><name>minor</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglMakeCurrent</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLSurface</name></type> <name>draw</name></decl></parameter>, <parameter><decl><type><name>EGLSurface</name></type> <name>read</name></decl></parameter>, <parameter><decl><type><name>EGLContext</name></type> <name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglQueryContext</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLContext</name></type> <name>ctx</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>attribute</name></decl></parameter>, <parameter><decl><type><name>EGLint</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><name>EGLAPIENTRY</name></type> <name>eglQueryString</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglQuerySurface</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLSurface</name></type> <name>surface</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>attribute</name></decl></parameter>, <parameter><decl><type><name>EGLint</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglSwapBuffers</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLSurface</name></type> <name>surface</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglTerminate</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglWaitGL</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglWaitNative</name> <parameter_list>(<parameter><decl><type><name>EGLint</name></type> <name>engine</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>EGL_VERSION_1_1</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VERSION_1_1</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BACK_BUFFER</name></cpp:macro> <cpp:value>0x3084</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BIND_TO_TEXTURE_RGB</name></cpp:macro> <cpp:value>0x3039</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BIND_TO_TEXTURE_RGBA</name></cpp:macro> <cpp:value>0x303A</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONTEXT_LOST</name></cpp:macro> <cpp:value>0x300E</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_MIN_SWAP_INTERVAL</name></cpp:macro> <cpp:value>0x303B</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_MAX_SWAP_INTERVAL</name></cpp:macro> <cpp:value>0x303C</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_MIPMAP_TEXTURE</name></cpp:macro> <cpp:value>0x3082</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_MIPMAP_LEVEL</name></cpp:macro> <cpp:value>0x3083</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_NO_TEXTURE</name></cpp:macro> <cpp:value>0x305C</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_TEXTURE_2D</name></cpp:macro> <cpp:value>0x305F</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_TEXTURE_FORMAT</name></cpp:macro> <cpp:value>0x3080</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_TEXTURE_RGB</name></cpp:macro> <cpp:value>0x305D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_TEXTURE_RGBA</name></cpp:macro> <cpp:value>0x305E</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_TEXTURE_TARGET</name></cpp:macro> <cpp:value>0x3081</cpp:value></cpp:define>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglBindTexImage</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLSurface</name></type> <name>surface</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>buffer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglReleaseTexImage</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLSurface</name></type> <name>surface</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>buffer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglSurfaceAttrib</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLSurface</name></type> <name>surface</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>attribute</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglSwapInterval</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>interval</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>EGL_VERSION_1_2</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VERSION_1_2</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<typedef>typedef <type><name>unsigned</name> <name>int</name></type> <name>EGLenum</name>;</typedef>
<typedef>typedef <type><name>void</name> <modifier>*</modifier></type><name>EGLClientBuffer</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_ALPHA_FORMAT</name></cpp:macro> <cpp:value>0x3088</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_ALPHA_FORMAT_NONPRE</name></cpp:macro> <cpp:value>0x308B</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_ALPHA_FORMAT_PRE</name></cpp:macro> <cpp:value>0x308C</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_ALPHA_MASK_SIZE</name></cpp:macro> <cpp:value>0x303E</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BUFFER_PRESERVED</name></cpp:macro> <cpp:value>0x3094</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_BUFFER_DESTROYED</name></cpp:macro> <cpp:value>0x3095</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CLIENT_APIS</name></cpp:macro> <cpp:value>0x308D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_COLORSPACE</name></cpp:macro> <cpp:value>0x3087</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_COLORSPACE_sRGB</name></cpp:macro> <cpp:value>0x3089</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_COLORSPACE_LINEAR</name></cpp:macro> <cpp:value>0x308A</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_COLOR_BUFFER_TYPE</name></cpp:macro> <cpp:value>0x303F</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONTEXT_CLIENT_TYPE</name></cpp:macro> <cpp:value>0x3097</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_DISPLAY_SCALING</name></cpp:macro> <cpp:value>10000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_HORIZONTAL_RESOLUTION</name></cpp:macro> <cpp:value>0x3090</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_LUMINANCE_BUFFER</name></cpp:macro> <cpp:value>0x308F</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_LUMINANCE_SIZE</name></cpp:macro> <cpp:value>0x303D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_OPENGL_ES_BIT</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_OPENVG_BIT</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_OPENGL_ES_API</name></cpp:macro> <cpp:value>0x30A0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_OPENVG_API</name></cpp:macro> <cpp:value>0x30A1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_OPENVG_IMAGE</name></cpp:macro> <cpp:value>0x3096</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_PIXEL_ASPECT_RATIO</name></cpp:macro> <cpp:value>0x3092</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_RENDERABLE_TYPE</name></cpp:macro> <cpp:value>0x3040</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_RENDER_BUFFER</name></cpp:macro> <cpp:value>0x3086</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_RGB_BUFFER</name></cpp:macro> <cpp:value>0x308E</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SINGLE_BUFFER</name></cpp:macro> <cpp:value>0x3085</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SWAP_BEHAVIOR</name></cpp:macro> <cpp:value>0x3093</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_UNKNOWN</name></cpp:macro> <cpp:value>((EGLint)-1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VERTICAL_RESOLUTION</name></cpp:macro> <cpp:value>0x3091</cpp:value></cpp:define>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglBindAPI</name> <parameter_list>(<parameter><decl><type><name>EGLenum</name></type> <name>api</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLenum</name> <name>EGLAPIENTRY</name></type> <name>eglQueryAPI</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLSurface</name> <name>EGLAPIENTRY</name></type> <name>eglCreatePbufferFromClientBuffer</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLenum</name></type> <name>buftype</name></decl></parameter>, <parameter><decl><type><name>EGLClientBuffer</name></type> <name>buffer</name></decl></parameter>, <parameter><decl><type><name>EGLConfig</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>EGLint</name> <modifier>*</modifier></type><name>attrib_list</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglReleaseThread</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglWaitClient</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>EGL_VERSION_1_3</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VERSION_1_3</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONFORMANT</name></cpp:macro> <cpp:value>0x3042</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONTEXT_CLIENT_VERSION</name></cpp:macro> <cpp:value>0x3098</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_MATCH_NATIVE_PIXMAP</name></cpp:macro> <cpp:value>0x3041</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_OPENGL_ES2_BIT</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VG_ALPHA_FORMAT</name></cpp:macro> <cpp:value>0x3088</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VG_ALPHA_FORMAT_NONPRE</name></cpp:macro> <cpp:value>0x308B</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VG_ALPHA_FORMAT_PRE</name></cpp:macro> <cpp:value>0x308C</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VG_ALPHA_FORMAT_PRE_BIT</name></cpp:macro> <cpp:value>0x0040</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VG_COLORSPACE</name></cpp:macro> <cpp:value>0x3087</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VG_COLORSPACE_sRGB</name></cpp:macro> <cpp:value>0x3089</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VG_COLORSPACE_LINEAR</name></cpp:macro> <cpp:value>0x308A</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VG_COLORSPACE_LINEAR_BIT</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>EGL_VERSION_1_4</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VERSION_1_4</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_DEFAULT_DISPLAY</name></cpp:macro> <cpp:value>((EGLNativeDisplayType)0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_MULTISAMPLE_RESOLVE_BOX_BIT</name></cpp:macro> <cpp:value>0x0200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_MULTISAMPLE_RESOLVE</name></cpp:macro> <cpp:value>0x3099</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_MULTISAMPLE_RESOLVE_DEFAULT</name></cpp:macro> <cpp:value>0x309A</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_MULTISAMPLE_RESOLVE_BOX</name></cpp:macro> <cpp:value>0x309B</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_OPENGL_API</name></cpp:macro> <cpp:value>0x30A2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_OPENGL_BIT</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SWAP_BEHAVIOR_PRESERVED_BIT</name></cpp:macro> <cpp:value>0x0400</cpp:value></cpp:define>
<function_decl><type><name>EGLAPI</name> <name>EGLContext</name> <name>EGLAPIENTRY</name></type> <name>eglGetCurrentContext</name> <parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>EGL_VERSION_1_5</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_VERSION_1_5</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<typedef>typedef <type><name>void</name> <modifier>*</modifier></type><name>EGLSync</name>;</typedef>
<typedef>typedef <type><name>intptr_t</name></type> <name>EGLAttrib</name>;</typedef>
<typedef>typedef <type><name>khronos_utime_nanoseconds_t</name></type> <name>EGLTime</name>;</typedef>
<typedef>typedef <type><name>void</name> <modifier>*</modifier></type><name>EGLImage</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONTEXT_MAJOR_VERSION</name></cpp:macro> <cpp:value>0x3098</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONTEXT_MINOR_VERSION</name></cpp:macro> <cpp:value>0x30FB</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONTEXT_OPENGL_PROFILE_MASK</name></cpp:macro> <cpp:value>0x30FD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY</name></cpp:macro> <cpp:value>0x31BD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_NO_RESET_NOTIFICATION</name></cpp:macro> <cpp:value>0x31BE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_LOSE_CONTEXT_ON_RESET</name></cpp:macro> <cpp:value>0x31BF</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT</name></cpp:macro> <cpp:value>0x00000001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT</name></cpp:macro> <cpp:value>0x00000002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONTEXT_OPENGL_DEBUG</name></cpp:macro> <cpp:value>0x31B0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE</name></cpp:macro> <cpp:value>0x31B1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONTEXT_OPENGL_ROBUST_ACCESS</name></cpp:macro> <cpp:value>0x31B2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_OPENGL_ES3_BIT</name></cpp:macro> <cpp:value>0x00000040</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CL_EVENT_HANDLE</name></cpp:macro> <cpp:value>0x309C</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SYNC_CL_EVENT</name></cpp:macro> <cpp:value>0x30FE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SYNC_CL_EVENT_COMPLETE</name></cpp:macro> <cpp:value>0x30FF</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SYNC_PRIOR_COMMANDS_COMPLETE</name></cpp:macro> <cpp:value>0x30F0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SYNC_TYPE</name></cpp:macro> <cpp:value>0x30F7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SYNC_STATUS</name></cpp:macro> <cpp:value>0x30F1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SYNC_CONDITION</name></cpp:macro> <cpp:value>0x30F8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SIGNALED</name></cpp:macro> <cpp:value>0x30F2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_UNSIGNALED</name></cpp:macro> <cpp:value>0x30F3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SYNC_FLUSH_COMMANDS_BIT</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_FOREVER</name></cpp:macro> <cpp:value>0xFFFFFFFFFFFFFFFFull</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_TIMEOUT_EXPIRED</name></cpp:macro> <cpp:value>0x30F5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_CONDITION_SATISFIED</name></cpp:macro> <cpp:value>0x30F6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_NO_SYNC</name></cpp:macro> <cpp:value>((EGLSync)0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_SYNC_FENCE</name></cpp:macro> <cpp:value>0x30F9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_COLORSPACE</name></cpp:macro> <cpp:value>0x309D</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_COLORSPACE_SRGB</name></cpp:macro> <cpp:value>0x3089</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_COLORSPACE_LINEAR</name></cpp:macro> <cpp:value>0x308A</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_RENDERBUFFER</name></cpp:macro> <cpp:value>0x30B9</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_TEXTURE_2D</name></cpp:macro> <cpp:value>0x30B1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_TEXTURE_LEVEL</name></cpp:macro> <cpp:value>0x30BC</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_TEXTURE_3D</name></cpp:macro> <cpp:value>0x30B2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_TEXTURE_ZOFFSET</name></cpp:macro> <cpp:value>0x30BD</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X</name></cpp:macro> <cpp:value>0x30B3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X</name></cpp:macro> <cpp:value>0x30B4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y</name></cpp:macro> <cpp:value>0x30B5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y</name></cpp:macro> <cpp:value>0x30B6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z</name></cpp:macro> <cpp:value>0x30B7</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z</name></cpp:macro> <cpp:value>0x30B8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_IMAGE_PRESERVED</name></cpp:macro> <cpp:value>0x30D2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EGL_NO_IMAGE</name></cpp:macro> <cpp:value>((EGLImage)0)</cpp:value></cpp:define>
<function_decl><type><name>EGLAPI</name> <name>EGLSync</name> <name>EGLAPIENTRY</name></type> <name>eglCreateSync</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLenum</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>EGLAttrib</name> <modifier>*</modifier></type><name>attrib_list</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglDestroySync</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLSync</name></type> <name>sync</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLint</name> <name>EGLAPIENTRY</name></type> <name>eglClientWaitSync</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLSync</name></type> <name>sync</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>EGLTime</name></type> <name>timeout</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglGetSyncAttrib</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLSync</name></type> <name>sync</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>attribute</name></decl></parameter>, <parameter><decl><type><name>EGLAttrib</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLImage</name> <name>EGLAPIENTRY</name></type> <name>eglCreateImage</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLContext</name></type> <name>ctx</name></decl></parameter>, <parameter><decl><type><name>EGLenum</name></type> <name>target</name></decl></parameter>, <parameter><decl><type><name>EGLClientBuffer</name></type> <name>buffer</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>EGLAttrib</name> <modifier>*</modifier></type><name>attrib_list</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglDestroyImage</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLImage</name></type> <name>image</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLDisplay</name> <name>EGLAPIENTRY</name></type> <name>eglGetPlatformDisplay</name> <parameter_list>(<parameter><decl><type><name>EGLenum</name></type> <name>platform</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>native_display</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>EGLAttrib</name> <modifier>*</modifier></type><name>attrib_list</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLSurface</name> <name>EGLAPIENTRY</name></type> <name>eglCreatePlatformWindowSurface</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLConfig</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>native_window</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>EGLAttrib</name> <modifier>*</modifier></type><name>attrib_list</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLSurface</name> <name>EGLAPIENTRY</name></type> <name>eglCreatePlatformPixmapSurface</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLConfig</name></type> <name>config</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>native_pixmap</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>EGLAttrib</name> <modifier>*</modifier></type><name>attrib_list</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EGLAPI</name> <name>EGLBoolean</name> <name>EGLAPIENTRY</name></type> <name>eglWaitSync</name> <parameter_list>(<parameter><decl><type><name>EGLDisplay</name></type> <name>dpy</name></decl></parameter>, <parameter><decl><type><name>EGLSync</name></type> <name>sync</name></decl></parameter>, <parameter><decl><type><name>EGLint</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
