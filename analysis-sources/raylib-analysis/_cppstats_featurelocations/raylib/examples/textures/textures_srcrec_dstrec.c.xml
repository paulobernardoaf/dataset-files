<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\examples\textures\textures_srcrec_dstrec.c">










<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>


<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenWidth</name> <init>= <expr><literal type="number">800</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenHeight</name> <init>= <expr><literal type="number">450</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>InitWindow</name><argument_list>(<argument><expr><name>screenWidth</name></expr></argument>, <argument><expr><name>screenHeight</name></expr></argument>, <argument><expr><literal type="string">"raylib [textures] examples - texture source and destination rectangles"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<decl_stmt><decl><type><name>Texture2D</name></type> <name>scarfy</name> <init>= <expr><call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/scarfy.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>int</name></type> <name>frameWidth</name> <init>= <expr><name><name>scarfy</name><operator>.</operator><name>width</name></name><operator>/</operator><literal type="number">6</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>frameHeight</name> <init>= <expr><name><name>scarfy</name><operator>.</operator><name>height</name></name></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name>Rectangle</name></type> <name>sourceRec</name> <init>= <expr><block>{ <expr><literal type="number">0.0f</literal></expr>, <expr><literal type="number">0.0f</literal></expr>, <expr><name>frameWidth</name></expr>, <expr><name>frameHeight</name></expr> }</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name>Rectangle</name></type> <name>destRec</name> <init>= <expr><block>{ <expr><name>screenWidth</name><operator>/</operator><literal type="number">2</literal></expr>, <expr><name>screenHeight</name><operator>/</operator><literal type="number">2</literal></expr>, <expr><name>frameWidth</name><operator>*</operator><literal type="number">2</literal></expr>, <expr><name>frameHeight</name><operator>*</operator><literal type="number">2</literal></expr> }</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name>Vector2</name></type> <name>origin</name> <init>= <expr><block>{ <expr><name>frameWidth</name></expr>, <expr><name>frameHeight</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>rotation</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SetTargetFPS</name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<while>while <condition>(<expr><operator>!</operator><call><name>WindowShouldClose</name><argument_list>()</argument_list></call></expr>)</condition> 
<block>{<block_content>


<expr_stmt><expr><name>rotation</name><operator>++</operator></expr>;</expr_stmt>




<expr_stmt><expr><call><name>BeginDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ClearBackground</name><argument_list>(<argument><expr><name>RAYWHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






<expr_stmt><expr><call><name>DrawTexturePro</name><argument_list>(<argument><expr><name>scarfy</name></expr></argument>, <argument><expr><name>sourceRec</name></expr></argument>, <argument><expr><name>destRec</name></expr></argument>, <argument><expr><name>origin</name></expr></argument>, <argument><expr><operator>(</operator><name>float</name><operator>)</operator><name>rotation</name></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawLine</name><argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>)</operator><name><name>destRec</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name><name>destRec</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><name>screenHeight</name></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawLine</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name><name>destRec</name><operator>.</operator><name>y</name></name></expr></argument>, <argument><expr><name>screenWidth</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name><name>destRec</name><operator>.</operator><name>y</name></name></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"(c) Scarfy sprite by Eiden Marsal"</literal></expr></argument>, <argument><expr><name>screenWidth</name> <operator>-</operator> <literal type="number">200</literal></expr></argument>, <argument><expr><name>screenHeight</name> <operator>-</operator> <literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>EndDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>



<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>scarfy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>CloseWindow</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 


<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function></unit>
