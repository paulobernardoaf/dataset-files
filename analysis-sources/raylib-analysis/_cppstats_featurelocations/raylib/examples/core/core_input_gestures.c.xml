<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\examples\core\core_input_gestures.c">










<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_GESTURE_STRINGS</name></cpp:macro> <cpp:value>20</cpp:value></cpp:define>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>


<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenWidth</name> <init>= <expr><literal type="number">800</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenHeight</name> <init>= <expr><literal type="number">450</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>InitWindow</name><argument_list>(<argument><expr><name>screenWidth</name></expr></argument>, <argument><expr><name>screenHeight</name></expr></argument>, <argument><expr><literal type="string">"raylib [core] example - input gestures"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>Vector2</name></type> <name>touchPosition</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Rectangle</name></type> <name>touchArea</name> <init>= <expr><block>{ <expr><literal type="number">220</literal></expr>, <expr><literal type="number">10</literal></expr>, <expr><name>screenWidth</name> <operator>-</operator> <literal type="number">230</literal></expr>, <expr><name>screenHeight</name> <operator>-</operator> <literal type="number">20</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>gesturesCount</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>gestureStrings</name><index>[<expr><name>MAX_GESTURE_STRINGS</name></expr>]</index><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>currentGesture</name> <init>= <expr><name>GESTURE_NONE</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lastGesture</name> <init>= <expr><name>GESTURE_NONE</name></expr></init></decl>;</decl_stmt>



<expr_stmt><expr><call><name>SetTargetFPS</name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 



<while>while <condition>(<expr><operator>!</operator><call><name>WindowShouldClose</name><argument_list>()</argument_list></call></expr>)</condition> 
<block>{<block_content>


<expr_stmt><expr><name>lastGesture</name> <operator>=</operator> <name>currentGesture</name></expr>;</expr_stmt>
<expr_stmt><expr><name>currentGesture</name> <operator>=</operator> <call><name>GetGestureDetected</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>touchPosition</name> <operator>=</operator> <call><name>GetTouchPosition</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>CheckCollisionPointRec</name><argument_list>(<argument><expr><name>touchPosition</name></expr></argument>, <argument><expr><name>touchArea</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><name>currentGesture</name> <operator>!=</operator> <name>GESTURE_NONE</name><operator>)</operator></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>currentGesture</name> <operator>!=</operator> <name>lastGesture</name></expr>)</condition>
<block>{<block_content>

<switch>switch <condition>(<expr><name>currentGesture</name></expr>)</condition>
<block>{<block_content>
<case>case <expr><name>GESTURE_TAP</name></expr>:</case> <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>gestureStrings</name><index>[<expr><name>gesturesCount</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"GESTURE TAP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>GESTURE_DOUBLETAP</name></expr>:</case> <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>gestureStrings</name><index>[<expr><name>gesturesCount</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"GESTURE DOUBLETAP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>GESTURE_HOLD</name></expr>:</case> <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>gestureStrings</name><index>[<expr><name>gesturesCount</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"GESTURE HOLD"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>GESTURE_DRAG</name></expr>:</case> <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>gestureStrings</name><index>[<expr><name>gesturesCount</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"GESTURE DRAG"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>GESTURE_SWIPE_RIGHT</name></expr>:</case> <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>gestureStrings</name><index>[<expr><name>gesturesCount</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"GESTURE SWIPE RIGHT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>GESTURE_SWIPE_LEFT</name></expr>:</case> <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>gestureStrings</name><index>[<expr><name>gesturesCount</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"GESTURE SWIPE LEFT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>GESTURE_SWIPE_UP</name></expr>:</case> <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>gestureStrings</name><index>[<expr><name>gesturesCount</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"GESTURE SWIPE UP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>GESTURE_SWIPE_DOWN</name></expr>:</case> <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>gestureStrings</name><index>[<expr><name>gesturesCount</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"GESTURE SWIPE DOWN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>GESTURE_PINCH_IN</name></expr>:</case> <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>gestureStrings</name><index>[<expr><name>gesturesCount</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"GESTURE PINCH IN"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<case>case <expr><name>GESTURE_PINCH_OUT</name></expr>:</case> <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>gestureStrings</name><index>[<expr><name>gesturesCount</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"GESTURE PINCH OUT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break>break;</break>
<default>default:</default> <break>break;</break>
</block_content>}</block></switch>

<expr_stmt><expr><name>gesturesCount</name><operator>++</operator></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name>gesturesCount</name> <operator>&gt;=</operator> <name>MAX_GESTURE_STRINGS</name></expr>)</condition>
<block>{<block_content>
<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_GESTURE_STRINGS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name>strcpy</name><argument_list>(<argument><expr><name><name>gestureStrings</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="string">"\0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><name>gesturesCount</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>




<expr_stmt><expr><call><name>BeginDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ClearBackground</name><argument_list>(<argument><expr><name>RAYWHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawRectangleRec</name><argument_list>(<argument><expr><name>touchArea</name></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><literal type="number">225</literal></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><name>screenWidth</name> <operator>-</operator> <literal type="number">240</literal></expr></argument>, <argument><expr><name>screenHeight</name> <operator>-</operator> <literal type="number">30</literal></expr></argument>, <argument><expr><name>RAYWHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"GESTURES TEST AREA"</literal></expr></argument>, <argument><expr><name>screenWidth</name> <operator>-</operator> <literal type="number">270</literal></expr></argument>, <argument><expr><name>screenHeight</name> <operator>-</operator> <literal type="number">40</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><call><name>Fade</name><argument_list>(<argument><expr><name>GRAY</name></expr></argument>, <argument><expr><literal type="number">0.5f</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>gesturesCount</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>i</name><operator>%</operator><literal type="number">2</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">30</literal> <operator>+</operator> <literal type="number">20</literal><operator>*</operator><name>i</name></expr></argument>, <argument><expr><literal type="number">200</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><call><name>Fade</name><argument_list>(<argument><expr><name>LIGHTGRAY</name></expr></argument>, <argument><expr><literal type="number">0.5f</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">30</literal> <operator>+</operator> <literal type="number">20</literal><operator>*</operator><name>i</name></expr></argument>, <argument><expr><literal type="number">200</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><call><name>Fade</name><argument_list>(<argument><expr><name>LIGHTGRAY</name></expr></argument>, <argument><expr><literal type="number">0.3f</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>i</name> <operator>&lt;</operator> <name>gesturesCount</name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><name><name>gestureStrings</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">35</literal></expr></argument>, <argument><expr><literal type="number">36</literal> <operator>+</operator> <literal type="number">20</literal><operator>*</operator><name>i</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>DARKGRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><name><name>gestureStrings</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">35</literal></expr></argument>, <argument><expr><literal type="number">36</literal> <operator>+</operator> <literal type="number">20</literal><operator>*</operator><name>i</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>MAROON</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>DrawRectangleLines</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">29</literal></expr></argument>, <argument><expr><literal type="number">200</literal></expr></argument>, <argument><expr><name>screenHeight</name> <operator>-</operator> <literal type="number">50</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"DETECTED GESTURES"</literal></expr></argument>, <argument><expr><literal type="number">50</literal></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>currentGesture</name> <operator>!=</operator> <name>GESTURE_NONE</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawCircleV</name><argument_list>(<argument><expr><name>touchPosition</name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><name>MAROON</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>EndDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>



<expr_stmt><expr><call><name>CloseWindow</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 

</block_content>}</block></function></unit>
