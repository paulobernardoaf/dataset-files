<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\examples\shapes\shapes_colors_palette.c">










<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_COLORS_COUNT</name></cpp:macro> <cpp:value>21</cpp:value></cpp:define> 

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>


<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenWidth</name> <init>= <expr><literal type="number">800</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenHeight</name> <init>= <expr><literal type="number">450</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>InitWindow</name><argument_list>(<argument><expr><name>screenWidth</name></expr></argument>, <argument><expr><name>screenHeight</name></expr></argument>, <argument><expr><literal type="string">"raylib [shapes] example - colors palette"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>Color</name></type> <name><name>colors</name><index>[<expr><name>MAX_COLORS_COUNT</name></expr>]</index></name> <init>= <expr><block>{
<expr><name>DARKGRAY</name></expr>, <expr><name>MAROON</name></expr>, <expr><name>ORANGE</name></expr>, <expr><name>DARKGREEN</name></expr>, <expr><name>DARKBLUE</name></expr>, <expr><name>DARKPURPLE</name></expr>, <expr><name>DARKBROWN</name></expr>,
<expr><name>GRAY</name></expr>, <expr><name>RED</name></expr>, <expr><name>GOLD</name></expr>, <expr><name>LIME</name></expr>, <expr><name>BLUE</name></expr>, <expr><name>VIOLET</name></expr>, <expr><name>BROWN</name></expr>, <expr><name>LIGHTGRAY</name></expr>, <expr><name>PINK</name></expr>, <expr><name>YELLOW</name></expr>,
<expr><name>GREEN</name></expr>, <expr><name>SKYBLUE</name></expr>, <expr><name>PURPLE</name></expr>, <expr><name>BEIGE</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>colorNames</name><index>[<expr><name>MAX_COLORS_COUNT</name></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="string">"DARKGRAY"</literal></expr>, <expr><literal type="string">"MAROON"</literal></expr>, <expr><literal type="string">"ORANGE"</literal></expr>, <expr><literal type="string">"DARKGREEN"</literal></expr>, <expr><literal type="string">"DARKBLUE"</literal></expr>, <expr><literal type="string">"DARKPURPLE"</literal></expr>,
<expr><literal type="string">"DARKBROWN"</literal></expr>, <expr><literal type="string">"GRAY"</literal></expr>, <expr><literal type="string">"RED"</literal></expr>, <expr><literal type="string">"GOLD"</literal></expr>, <expr><literal type="string">"LIME"</literal></expr>, <expr><literal type="string">"BLUE"</literal></expr>, <expr><literal type="string">"VIOLET"</literal></expr>, <expr><literal type="string">"BROWN"</literal></expr>,
<expr><literal type="string">"LIGHTGRAY"</literal></expr>, <expr><literal type="string">"PINK"</literal></expr>, <expr><literal type="string">"YELLOW"</literal></expr>, <expr><literal type="string">"GREEN"</literal></expr>, <expr><literal type="string">"SKYBLUE"</literal></expr>, <expr><literal type="string">"PURPLE"</literal></expr>, <expr><literal type="string">"BEIGE"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Rectangle</name></type> <name><name>colorsRecs</name><index>[<expr><name>MAX_COLORS_COUNT</name></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt> 


<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_COLORS_COUNT</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
<block>{<block_content>
<expr_stmt><expr><name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>=</operator> <literal type="number">20</literal> <operator>+</operator> <literal type="number">100</literal><operator>*</operator><operator>(</operator><name>i</name><operator>%</operator><literal type="number">7</literal><operator>)</operator> <operator>+</operator> <literal type="number">10</literal><operator>*</operator><operator>(</operator><name>i</name><operator>%</operator><literal type="number">7</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>=</operator> <literal type="number">80</literal> <operator>+</operator> <literal type="number">100</literal><operator>*</operator><operator>(</operator><name>i</name><operator>/</operator><literal type="number">7</literal><operator>)</operator> <operator>+</operator> <literal type="number">10</literal><operator>*</operator><operator>(</operator><name>i</name><operator>/</operator><literal type="number">7</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>width</name> <operator>=</operator> <literal type="number">100</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>height</name> <operator>=</operator> <literal type="number">100</literal></expr>;</expr_stmt>
</block_content>}</block></for>

<decl_stmt><decl><type><name>int</name></type> <name><name>colorState</name><index>[<expr><name>MAX_COLORS_COUNT</name></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>Vector2</name></type> <name>mousePoint</name> <init>= <expr><block>{ <expr><literal type="number">0.0f</literal></expr>, <expr><literal type="number">0.0f</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SetTargetFPS</name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 



<while>while <condition>(<expr><operator>!</operator><call><name>WindowShouldClose</name><argument_list>()</argument_list></call></expr>)</condition> 
<block>{<block_content>


<expr_stmt><expr><name>mousePoint</name> <operator>=</operator> <call><name>GetMousePosition</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_COLORS_COUNT</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>CheckCollisionPointRec</name><argument_list>(<argument><expr><name>mousePoint</name></expr></argument>, <argument><expr><name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>colorState</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>colorState</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></for>




<expr_stmt><expr><call><name>BeginDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ClearBackground</name><argument_list>(<argument><expr><name>RAYWHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"raylib colors palette"</literal></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>, <argument><expr><literal type="number">42</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>BLACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"press SPACE to see all colors"</literal></expr></argument>, <argument><expr><call><name>GetScreenWidth</name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">180</literal></expr></argument>, <argument><expr><call><name>GetScreenHeight</name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">40</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_COLORS_COUNT</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> 
<block>{<block_content>
<expr_stmt><expr><call><name>DrawRectangleRec</name><argument_list>(<argument><expr><name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><call><name>Fade</name><argument_list>(<argument><expr><name><name>colors</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name>colorState</name><index>[<expr><name>i</name></expr>]</index></name></expr>?</condition><then> <expr><literal type="number">0.6f</literal></expr> </then><else>: <expr><literal type="number">1.0f</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>IsKeyDown</name><argument_list>(<argument><expr><name>KEY_SPACE</name></expr></argument>)</argument_list></call> <operator>||</operator> <name><name>colorState</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name></expr></argument>, <argument><expr><name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>+</operator> <name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>height</name> <operator>-</operator> <literal type="number">26</literal></expr></argument>, <argument><expr><name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>width</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>BLACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawRectangleLinesEx</name><argument_list>(<argument><expr><name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><call><name>Fade</name><argument_list>(<argument><expr><name>BLACK</name></expr></argument>, <argument><expr><literal type="number">0.3f</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><name><name>colorNames</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>+</operator> <name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>width</name> <operator>-</operator> <call><name>MeasureText</name><argument_list>(<argument><expr><name><name>colorNames</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">12</literal></expr></argument>,
<argument><expr><name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>+</operator> <name><name>colorsRecs</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>height</name> <operator>-</operator> <literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name><name>colors</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>EndDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>



<expr_stmt><expr><call><name>CloseWindow</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 


<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function></unit>
