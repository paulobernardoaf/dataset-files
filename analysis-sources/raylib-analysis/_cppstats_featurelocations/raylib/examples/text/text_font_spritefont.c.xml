<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\examples\text\text_font_spritefont.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>


<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenWidth</name> <init>= <expr><literal type="number">800</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenHeight</name> <init>= <expr><literal type="number">450</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>InitWindow</name><argument_list>(<argument><expr><name>screenWidth</name></expr></argument>, <argument><expr><name>screenHeight</name></expr></argument>, <argument><expr><literal type="string">"raylib [text] example - sprite font loading"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>msg1</name><index>[<expr><literal type="number">50</literal></expr>]</index></name> <init>= <expr><literal type="string">"THIS IS A custom SPRITE FONT..."</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>msg2</name><index>[<expr><literal type="number">50</literal></expr>]</index></name> <init>= <expr><literal type="string">"...and this is ANOTHER CUSTOM font..."</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>msg3</name><index>[<expr><literal type="number">50</literal></expr>]</index></name> <init>= <expr><literal type="string">"...and a THIRD one! GREAT! :D"</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name>Font</name></type> <name>font1</name> <init>= <expr><call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/custom_mecha.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>Font</name></type> <name>font2</name> <init>= <expr><call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/custom_alagard.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>Font</name></type> <name>font3</name> <init>= <expr><call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/custom_jupiter_crash.png"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 

<decl_stmt><decl><type><name>Vector2</name></type> <name>fontPosition1</name> <init>= <expr><block>{ <expr><name>screenWidth</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <call><name>MeasureTextEx</name><argument_list>(<argument><expr><name>font1</name></expr></argument>, <argument><expr><name>msg1</name></expr></argument>, <argument><expr><name><name>font1</name><operator>.</operator><name>baseSize</name></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">3</literal></expr></argument>)</argument_list></call><operator>.</operator><name>x</name><operator>/</operator><literal type="number">2</literal></expr>,
<expr><name>screenHeight</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <name><name>font1</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">80</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Vector2</name></type> <name>fontPosition2</name> <init>= <expr><block>{ <expr><name>screenWidth</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <call><name>MeasureTextEx</name><argument_list>(<argument><expr><name>font2</name></expr></argument>, <argument><expr><name>msg2</name></expr></argument>, <argument><expr><name><name>font2</name><operator>.</operator><name>baseSize</name></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">2</literal></expr></argument>)</argument_list></call><operator>.</operator><name>x</name><operator>/</operator><literal type="number">2</literal></expr>,
<expr><name>screenHeight</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <name><name>font2</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">10</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Vector2</name></type> <name>fontPosition3</name> <init>= <expr><block>{ <expr><name>screenWidth</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <call><name>MeasureTextEx</name><argument_list>(<argument><expr><name>font3</name></expr></argument>, <argument><expr><name>msg3</name></expr></argument>, <argument><expr><name><name>font3</name><operator>.</operator><name>baseSize</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call><operator>.</operator><name>x</name><operator>/</operator><literal type="number">2</literal></expr>,
<expr><name>screenHeight</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <name><name>font3</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <literal type="number">50</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SetTargetFPS</name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 



<while>while <condition>(<expr><operator>!</operator><call><name>WindowShouldClose</name><argument_list>()</argument_list></call></expr>)</condition> 
<block>{<block_content>







<expr_stmt><expr><call><name>BeginDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ClearBackground</name><argument_list>(<argument><expr><name>RAYWHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawTextEx</name><argument_list>(<argument><expr><name>font1</name></expr></argument>, <argument><expr><name>msg1</name></expr></argument>, <argument><expr><name>fontPosition1</name></expr></argument>, <argument><expr><name><name>font1</name><operator>.</operator><name>baseSize</name></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">3</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawTextEx</name><argument_list>(<argument><expr><name>font2</name></expr></argument>, <argument><expr><name>msg2</name></expr></argument>, <argument><expr><name>fontPosition2</name></expr></argument>, <argument><expr><name><name>font2</name><operator>.</operator><name>baseSize</name></name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawTextEx</name><argument_list>(<argument><expr><name>font3</name></expr></argument>, <argument><expr><name>msg3</name></expr></argument>, <argument><expr><name>fontPosition3</name></expr></argument>, <argument><expr><name><name>font3</name><operator>.</operator><name>baseSize</name></name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>EndDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>



<expr_stmt><expr><call><name>UnloadFont</name><argument_list>(<argument><expr><name>font1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>UnloadFont</name><argument_list>(<argument><expr><name>font2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
<expr_stmt><expr><call><name>UnloadFont</name><argument_list>(<argument><expr><name>font3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>CloseWindow</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 


<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function></unit>
