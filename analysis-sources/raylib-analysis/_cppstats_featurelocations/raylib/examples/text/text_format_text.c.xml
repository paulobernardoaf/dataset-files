<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\examples\text\text_format_text.c">










<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>


<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenWidth</name> <init>= <expr><literal type="number">800</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenHeight</name> <init>= <expr><literal type="number">450</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>InitWindow</name><argument_list>(<argument><expr><name>screenWidth</name></expr></argument>, <argument><expr><name>screenHeight</name></expr></argument>, <argument><expr><literal type="string">"raylib [text] example - text formatting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>score</name> <init>= <expr><literal type="number">100020</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>hiscore</name> <init>= <expr><literal type="number">200450</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lives</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SetTargetFPS</name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 



<while>while <condition>(<expr><operator>!</operator><call><name>WindowShouldClose</name><argument_list>()</argument_list></call></expr>)</condition> 
<block>{<block_content>







<expr_stmt><expr><call><name>BeginDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ClearBackground</name><argument_list>(<argument><expr><name>RAYWHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><call><name>FormatText</name><argument_list>(<argument><expr><literal type="string">"Score: %08i"</literal></expr></argument>, <argument><expr><name>score</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">200</literal></expr></argument>, <argument><expr><literal type="number">80</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><call><name>FormatText</name><argument_list>(<argument><expr><literal type="string">"HiScore: %08i"</literal></expr></argument>, <argument><expr><name>hiscore</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">200</literal></expr></argument>, <argument><expr><literal type="number">120</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>GREEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><call><name>FormatText</name><argument_list>(<argument><expr><literal type="string">"Lives: %02i"</literal></expr></argument>, <argument><expr><name>lives</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">200</literal></expr></argument>, <argument><expr><literal type="number">160</literal></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><name>BLUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><call><name>FormatText</name><argument_list>(<argument><expr><literal type="string">"Elapsed Time: %02.02f ms"</literal></expr></argument>, <argument><expr><call><name>GetFrameTime</name><argument_list>()</argument_list></call><operator>*</operator><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">200</literal></expr></argument>, <argument><expr><literal type="number">220</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>BLACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>EndDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>



<expr_stmt><expr><call><name>CloseWindow</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 


<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function></unit>
