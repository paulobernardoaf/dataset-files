<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\examples\text\text_raylib_fonts.c">













<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_FONTS</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>


<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenWidth</name> <init>= <expr><literal type="number">800</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>screenHeight</name> <init>= <expr><literal type="number">450</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>InitWindow</name><argument_list>(<argument><expr><name>screenWidth</name></expr></argument>, <argument><expr><name>screenHeight</name></expr></argument>, <argument><expr><literal type="string">"raylib [text] example - raylib fonts"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>Font</name></type> <name><name>fonts</name><index>[<expr><name>MAX_FONTS</name></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name><name>fonts</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/fonts/alagard.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fonts</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/fonts/pixelplay.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fonts</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/fonts/mecha.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fonts</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/fonts/setback.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fonts</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/fonts/romulus.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fonts</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/fonts/pixantiqua.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fonts</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/fonts/alpha_beta.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>fonts</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <call><name>LoadFont</name><argument_list>(<argument><expr><literal type="string">"resources/fonts/jupiter_crash.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>messages</name><index>[<expr><name>MAX_FONTS</name></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="string">"ALAGARD FONT designed by Hewett Tsoi"</literal></expr>,
<expr><literal type="string">"PIXELPLAY FONT designed by Aleksander Shevchuk"</literal></expr>,
<expr><literal type="string">"MECHA FONT designed by Captain Falcon"</literal></expr>,
<expr><literal type="string">"SETBACK FONT designed by Brian Kent (AEnigma)"</literal></expr>,
<expr><literal type="string">"ROMULUS FONT designed by Hewett Tsoi"</literal></expr>,
<expr><literal type="string">"PIXANTIQUA FONT designed by Gerhard Grossmann"</literal></expr>,
<expr><literal type="string">"ALPHA_BETA FONT designed by Brian Kent (AEnigma)"</literal></expr>,
<expr><literal type="string">"JUPITER_CRASH FONT designed by Brian Kent (AEnigma)"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name><name>spacings</name><index>[<expr><name>MAX_FONTS</name></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">2</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Vector2</name></type> <name><name>positions</name><index>[<expr><name>MAX_FONTS</name></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_FONTS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
<block>{<block_content>
<expr_stmt><expr><name><name>positions</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>x</name> <operator>=</operator> <name>screenWidth</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <call><name>MeasureTextEx</name><argument_list>(<argument><expr><name><name>fonts</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>messages</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>fonts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>baseSize</name><operator>*</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>spacings</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator>.</operator><name>x</name><operator>/</operator><literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>positions</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>y</name> <operator>=</operator> <literal type="number">60</literal> <operator>+</operator> <name><name>fonts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>baseSize</name> <operator>+</operator> <literal type="number">45</literal><operator>*</operator><name>i</name></expr>;</expr_stmt>
</block_content>}</block></for>


<expr_stmt><expr><name><name>positions</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>.</operator><name>y</name> <operator>+=</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>positions</name><index>[<expr><literal type="number">4</literal></expr>]</index></name><operator>.</operator><name>y</name> <operator>+=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>positions</name><index>[<expr><literal type="number">7</literal></expr>]</index></name><operator>.</operator><name>y</name> <operator>-=</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<decl_stmt><decl><type><name>Color</name></type> <name><name>colors</name><index>[<expr><name>MAX_FONTS</name></expr>]</index></name> <init>= <expr><block>{ <expr><name>MAROON</name></expr>, <expr><name>ORANGE</name></expr>, <expr><name>DARKGREEN</name></expr>, <expr><name>DARKBLUE</name></expr>, <expr><name>DARKPURPLE</name></expr>, <expr><name>LIME</name></expr>, <expr><name>GOLD</name></expr>, <expr><name>RED</name></expr> }</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>SetTargetFPS</name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 



<while>while <condition>(<expr><operator>!</operator><call><name>WindowShouldClose</name><argument_list>()</argument_list></call></expr>)</condition> 
<block>{<block_content>







<expr_stmt><expr><call><name>BeginDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ClearBackground</name><argument_list>(<argument><expr><name>RAYWHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"free fonts included with raylib"</literal></expr></argument>, <argument><expr><literal type="number">250</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>DARKGRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawLine</name><argument_list>(<argument><expr><literal type="number">220</literal></expr></argument>, <argument><expr><literal type="number">50</literal></expr></argument>, <argument><expr><literal type="number">590</literal></expr></argument>, <argument><expr><literal type="number">50</literal></expr></argument>, <argument><expr><name>DARKGRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_FONTS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
<block>{<block_content>
<expr_stmt><expr><call><name>DrawTextEx</name><argument_list>(<argument><expr><name><name>fonts</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>messages</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>positions</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>fonts</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>baseSize</name><operator>*</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name><name>spacings</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>colors</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>EndDrawing</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></while>





<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>MAX_FONTS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name>UnloadFont</name><argument_list>(<argument><expr><name><name>fonts</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<expr_stmt><expr><call><name>CloseWindow</name><argument_list>()</argument_list></call></expr>;</expr_stmt> 


<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function></unit>
