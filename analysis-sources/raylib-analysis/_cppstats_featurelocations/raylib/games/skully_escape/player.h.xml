<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\games\skully_escape\player.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>PLAYER_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PLAYER_H</name></cpp:macro></cpp:define>




<typedef>typedef <type><enum>enum <block>{ <decl><name>NONE</name></decl>, <decl><name>WALK_RIGHT</name></decl>, <decl><name>WALK_LEFT</name></decl>, <decl><name>SCARE_RIGHT</name></decl>, <decl><name>SCARE_LEFT</name></decl>, <decl><name>SEARCH</name></decl>, <decl><name>FIND_KEY</name></decl> }</block></enum></type> <name>PlayerSequence</name>;</typedef>

<typedef>typedef <type><struct>struct <name>Player</name> <block>{
<decl_stmt><decl><type><name>Vector2</name></type> <name>position</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Rectangle</name></type> <name>bounds</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Texture2D</name></type> <name>texture</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Color</name></type> <name>color</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>Rectangle</name></type> <name>frameRec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>currentFrame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>currentSeq</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>numLifes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>dead</name></decl>;</decl_stmt>
}</block></struct></type> <name>Player</name>;</typedef>




<decl_stmt><decl><type><name>Player</name></type> <name>player</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<function_decl><type><name>void</name></type> <name>InitPlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UpdatePlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DrawPlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UnloadPlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>ResetPlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>ScarePlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>SearchKeyPlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>FindKeyPlayer</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif></unit>
