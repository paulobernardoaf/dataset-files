<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\games\skully_escape\screens\screen_ending.c">
























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"screens.h"</cpp:file></cpp:include>






<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>framesCounter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>finishScreen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>float</name></type> <name>alpha</name> <init>= <expr><literal type="number">0.0f</literal></expr></init></decl>;</decl_stmt>






<function><type><name>void</name></type> <name>InitEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>finishScreen</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>alpha</name> <operator>=</operator> <literal type="number">0.0f</literal></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>UpdateEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>alpha</name> <operator>+=</operator> <literal type="number">0.005f</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>alpha</name> <operator>&gt;=</operator> <literal type="number">1.0f</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>alpha</name> <operator>=</operator> <literal type="number">1.0f</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>(</operator><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_ENTER</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>||</operator> <operator>(</operator><call><name>IsMouseButtonPressed</name><argument_list>(<argument><expr><name>MOUSE_LEFT_BUTTON</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>finishScreen</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>DrawEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>GetScreenWidth</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name>GetScreenHeight</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>DARKGRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"CONGRATULATIONS!"</literal></argument>, <argument>(Vector2){ <literal type="number">50</literal></argument>, <argument><literal type="number">160</literal> }</argument>, <argument>font.baseSize*<literal type="number">3</literal></argument>, <argument><literal type="number">2</literal></argument>, <argument>Fade(WHITE, alpha)</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"SKULLY ESCAPED!"</literal></argument>, <argument>(Vector2){ <literal type="number">100</literal></argument>, <argument><literal type="number">300</literal> }</argument>, <argument>font.baseSize*<literal type="number">3</literal></argument>, <argument><literal type="number">2</literal></argument>, <argument>Fade(WHITE, alpha)</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>framesCounter</name> <operator>&gt;</operator> <literal type="number">180</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name>framesCounter</name><operator>/</operator><literal type="number">40</literal><operator>)</operator><operator>%</operator><literal type="number">2</literal><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawText</name><argument_list>(<argument><expr><literal type="string">"PRESS ENTER or CLICK"</literal></expr></argument>, <argument><expr><literal type="number">380</literal></expr></argument>, <argument><expr><literal type="number">545</literal></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><name>BLACK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>UnloadEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>

</block_content>}</block></function>


<function><type><name>int</name></type> <name>FinishEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name>finishScreen</name></expr>;</return>
</block_content>}</block></function>
</unit>
