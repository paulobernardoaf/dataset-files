<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\games\skully_escape\monster.c">













<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"monster.h"</cpp:file></cpp:include>

<function><type><name>void</name></type> <name>UpdateMonster</name><parameter_list>(<parameter><decl><type><name>Monster</name> <modifier>*</modifier></type><name>monster</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>monster</name><operator>-&gt;</operator><name>active</name></name></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>CheckCollisionPointRec</name><argument_list>(<argument><expr><call><name>GetMousePosition</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name><name>monster</name><operator>-&gt;</operator><name>bounds</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>monster</name><operator>-&gt;</operator><name>selected</name></name> <operator>=</operator> <name>true</name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>monster</name><operator>-&gt;</operator><name>selected</name></name> <operator>=</operator> <name>false</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name><name>monster</name><operator>-&gt;</operator><name>spooky</name></name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>monster</name><operator>-&gt;</operator><name>framesCounter</name></name><operator>++</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>monster</name><operator>-&gt;</operator><name>currentSeq</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>monster</name><operator>-&gt;</operator><name>framesCounter</name></name> <operator>&gt;</operator> <literal type="number">7</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>monster</name><operator>-&gt;</operator><name>currentFrame</name></name><operator>++</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>monster</name><operator>-&gt;</operator><name>framesCounter</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>monster</name><operator>-&gt;</operator><name>currentFrame</name></name> <operator>&gt;</operator> <name><name>monster</name><operator>-&gt;</operator><name>numFrames</name></name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>monster</name><operator>-&gt;</operator><name>currentFrame</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>monster</name><operator>-&gt;</operator><name>frameRec</name><operator>.</operator><name>x</name></name> <operator>=</operator> <name><name>monster</name><operator>-&gt;</operator><name>currentFrame</name></name><operator>*</operator><name><name>monster</name><operator>-&gt;</operator><name>texture</name><operator>.</operator><name>width</name></name><operator>/</operator><name><name>monster</name><operator>-&gt;</operator><name>numFrames</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>monster</name><operator>-&gt;</operator><name>frameRec</name><operator>.</operator><name>y</name></name> <operator>=</operator> <name><name>monster</name><operator>-&gt;</operator><name>currentSeq</name></name><operator>*</operator><name><name>monster</name><operator>-&gt;</operator><name>texture</name><operator>.</operator><name>height</name></name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>DrawMonster</name><parameter_list>(<parameter><decl><type><name>Monster</name></type> <name>monster</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>scroll</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>Vector2</name></type> <name>scrollPos</name> <init>= <expr><block>{ <expr><name><name>monster</name><operator>.</operator><name>position</name><operator>.</operator><name>x</name></name> <operator>-</operator> <name>scroll</name></expr>, <expr><name><name>monster</name><operator>.</operator><name>position</name><operator>.</operator><name>y</name></name></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>monster</name><operator>.</operator><name>selected</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawTextureRec</name><argument_list>(<argument><expr><name><name>monster</name><operator>.</operator><name>texture</name></name></expr></argument>, <argument><expr><name><name>monster</name><operator>.</operator><name>frameRec</name></name></expr></argument>, <argument><expr><name>scrollPos</name></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawTextureRec</name><argument_list>(<argument><expr><name><name>monster</name><operator>.</operator><name>texture</name></name></expr></argument>, <argument><expr><name><name>monster</name><operator>.</operator><name>frameRec</name></name></expr></argument>, <argument><expr><name>scrollPos</name></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>UnloadMonster</name><parameter_list>(<parameter><decl><type><name>Monster</name></type> <name>monster</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name><name>monster</name><operator>.</operator><name>texture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function></unit>
