<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\games\cat_vs_roomba\screens\screen_ending.c">
























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"screens.h"</cpp:file></cpp:include>






<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>framesCounter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>finishScreen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>scrollPositionX</name></decl>;</decl_stmt>






<function><type><name>void</name></type> <name>InitEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>finishScreen</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PlayMusicStream</name><argument_list>(<argument><expr><name>music</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>UpdateEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>

<expr_stmt><expr><name>scrollPositionX</name> <operator>-=</operator> <literal type="number">5</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>scrollPositionX</name> <operator>&lt;</operator> <operator>-</operator><call><name>GetScreenWidth</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>scrollPositionX</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_ENTER</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>IsGestureDetected</name><argument_list>(<argument><expr><name>GESTURE_TAP</name></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>finishScreen</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PlaySound</name><argument_list>(<argument><expr><name>fxCoin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>DrawEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">64</literal><operator>*</operator><literal type="number">2</literal><operator>*</operator><literal type="number">2</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control>
<block>{<block_content>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><literal type="number">64</literal><operator>*</operator><name>i</name> <operator>+</operator> <name>scrollPositionX</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><call><name>GetScreenHeight</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><operator>(</operator><name>i</name><operator>%</operator><literal type="number">2</literal> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr>?</condition><then> <expr><call><name>GetColor</name><argument_list>(<argument><expr><literal type="number">0xf3726dff</literal></expr></argument>)</argument_list></call></expr> </then><else>: <expr><call><name>GetColor</name><argument_list>(<argument><expr><literal type="number">0xffcf6bff</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name>result</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <macro><name>DrawTextEx</name><argument_list>(<argument>font2</argument>, <argument><literal type="string">"YOU LOOSE..."</literal></argument>, <argument>(Vector2){ <literal type="number">350</literal></argument>, <argument><literal type="number">200</literal> }</argument>, <argument>font2.baseSize*<literal type="number">2</literal></argument>, <argument><literal type="number">2</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>result</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"YOU WIN!!!"</literal></argument>, <argument>(Vector2){ <literal type="number">380</literal></argument>, <argument><literal type="number">200</literal> }</argument>, <argument>font.baseSize*<literal type="number">2</literal></argument>, <argument><literal type="number">2</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>


<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument>FormatText(<literal type="string">"FINAL SCORE: %i"</literal>, score)</argument>, <argument>(Vector2){ <literal type="number">400</literal></argument>, <argument><literal type="number">360</literal> }</argument>, <argument>font2.baseSize</argument>, <argument><literal type="number">2</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>framesCounter</name><operator>/</operator><literal type="number">30</literal><operator>)</operator><operator>%</operator><literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content> <macro><name>DrawTextEx</name><argument_list>(<argument>font2</argument>, <argument><literal type="string">"PRESS ENTER to TITLE"</literal></argument>, <argument>(Vector2){ <literal type="number">340</literal></argument>, <argument><literal type="number">550</literal> }</argument>, <argument>font2.baseSize</argument>, <argument><literal type="number">2</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>UnloadEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>

</block_content>}</block></function>


<function><type><name>int</name></type> <name>FinishEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name>finishScreen</name></expr>;</return>
</block_content>}</block></function></unit>
