<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\games\transmission\screens\screen_mission.c">























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"screens.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MISSION_MAX_LENGTH</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KEYWORD_MAX_LENGTH</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_LINE_CHAR</name></cpp:macro> <cpp:value>75</cpp:value></cpp:define>






<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>framesCounter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>finishScreen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Texture2D</name></type> <name>texBackground</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Texture2D</name></type> <name>texBackline</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><specifier>static</specifier> <name>Rectangle</name></type> <name>sourceRecBackLine</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>Rectangle</name></type> <name>destRecBackLine</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>float</name></type> <name>fadeBackLine</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Vector2</name></type> <name>numberPosition</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>Color</name></type> <name>numberColor</name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>static</specifier> <name>Vector2</name></type> <name>missionPosition</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>missionSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>Color</name></type> <name>missionColor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>missionLenght</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>missionMaxLength</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>missionSpeed</name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>static</specifier> <name>Vector2</name></type> <name>keywordPosition</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>Color</name></type> <name>keywordColor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>showMissionWaitFrames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>showNumberWaitFrames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>showKeywordWaitFrames</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>startWritting</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>writeMission</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>writeNumber</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>writeKeyword</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>writeEnd</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>writtingMission</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>blinkFrames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>blinkKeyWord</name> <init>= <expr><name>true</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>showButton</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Mission</name> <modifier>*</modifier></type><name>missions</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Sound</name></type> <name>fxTransmit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>Music</name></type> <name>musMission</name></decl>;</decl_stmt>




<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>WriteMissionText</name><parameter_list>()</parameter_list>;</function_decl>



<function><type><name>void</name></type> <name>InitMissionScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>finishScreen</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>fadeButton</name> <operator>=</operator> <literal type="number">0.80f</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>texBackground</name> <operator>=</operator> <call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/textures/mission_background.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>texBackline</name> <operator>=</operator> <call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/textures/mission_backline.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>sourceRecBackLine</name> <operator>=</operator> <operator>(</operator><name>Rectangle</name><operator>)</operator><block>{<expr><literal type="number">0</literal></expr>,<expr><literal type="number">0</literal></expr>,<expr><call><name>GetScreenWidth</name><argument_list>()</argument_list></call></expr>, <expr><name><name>texBackline</name><operator>.</operator><name>height</name></name></expr>}</block></expr>;</expr_stmt>
<expr_stmt><expr><name>destRecBackLine</name> <operator>=</operator> <operator>(</operator><name>Rectangle</name><operator>)</operator><block>{<expr><literal type="number">0</literal></expr>,<expr><literal type="number">0</literal></expr>,<expr><name><name>sourceRecBackLine</name><operator>.</operator><name>width</name></name></expr>, <expr><name><name>sourceRecBackLine</name><operator>.</operator><name>height</name></name></expr>}</block></expr>;</expr_stmt>
<expr_stmt><expr><name>fadeBackLine</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>fxTransmit</name> <operator>=</operator> <call><name>LoadSound</name><argument_list>(<argument><expr><literal type="string">"resources/audio/fx_message.ogg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>musMission</name> <operator>=</operator> <call><name>LoadMusicStream</name><argument_list>(<argument><expr><literal type="string">"resources/audio/music_mission.ogg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PlayMusicStream</name><argument_list>(<argument><expr><name>musMission</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>missions</name> <operator>=</operator> <call><name>LoadMissions</name><argument_list>(<argument><expr><literal type="string">"resources/missions.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>missionMaxLength</name> <operator>=</operator> <call><name>strlen</name><argument_list>(<argument><expr><name><name>missions</name><index>[<expr><name>currentMission</name></expr>]</index></name><operator>.</operator><name>brief</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>currentLine</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><name>currentLine</name> <operator>*</operator> <name>MAX_LINE_CHAR</name></expr></init></decl>;</decl_stmt>

<while>while <condition>(<expr><name>i</name> <operator>&lt;</operator> <name>missionMaxLength</name></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>missions</name><index>[<expr><name>currentMission</name></expr>]</index></name><operator>.</operator><name><name>brief</name><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name><name>missions</name><index>[<expr><name>currentMission</name></expr>]</index></name><operator>.</operator><name><name>brief</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <literal type="char">'\n'</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>currentLine</name><operator>++</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>i</name> <operator>=</operator> <name>currentLine</name><operator>*</operator><name>MAX_LINE_CHAR</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name>i</name><operator>++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></while>

<expr_stmt><expr><name>missionSize</name> <operator>=</operator> <literal type="number">30</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>missionLenght</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>missionSpeed</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>numberColor</name> <operator>=</operator> <name>RAYWHITE</name></expr>;</expr_stmt>
<expr_stmt><expr><name>missionColor</name> <operator>=</operator> <name>LIGHTGRAY</name></expr>;</expr_stmt>
<expr_stmt><expr><name>keywordColor</name> <operator>=</operator> <operator>(</operator><name>Color</name><operator>)</operator><block>{<expr><literal type="number">198</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">255</literal></expr>}</block></expr>;</expr_stmt> 

<expr_stmt><expr><name>numberPosition</name> <operator>=</operator> <operator>(</operator><name>Vector2</name><operator>)</operator><block>{<expr><literal type="number">150</literal></expr>, <expr><literal type="number">185</literal></expr>}</block></expr>;</expr_stmt>
<expr_stmt><expr><name>missionPosition</name> <operator>=</operator> <operator>(</operator><name>Vector2</name><operator>)</operator><block>{<expr><name><name>numberPosition</name><operator>.</operator><name>x</name></name></expr>, <expr><name><name>numberPosition</name><operator>.</operator><name>y</name></name> <operator>+</operator> <literal type="number">60</literal></expr>}</block></expr>;</expr_stmt>
<expr_stmt><expr><name>keywordPosition</name> <operator>=</operator> <operator>(</operator><name>Vector2</name><operator>)</operator><block>{<expr><name><name>missionPosition</name><operator>.</operator><name>x</name></name></expr>, <expr><name><name>missionPosition</name><operator>.</operator><name>y</name></name> <operator>+</operator> <call><name>MeasureTextEx</name><argument_list>(<argument><expr><name>fontMission</name></expr></argument>, <argument><expr><name><name>missions</name><index>[<expr><name>currentMission</name></expr>]</index></name><operator>.</operator><name>brief</name></expr></argument>, <argument><expr><name>missionSize</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><name>y</name> <operator>+</operator> <literal type="number">60</literal></expr>}</block></expr>;</expr_stmt>

<expr_stmt><expr><name>startWritting</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name>writeNumber</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name>writeMission</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name>writeKeyword</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name>writeEnd</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name>writtingMission</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name>showNumberWaitFrames</name> <operator>=</operator> <literal type="number">30</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>showMissionWaitFrames</name> <operator>=</operator> <literal type="number">60</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>showKeywordWaitFrames</name> <operator>=</operator> <literal type="number">60</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>blinkKeyWord</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><name>blinkFrames</name> <operator>=</operator> <literal type="number">15</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>PlaySound</name><argument_list>(<argument><expr><name>fxTransmit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>UpdateMissionScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>UpdateMusicStream</name><argument_list>(<argument><expr><name>musMission</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>writeEnd</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>WriteMissionText</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>framesCounter</name><operator>%</operator><name>blinkFrames</name><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>blinkKeyWord</name> <operator>=</operator> <operator>!</operator><name>blinkKeyWord</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>showButton</name></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_ENTER</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>IsButtonPressed</name><argument_list>()</argument_list></call></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>writeEnd</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>writeEnd</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><name>writeKeyword</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><name>writeNumber</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><name>missionLenght</name> <operator>=</operator> <name>missionMaxLength</name></expr>;</expr_stmt>
</block_content>}</block></if>
<else>else
<block>{<block_content>
<expr_stmt><expr><name>finishScreen</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><name>showButton</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>DrawMissionScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>texBackground</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<macro><name>DrawTexturePro</name><argument_list>(<argument>texBackline</argument>, <argument>sourceRecBackLine</argument>, <argument>destRecBackLine</argument>, <argument>(Vector2){<literal type="number">0</literal></argument>,<argument><literal type="number">0</literal>}</argument>,<argument><literal type="number">0</literal></argument>, <argument>Fade(WHITE, fadeBackLine)</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<if_stmt><if>if <condition>(<expr><name>writeNumber</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawTextEx</name><argument_list>(<argument><expr><name>fontMission</name></expr></argument>, <argument><expr><call><name>FormatText</name><argument_list>(<argument><expr><literal type="string">"FiltraciÃ³n #%02i "</literal></expr></argument>, <argument><expr><name>currentMission</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>numberPosition</name></expr></argument>, <argument><expr><name>missionSize</name> <operator>+</operator> <literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>numberColor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>DrawTextEx</name><argument_list>(<argument><expr><name>fontMission</name></expr></argument>, <argument><expr><call><name>TextSubtext</name><argument_list>(<argument><expr><name><name>missions</name><index>[<expr><name>currentMission</name></expr>]</index></name><operator>.</operator><name>brief</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>missionLenght</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>missionPosition</name></expr></argument>, <argument><expr><name>missionSize</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>missionColor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>writeKeyword</name> <operator>&amp;&amp;</operator> <name>blinkKeyWord</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawTextEx</name><argument_list>(<argument><expr><name>fontMission</name></expr></argument>, <argument><expr><call><name>FormatText</name><argument_list>(<argument><expr><literal type="string">"Keyword: %s"</literal></expr></argument>, <argument><expr><name><name>missions</name><index>[<expr><name>currentMission</name></expr>]</index></name><operator>.</operator><name>key</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>keywordPosition</name></expr></argument>, <argument><expr><name>missionSize</name> <operator>+</operator> <literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>keywordColor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>showButton</name></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>writeEnd</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawButton</name><argument_list>(<argument><expr><literal type="string">"saltar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawButton</name><argument_list>(<argument><expr><literal type="string">"codificar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>UnloadMissionScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>texBackground</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>texBackline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UnloadSound</name><argument_list>(<argument><expr><name>fxTransmit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UnloadMusicStream</name><argument_list>(<argument><expr><name>musMission</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>missions</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>int</name></type> <name>FinishMissionScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name>finishScreen</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>WriteMissionText</name><parameter_list>()</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>startWritting</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>framesCounter</name> <operator>%</operator> <literal type="number">60</literal> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>startWritting</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><operator>!</operator><name>writeNumber</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>fadeBackLine</name> <operator>+=</operator> <literal type="number">0.020f</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>framesCounter</name> <operator>%</operator> <name>showNumberWaitFrames</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>writeNumber</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><name>showButton</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><operator>!</operator><name>writeMission</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name> <operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>framesCounter</name> <operator>%</operator> <name>showMissionWaitFrames</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>writeMission</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><name>writtingMission</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name>writeMission</name> <operator>&amp;&amp;</operator> <name>writtingMission</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>framesCounter</name> <operator>%</operator> <name>missionSpeed</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>missionLenght</name><operator>++</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>missionLenght</name> <operator>==</operator> <name>missionMaxLength</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>writtingMission</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><operator>!</operator><name>writeKeyword</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>framesCounter</name> <operator>%</operator> <name>showKeywordWaitFrames</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>writeKeyword</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><name>writeEnd</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>
</unit>
