<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\games\transmission\screens\screen_title.c">























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"screens.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>






<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>framesCounter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>finishScreen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Texture2D</name></type> <name>texBackground</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>Font</name></type> <name>fontTitle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>Sound</name></type> <name>fxTyping</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>float</name></type> <name>titleSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>Vector2</name></type> <name>transmissionPosition</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>Vector2</name></type> <name>missionPositon</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name></type> <name><name>textTitle</name><index>[<expr><literal type="number">20</literal></expr>]</index></name> <init>= <expr><literal type="string">"transmissionmission"</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Color</name></type> <name>titleColor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>speedText</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>transmissionLenght</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>missionLenght</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>transmissionMaxLenght</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>missionMaxLenght</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>writeTransmission</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>writeMission</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>writeEnd</name></decl>;</decl_stmt>




<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>MissionScreen</name><parameter_list>()</parameter_list>;</function_decl>


<function><type><name>void</name></type> <name>InitTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>finishScreen</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>texBackground</name> <operator>=</operator> <call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/textures/title_background.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>fxTyping</name> <operator>=</operator> <call><name>LoadSound</name><argument_list>(<argument><expr><literal type="string">"resources/audio/fx_typing.ogg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>fontTitle</name> <operator>=</operator> <call><name>LoadFontEx</name><argument_list>(<argument><expr><literal type="string">"resources/fonts/mom_typewritter.ttf"</literal></expr></argument>, <argument><expr><literal type="number">96</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>titleSize</name> <operator>=</operator> <literal type="number">44</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>transmissionPosition</name> <operator>=</operator> <operator>(</operator><name>Vector2</name><operator>)</operator><block>{<expr><literal type="number">519</literal></expr>, <expr><literal type="number">221</literal></expr>}</block></expr>;</expr_stmt>
<expr_stmt><expr><name>missionPositon</name> <operator>=</operator> <operator>(</operator><name>Vector2</name><operator>)</operator><block>{<expr><literal type="number">580</literal></expr>, <expr><literal type="number">261</literal></expr>}</block></expr>;</expr_stmt>

<expr_stmt><expr><name>titleColor</name> <operator>=</operator> <name>BLACK</name></expr>;</expr_stmt>
<expr_stmt><expr><name>speedText</name> <operator>=</operator> <literal type="number">15</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>missionLenght</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>transmissionLenght</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>missionMaxLenght</name> <operator>=</operator> <literal type="number">7</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>transmissionMaxLenght</name> <operator>=</operator> <literal type="number">12</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>writeTransmission</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<expr_stmt><expr><name>writeMission</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name>writeEnd</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<expr_stmt><expr><name>currentMission</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>UpdateTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>writeEnd</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name> <operator>++</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>framesCounter</name><operator>%</operator><name>speedText</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>writeTransmission</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>transmissionLenght</name><operator>++</operator></expr>;</expr_stmt> 
<if_stmt><if>if <condition>(<expr><name>transmissionLenght</name> <operator>==</operator> <name>transmissionMaxLenght</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>writeTransmission</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name>writeMission</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name>writeMission</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>missionLenght</name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>missionLenght</name> <operator>==</operator> <name>missionMaxLenght</name></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>writeMission</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name>writeEnd</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>PlaySound</name><argument_list>(<argument><expr><name>fxTyping</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><call><name>IsButtonPressed</name><argument_list>()</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><call><name>MissionScreen</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> 
<if type="elseif">else if <condition>(<expr><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_ENTER</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>MissionScreen</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>DrawTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>texBackground</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawTextEx</name><argument_list>(<argument><expr><name>fontTitle</name></expr></argument>, <argument><expr><call><name>TextSubtext</name><argument_list>(<argument><expr><name>textTitle</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>transmissionLenght</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>transmissionPosition</name></expr></argument>, <argument><expr><name>titleSize</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>titleColor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawTextEx</name><argument_list>(<argument><expr><name>fontTitle</name></expr></argument>, <argument><expr><call><name>TextSubtext</name><argument_list>(<argument><expr><name>textTitle</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>missionLenght</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>missionPositon</name></expr></argument>, <argument><expr><name>titleSize</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>titleColor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

<expr_stmt><expr><call><name>DrawButton</name><argument_list>(<argument><expr><literal type="string">"start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>UnloadTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>texBackground</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UnloadSound</name><argument_list>(<argument><expr><name>fxTyping</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UnloadFont</name><argument_list>(<argument><expr><name>fontTitle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>int</name></type> <name>FinishTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name>finishScreen</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type> <name>MissionScreen</name><parameter_list>()</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name>transmissionLenght</name> <operator>=</operator> <name>transmissionMaxLenght</name></expr>;</expr_stmt>
<expr_stmt><expr><name>missionLenght</name> <operator>=</operator> <name>missionMaxLenght</name></expr>;</expr_stmt>
<expr_stmt><expr><name>writeEnd</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>

<expr_stmt><expr><name>finishScreen</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt> 

</block_content>}</block></function></unit>
