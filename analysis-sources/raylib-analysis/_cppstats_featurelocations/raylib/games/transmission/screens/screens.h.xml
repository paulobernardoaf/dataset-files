<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\games\transmission\screens\screens.h">
























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SCREENS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCREENS_H</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_CODING_WORDS</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_MISSION_WORDS</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>




<typedef>typedef <type><enum>enum <name>GameScreen</name> <block>{ <decl><name>LOGO</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><name>TITLE</name></decl>, <decl><name>MISSION</name></decl>, <decl><name>GAMEPLAY</name></decl>, <decl><name>ENDING</name></decl> }</block></enum></type> <name>GameScreen</name>;</typedef>


<typedef>typedef <type><struct>struct <name>Word</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Rectangle</name></type> <name>rec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Rectangle</name></type> <name>iniRec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>hover</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>picked</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>text</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt> 
}</block></struct></type> <name>Word</name>;</typedef>


<typedef>typedef <type><struct>struct <name>Mission</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>brief</name><index>[<expr><literal type="number">512</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name></type> <name><name>key</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>char</name></type> <name><name>msg</name><index>[<expr><literal type="number">256</literal></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name>wordsCount</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>int</name></type> <name><name>sols</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></decl>;</decl_stmt> 
}</block></struct></type> <name>Mission</name>;</typedef>




<decl_stmt><decl><type><name>GameScreen</name></type> <name>currentScreen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Music</name></type> <name>music</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sound</name></type> <name>fxButton</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>Rectangle</name></type> <name>recButton</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>float</name></type> <name>fadeButton</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Color</name></type> <name>colorButton</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Texture2D</name></type> <name>texButton</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Vector2</name></type> <name>textPositionButton</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>fontSizeButton</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Color</name></type> <name>textColorButton</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>currentMission</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>totalMissions</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Font</name></type> <name>fontMission</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Word</name></type> <name><name>messageWords</name><index>[<expr><name>MAX_MISSION_WORDS</name></expr>]</index></name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<function_decl><type><name>bool</name></type> <name>IsButtonPressed</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DrawButton</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>text</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Mission</name> <modifier>*</modifier></type><name>LoadMissions</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fileName</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>InitLogoScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UpdateLogoScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DrawLogoScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UnloadLogoScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>FinishLogoScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>InitTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UpdateTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DrawTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UnloadTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>FinishTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>InitMissionScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UpdateMissionScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DrawMissionScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UnloadMissionScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>FinishMissionScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>InitGameplayScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UpdateGameplayScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DrawGameplayScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UnloadGameplayScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>FinishGameplayScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>InitEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UpdateEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DrawEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UnloadEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>FinishEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif></unit>
