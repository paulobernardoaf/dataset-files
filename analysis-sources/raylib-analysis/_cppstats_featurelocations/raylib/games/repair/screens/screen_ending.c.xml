<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\games\repair\screens\screen_ending.c">
























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"raylib.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"screens.h"</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>hair</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>colHair</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>eyes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nose</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>mouth</name></decl>;</decl_stmt>


}</block></struct></type> <name>CharLikes</name>;</typedef>






<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>framesCounter</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>finishScreen</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>Texture2D</name></type> <name>texQmark</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>Texture2D</name></type> <name>texMatch</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>state</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>matchValue</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>CharLikes</name></type> <name>playerLikes</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <name>CharLikes</name></type> <name>playerBaseLikes</name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>






<function><type><name>void</name></type> <name>InitEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>finishScreen</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>state</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>CustomizeCharacter</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dating</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>texQmark</name> <operator>=</operator> <call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/qmark.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>texMatch</name> <operator>=</operator> <call><name>LoadTexture</name><argument_list>(<argument><expr><literal type="string">"resources/match.png"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>UpdateEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>state</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>framesCounter</name><operator>++</operator></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>framesCounter</name> <operator>&gt;</operator> <literal type="number">200</literal></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>state</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name><name>playerBase</name><operator>.</operator><name>hair</name></name> <operator>==</operator> <name><name>dating</name><operator>.</operator><name>hair</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>hair</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">70</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>playerBase</name><operator>.</operator><name>hair</name></name> <operator>==</operator> <name><name>datingBase</name><operator>.</operator><name>hair</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>hair</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>hair</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>playerBase</name><operator>.</operator><name>colHair</name></name> <operator>==</operator> <name><name>dating</name><operator>.</operator><name>colHair</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>colHair</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">70</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>playerBase</name><operator>.</operator><name>colHair</name></name> <operator>==</operator> <name><name>datingBase</name><operator>.</operator><name>colHair</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>colHair</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>colHair</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>playerBase</name><operator>.</operator><name>eyes</name></name> <operator>==</operator> <name><name>dating</name><operator>.</operator><name>eyes</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>eyes</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">70</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>playerBase</name><operator>.</operator><name>eyes</name></name> <operator>==</operator> <name><name>datingBase</name><operator>.</operator><name>eyes</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>eyes</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>eyes</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>playerBase</name><operator>.</operator><name>nose</name></name> <operator>==</operator> <name><name>dating</name><operator>.</operator><name>nose</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>nose</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">70</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>playerBase</name><operator>.</operator><name>nose</name></name> <operator>==</operator> <name><name>datingBase</name><operator>.</operator><name>nose</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>nose</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>nose</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>playerBase</name><operator>.</operator><name>mouth</name></name> <operator>==</operator> <name><name>dating</name><operator>.</operator><name>mouth</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>mouth</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">70</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>playerBase</name><operator>.</operator><name>mouth</name></name> <operator>==</operator> <name><name>datingBase</name><operator>.</operator><name>mouth</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>mouth</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerBaseLikes</name><operator>.</operator><name>mouth</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>hair</name></name> <operator>==</operator> <name><name>dating</name><operator>.</operator><name>hair</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>hair</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">70</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>player</name><operator>.</operator><name>hair</name></name> <operator>==</operator> <name><name>datingBase</name><operator>.</operator><name>hair</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>hair</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>hair</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>colHair</name></name> <operator>==</operator> <name><name>dating</name><operator>.</operator><name>colHair</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>colHair</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">70</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>player</name><operator>.</operator><name>colHair</name></name> <operator>==</operator> <name><name>datingBase</name><operator>.</operator><name>colHair</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>colHair</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>colHair</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>eyes</name></name> <operator>==</operator> <name><name>dating</name><operator>.</operator><name>eyes</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>eyes</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">70</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>player</name><operator>.</operator><name>eyes</name></name> <operator>==</operator> <name><name>datingBase</name><operator>.</operator><name>eyes</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>eyes</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>eyes</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>nose</name></name> <operator>==</operator> <name><name>dating</name><operator>.</operator><name>nose</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>nose</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">70</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>player</name><operator>.</operator><name>nose</name></name> <operator>==</operator> <name><name>datingBase</name><operator>.</operator><name>nose</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>nose</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>nose</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>mouth</name></name> <operator>==</operator> <name><name>dating</name><operator>.</operator><name>mouth</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>mouth</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">70</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>player</name><operator>.</operator><name>mouth</name></name> <operator>==</operator> <name><name>datingBase</name><operator>.</operator><name>mouth</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>mouth</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name><name>playerLikes</name><operator>.</operator><name>mouth</name></name> <operator>=</operator> <call><name>GetRandomValue</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



<expr_stmt><expr><name>matchValue</name> <operator>=</operator> <name><name>playerLikes</name><operator>.</operator><name>hair</name></name> <operator>+</operator> <name><name>playerLikes</name><operator>.</operator><name>colHair</name></name> <operator>+</operator> <name><name>playerLikes</name><operator>.</operator><name>eyes</name></name> <operator>+</operator> <name><name>playerLikes</name><operator>.</operator><name>nose</name></name> <operator>+</operator> <name><name>playerLikes</name><operator>.</operator><name>mouth</name></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name>state</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition>
<block>{<block_content>

</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><call><name>IsKeyPressed</name><argument_list>(<argument><expr><name>KEY_ENTER</name></expr></argument>)</argument_list></call></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>finishScreen</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>PlaySound</name><argument_list>(<argument><expr><name>fxCoin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>DrawEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>

<expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>background</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>GetColor</name><argument_list>(<argument><expr><literal type="number">0xf6aa60ff</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name>DrawCharacter</name><argument_list>(<argument>player</argument>, <argument>(Vector2){ <literal type="number">180</literal></argument>, <argument><literal type="number">40</literal> }</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<macro><name>DrawCharacter</name><argument_list>(<argument>dating</argument>, <argument>(Vector2){ <literal type="number">820</literal></argument>, <argument><literal type="number">40</literal> }</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<if_stmt><if>if <condition>(<expr><name>state</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>framesCounter</name><operator>/</operator><literal type="number">15</literal><operator>)</operator><operator>%</operator><literal type="number">2</literal> <operator>==</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>DrawTexture</name><argument_list>(<argument><expr><name>texQmark</name></expr></argument>, <argument><expr><call><name>GetScreenWidth</name><argument_list>()</argument_list></call><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <name><name>texQmark</name><operator>.</operator><name>width</name></name><operator>/</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">180</literal></expr></argument>, <argument><expr><name>WHITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name>state</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition>
<block>{<block_content>
<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument>TextFormat(<literal type="string">"MATCH: %i%%"</literal>, (int)(((float)matchValue/<literal type="number">500.0f</literal>)*<literal type="number">100.0f</literal>))</argument>, <argument>(Vector2){ <literal type="number">420</literal></argument>, <argument><literal type="number">40</literal> }</argument>, <argument>font.baseSize*<literal type="number">2</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>SKYBLUE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<macro><name>DrawTextureRec</name><argument_list>(<argument>texMatch</argument>, <argument>(Rectangle){ <literal type="number">0</literal></argument>, <argument>(matchValue &gt; <literal type="number">250</literal>)? <literal type="number">0</literal> : texMatch.height/<literal type="number">2</literal></argument>, <argument>texMatch.width</argument>, <argument>texMatch.height/<literal type="number">2</literal> }</argument>, <argument>(Vector2){ GetScreenWidth()/<literal type="number">2</literal> - texMatch.width/<literal type="number">2</literal></argument>, <argument><literal type="number">240</literal> }</argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>barsPositionX</name> <init>= <expr><literal type="number">80</literal></expr></init></decl>;</decl_stmt>





<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"HAIR:"</literal></argument>, <argument>(Vector2){ barsPositionX</argument>, <argument><literal type="number">550</literal> }</argument>, <argument>font.baseSize/<literal type="number">2</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><literal type="number">550</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><literal type="number">550</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name><name>playerBaseLikes</name><operator>.</operator><name>hair</name></name><operator>*</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"TINT:"</literal></argument>, <argument>(Vector2){ barsPositionX</argument>, <argument><literal type="number">580</literal> }</argument>, <argument>font.baseSize/<literal type="number">2</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><literal type="number">580</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><literal type="number">580</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name><name>playerBaseLikes</name><operator>.</operator><name>colHair</name></name><operator>*</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"EYES:"</literal></argument>, <argument>(Vector2){ barsPositionX</argument>, <argument><literal type="number">610</literal> }</argument>, <argument>font.baseSize/<literal type="number">2</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><literal type="number">610</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><literal type="number">610</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name><name>playerBaseLikes</name><operator>.</operator><name>eyes</name></name><operator>*</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"NOSE:"</literal></argument>, <argument>(Vector2){ barsPositionX</argument>, <argument><literal type="number">640</literal> }</argument>, <argument>font.baseSize/<literal type="number">2</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><literal type="number">640</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><literal type="number">640</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name><name>playerBaseLikes</name><operator>.</operator><name>nose</name></name><operator>*</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"LIPS:"</literal></argument>, <argument>(Vector2){ barsPositionX</argument>, <argument><literal type="number">670</literal> }</argument>, <argument>font.baseSize/<literal type="number">2</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><literal type="number">670</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal></expr></argument>, <argument><expr><literal type="number">670</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name><name>playerBaseLikes</name><operator>.</operator><name>mouth</name></name><operator>*</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>hair</name></name> <operator>!=</operator> <name><name>playerBase</name><operator>.</operator><name>hair</name></name></expr>)</condition>
<block>{<block_content>
<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"after re-touch:"</literal></argument>, <argument>(Vector2){ barsPositionX + <literal type="number">80</literal> + <literal type="number">400</literal> + <literal type="number">20</literal></argument>, <argument><literal type="number">550</literal> }</argument>, <argument>font.baseSize/<literal type="number">2</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal> <operator>+</operator> <literal type="number">400</literal> <operator>+</operator> <literal type="number">100</literal> <operator>+</operator> <literal type="number">90</literal></expr></argument>, <argument><expr><literal type="number">550</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal> <operator>+</operator> <literal type="number">400</literal> <operator>+</operator> <literal type="number">100</literal> <operator>+</operator> <literal type="number">90</literal></expr></argument>, <argument><expr><literal type="number">550</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name><name>playerLikes</name><operator>.</operator><name>hair</name></name><operator>*</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>colHair</name></name> <operator>!=</operator> <name><name>playerBase</name><operator>.</operator><name>colHair</name></name></expr>)</condition>
<block>{<block_content>
<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"after re-touch:"</literal></argument>, <argument>(Vector2){ barsPositionX + <literal type="number">80</literal> + <literal type="number">400</literal> + <literal type="number">20</literal></argument>, <argument><literal type="number">580</literal> }</argument>, <argument>font.baseSize/<literal type="number">2</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal> <operator>+</operator> <literal type="number">400</literal> <operator>+</operator> <literal type="number">100</literal> <operator>+</operator> <literal type="number">90</literal></expr></argument>, <argument><expr><literal type="number">580</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal> <operator>+</operator> <literal type="number">400</literal> <operator>+</operator> <literal type="number">100</literal> <operator>+</operator> <literal type="number">90</literal></expr></argument>, <argument><expr><literal type="number">580</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name><name>playerLikes</name><operator>.</operator><name>colHair</name></name><operator>*</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>eyes</name></name> <operator>!=</operator> <name><name>playerBase</name><operator>.</operator><name>eyes</name></name></expr>)</condition>
<block>{<block_content>
<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"after re-touch:"</literal></argument>, <argument>(Vector2){ barsPositionX + <literal type="number">80</literal> + <literal type="number">400</literal> + <literal type="number">20</literal></argument>, <argument><literal type="number">610</literal> }</argument>, <argument>font.baseSize/<literal type="number">2</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal> <operator>+</operator> <literal type="number">400</literal> <operator>+</operator> <literal type="number">100</literal> <operator>+</operator> <literal type="number">90</literal></expr></argument>, <argument><expr><literal type="number">610</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal> <operator>+</operator> <literal type="number">400</literal> <operator>+</operator> <literal type="number">100</literal> <operator>+</operator> <literal type="number">90</literal></expr></argument>, <argument><expr><literal type="number">610</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name><name>playerLikes</name><operator>.</operator><name>eyes</name></name><operator>*</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>nose</name></name> <operator>!=</operator> <name><name>playerBase</name><operator>.</operator><name>nose</name></name></expr>)</condition>
<block>{<block_content>
<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"after re-touch:"</literal></argument>, <argument>(Vector2){ barsPositionX + <literal type="number">80</literal> + <literal type="number">400</literal> + <literal type="number">20</literal></argument>, <argument><literal type="number">640</literal> }</argument>, <argument>font.baseSize/<literal type="number">2</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal> <operator>+</operator> <literal type="number">400</literal> <operator>+</operator> <literal type="number">100</literal> <operator>+</operator> <literal type="number">90</literal></expr></argument>, <argument><expr><literal type="number">640</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal> <operator>+</operator> <literal type="number">400</literal> <operator>+</operator> <literal type="number">100</literal> <operator>+</operator> <literal type="number">90</literal></expr></argument>, <argument><expr><literal type="number">640</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name><name>playerLikes</name><operator>.</operator><name>nose</name></name><operator>*</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>player</name><operator>.</operator><name>mouth</name></name> <operator>!=</operator> <name><name>playerBase</name><operator>.</operator><name>mouth</name></name></expr>)</condition>
<block>{<block_content>
<macro><name>DrawTextEx</name><argument_list>(<argument>font</argument>, <argument><literal type="string">"after re-touch:"</literal></argument>, <argument>(Vector2){ barsPositionX + <literal type="number">80</literal> + <literal type="number">400</literal> + <literal type="number">20</literal></argument>, <argument><literal type="number">670</literal> }</argument>, <argument>font.baseSize/<literal type="number">2</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument>WHITE</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal> <operator>+</operator> <literal type="number">400</literal> <operator>+</operator> <literal type="number">100</literal> <operator>+</operator> <literal type="number">90</literal></expr></argument>, <argument><expr><literal type="number">670</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">400</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>GRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>DrawRectangle</name><argument_list>(<argument><expr><name>barsPositionX</name> <operator>+</operator> <literal type="number">80</literal> <operator>+</operator> <literal type="number">400</literal> <operator>+</operator> <literal type="number">100</literal> <operator>+</operator> <literal type="number">90</literal></expr></argument>, <argument><expr><literal type="number">670</literal> <operator>+</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name><name>playerLikes</name><operator>.</operator><name>mouth</name></name><operator>*</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name><name>font</name><operator>.</operator><name>baseSize</name></name><operator>/</operator><literal type="number">4</literal></expr></argument>, <argument><expr><name>RED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><macro><name>GuiButton</name><argument_list>(<argument>(Rectangle){ GetScreenWidth() - <literal type="number">280</literal></argument>, <argument><literal type="number">60</literal></argument>, <argument><literal type="number">260</literal></argument>, <argument><literal type="number">80</literal> }</argument>, <argument><literal type="string">"AGAIN!"</literal></argument>, <argument>-<literal type="number">1</literal></argument>)</argument_list></macro></expr>)</condition>
<block>{<block_content>
<expr_stmt><expr><name>finishScreen</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>


<function><type><name>void</name></type> <name>UnloadEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>texQmark</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>UnloadTexture</name><argument_list>(<argument><expr><name>texMatch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>int</name></type> <name>FinishEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name>finishScreen</name></expr>;</return>
</block_content>}</block></function></unit>
