<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\raylib-analysis\_cppstats_featurelocations\raylib\games\koala_seasons\screens\screens.h">
























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SCREENS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCREENS_H</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GAME_FPS</name></cpp:macro> <cpp:value>60.0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TIME_FACTOR</name></cpp:macro> <cpp:value>60.0/GAME_FPS</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAX_KILLS</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>




<typedef>typedef <type><enum>enum <name>GameScreen</name> <block>{ <decl><name>LOGO</name></decl>, <decl><name>TITLE</name></decl>, <decl><name>OPTIONS</name></decl>, <decl><name>GAMEPLAY</name></decl>, <decl><name>ENDING</name></decl> }</block></enum></type> <name>GameScreen</name>;</typedef>




<decl_stmt><decl><type><name>GameScreen</name></type> <name>currentScreen</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>Font</name></type> <name>font</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Shader</name></type> <name>colorBlend</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Texture2D</name></type> <name>atlas01</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Texture2D</name></type> <name>atlas02</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Sound</name></type> <name>fxJump</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>Sound</name></type> <name>fxDash</name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name>Sound</name></type> <name>fxEatLeaves</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sound</name></type> <name>fxDieSnake</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sound</name></type> <name>fxDieDingo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sound</name></type> <name>fxDieOwl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sound</name></type> <name>fxHitResin</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Sound</name></type> <name>fxWind</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>score</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>hiscore</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>killHistory</name><index>[<expr><name>MAX_KILLS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>killer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>seasons</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>years</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>currentLeaves</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>currentSeason</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>initSeason</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>initYears</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>rainChance</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content> 
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<function_decl><type><name>void</name></type> <name>InitLogoScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UpdateLogoScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DrawLogoScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UnloadLogoScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>FinishLogoScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>InitTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UpdateTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DrawTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UnloadTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>FinishTitleScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>InitOptionsScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UpdateOptionsScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DrawOptionsScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UnloadOptionsScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>FinishOptionsScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>InitGameplayScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UpdateGameplayScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DrawGameplayScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UnloadGameplayScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>FinishGameplayScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>void</name></type> <name>InitEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UpdateEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>DrawEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>UnloadEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>FinishEndingScreen</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif></unit>
