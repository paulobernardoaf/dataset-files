<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\libtomcrypt-analysis\_cppstats_featurelocations\libtomcrypt\tests\rotate_test.c">







<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;tomcrypt_test.h&gt;</cpp:file></cpp:include>


<function><type><name>int</name></type> <name>rotate_test</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ulong32</name></type> <name>L32</name> <init>= <expr><literal type="number">0x12345678UL</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong64</name></type> <name>L64</name> <init>= <expr><call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x1122334455667788</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>err</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>


<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x12345678UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 0 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x091a2b3cUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 1 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x048d159eUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 2 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x02468acfUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 3 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x81234567UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 4 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0xc091a2b3UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 5 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0xe048d159UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 6 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0xf02468acUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 7 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x78123456UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 8 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x3c091a2bUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 9 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x9e048d15UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 10 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xcf02468aUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 11 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x67812345UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 12 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xb3c091a2UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 13 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x59e048d1UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 14 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xacf02468UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 15 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x56781234UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 16 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x2b3c091aUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 17 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x159e048dUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 18 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x8acf0246UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 19 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x45678123UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 20 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">21</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xa2b3c091UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 21 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xd159e048UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 22 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x68acf024UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 23 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x34567812UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 24 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">25</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x1a2b3c09UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 25 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">26</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x8d159e04UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 26 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">27</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x468acf02UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 27 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x23456781UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 28 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">29</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x91a2b3c0UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 29 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x48d159e0UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 30 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">31</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x2468acf0UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR 31 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x1122334455667788</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 0 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x089119a22ab33bc4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 1 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x04488cd115599de2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 2 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x022446688aaccef1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 3 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8112233445566778</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 4 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4089119a22ab33bc</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 5 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x204488cd115599de</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 6 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x1022446688aaccef</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 7 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8811223344556677</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 8 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xc4089119a22ab33b</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 9 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xe204488cd115599d</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 10 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xf1022446688aacce</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 11 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x7881122334455667</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 12 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xbc4089119a22ab33</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 13 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xde204488cd115599</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 14 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xef1022446688aacc</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 15 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x7788112233445566</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 16 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x3bc4089119a22ab3</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 17 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x9de204488cd11559</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 18 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xcef1022446688aac</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 19 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x6778811223344556</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 20 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">21</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x33bc4089119a22ab</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 21 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x99de204488cd1155</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 22 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xccef1022446688aa</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 23 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x6677881122334455</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 24 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">25</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xb33bc4089119a22a</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 25 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">26</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x599de204488cd115</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 26 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">27</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xaccef1022446688a</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 27 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x5667788112233445</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 28 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">29</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xab33bc4089119a22</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 29 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x5599de204488cd11</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 30 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">31</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xaaccef1022446688</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 31 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x5566778811223344</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 32 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">33</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2ab33bc4089119a2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 33 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">34</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x15599de204488cd1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 34 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">35</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8aaccef102244668</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 35 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">36</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4556677881122334</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 36 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">37</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x22ab33bc4089119a</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 37 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">38</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x115599de204488cd</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 38 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">39</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x88aaccef10224466</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 39 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4455667788112233</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 40 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">41</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xa22ab33bc4089119</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 41 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">42</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xd115599de204488c</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 42 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">43</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x688aaccef1022446</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 43 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">44</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x3445566778811223</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 44 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">45</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x9a22ab33bc408911</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 45 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">46</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xcd115599de204488</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 46 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">47</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x6688aaccef102244</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 47 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">48</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x3344556677881122</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 48 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">49</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x19a22ab33bc40891</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 49 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8cd115599de20448</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 50 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">51</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x46688aaccef10224</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 51 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">52</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2334455667788112</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 52 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">53</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x119a22ab33bc4089</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 53 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">54</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x88cd115599de2044</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 54 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">55</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x446688aaccef1022</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 55 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">56</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2233445566778811</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 56 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">57</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x9119a22ab33bc408</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 57 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">58</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x488cd115599de204</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 58 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">59</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2446688aaccef102</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 59 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x1223344556677881</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 60 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">61</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x89119a22ab33bc40</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 61 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">62</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4488cd115599de20</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 62 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">63</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x22446688aaccef10</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64 63 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x12345678UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 0 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x2468acf0UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 1 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x48d159e0UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 2 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x91a2b3c0UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 3 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x23456781UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 4 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x468acf02UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 5 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x8d159e04UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 6 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x1a2b3c09UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 7 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x34567812UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 8 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x68acf024UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 9 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xd159e048UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 10 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xa2b3c091UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 11 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x45678123UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 12 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x8acf0246UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 13 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x159e048dUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 14 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x2b3c091aUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 15 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x56781234UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 16 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xacf02468UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 17 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x59e048d1UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 18 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xb3c091a2UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 19 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x67812345UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 20 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">21</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xcf02468aUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 21 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x9e048d15UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 22 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x3c091a2bUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 23 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x78123456UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 24 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">25</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xf02468acUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 25 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">26</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xe048d159UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 26 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">27</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xc091a2b3UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 27 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x81234567UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 28 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">29</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x02468acfUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 29 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x048d159eUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 30 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">31</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x091a2b3cUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL 31 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x1122334455667788</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 0 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x22446688aaccef10</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 1 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4488cd115599de20</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 2 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x89119a22ab33bc40</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 3 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x1223344556677881</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 4 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2446688aaccef102</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 5 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x488cd115599de204</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 6 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x9119a22ab33bc408</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 7 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2233445566778811</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 8 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x446688aaccef1022</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 9 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x88cd115599de2044</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 10 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x119a22ab33bc4089</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 11 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2334455667788112</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 12 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x46688aaccef10224</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 13 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8cd115599de20448</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 14 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x19a22ab33bc40891</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 15 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x3344556677881122</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 16 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x6688aaccef102244</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 17 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xcd115599de204488</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 18 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x9a22ab33bc408911</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 19 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x3445566778811223</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 20 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">21</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x688aaccef1022446</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 21 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xd115599de204488c</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 22 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xa22ab33bc4089119</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 23 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4455667788112233</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 24 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">25</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x88aaccef10224466</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 25 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">26</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x115599de204488cd</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 26 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">27</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x22ab33bc4089119a</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 27 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4556677881122334</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 28 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">29</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8aaccef102244668</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 29 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x15599de204488cd1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 30 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">31</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2ab33bc4089119a2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 31 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x5566778811223344</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 32 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">33</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xaaccef1022446688</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 33 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">34</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x5599de204488cd11</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 34 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">35</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xab33bc4089119a22</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 35 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">36</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x5667788112233445</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 36 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">37</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xaccef1022446688a</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 37 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">38</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x599de204488cd115</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 38 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">39</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xb33bc4089119a22a</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 39 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x6677881122334455</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 40 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">41</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xccef1022446688aa</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 41 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">42</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x99de204488cd1155</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 42 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">43</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x33bc4089119a22ab</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 43 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">44</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x6778811223344556</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 44 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">45</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xcef1022446688aac</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 45 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">46</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x9de204488cd11559</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 46 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">47</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x3bc4089119a22ab3</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 47 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">48</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x7788112233445566</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 48 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">49</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xef1022446688aacc</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 49 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xde204488cd115599</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 50 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">51</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xbc4089119a22ab33</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 51 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">52</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x7881122334455667</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 52 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">53</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xf1022446688aacce</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 53 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">54</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xe204488cd115599d</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 54 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">55</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xc4089119a22ab33b</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 55 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">56</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8811223344556677</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 56 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">57</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x1022446688aaccef</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 57 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">58</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x204488cd115599de</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 58 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">59</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4089119a22ab33bc</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 59 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8112233445566778</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 60 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">61</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x022446688aaccef1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 61 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">62</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x04488cd115599de2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 62 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">63</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x089119a22ab33bc4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64 63 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x12345678UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 0 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x091a2b3cUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 1 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x048d159eUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 2 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x02468acfUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 3 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x81234567UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 4 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0xc091a2b3UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 5 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0xe048d159UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 6 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0xf02468acUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 7 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x78123456UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 8 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x3c091a2bUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 9 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x9e048d15UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 10 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xcf02468aUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 11 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x67812345UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 12 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xb3c091a2UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 13 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x59e048d1UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 14 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xacf02468UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 15 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x56781234UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 16 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x2b3c091aUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 17 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x159e048dUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 18 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x8acf0246UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 19 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x45678123UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 20 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">21</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xa2b3c091UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 21 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xd159e048UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 22 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x68acf024UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 23 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x34567812UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 24 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">25</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x1a2b3c09UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 25 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">26</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x8d159e04UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 26 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">27</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x468acf02UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 27 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x23456781UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 28 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">29</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x91a2b3c0UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 29 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x48d159e0UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 30 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>RORc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">31</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x2468acf0UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"RORc 31 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x1122334455667788</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 0 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x089119a22ab33bc4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 1 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x04488cd115599de2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 2 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x022446688aaccef1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 3 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8112233445566778</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 4 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4089119a22ab33bc</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 5 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x204488cd115599de</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 6 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x1022446688aaccef</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 7 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8811223344556677</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 8 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xc4089119a22ab33b</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 9 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xe204488cd115599d</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 10 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xf1022446688aacce</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 11 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x7881122334455667</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 12 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xbc4089119a22ab33</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 13 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xde204488cd115599</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 14 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xef1022446688aacc</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 15 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x7788112233445566</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 16 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x3bc4089119a22ab3</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 17 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x9de204488cd11559</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 18 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xcef1022446688aac</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 19 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x6778811223344556</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 20 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">21</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x33bc4089119a22ab</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 21 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x99de204488cd1155</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 22 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xccef1022446688aa</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 23 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x6677881122334455</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 24 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">25</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xb33bc4089119a22a</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 25 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">26</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x599de204488cd115</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 26 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">27</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xaccef1022446688a</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 27 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x5667788112233445</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 28 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">29</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xab33bc4089119a22</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 29 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x5599de204488cd11</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 30 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">31</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xaaccef1022446688</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 31 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x5566778811223344</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 32 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">33</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2ab33bc4089119a2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 33 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">34</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x15599de204488cd1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 34 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">35</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8aaccef102244668</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 35 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">36</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4556677881122334</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 36 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">37</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x22ab33bc4089119a</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 37 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">38</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x115599de204488cd</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 38 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">39</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x88aaccef10224466</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 39 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4455667788112233</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 40 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">41</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xa22ab33bc4089119</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 41 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">42</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xd115599de204488c</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 42 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">43</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x688aaccef1022446</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 43 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">44</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x3445566778811223</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 44 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">45</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x9a22ab33bc408911</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 45 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">46</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xcd115599de204488</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 46 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">47</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x6688aaccef102244</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 47 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">48</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x3344556677881122</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 48 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">49</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x19a22ab33bc40891</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 49 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8cd115599de20448</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 50 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">51</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x46688aaccef10224</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 51 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">52</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2334455667788112</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 52 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">53</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x119a22ab33bc4089</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 53 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">54</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x88cd115599de2044</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 54 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">55</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x446688aaccef1022</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 55 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">56</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2233445566778811</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 56 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">57</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x9119a22ab33bc408</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 57 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">58</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x488cd115599de204</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 58 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">59</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2446688aaccef102</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 59 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x1223344556677881</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 60 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">61</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x89119a22ab33bc40</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 61 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">62</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4488cd115599de20</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 62 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROR64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">63</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x22446688aaccef10</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROR64c 63 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x12345678UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 0 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x2468acf0UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 1 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x48d159e0UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 2 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x91a2b3c0UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 3 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x23456781UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 4 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x468acf02UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 5 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x8d159e04UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 6 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x1a2b3c09UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 7 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x34567812UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 8 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <literal type="number">0x68acf024UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 9 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xd159e048UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 10 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xa2b3c091UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 11 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x45678123UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 12 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x8acf0246UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 13 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x159e048dUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 14 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x2b3c091aUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 15 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x56781234UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 16 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xacf02468UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 17 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x59e048d1UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 18 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xb3c091a2UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 19 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x67812345UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 20 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">21</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xcf02468aUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 21 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x9e048d15UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 22 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x3c091a2bUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 23 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x78123456UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 24 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">25</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xf02468acUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 25 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">26</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xe048d159UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 26 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">27</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0xc091a2b3UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 27 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x81234567UL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 28 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">29</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x02468acfUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 29 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x048d159eUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 30 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROLc</name><argument_list>(<argument><expr><name>L32</name></expr></argument>, <argument><expr><literal type="number">31</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0x091a2b3cUL</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROLc 31 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x1122334455667788</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 0 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x22446688aaccef10</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 1 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4488cd115599de20</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 2 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x89119a22ab33bc40</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 3 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x1223344556677881</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 4 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2446688aaccef102</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 5 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x488cd115599de204</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 6 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x9119a22ab33bc408</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 7 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2233445566778811</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 8 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument> )</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x446688aaccef1022</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 9 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x88cd115599de2044</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 10 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x119a22ab33bc4089</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 11 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2334455667788112</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 12 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x46688aaccef10224</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 13 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8cd115599de20448</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 14 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x19a22ab33bc40891</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 15 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x3344556677881122</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 16 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x6688aaccef102244</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 17 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xcd115599de204488</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 18 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">19</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x9a22ab33bc408911</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 19 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x3445566778811223</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 20 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">21</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x688aaccef1022446</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 21 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xd115599de204488c</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 22 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xa22ab33bc4089119</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 23 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4455667788112233</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 24 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">25</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x88aaccef10224466</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 25 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">26</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x115599de204488cd</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 26 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">27</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x22ab33bc4089119a</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 27 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4556677881122334</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 28 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">29</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8aaccef102244668</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 29 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x15599de204488cd1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 30 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">31</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x2ab33bc4089119a2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 31 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x5566778811223344</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 32 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">33</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xaaccef1022446688</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 33 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">34</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x5599de204488cd11</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 34 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">35</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xab33bc4089119a22</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 35 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">36</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x5667788112233445</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 36 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">37</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xaccef1022446688a</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 37 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">38</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x599de204488cd115</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 38 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">39</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xb33bc4089119a22a</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 39 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">40</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x6677881122334455</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 40 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">41</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xccef1022446688aa</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 41 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">42</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x99de204488cd1155</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 42 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">43</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x33bc4089119a22ab</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 43 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">44</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x6778811223344556</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 44 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">45</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xcef1022446688aac</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 45 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">46</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x9de204488cd11559</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 46 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">47</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x3bc4089119a22ab3</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 47 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">48</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x7788112233445566</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 48 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">49</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xef1022446688aacc</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 49 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">50</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xde204488cd115599</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 50 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">51</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xbc4089119a22ab33</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 51 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">52</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x7881122334455667</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 52 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">53</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xf1022446688aacce</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 53 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">54</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xe204488cd115599d</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 54 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">55</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0xc4089119a22ab33b</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 55 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">56</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8811223344556677</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 56 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">57</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x1022446688aaccef</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 57 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">58</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x204488cd115599de</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 58 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">59</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x4089119a22ab33bc</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 59 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x8112233445566778</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 60 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">61</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x022446688aaccef1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 61 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">62</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x04488cd115599de2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 62 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ROL64c</name><argument_list>(<argument><expr><name>L64</name></expr></argument>, <argument><expr><literal type="number">63</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>CONST64</name><argument_list>(<argument><expr><literal type="number">0x089119a22ab33bc4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"ROL64c 63 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>err</name><operator>++</operator></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>

<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></function>




</unit>
