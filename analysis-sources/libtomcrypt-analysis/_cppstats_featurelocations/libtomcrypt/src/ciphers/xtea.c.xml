<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\libtomcrypt-analysis\_cppstats_featurelocations\libtomcrypt\src\ciphers\xtea.c">












<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_private.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_XTEA</name></expr></argument>)</argument_list></call></expr></cpp:if>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>ltc_cipher_descriptor</name></name></type> <name>xtea_desc</name> <init>=
<expr><block>{
<expr><literal type="string">"xtea"</literal></expr>,
<expr><literal type="number">1</literal></expr>,
<expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">32</literal></expr>,
<expr><operator>&amp;</operator><name>xtea_setup</name></expr>,
<expr><operator>&amp;</operator><name>xtea_ecb_encrypt</name></expr>,
<expr><operator>&amp;</operator><name>xtea_ecb_decrypt</name></expr>,
<expr><operator>&amp;</operator><name>xtea_test</name></expr>,
<expr><operator>&amp;</operator><name>xtea_done</name></expr>,
<expr><operator>&amp;</operator><name>xtea_keysize</name></expr>,
<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name>int</name></type> <name>xtea_setup</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>keylen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num_rounds</name></decl></parameter>, <parameter><decl><type><name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ulong32</name></type> <name>x</name></decl>, <decl><type ref="prev"/><name>sum</name></decl>, <decl><type ref="prev"/><name><name>K</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>key</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>skey</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name>keylen</name> <operator>!=</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>CRYPT_INVALID_KEYSIZE</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>num_rounds</name> <operator>!=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>num_rounds</name> <operator>!=</operator> <literal type="number">32</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>CRYPT_INVALID_ROUNDS</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><call><name>LOAD32H</name><argument_list>(<argument><expr><name><name>K</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name>key</name><operator>+</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32H</name><argument_list>(<argument><expr><name><name>K</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><name>key</name><operator>+</operator><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32H</name><argument_list>(<argument><expr><name><name>K</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>, <argument><expr><name>key</name><operator>+</operator><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32H</name><argument_list>(<argument><expr><name><name>K</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>, <argument><expr><name>key</name><operator>+</operator><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <name>sum</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <literal type="number">32</literal></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>A</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>sum</name> <operator>+</operator> <name><name>K</name><index>[<expr><name>sum</name><operator>&amp;</operator><literal type="number">3</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>sum</name> <operator>=</operator> <operator>(</operator><name>sum</name> <operator>+</operator> <literal type="number">0x9E3779B9UL</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>B</name><index>[<expr><name>x</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>sum</name> <operator>+</operator> <name><name>K</name><index>[<expr><operator>(</operator><name>sum</name><operator>&gt;&gt;</operator><literal type="number">11</literal><operator>)</operator><operator>&amp;</operator><literal type="number">3</literal></expr>]</index></name><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>
</block_content>}</block></for>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_CLEAN_STACK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>zeromem</name><argument_list>(<argument><expr><operator>&amp;</operator><name>K</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>K</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></function>








<function><type><name>int</name></type> <name>xtea_ecb_encrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>pt</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ct</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ulong32</name></type> <name>y</name></decl>, <decl><type ref="prev"/><name>z</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>r</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>pt</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>ct</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>skey</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LOAD32H</name><argument_list>(<argument><expr><name>y</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>pt</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32H</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>pt</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>r</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>r</name> <operator>&lt;</operator> <literal type="number">32</literal></expr>;</condition> <incr><expr><name>r</name> <operator>+=</operator> <literal type="number">4</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>y</name> <operator>=</operator> <operator>(</operator><name>y</name> <operator>+</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>z</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>z</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>z</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>A</name><index>[<expr><name>r</name></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>z</name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>+</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>y</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>y</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>y</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>B</name><index>[<expr><name>r</name></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>y</name> <operator>=</operator> <operator>(</operator><name>y</name> <operator>+</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>z</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>z</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>z</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>A</name><index>[<expr><name>r</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>z</name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>+</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>y</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>y</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>y</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>B</name><index>[<expr><name>r</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>y</name> <operator>=</operator> <operator>(</operator><name>y</name> <operator>+</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>z</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>z</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>z</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>A</name><index>[<expr><name>r</name><operator>+</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>z</name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>+</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>y</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>y</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>y</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>B</name><index>[<expr><name>r</name><operator>+</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>y</name> <operator>=</operator> <operator>(</operator><name>y</name> <operator>+</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>z</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>z</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>z</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>A</name><index>[<expr><name>r</name><operator>+</operator><literal type="number">3</literal></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>z</name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>+</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>y</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>y</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>y</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>B</name><index>[<expr><name>r</name><operator>+</operator><literal type="number">3</literal></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>STORE32H</name><argument_list>(<argument><expr><name>y</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ct</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STORE32H</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ct</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></function>








<function><type><name>int</name></type> <name>xtea_ecb_decrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ct</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>pt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ulong32</name></type> <name>y</name></decl>, <decl><type ref="prev"/><name>z</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>r</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>pt</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>ct</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>skey</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LOAD32H</name><argument_list>(<argument><expr><name>y</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ct</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32H</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>ct</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>r</name> <operator>=</operator> <literal type="number">31</literal></expr>;</init> <condition><expr><name>r</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>r</name> <operator>-=</operator> <literal type="number">4</literal></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>z</name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>-</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>y</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>y</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>y</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>B</name><index>[<expr><name>r</name></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>y</name> <operator>=</operator> <operator>(</operator><name>y</name> <operator>-</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>z</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>z</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>z</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>A</name><index>[<expr><name>r</name></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>z</name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>-</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>y</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>y</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>y</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>B</name><index>[<expr><name>r</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>y</name> <operator>=</operator> <operator>(</operator><name>y</name> <operator>-</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>z</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>z</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>z</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>A</name><index>[<expr><name>r</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>z</name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>-</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>y</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>y</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>y</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>B</name><index>[<expr><name>r</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>y</name> <operator>=</operator> <operator>(</operator><name>y</name> <operator>-</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>z</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>z</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>z</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>A</name><index>[<expr><name>r</name><operator>-</operator><literal type="number">2</literal></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>z</name> <operator>=</operator> <operator>(</operator><name>z</name> <operator>-</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>y</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>y</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>y</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>B</name><index>[<expr><name>r</name><operator>-</operator><literal type="number">3</literal></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>y</name> <operator>=</operator> <operator>(</operator><name>y</name> <operator>-</operator> <operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>z</name><operator>&lt;&lt;</operator><literal type="number">4</literal><operator>)</operator><operator>^</operator><operator>(</operator><name>z</name><operator>&gt;&gt;</operator><literal type="number">5</literal><operator>)</operator><operator>)</operator> <operator>+</operator> <name>z</name><operator>)</operator> <operator>^</operator> <name><name>skey</name><operator>-&gt;</operator><name>xtea</name><operator>.</operator><name>A</name><index>[<expr><name>r</name><operator>-</operator><literal type="number">3</literal></expr>]</index></name><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xFFFFFFFFUL</literal></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>STORE32H</name><argument_list>(<argument><expr><name>y</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>pt</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STORE32H</name><argument_list>(<argument><expr><name>z</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>pt</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></function>





<function><type><name>int</name></type> <name>xtea_test</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LTC_TEST</name></expr></argument>)</argument_list></call></expr></cpp:if>
<return>return <expr><name>CRYPT_NOP</name></expr>;</return>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>key</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>pt</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>ct</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name><name>tests</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xde</literal></expr>, <expr><literal type="number">0xe9</literal></expr>, <expr><literal type="number">0xd4</literal></expr>, <expr><literal type="number">0xd8</literal></expr>, <expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0xd9</literal></expr> }</block></expr>
}</block></expr>, <expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x02</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x04</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0x97</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x76</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x4d</literal></expr>, <expr><literal type="number">0x72</literal></expr> }</block></expr>
}</block></expr>, <expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x04</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x06</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x02</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xb1</literal></expr>, <expr><literal type="number">0xfd</literal></expr>, <expr><literal type="number">0x5d</literal></expr>, <expr><literal type="number">0xa9</literal></expr>, <expr><literal type="number">0xcc</literal></expr>, <expr><literal type="number">0x6d</literal></expr>, <expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0xdc</literal></expr> }</block></expr>
}</block></expr>, <expr><block>{
<expr><block>{ <expr><literal type="number">0x78</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0x4b</literal></expr>, <expr><literal type="number">0x3c</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x1e</literal></expr>, <expr><literal type="number">0x0f</literal></expr>,
<expr><literal type="number">0xf0</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0xc3</literal></expr>, <expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x87</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xf0</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0xc3</literal></expr>, <expr><literal type="number">0xb4</literal></expr>, <expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x87</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0x4b</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x34</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0xdf</literal></expr>, <expr><literal type="number">0xab</literal></expr> }</block></expr>
}</block></expr>, <expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x07</literal></expr>,
<expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x0c</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0x0f</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0x48</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0xf3</literal></expr>, <expr><literal type="number">0xd0</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x2c</literal></expr>, <expr><literal type="number">0xb5</literal></expr> }</block></expr>
}</block></expr>, <expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x07</literal></expr>,
<expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x0c</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0x0f</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xe7</literal></expr>, <expr><literal type="number">0x8f</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0xd8</literal></expr> }</block></expr>
}</block></expr>, <expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x03</literal></expr>, <expr><literal type="number">0x04</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x07</literal></expr>,
<expr><literal type="number">0x08</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0x0b</literal></expr>, <expr><literal type="number">0x0c</literal></expr>, <expr><literal type="number">0x0d</literal></expr>, <expr><literal type="number">0x0e</literal></expr>, <expr><literal type="number">0x0f</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0x5b</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0x27</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0x48</literal></expr>, <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0x7f</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr> }</block></expr>
}</block></expr>, <expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0x48</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xa0</literal></expr>, <expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x89</literal></expr>, <expr><literal type="number">0xf8</literal></expr>, <expr><literal type="number">0xb8</literal></expr>, <expr><literal type="number">0xef</literal></expr>, <expr><literal type="number">0xa5</literal></expr> }</block></expr>
}</block></expr>, <expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0x37</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0x82</literal></expr>, <expr><literal type="number">0x1a</literal></expr>, <expr><literal type="number">0x8c</literal></expr>, <expr><literal type="number">0x2d</literal></expr> }</block></expr>
}</block></expr>, <expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0x22</literal></expr>, <expr><literal type="number">0x5d</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0x4e</literal></expr>, <expr><literal type="number">0x76</literal></expr>, <expr><literal type="number">0x55</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr> }</block></expr>
}</block></expr>
}</block></expr></init></decl>;</struct>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>tmp</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>symmetric_key</name></type> <name>skey</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>err</name></decl>, <decl><type ref="prev"/><name>y</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><name>tests</name></expr></argument>)</argument_list></sizeof><operator>/</operator><sizeof>sizeof<argument_list>(<argument><expr><name><name>tests</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof><operator>)</operator></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>zeromem</name><argument_list>(<argument><expr><operator>&amp;</operator><name>skey</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>skey</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>xtea_setup</name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>key</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>skey</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>CRYPT_OK</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>xtea_ecb_encrypt</name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pt</name></expr></argument>, <argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>xtea_ecb_decrypt</name><argument_list>(<argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>tmp</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>compare_testvector</name><argument_list>(<argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>ct</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"XTEA Encrypt"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal> <operator>||</operator>
<call><name>compare_testvector</name><argument_list>(<argument><expr><name><name>tmp</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>pt</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"XTEA Decrypt"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>CRYPT_FAIL_TESTVECTOR</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">8</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>y</name></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt></block_content></block></for>
<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">1000</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name>xtea_ecb_encrypt</name><argument_list>(<argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">1000</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name>xtea_ecb_decrypt</name><argument_list>(<argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<for>for <control>(<init><expr><name>y</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>y</name> <operator>&lt;</operator> <literal type="number">8</literal></expr>;</condition> <incr><expr><name>y</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content> <if_stmt><if>if <condition>(<expr><name><name>tmp</name><index>[<expr><literal type="number">0</literal></expr>]</index><index>[<expr><name>y</name></expr>]</index></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>CRYPT_FAIL_TESTVECTOR</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>
</block_content>}</block></for> 

<return>return <expr><name>CRYPT_OK</name></expr>;</return>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>




<function><type><name>void</name></type> <name>xtea_done</name><parameter_list>(<parameter><decl><type><name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LTC_UNUSED_PARAM</name><argument_list>(<argument><expr><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>






<function><type><name>int</name></type> <name>xtea_keysize</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>keysize</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>keysize</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>*</operator><name>keysize</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>CRYPT_INVALID_KEYSIZE</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>keysize</name> <operator>=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></function>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>







</unit>
