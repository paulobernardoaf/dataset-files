<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\libtomcrypt-analysis\_cppstats_featurelocations\libtomcrypt\src\ciphers\kasumi.c">














<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_private.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_KASUMI</name></expr></argument>)</argument_list></call></expr></cpp:if>

<typedef>typedef <type><name>unsigned</name></type> <name>u16</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ROL16</name><parameter_list>(<parameter><type><name>x</name></type></parameter>, <parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((((x)&lt;&lt;(y)) | ((x)&gt;&gt;(16-(y)))) &amp; 0xFFFF)</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>ltc_cipher_descriptor</name></name></type> <name>kasumi_desc</name> <init>= <expr><block>{
<expr><literal type="string">"kasumi"</literal></expr>,
<expr><literal type="number">21</literal></expr>,
<expr><literal type="number">16</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">8</literal></expr>,
<expr><operator>&amp;</operator><name>kasumi_setup</name></expr>,
<expr><operator>&amp;</operator><name>kasumi_ecb_encrypt</name></expr>,
<expr><operator>&amp;</operator><name>kasumi_ecb_decrypt</name></expr>,
<expr><operator>&amp;</operator><name>kasumi_test</name></expr>,
<expr><operator>&amp;</operator><name>kasumi_done</name></expr>,
<expr><operator>&amp;</operator><name>kasumi_keysize</name></expr>,
<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>u16</name></type> <name>FI</name><parameter_list>( <parameter><decl><type><name>u16</name></type> <name>in</name></decl></parameter>, <parameter><decl><type><name>u16</name></type> <name>subkey</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>u16</name></type> <name>nine</name></decl>, <decl><type ref="prev"/><name>seven</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>u16</name></type> <name><name>S7</name><index>[<expr><literal type="number">128</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">54</literal></expr>, <expr><literal type="number">50</literal></expr>, <expr><literal type="number">62</literal></expr>, <expr><literal type="number">56</literal></expr>, <expr><literal type="number">22</literal></expr>, <expr><literal type="number">34</literal></expr>, <expr><literal type="number">94</literal></expr>, <expr><literal type="number">96</literal></expr>, <expr><literal type="number">38</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">63</literal></expr>, <expr><literal type="number">93</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">18</literal></expr>,<expr><literal type="number">123</literal></expr>, <expr><literal type="number">33</literal></expr>,
<expr><literal type="number">55</literal></expr>,<expr><literal type="number">113</literal></expr>, <expr><literal type="number">39</literal></expr>,<expr><literal type="number">114</literal></expr>, <expr><literal type="number">21</literal></expr>, <expr><literal type="number">67</literal></expr>, <expr><literal type="number">65</literal></expr>, <expr><literal type="number">12</literal></expr>, <expr><literal type="number">47</literal></expr>, <expr><literal type="number">73</literal></expr>, <expr><literal type="number">46</literal></expr>, <expr><literal type="number">27</literal></expr>, <expr><literal type="number">25</literal></expr>,<expr><literal type="number">111</literal></expr>,<expr><literal type="number">124</literal></expr>, <expr><literal type="number">81</literal></expr>,
<expr><literal type="number">53</literal></expr>, <expr><literal type="number">9</literal></expr>,<expr><literal type="number">121</literal></expr>, <expr><literal type="number">79</literal></expr>, <expr><literal type="number">52</literal></expr>, <expr><literal type="number">60</literal></expr>, <expr><literal type="number">58</literal></expr>, <expr><literal type="number">48</literal></expr>,<expr><literal type="number">101</literal></expr>,<expr><literal type="number">127</literal></expr>, <expr><literal type="number">40</literal></expr>,<expr><literal type="number">120</literal></expr>,<expr><literal type="number">104</literal></expr>, <expr><literal type="number">70</literal></expr>, <expr><literal type="number">71</literal></expr>, <expr><literal type="number">43</literal></expr>,
<expr><literal type="number">20</literal></expr>,<expr><literal type="number">122</literal></expr>, <expr><literal type="number">72</literal></expr>, <expr><literal type="number">61</literal></expr>, <expr><literal type="number">23</literal></expr>,<expr><literal type="number">109</literal></expr>, <expr><literal type="number">13</literal></expr>,<expr><literal type="number">100</literal></expr>, <expr><literal type="number">77</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">16</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">82</literal></expr>, <expr><literal type="number">10</literal></expr>,<expr><literal type="number">105</literal></expr>, <expr><literal type="number">98</literal></expr>,
<expr><literal type="number">117</literal></expr>,<expr><literal type="number">116</literal></expr>, <expr><literal type="number">76</literal></expr>, <expr><literal type="number">11</literal></expr>, <expr><literal type="number">89</literal></expr>,<expr><literal type="number">106</literal></expr>, <expr><literal type="number">0</literal></expr>,<expr><literal type="number">125</literal></expr>,<expr><literal type="number">118</literal></expr>, <expr><literal type="number">99</literal></expr>, <expr><literal type="number">86</literal></expr>, <expr><literal type="number">69</literal></expr>, <expr><literal type="number">30</literal></expr>, <expr><literal type="number">57</literal></expr>,<expr><literal type="number">126</literal></expr>, <expr><literal type="number">87</literal></expr>,
<expr><literal type="number">112</literal></expr>, <expr><literal type="number">51</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">95</literal></expr>, <expr><literal type="number">14</literal></expr>, <expr><literal type="number">90</literal></expr>, <expr><literal type="number">84</literal></expr>, <expr><literal type="number">91</literal></expr>, <expr><literal type="number">8</literal></expr>, <expr><literal type="number">35</literal></expr>,<expr><literal type="number">103</literal></expr>, <expr><literal type="number">32</literal></expr>, <expr><literal type="number">97</literal></expr>, <expr><literal type="number">28</literal></expr>, <expr><literal type="number">66</literal></expr>,
<expr><literal type="number">102</literal></expr>, <expr><literal type="number">31</literal></expr>, <expr><literal type="number">26</literal></expr>, <expr><literal type="number">45</literal></expr>, <expr><literal type="number">75</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">85</literal></expr>, <expr><literal type="number">92</literal></expr>, <expr><literal type="number">37</literal></expr>, <expr><literal type="number">74</literal></expr>, <expr><literal type="number">80</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">68</literal></expr>, <expr><literal type="number">29</literal></expr>,<expr><literal type="number">115</literal></expr>, <expr><literal type="number">44</literal></expr>,
<expr><literal type="number">64</literal></expr>,<expr><literal type="number">107</literal></expr>,<expr><literal type="number">108</literal></expr>, <expr><literal type="number">24</literal></expr>,<expr><literal type="number">110</literal></expr>, <expr><literal type="number">83</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">78</literal></expr>, <expr><literal type="number">42</literal></expr>, <expr><literal type="number">19</literal></expr>, <expr><literal type="number">15</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">88</literal></expr>,<expr><literal type="number">119</literal></expr>, <expr><literal type="number">59</literal></expr>, <expr><literal type="number">3</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>u16</name></type> <name><name>S9</name><index>[<expr><literal type="number">512</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">167</literal></expr>,<expr><literal type="number">239</literal></expr>,<expr><literal type="number">161</literal></expr>,<expr><literal type="number">379</literal></expr>,<expr><literal type="number">391</literal></expr>,<expr><literal type="number">334</literal></expr>, <expr><literal type="number">9</literal></expr>,<expr><literal type="number">338</literal></expr>, <expr><literal type="number">38</literal></expr>,<expr><literal type="number">226</literal></expr>, <expr><literal type="number">48</literal></expr>,<expr><literal type="number">358</literal></expr>,<expr><literal type="number">452</literal></expr>,<expr><literal type="number">385</literal></expr>, <expr><literal type="number">90</literal></expr>,<expr><literal type="number">397</literal></expr>,
<expr><literal type="number">183</literal></expr>,<expr><literal type="number">253</literal></expr>,<expr><literal type="number">147</literal></expr>,<expr><literal type="number">331</literal></expr>,<expr><literal type="number">415</literal></expr>,<expr><literal type="number">340</literal></expr>, <expr><literal type="number">51</literal></expr>,<expr><literal type="number">362</literal></expr>,<expr><literal type="number">306</literal></expr>,<expr><literal type="number">500</literal></expr>,<expr><literal type="number">262</literal></expr>, <expr><literal type="number">82</literal></expr>,<expr><literal type="number">216</literal></expr>,<expr><literal type="number">159</literal></expr>,<expr><literal type="number">356</literal></expr>,<expr><literal type="number">177</literal></expr>,
<expr><literal type="number">175</literal></expr>,<expr><literal type="number">241</literal></expr>,<expr><literal type="number">489</literal></expr>, <expr><literal type="number">37</literal></expr>,<expr><literal type="number">206</literal></expr>, <expr><literal type="number">17</literal></expr>, <expr><literal type="number">0</literal></expr>,<expr><literal type="number">333</literal></expr>, <expr><literal type="number">44</literal></expr>,<expr><literal type="number">254</literal></expr>,<expr><literal type="number">378</literal></expr>, <expr><literal type="number">58</literal></expr>,<expr><literal type="number">143</literal></expr>,<expr><literal type="number">220</literal></expr>, <expr><literal type="number">81</literal></expr>,<expr><literal type="number">400</literal></expr>,
<expr><literal type="number">95</literal></expr>, <expr><literal type="number">3</literal></expr>,<expr><literal type="number">315</literal></expr>,<expr><literal type="number">245</literal></expr>, <expr><literal type="number">54</literal></expr>,<expr><literal type="number">235</literal></expr>,<expr><literal type="number">218</literal></expr>,<expr><literal type="number">405</literal></expr>,<expr><literal type="number">472</literal></expr>,<expr><literal type="number">264</literal></expr>,<expr><literal type="number">172</literal></expr>,<expr><literal type="number">494</literal></expr>,<expr><literal type="number">371</literal></expr>,<expr><literal type="number">290</literal></expr>,<expr><literal type="number">399</literal></expr>, <expr><literal type="number">76</literal></expr>,
<expr><literal type="number">165</literal></expr>,<expr><literal type="number">197</literal></expr>,<expr><literal type="number">395</literal></expr>,<expr><literal type="number">121</literal></expr>,<expr><literal type="number">257</literal></expr>,<expr><literal type="number">480</literal></expr>,<expr><literal type="number">423</literal></expr>,<expr><literal type="number">212</literal></expr>,<expr><literal type="number">240</literal></expr>, <expr><literal type="number">28</literal></expr>,<expr><literal type="number">462</literal></expr>,<expr><literal type="number">176</literal></expr>,<expr><literal type="number">406</literal></expr>,<expr><literal type="number">507</literal></expr>,<expr><literal type="number">288</literal></expr>,<expr><literal type="number">223</literal></expr>,
<expr><literal type="number">501</literal></expr>,<expr><literal type="number">407</literal></expr>,<expr><literal type="number">249</literal></expr>,<expr><literal type="number">265</literal></expr>, <expr><literal type="number">89</literal></expr>,<expr><literal type="number">186</literal></expr>,<expr><literal type="number">221</literal></expr>,<expr><literal type="number">428</literal></expr>,<expr><literal type="number">164</literal></expr>, <expr><literal type="number">74</literal></expr>,<expr><literal type="number">440</literal></expr>,<expr><literal type="number">196</literal></expr>,<expr><literal type="number">458</literal></expr>,<expr><literal type="number">421</literal></expr>,<expr><literal type="number">350</literal></expr>,<expr><literal type="number">163</literal></expr>,
<expr><literal type="number">232</literal></expr>,<expr><literal type="number">158</literal></expr>,<expr><literal type="number">134</literal></expr>,<expr><literal type="number">354</literal></expr>, <expr><literal type="number">13</literal></expr>,<expr><literal type="number">250</literal></expr>,<expr><literal type="number">491</literal></expr>,<expr><literal type="number">142</literal></expr>,<expr><literal type="number">191</literal></expr>, <expr><literal type="number">69</literal></expr>,<expr><literal type="number">193</literal></expr>,<expr><literal type="number">425</literal></expr>,<expr><literal type="number">152</literal></expr>,<expr><literal type="number">227</literal></expr>,<expr><literal type="number">366</literal></expr>,<expr><literal type="number">135</literal></expr>,
<expr><literal type="number">344</literal></expr>,<expr><literal type="number">300</literal></expr>,<expr><literal type="number">276</literal></expr>,<expr><literal type="number">242</literal></expr>,<expr><literal type="number">437</literal></expr>,<expr><literal type="number">320</literal></expr>,<expr><literal type="number">113</literal></expr>,<expr><literal type="number">278</literal></expr>, <expr><literal type="number">11</literal></expr>,<expr><literal type="number">243</literal></expr>, <expr><literal type="number">87</literal></expr>,<expr><literal type="number">317</literal></expr>, <expr><literal type="number">36</literal></expr>, <expr><literal type="number">93</literal></expr>,<expr><literal type="number">496</literal></expr>, <expr><literal type="number">27</literal></expr>,
<expr><literal type="number">487</literal></expr>,<expr><literal type="number">446</literal></expr>,<expr><literal type="number">482</literal></expr>, <expr><literal type="number">41</literal></expr>, <expr><literal type="number">68</literal></expr>,<expr><literal type="number">156</literal></expr>,<expr><literal type="number">457</literal></expr>,<expr><literal type="number">131</literal></expr>,<expr><literal type="number">326</literal></expr>,<expr><literal type="number">403</literal></expr>,<expr><literal type="number">339</literal></expr>, <expr><literal type="number">20</literal></expr>, <expr><literal type="number">39</literal></expr>,<expr><literal type="number">115</literal></expr>,<expr><literal type="number">442</literal></expr>,<expr><literal type="number">124</literal></expr>,
<expr><literal type="number">475</literal></expr>,<expr><literal type="number">384</literal></expr>,<expr><literal type="number">508</literal></expr>, <expr><literal type="number">53</literal></expr>,<expr><literal type="number">112</literal></expr>,<expr><literal type="number">170</literal></expr>,<expr><literal type="number">479</literal></expr>,<expr><literal type="number">151</literal></expr>,<expr><literal type="number">126</literal></expr>,<expr><literal type="number">169</literal></expr>, <expr><literal type="number">73</literal></expr>,<expr><literal type="number">268</literal></expr>,<expr><literal type="number">279</literal></expr>,<expr><literal type="number">321</literal></expr>,<expr><literal type="number">168</literal></expr>,<expr><literal type="number">364</literal></expr>,
<expr><literal type="number">363</literal></expr>,<expr><literal type="number">292</literal></expr>, <expr><literal type="number">46</literal></expr>,<expr><literal type="number">499</literal></expr>,<expr><literal type="number">393</literal></expr>,<expr><literal type="number">327</literal></expr>,<expr><literal type="number">324</literal></expr>, <expr><literal type="number">24</literal></expr>,<expr><literal type="number">456</literal></expr>,<expr><literal type="number">267</literal></expr>,<expr><literal type="number">157</literal></expr>,<expr><literal type="number">460</literal></expr>,<expr><literal type="number">488</literal></expr>,<expr><literal type="number">426</literal></expr>,<expr><literal type="number">309</literal></expr>,<expr><literal type="number">229</literal></expr>,
<expr><literal type="number">439</literal></expr>,<expr><literal type="number">506</literal></expr>,<expr><literal type="number">208</literal></expr>,<expr><literal type="number">271</literal></expr>,<expr><literal type="number">349</literal></expr>,<expr><literal type="number">401</literal></expr>,<expr><literal type="number">434</literal></expr>,<expr><literal type="number">236</literal></expr>, <expr><literal type="number">16</literal></expr>,<expr><literal type="number">209</literal></expr>,<expr><literal type="number">359</literal></expr>, <expr><literal type="number">52</literal></expr>, <expr><literal type="number">56</literal></expr>,<expr><literal type="number">120</literal></expr>,<expr><literal type="number">199</literal></expr>,<expr><literal type="number">277</literal></expr>,
<expr><literal type="number">465</literal></expr>,<expr><literal type="number">416</literal></expr>,<expr><literal type="number">252</literal></expr>,<expr><literal type="number">287</literal></expr>,<expr><literal type="number">246</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">83</literal></expr>,<expr><literal type="number">305</literal></expr>,<expr><literal type="number">420</literal></expr>,<expr><literal type="number">345</literal></expr>,<expr><literal type="number">153</literal></expr>,<expr><literal type="number">502</literal></expr>, <expr><literal type="number">65</literal></expr>, <expr><literal type="number">61</literal></expr>,<expr><literal type="number">244</literal></expr>,<expr><literal type="number">282</literal></expr>,
<expr><literal type="number">173</literal></expr>,<expr><literal type="number">222</literal></expr>,<expr><literal type="number">418</literal></expr>, <expr><literal type="number">67</literal></expr>,<expr><literal type="number">386</literal></expr>,<expr><literal type="number">368</literal></expr>,<expr><literal type="number">261</literal></expr>,<expr><literal type="number">101</literal></expr>,<expr><literal type="number">476</literal></expr>,<expr><literal type="number">291</literal></expr>,<expr><literal type="number">195</literal></expr>,<expr><literal type="number">430</literal></expr>, <expr><literal type="number">49</literal></expr>, <expr><literal type="number">79</literal></expr>,<expr><literal type="number">166</literal></expr>,<expr><literal type="number">330</literal></expr>,
<expr><literal type="number">280</literal></expr>,<expr><literal type="number">383</literal></expr>,<expr><literal type="number">373</literal></expr>,<expr><literal type="number">128</literal></expr>,<expr><literal type="number">382</literal></expr>,<expr><literal type="number">408</literal></expr>,<expr><literal type="number">155</literal></expr>,<expr><literal type="number">495</literal></expr>,<expr><literal type="number">367</literal></expr>,<expr><literal type="number">388</literal></expr>,<expr><literal type="number">274</literal></expr>,<expr><literal type="number">107</literal></expr>,<expr><literal type="number">459</literal></expr>,<expr><literal type="number">417</literal></expr>, <expr><literal type="number">62</literal></expr>,<expr><literal type="number">454</literal></expr>,
<expr><literal type="number">132</literal></expr>,<expr><literal type="number">225</literal></expr>,<expr><literal type="number">203</literal></expr>,<expr><literal type="number">316</literal></expr>,<expr><literal type="number">234</literal></expr>, <expr><literal type="number">14</literal></expr>,<expr><literal type="number">301</literal></expr>, <expr><literal type="number">91</literal></expr>,<expr><literal type="number">503</literal></expr>,<expr><literal type="number">286</literal></expr>,<expr><literal type="number">424</literal></expr>,<expr><literal type="number">211</literal></expr>,<expr><literal type="number">347</literal></expr>,<expr><literal type="number">307</literal></expr>,<expr><literal type="number">140</literal></expr>,<expr><literal type="number">374</literal></expr>,
<expr><literal type="number">35</literal></expr>,<expr><literal type="number">103</literal></expr>,<expr><literal type="number">125</literal></expr>,<expr><literal type="number">427</literal></expr>, <expr><literal type="number">19</literal></expr>,<expr><literal type="number">214</literal></expr>,<expr><literal type="number">453</literal></expr>,<expr><literal type="number">146</literal></expr>,<expr><literal type="number">498</literal></expr>,<expr><literal type="number">314</literal></expr>,<expr><literal type="number">444</literal></expr>,<expr><literal type="number">230</literal></expr>,<expr><literal type="number">256</literal></expr>,<expr><literal type="number">329</literal></expr>,<expr><literal type="number">198</literal></expr>,<expr><literal type="number">285</literal></expr>,
<expr><literal type="number">50</literal></expr>,<expr><literal type="number">116</literal></expr>, <expr><literal type="number">78</literal></expr>,<expr><literal type="number">410</literal></expr>, <expr><literal type="number">10</literal></expr>,<expr><literal type="number">205</literal></expr>,<expr><literal type="number">510</literal></expr>,<expr><literal type="number">171</literal></expr>,<expr><literal type="number">231</literal></expr>, <expr><literal type="number">45</literal></expr>,<expr><literal type="number">139</literal></expr>,<expr><literal type="number">467</literal></expr>, <expr><literal type="number">29</literal></expr>, <expr><literal type="number">86</literal></expr>,<expr><literal type="number">505</literal></expr>, <expr><literal type="number">32</literal></expr>,
<expr><literal type="number">72</literal></expr>, <expr><literal type="number">26</literal></expr>,<expr><literal type="number">342</literal></expr>,<expr><literal type="number">150</literal></expr>,<expr><literal type="number">313</literal></expr>,<expr><literal type="number">490</literal></expr>,<expr><literal type="number">431</literal></expr>,<expr><literal type="number">238</literal></expr>,<expr><literal type="number">411</literal></expr>,<expr><literal type="number">325</literal></expr>,<expr><literal type="number">149</literal></expr>,<expr><literal type="number">473</literal></expr>, <expr><literal type="number">40</literal></expr>,<expr><literal type="number">119</literal></expr>,<expr><literal type="number">174</literal></expr>,<expr><literal type="number">355</literal></expr>,
<expr><literal type="number">185</literal></expr>,<expr><literal type="number">233</literal></expr>,<expr><literal type="number">389</literal></expr>, <expr><literal type="number">71</literal></expr>,<expr><literal type="number">448</literal></expr>,<expr><literal type="number">273</literal></expr>,<expr><literal type="number">372</literal></expr>, <expr><literal type="number">55</literal></expr>,<expr><literal type="number">110</literal></expr>,<expr><literal type="number">178</literal></expr>,<expr><literal type="number">322</literal></expr>, <expr><literal type="number">12</literal></expr>,<expr><literal type="number">469</literal></expr>,<expr><literal type="number">392</literal></expr>,<expr><literal type="number">369</literal></expr>,<expr><literal type="number">190</literal></expr>,
<expr><literal type="number">1</literal></expr>,<expr><literal type="number">109</literal></expr>,<expr><literal type="number">375</literal></expr>,<expr><literal type="number">137</literal></expr>,<expr><literal type="number">181</literal></expr>, <expr><literal type="number">88</literal></expr>, <expr><literal type="number">75</literal></expr>,<expr><literal type="number">308</literal></expr>,<expr><literal type="number">260</literal></expr>,<expr><literal type="number">484</literal></expr>, <expr><literal type="number">98</literal></expr>,<expr><literal type="number">272</literal></expr>,<expr><literal type="number">370</literal></expr>,<expr><literal type="number">275</literal></expr>,<expr><literal type="number">412</literal></expr>,<expr><literal type="number">111</literal></expr>,
<expr><literal type="number">336</literal></expr>,<expr><literal type="number">318</literal></expr>, <expr><literal type="number">4</literal></expr>,<expr><literal type="number">504</literal></expr>,<expr><literal type="number">492</literal></expr>,<expr><literal type="number">259</literal></expr>,<expr><literal type="number">304</literal></expr>, <expr><literal type="number">77</literal></expr>,<expr><literal type="number">337</literal></expr>,<expr><literal type="number">435</literal></expr>, <expr><literal type="number">21</literal></expr>,<expr><literal type="number">357</literal></expr>,<expr><literal type="number">303</literal></expr>,<expr><literal type="number">332</literal></expr>,<expr><literal type="number">483</literal></expr>, <expr><literal type="number">18</literal></expr>,
<expr><literal type="number">47</literal></expr>, <expr><literal type="number">85</literal></expr>, <expr><literal type="number">25</literal></expr>,<expr><literal type="number">497</literal></expr>,<expr><literal type="number">474</literal></expr>,<expr><literal type="number">289</literal></expr>,<expr><literal type="number">100</literal></expr>,<expr><literal type="number">269</literal></expr>,<expr><literal type="number">296</literal></expr>,<expr><literal type="number">478</literal></expr>,<expr><literal type="number">270</literal></expr>,<expr><literal type="number">106</literal></expr>, <expr><literal type="number">31</literal></expr>,<expr><literal type="number">104</literal></expr>,<expr><literal type="number">433</literal></expr>, <expr><literal type="number">84</literal></expr>,
<expr><literal type="number">414</literal></expr>,<expr><literal type="number">486</literal></expr>,<expr><literal type="number">394</literal></expr>, <expr><literal type="number">96</literal></expr>, <expr><literal type="number">99</literal></expr>,<expr><literal type="number">154</literal></expr>,<expr><literal type="number">511</literal></expr>,<expr><literal type="number">148</literal></expr>,<expr><literal type="number">413</literal></expr>,<expr><literal type="number">361</literal></expr>,<expr><literal type="number">409</literal></expr>,<expr><literal type="number">255</literal></expr>,<expr><literal type="number">162</literal></expr>,<expr><literal type="number">215</literal></expr>,<expr><literal type="number">302</literal></expr>,<expr><literal type="number">201</literal></expr>,
<expr><literal type="number">266</literal></expr>,<expr><literal type="number">351</literal></expr>,<expr><literal type="number">343</literal></expr>,<expr><literal type="number">144</literal></expr>,<expr><literal type="number">441</literal></expr>,<expr><literal type="number">365</literal></expr>,<expr><literal type="number">108</literal></expr>,<expr><literal type="number">298</literal></expr>,<expr><literal type="number">251</literal></expr>, <expr><literal type="number">34</literal></expr>,<expr><literal type="number">182</literal></expr>,<expr><literal type="number">509</literal></expr>,<expr><literal type="number">138</literal></expr>,<expr><literal type="number">210</literal></expr>,<expr><literal type="number">335</literal></expr>,<expr><literal type="number">133</literal></expr>,
<expr><literal type="number">311</literal></expr>,<expr><literal type="number">352</literal></expr>,<expr><literal type="number">328</literal></expr>,<expr><literal type="number">141</literal></expr>,<expr><literal type="number">396</literal></expr>,<expr><literal type="number">346</literal></expr>,<expr><literal type="number">123</literal></expr>,<expr><literal type="number">319</literal></expr>,<expr><literal type="number">450</literal></expr>,<expr><literal type="number">281</literal></expr>,<expr><literal type="number">429</literal></expr>,<expr><literal type="number">228</literal></expr>,<expr><literal type="number">443</literal></expr>,<expr><literal type="number">481</literal></expr>, <expr><literal type="number">92</literal></expr>,<expr><literal type="number">404</literal></expr>,
<expr><literal type="number">485</literal></expr>,<expr><literal type="number">422</literal></expr>,<expr><literal type="number">248</literal></expr>,<expr><literal type="number">297</literal></expr>, <expr><literal type="number">23</literal></expr>,<expr><literal type="number">213</literal></expr>,<expr><literal type="number">130</literal></expr>,<expr><literal type="number">466</literal></expr>, <expr><literal type="number">22</literal></expr>,<expr><literal type="number">217</literal></expr>,<expr><literal type="number">283</literal></expr>, <expr><literal type="number">70</literal></expr>,<expr><literal type="number">294</literal></expr>,<expr><literal type="number">360</literal></expr>,<expr><literal type="number">419</literal></expr>,<expr><literal type="number">127</literal></expr>,
<expr><literal type="number">312</literal></expr>,<expr><literal type="number">377</literal></expr>, <expr><literal type="number">7</literal></expr>,<expr><literal type="number">468</literal></expr>,<expr><literal type="number">194</literal></expr>, <expr><literal type="number">2</literal></expr>,<expr><literal type="number">117</literal></expr>,<expr><literal type="number">295</literal></expr>,<expr><literal type="number">463</literal></expr>,<expr><literal type="number">258</literal></expr>,<expr><literal type="number">224</literal></expr>,<expr><literal type="number">447</literal></expr>,<expr><literal type="number">247</literal></expr>,<expr><literal type="number">187</literal></expr>, <expr><literal type="number">80</literal></expr>,<expr><literal type="number">398</literal></expr>,
<expr><literal type="number">284</literal></expr>,<expr><literal type="number">353</literal></expr>,<expr><literal type="number">105</literal></expr>,<expr><literal type="number">390</literal></expr>,<expr><literal type="number">299</literal></expr>,<expr><literal type="number">471</literal></expr>,<expr><literal type="number">470</literal></expr>,<expr><literal type="number">184</literal></expr>, <expr><literal type="number">57</literal></expr>,<expr><literal type="number">200</literal></expr>,<expr><literal type="number">348</literal></expr>, <expr><literal type="number">63</literal></expr>,<expr><literal type="number">204</literal></expr>,<expr><literal type="number">188</literal></expr>, <expr><literal type="number">33</literal></expr>,<expr><literal type="number">451</literal></expr>,
<expr><literal type="number">97</literal></expr>, <expr><literal type="number">30</literal></expr>,<expr><literal type="number">310</literal></expr>,<expr><literal type="number">219</literal></expr>, <expr><literal type="number">94</literal></expr>,<expr><literal type="number">160</literal></expr>,<expr><literal type="number">129</literal></expr>,<expr><literal type="number">493</literal></expr>, <expr><literal type="number">64</literal></expr>,<expr><literal type="number">179</literal></expr>,<expr><literal type="number">263</literal></expr>,<expr><literal type="number">102</literal></expr>,<expr><literal type="number">189</literal></expr>,<expr><literal type="number">207</literal></expr>,<expr><literal type="number">114</literal></expr>,<expr><literal type="number">402</literal></expr>,
<expr><literal type="number">438</literal></expr>,<expr><literal type="number">477</literal></expr>,<expr><literal type="number">387</literal></expr>,<expr><literal type="number">122</literal></expr>,<expr><literal type="number">192</literal></expr>, <expr><literal type="number">42</literal></expr>,<expr><literal type="number">381</literal></expr>, <expr><literal type="number">5</literal></expr>,<expr><literal type="number">145</literal></expr>,<expr><literal type="number">118</literal></expr>,<expr><literal type="number">180</literal></expr>,<expr><literal type="number">449</literal></expr>,<expr><literal type="number">293</literal></expr>,<expr><literal type="number">323</literal></expr>,<expr><literal type="number">136</literal></expr>,<expr><literal type="number">380</literal></expr>,
<expr><literal type="number">43</literal></expr>, <expr><literal type="number">66</literal></expr>, <expr><literal type="number">60</literal></expr>,<expr><literal type="number">455</literal></expr>,<expr><literal type="number">341</literal></expr>,<expr><literal type="number">445</literal></expr>,<expr><literal type="number">202</literal></expr>,<expr><literal type="number">432</literal></expr>, <expr><literal type="number">8</literal></expr>,<expr><literal type="number">237</literal></expr>, <expr><literal type="number">15</literal></expr>,<expr><literal type="number">376</literal></expr>,<expr><literal type="number">436</literal></expr>,<expr><literal type="number">464</literal></expr>, <expr><literal type="number">59</literal></expr>,<expr><literal type="number">461</literal></expr>}</block></expr></init></decl>;</decl_stmt>




<expr_stmt><expr><name>nine</name> <operator>=</operator> <operator>(</operator><name>u16</name><operator>)</operator><operator>(</operator><name>in</name><operator>&gt;&gt;</operator><literal type="number">7</literal><operator>)</operator><operator>&amp;</operator><literal type="number">0x1FF</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>seven</name> <operator>=</operator> <operator>(</operator><name>u16</name><operator>)</operator><operator>(</operator><name>in</name><operator>&amp;</operator><literal type="number">0x7F</literal><operator>)</operator></expr>;</expr_stmt>


<expr_stmt><expr><name>nine</name> <operator>=</operator> <operator>(</operator><name>u16</name><operator>)</operator><operator>(</operator><name><name>S9</name><index>[<expr><name>nine</name></expr>]</index></name> <operator>^</operator> <name>seven</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>seven</name> <operator>=</operator> <operator>(</operator><name>u16</name><operator>)</operator><operator>(</operator><name><name>S7</name><index>[<expr><name>seven</name></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>nine</name> <operator>&amp;</operator> <literal type="number">0x7F</literal><operator>)</operator><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>seven</name> <operator>^=</operator> <operator>(</operator><name>subkey</name><operator>&gt;&gt;</operator><literal type="number">9</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>nine</name> <operator>^=</operator> <operator>(</operator><name>subkey</name><operator>&amp;</operator><literal type="number">0x1FF</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>nine</name> <operator>=</operator> <operator>(</operator><name>u16</name><operator>)</operator><operator>(</operator><name><name>S9</name><index>[<expr><name>nine</name></expr>]</index></name> <operator>^</operator> <name>seven</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>seven</name> <operator>=</operator> <operator>(</operator><name>u16</name><operator>)</operator><operator>(</operator><name><name>S7</name><index>[<expr><name>seven</name></expr>]</index></name> <operator>^</operator> <operator>(</operator><name>nine</name> <operator>&amp;</operator> <literal type="number">0x7F</literal><operator>)</operator><operator>)</operator></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>u16</name><operator>)</operator><operator>(</operator><name>seven</name><operator>&lt;&lt;</operator><literal type="number">9</literal><operator>)</operator> <operator>+</operator> <name>nine</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ulong32</name></type> <name>FO</name><parameter_list>( <parameter><decl><type><name>ulong32</name></type> <name>in</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>round_no</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>symmetric_key</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>u16</name></type> <name>left</name></decl>, <decl><type ref="prev"/><name>right</name></decl>;</decl_stmt>


<expr_stmt><expr><name>left</name> <operator>=</operator> <operator>(</operator><name>u16</name><operator>)</operator><operator>(</operator><name>in</name><operator>&gt;&gt;</operator><literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>right</name> <operator>=</operator> <operator>(</operator><name>u16</name><operator>)</operator> <name>in</name><operator>&amp;</operator><literal type="number">0xFFFF</literal></expr>;</expr_stmt>


<expr_stmt><expr><name>left</name> <operator>^=</operator> <name><name>key</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KOi1</name><index>[<expr><name>round_no</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>left</name> <operator>=</operator> <call><name>FI</name><argument_list>( <argument><expr><name>left</name></expr></argument>, <argument><expr><name><name>key</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KIi1</name><index>[<expr><name>round_no</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>left</name> <operator>^=</operator> <name>right</name></expr>;</expr_stmt>

<expr_stmt><expr><name>right</name> <operator>^=</operator> <name><name>key</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KOi2</name><index>[<expr><name>round_no</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>right</name> <operator>=</operator> <call><name>FI</name><argument_list>( <argument><expr><name>right</name></expr></argument>, <argument><expr><name><name>key</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KIi2</name><index>[<expr><name>round_no</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>right</name> <operator>^=</operator> <name>left</name></expr>;</expr_stmt>

<expr_stmt><expr><name>left</name> <operator>^=</operator> <name><name>key</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KOi3</name><index>[<expr><name>round_no</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>left</name> <operator>=</operator> <call><name>FI</name><argument_list>( <argument><expr><name>left</name></expr></argument>, <argument><expr><name><name>key</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KIi3</name><index>[<expr><name>round_no</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>left</name> <operator>^=</operator> <name>right</name></expr>;</expr_stmt>

<return>return <expr><operator>(</operator><operator>(</operator><operator>(</operator><name>ulong32</name><operator>)</operator><name>right</name><operator>)</operator><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator><operator>+</operator><name>left</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>ulong32</name></type> <name>FL</name><parameter_list>( <parameter><decl><type><name>ulong32</name></type> <name>in</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>round_no</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>symmetric_key</name> <modifier>*</modifier></type><name>key</name></decl></parameter> )</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>u16</name></type> <name>l</name></decl>, <decl><type ref="prev"/><name>r</name></decl>, <decl><type ref="prev"/><name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>;</decl_stmt>

<expr_stmt><expr><name>l</name> <operator>=</operator> <operator>(</operator><name>u16</name><operator>)</operator><operator>(</operator><name>in</name><operator>&gt;&gt;</operator><literal type="number">16</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>r</name> <operator>=</operator> <operator>(</operator><name>u16</name><operator>)</operator><operator>(</operator><name>in</name><operator>)</operator><operator>&amp;</operator><literal type="number">0xFFFF</literal></expr>;</expr_stmt>

<expr_stmt><expr><name>a</name> <operator>=</operator> <operator>(</operator><name>u16</name><operator>)</operator> <operator>(</operator><name>l</name> <operator>&amp;</operator> <name><name>key</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KLi1</name><index>[<expr><name>round_no</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>r</name> <operator>^=</operator> <call><name>ROL16</name><argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b</name> <operator>=</operator> <operator>(</operator><name>u16</name><operator>)</operator><operator>(</operator><name>r</name> <operator>|</operator> <name><name>key</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KLi2</name><index>[<expr><name>round_no</name></expr>]</index></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>l</name> <operator>^=</operator> <call><name>ROL16</name><argument_list>(<argument><expr><name>b</name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<return>return <expr><operator>(</operator><operator>(</operator><operator>(</operator><name>ulong32</name><operator>)</operator><name>l</name><operator>)</operator><operator>&lt;&lt;</operator><literal type="number">16</literal><operator>)</operator> <operator>+</operator> <name>r</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>kasumi_ecb_encrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>pt</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ct</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ulong32</name></type> <name>left</name></decl>, <decl><type ref="prev"/><name>right</name></decl>, <decl><type ref="prev"/><name>temp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>pt</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>ct</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>skey</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LOAD32H</name><argument_list>(<argument><expr><name>left</name></expr></argument>, <argument><expr><name>pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32H</name><argument_list>(<argument><expr><name>right</name></expr></argument>, <argument><expr><name>pt</name><operator>+</operator><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>n</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>n</name> <operator>&lt;=</operator> <literal type="number">7</literal></expr>;</condition> <incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>temp</name> <operator>=</operator> <call><name>FL</name><argument_list>(<argument><expr><name>left</name></expr></argument>, <argument><expr><name>n</name></expr></argument>, <argument><expr><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>temp</name> <operator>=</operator> <call><name>FO</name><argument_list>(<argument><expr><name>temp</name></expr></argument>, <argument><expr><name>n</name><operator>++</operator></expr></argument>, <argument><expr><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>right</name> <operator>^=</operator> <name>temp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>temp</name> <operator>=</operator> <call><name>FO</name><argument_list>(<argument><expr><name>right</name></expr></argument>, <argument><expr><name>n</name></expr></argument>, <argument><expr><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>temp</name> <operator>=</operator> <call><name>FL</name><argument_list>(<argument><expr><name>temp</name></expr></argument>, <argument><expr><name>n</name><operator>++</operator></expr></argument>, <argument><expr><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>left</name> <operator>^=</operator> <name>temp</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>STORE32H</name><argument_list>(<argument><expr><name>left</name></expr></argument>, <argument><expr><name>ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STORE32H</name><argument_list>(<argument><expr><name>right</name></expr></argument>, <argument><expr><name>ct</name><operator>+</operator><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>kasumi_ecb_decrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ct</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>pt</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ulong32</name></type> <name>left</name></decl>, <decl><type ref="prev"/><name>right</name></decl>, <decl><type ref="prev"/><name>temp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>pt</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>ct</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>skey</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LOAD32H</name><argument_list>(<argument><expr><name>left</name></expr></argument>, <argument><expr><name>ct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32H</name><argument_list>(<argument><expr><name>right</name></expr></argument>, <argument><expr><name>ct</name><operator>+</operator><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>n</name> <operator>=</operator> <literal type="number">7</literal></expr>;</init> <condition><expr><name>n</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>temp</name> <operator>=</operator> <call><name>FO</name><argument_list>(<argument><expr><name>right</name></expr></argument>, <argument><expr><name>n</name></expr></argument>, <argument><expr><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>temp</name> <operator>=</operator> <call><name>FL</name><argument_list>(<argument><expr><name>temp</name></expr></argument>, <argument><expr><name>n</name><operator>--</operator></expr></argument>, <argument><expr><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>left</name> <operator>^=</operator> <name>temp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>temp</name> <operator>=</operator> <call><name>FL</name><argument_list>(<argument><expr><name>left</name></expr></argument>, <argument><expr><name>n</name></expr></argument>, <argument><expr><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>temp</name> <operator>=</operator> <call><name>FO</name><argument_list>(<argument><expr><name>temp</name></expr></argument>, <argument><expr><name>n</name><operator>--</operator></expr></argument>, <argument><expr><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>right</name> <operator>^=</operator> <name>temp</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>STORE32H</name><argument_list>(<argument><expr><name>left</name></expr></argument>, <argument><expr><name>pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STORE32H</name><argument_list>(<argument><expr><name>right</name></expr></argument>, <argument><expr><name>pt</name><operator>+</operator><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>kasumi_setup</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>keylen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>num_rounds</name></decl></parameter>, <parameter><decl><type><name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>u16</name></type> <name><name>C</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0x0123</literal></expr>,<expr><literal type="number">0x4567</literal></expr>,<expr><literal type="number">0x89AB</literal></expr>,<expr><literal type="number">0xCDEF</literal></expr>, <expr><literal type="number">0xFEDC</literal></expr>,<expr><literal type="number">0xBA98</literal></expr>,<expr><literal type="number">0x7654</literal></expr>,<expr><literal type="number">0x3210</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>u16</name></type> <name><name>ukey</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>Kprime</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>n</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>key</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>skey</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>keylen</name> <operator>!=</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>CRYPT_INVALID_KEYSIZE</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>num_rounds</name> <operator>!=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>num_rounds</name> <operator>!=</operator> <literal type="number">8</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>CRYPT_INVALID_ROUNDS</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<for>for <control>(<init><expr><name>n</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>n</name> <operator>&lt;</operator> <literal type="number">8</literal></expr>;</condition> <incr><expr><name>n</name><operator>++</operator></expr></incr> )</control> <block>{<block_content>
<expr_stmt><expr><name><name>ukey</name><index>[<expr><name>n</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><operator>(</operator><operator>(</operator><name>u16</name><operator>)</operator><name><name>key</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>n</name></expr>]</index></name><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>|</operator> <name><name>key</name><index>[<expr><literal type="number">2</literal><operator>*</operator><name>n</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>


<for>for <control>(<init><expr><name>n</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>n</name> <operator>&lt;</operator> <literal type="number">8</literal></expr>;</condition> <incr><expr><name>n</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>Kprime</name><index>[<expr><name>n</name></expr>]</index></name> <operator>=</operator> <name><name>ukey</name><index>[<expr><name>n</name></expr>]</index></name> <operator>^</operator> <name><name>C</name><index>[<expr><name>n</name></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>


<for>for<control>(<init><expr><name>n</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>n</name> <operator>&lt;</operator> <literal type="number">8</literal></expr>;</condition> <incr><expr><name>n</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KLi1</name><index>[<expr><name>n</name></expr>]</index></name> <operator>=</operator> <call><name>ROL16</name><argument_list>(<argument><expr><name><name>ukey</name><index>[<expr><name>n</name></expr>]</index></name></expr></argument>,<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KLi2</name><index>[<expr><name>n</name></expr>]</index></name> <operator>=</operator> <name><name>Kprime</name><index>[<expr><operator>(</operator><name>n</name><operator>+</operator><literal type="number">2</literal><operator>)</operator><operator>&amp;</operator><literal type="number">0x7</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KOi1</name><index>[<expr><name>n</name></expr>]</index></name> <operator>=</operator> <call><name>ROL16</name><argument_list>(<argument><expr><name><name>ukey</name><index>[<expr><operator>(</operator><name>n</name><operator>+</operator><literal type="number">1</literal><operator>)</operator><operator>&amp;</operator><literal type="number">0x7</literal></expr>]</index></name></expr></argument>,<argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KOi2</name><index>[<expr><name>n</name></expr>]</index></name> <operator>=</operator> <call><name>ROL16</name><argument_list>(<argument><expr><name><name>ukey</name><index>[<expr><operator>(</operator><name>n</name><operator>+</operator><literal type="number">5</literal><operator>)</operator><operator>&amp;</operator><literal type="number">0x7</literal></expr>]</index></name></expr></argument>,<argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KOi3</name><index>[<expr><name>n</name></expr>]</index></name> <operator>=</operator> <call><name>ROL16</name><argument_list>(<argument><expr><name><name>ukey</name><index>[<expr><operator>(</operator><name>n</name><operator>+</operator><literal type="number">6</literal><operator>)</operator><operator>&amp;</operator><literal type="number">0x7</literal></expr>]</index></name></expr></argument>,<argument><expr><literal type="number">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KIi1</name><index>[<expr><name>n</name></expr>]</index></name> <operator>=</operator> <name><name>Kprime</name><index>[<expr><operator>(</operator><name>n</name><operator>+</operator><literal type="number">4</literal><operator>)</operator><operator>&amp;</operator><literal type="number">0x7</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KIi2</name><index>[<expr><name>n</name></expr>]</index></name> <operator>=</operator> <name><name>Kprime</name><index>[<expr><operator>(</operator><name>n</name><operator>+</operator><literal type="number">3</literal><operator>)</operator><operator>&amp;</operator><literal type="number">0x7</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>skey</name><operator>-&gt;</operator><name>kasumi</name><operator>.</operator><name>KIi3</name><index>[<expr><name>n</name></expr>]</index></name> <operator>=</operator> <name><name>Kprime</name><index>[<expr><operator>(</operator><name>n</name><operator>+</operator><literal type="number">7</literal><operator>)</operator><operator>&amp;</operator><literal type="number">0x7</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></for>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type> <name>kasumi_done</name><parameter_list>(<parameter><decl><type><name>symmetric_key</name> <modifier>*</modifier></type><name>skey</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LTC_UNUSED_PARAM</name><argument_list>(<argument><expr><name>skey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>kasumi_keysize</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>keysize</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>keysize</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>*</operator><name>keysize</name> <operator>&gt;=</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>keysize</name> <operator>=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>CRYPT_INVALID_KEYSIZE</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>kasumi_test</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LTC_TEST</name></expr></argument>)</argument_list></call></expr></cpp:if>
<return>return <expr><name>CRYPT_NOP</name></expr>;</return>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>key</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>pt</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>ct</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name><name>tests</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{
<expr><block>{ <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x4B</literal></expr>, <expr><literal type="number">0x58</literal></expr>, <expr><literal type="number">0xA7</literal></expr>, <expr><literal type="number">0x71</literal></expr>, <expr><literal type="number">0xAF</literal></expr>, <expr><literal type="number">0xC7</literal></expr>, <expr><literal type="number">0xE5</literal></expr>, <expr><literal type="number">0xE8</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x7E</literal></expr>, <expr><literal type="number">0xEF</literal></expr>, <expr><literal type="number">0x11</literal></expr>, <expr><literal type="number">0x3C</literal></expr>, <expr><literal type="number">0x95</literal></expr>, <expr><literal type="number">0xBB</literal></expr>, <expr><literal type="number">0x5A</literal></expr>, <expr><literal type="number">0x77</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x5F</literal></expr>, <expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0x06</literal></expr>, <expr><literal type="number">0x86</literal></expr>, <expr><literal type="number">0xD7</literal></expr>, <expr><literal type="number">0xAD</literal></expr>, <expr><literal type="number">0x5A</literal></expr>, <expr><literal type="number">0x39</literal></expr> }</block></expr>,
}</block></expr>,

<expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x01</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2E</literal></expr>, <expr><literal type="number">0x14</literal></expr>, <expr><literal type="number">0x91</literal></expr>, <expr><literal type="number">0xCF</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0xAA</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0x5D</literal></expr> }</block></expr>
}</block></expr>,

<expr><block>{
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xB5</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x86</literal></expr>, <expr><literal type="number">0xF4</literal></expr>, <expr><literal type="number">0xAB</literal></expr>, <expr><literal type="number">0x9A</literal></expr>, <expr><literal type="number">0xE5</literal></expr>, <expr><literal type="number">0x46</literal></expr> }</block></expr>
}</block></expr>,

}</block></expr></init></decl>;</struct>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>buf</name><index>[<expr><literal type="number">2</literal></expr>]</index><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>symmetric_key</name></type> <name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>err</name></decl>, <decl><type ref="prev"/><name>x</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><name>tests</name></expr></argument>)</argument_list></sizeof><operator>/</operator><sizeof>sizeof<argument_list>(<argument><expr><name><name>tests</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof><operator>)</operator></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>kasumi_setup</name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>key</name></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>CRYPT_OK</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>kasumi_ecb_encrypt</name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>pt</name></expr></argument>, <argument><expr><name><name>buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>CRYPT_OK</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>kasumi_ecb_decrypt</name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>ct</name></expr></argument>, <argument><expr><name><name>buf</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>key</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>CRYPT_OK</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>compare_testvector</name><argument_list>(<argument><expr><name><name>buf</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>pt</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"Kasumi Decrypt"</literal></expr></argument>, <argument><expr><name>x</name></expr></argument>)</argument_list></call> <operator>||</operator>
<call><name>compare_testvector</name><argument_list>(<argument><expr><name><name>buf</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>ct</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="string">"Kasumi Encrypt"</literal></expr></argument>, <argument><expr><name>x</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>CRYPT_FAIL_TESTVECTOR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><name>CRYPT_OK</name></expr>;</return>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




</unit>
