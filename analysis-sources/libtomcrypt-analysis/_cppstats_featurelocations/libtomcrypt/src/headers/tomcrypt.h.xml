<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\libtomcrypt-analysis\_cppstats_featurelocations\libtomcrypt\src\headers\tomcrypt.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>TOMCRYPT_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TOMCRYPT_H_</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;time.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ctype.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_custom.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CRYPT</name></cpp:macro> <cpp:value>0x0118</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRYPT</name></cpp:macro> <cpp:value>"1.18.2-develop"</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAXBLOCKSIZE</name></cpp:macro> <cpp:value>144</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>TAB_SIZE</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TAB_SIZE</name></cpp:macro> <cpp:value>34</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<enum>enum <block>{
<decl><name>CRYPT_OK</name><init>=<expr><literal type="number">0</literal></expr></init></decl>, 
<decl><name>CRYPT_ERROR</name></decl>, 
<decl><name>CRYPT_NOP</name></decl>, 

<decl><name>CRYPT_INVALID_KEYSIZE</name></decl>, 
<decl><name>CRYPT_INVALID_ROUNDS</name></decl>, 
<decl><name>CRYPT_FAIL_TESTVECTOR</name></decl>, 

<decl><name>CRYPT_BUFFER_OVERFLOW</name></decl>, 
<decl><name>CRYPT_INVALID_PACKET</name></decl>, 

<decl><name>CRYPT_INVALID_PRNGSIZE</name></decl>, 
<decl><name>CRYPT_ERROR_READPRNG</name></decl>, 

<decl><name>CRYPT_INVALID_CIPHER</name></decl>, 
<decl><name>CRYPT_INVALID_HASH</name></decl>, 
<decl><name>CRYPT_INVALID_PRNG</name></decl>, 

<decl><name>CRYPT_MEM</name></decl>, 

<decl><name>CRYPT_PK_TYPE_MISMATCH</name></decl>, 
<decl><name>CRYPT_PK_NOT_PRIVATE</name></decl>, 

<decl><name>CRYPT_INVALID_ARG</name></decl>, 
<decl><name>CRYPT_FILE_NOTFOUND</name></decl>, 

<decl><name>CRYPT_PK_INVALID_TYPE</name></decl>, 

<decl><name>CRYPT_OVERFLOW</name></decl>, 

<decl><name>CRYPT_PK_ASN1_ERROR</name></decl>, 

<decl><name>CRYPT_INPUT_TOO_LONG</name></decl>, 

<decl><name>CRYPT_PK_INVALID_SIZE</name></decl>, 

<decl><name>CRYPT_INVALID_PRIME_SIZE</name></decl>,
<decl><name>CRYPT_PK_INVALID_PADDING</name></decl>, 

<decl><name>CRYPT_HASH_OVERFLOW</name></decl> 
}</block>;</enum>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_cfg.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_macros.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_cipher.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_hash.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_mac.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_prng.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_pk.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_math.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_misc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_argchk.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_pkcs.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif> 





</unit>
