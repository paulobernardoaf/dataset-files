<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\libtomcrypt-analysis\_cppstats_featurelocations\libtomcrypt\src\pk\asn1\der\teletex_string\der_length_teletex_string.c">







<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_private.h"</cpp:file></cpp:include>






<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_DER</name></expr></argument>)</argument_list></call></expr></cpp:if>

<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>code</name></decl>, <decl><type ref="prev"/><name>value</name></decl>;</decl_stmt>
}</block> <decl><name><name>teletex_table</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="char">'\0'</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'\a'</literal></expr>, <expr><literal type="number">7</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'\b'</literal></expr>, <expr><literal type="number">8</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'\t'</literal></expr>, <expr><literal type="number">9</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'\n'</literal></expr>, <expr><literal type="number">10</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'\v'</literal></expr>, <expr><literal type="number">11</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'\f'</literal></expr>, <expr><literal type="number">12</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'\r'</literal></expr>, <expr><literal type="number">13</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">' '</literal></expr>, <expr><literal type="number">32</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'!'</literal></expr>, <expr><literal type="number">33</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'"'</literal></expr>, <expr><literal type="number">34</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'%'</literal></expr>, <expr><literal type="number">37</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'&amp;'</literal></expr>, <expr><literal type="number">38</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'\''</literal></expr>, <expr><literal type="number">39</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'('</literal></expr>, <expr><literal type="number">40</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">')'</literal></expr>, <expr><literal type="number">41</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'+'</literal></expr>, <expr><literal type="number">43</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">','</literal></expr>, <expr><literal type="number">44</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'-'</literal></expr>, <expr><literal type="number">45</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'.'</literal></expr>, <expr><literal type="number">46</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'/'</literal></expr>, <expr><literal type="number">47</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'0'</literal></expr>, <expr><literal type="number">48</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'1'</literal></expr>, <expr><literal type="number">49</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'2'</literal></expr>, <expr><literal type="number">50</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'3'</literal></expr>, <expr><literal type="number">51</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'4'</literal></expr>, <expr><literal type="number">52</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'5'</literal></expr>, <expr><literal type="number">53</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'6'</literal></expr>, <expr><literal type="number">54</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'7'</literal></expr>, <expr><literal type="number">55</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'8'</literal></expr>, <expr><literal type="number">56</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'9'</literal></expr>, <expr><literal type="number">57</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">':'</literal></expr>, <expr><literal type="number">58</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">';'</literal></expr>, <expr><literal type="number">59</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'&lt;'</literal></expr>, <expr><literal type="number">60</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'='</literal></expr>, <expr><literal type="number">61</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'&gt;'</literal></expr>, <expr><literal type="number">62</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'?'</literal></expr>, <expr><literal type="number">63</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'@'</literal></expr>, <expr><literal type="number">64</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'A'</literal></expr>, <expr><literal type="number">65</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'B'</literal></expr>, <expr><literal type="number">66</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'C'</literal></expr>, <expr><literal type="number">67</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'D'</literal></expr>, <expr><literal type="number">68</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'E'</literal></expr>, <expr><literal type="number">69</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'F'</literal></expr>, <expr><literal type="number">70</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'G'</literal></expr>, <expr><literal type="number">71</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'H'</literal></expr>, <expr><literal type="number">72</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'I'</literal></expr>, <expr><literal type="number">73</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'J'</literal></expr>, <expr><literal type="number">74</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'K'</literal></expr>, <expr><literal type="number">75</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'L'</literal></expr>, <expr><literal type="number">76</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'M'</literal></expr>, <expr><literal type="number">77</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'N'</literal></expr>, <expr><literal type="number">78</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'O'</literal></expr>, <expr><literal type="number">79</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'P'</literal></expr>, <expr><literal type="number">80</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'Q'</literal></expr>, <expr><literal type="number">81</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'R'</literal></expr>, <expr><literal type="number">82</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'S'</literal></expr>, <expr><literal type="number">83</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'T'</literal></expr>, <expr><literal type="number">84</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'U'</literal></expr>, <expr><literal type="number">85</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'V'</literal></expr>, <expr><literal type="number">86</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'W'</literal></expr>, <expr><literal type="number">87</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'X'</literal></expr>, <expr><literal type="number">88</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'Y'</literal></expr>, <expr><literal type="number">89</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'Z'</literal></expr>, <expr><literal type="number">90</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'['</literal></expr>, <expr><literal type="number">91</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">']'</literal></expr>, <expr><literal type="number">93</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'_'</literal></expr>, <expr><literal type="number">95</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'a'</literal></expr>, <expr><literal type="number">97</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'b'</literal></expr>, <expr><literal type="number">98</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'c'</literal></expr>, <expr><literal type="number">99</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'d'</literal></expr>, <expr><literal type="number">100</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'e'</literal></expr>, <expr><literal type="number">101</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'f'</literal></expr>, <expr><literal type="number">102</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'g'</literal></expr>, <expr><literal type="number">103</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'h'</literal></expr>, <expr><literal type="number">104</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'i'</literal></expr>, <expr><literal type="number">105</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'j'</literal></expr>, <expr><literal type="number">106</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'k'</literal></expr>, <expr><literal type="number">107</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'l'</literal></expr>, <expr><literal type="number">108</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'m'</literal></expr>, <expr><literal type="number">109</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'n'</literal></expr>, <expr><literal type="number">110</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'o'</literal></expr>, <expr><literal type="number">111</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'p'</literal></expr>, <expr><literal type="number">112</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'q'</literal></expr>, <expr><literal type="number">113</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'r'</literal></expr>, <expr><literal type="number">114</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'s'</literal></expr>, <expr><literal type="number">115</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'t'</literal></expr>, <expr><literal type="number">116</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'u'</literal></expr>, <expr><literal type="number">117</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'v'</literal></expr>, <expr><literal type="number">118</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'w'</literal></expr>, <expr><literal type="number">119</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'x'</literal></expr>, <expr><literal type="number">120</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'y'</literal></expr>, <expr><literal type="number">121</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'z'</literal></expr>, <expr><literal type="number">122</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'|'</literal></expr>, <expr><literal type="number">124</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">' '</literal></expr>, <expr><literal type="number">160</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xa1</literal></expr>, <expr><literal type="number">161</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">162</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xa3</literal></expr>, <expr><literal type="number">163</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'$'</literal></expr>, <expr><literal type="number">164</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">165</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="char">'#'</literal></expr>, <expr><literal type="number">166</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xa7</literal></expr>, <expr><literal type="number">167</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xa4</literal></expr>, <expr><literal type="number">168</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">171</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xb0</literal></expr>, <expr><literal type="number">176</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xb1</literal></expr>, <expr><literal type="number">177</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xb2</literal></expr>, <expr><literal type="number">178</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xb3</literal></expr>, <expr><literal type="number">179</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">180</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xb5</literal></expr>, <expr><literal type="number">181</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xb6</literal></expr>, <expr><literal type="number">182</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">183</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xf7</literal></expr>, <expr><literal type="number">184</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xbb</literal></expr>, <expr><literal type="number">187</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xbc</literal></expr>, <expr><literal type="number">188</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xbd</literal></expr>, <expr><literal type="number">189</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xbe</literal></expr>, <expr><literal type="number">190</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xbf</literal></expr>, <expr><literal type="number">191</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</struct>

<function><type><name>int</name></type> <name>der_teletex_char_encode</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><name>teletex_table</name></expr></argument>)</argument_list></sizeof><operator>/</operator><sizeof>sizeof<argument_list>(<argument><expr><name><name>teletex_table</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof><operator>)</operator></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>teletex_table</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>code</name> <operator>==</operator> <name>c</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name><name>teletex_table</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>value</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>der_teletex_value_decode</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>v</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><name>teletex_table</name></expr></argument>)</argument_list></sizeof><operator>/</operator><sizeof>sizeof<argument_list>(<argument><expr><name><name>teletex_table</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof><operator>)</operator></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>teletex_table</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>==</operator> <name>v</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name><name>teletex_table</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>code</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>








<function><type><name>int</name></type> <name>der_length_teletex_string</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>octets</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>noctets</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name> <modifier>*</modifier></type><name>outlen</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>x</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>err</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>outlen</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>octets</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <name>noctets</name></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>der_teletex_char_encode</name><argument_list>(<argument><expr><name><name>octets</name><index>[<expr><name>x</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>CRYPT_INVALID_ARG</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>err</name> <operator>=</operator> <call><name>der_length_asn1_length</name><argument_list>(<argument><expr><name>noctets</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>x</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>CRYPT_OK</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>err</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>outlen</name> <operator>=</operator> <literal type="number">1</literal> <operator>+</operator> <name>x</name> <operator>+</operator> <name>noctets</name></expr>;</expr_stmt>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>





</unit>
