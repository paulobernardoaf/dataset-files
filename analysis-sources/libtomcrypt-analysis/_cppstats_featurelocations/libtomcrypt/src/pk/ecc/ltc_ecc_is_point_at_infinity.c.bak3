








#include "tomcrypt_private.h"

#ifdef LTC_MECC





int ltc_ecc_is_point_at_infinity(const ecc_point *P, void *modulus, int *retval)
{
int err;
void *x3, *y2;


if (!mp_iszero(P->z)) {
*retval = 0;
return CRYPT_OK;
}


if (mp_iszero(P->x) && mp_iszero(P->y)) {
*retval = 0;
return CRYPT_OK;
}


if ((err = mp_init_multi(&x3, &y2, NULL)) != CRYPT_OK) goto done;


if ((err = mp_mulmod(P->y, P->y, modulus, y2)) != CRYPT_OK) goto cleanup;


if ((err = mp_mulmod(P->x, P->x, modulus, x3)) != CRYPT_OK) goto cleanup;
if ((err = mp_mulmod(P->x, x3, modulus, x3)) != CRYPT_OK) goto cleanup;


err = CRYPT_OK;
if ((mp_cmp(x3, y2) == LTC_MP_EQ) && !mp_iszero(y2)) {
*retval = 1;
} else {
*retval = 0;
}

cleanup:
mp_clear_multi(x3, y2, NULL);
done:
return err;
}

#endif




