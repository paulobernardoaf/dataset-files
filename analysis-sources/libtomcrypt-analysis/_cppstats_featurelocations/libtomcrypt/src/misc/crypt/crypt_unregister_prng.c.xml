<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\libtomcrypt-analysis\_cppstats_featurelocations\libtomcrypt\src\misc\crypt\crypt_unregister_prng.c">







<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_private.h"</cpp:file></cpp:include>











<function><type><name>int</name></type> <name>unregister_prng</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>ltc_prng_descriptor</name></name> <modifier>*</modifier></type><name>prng</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>x</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>prng</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>LTC_MUTEX_LOCK</name><argument_list>(<argument><expr><operator>&amp;</operator><name>ltc_prng_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>x</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>x</name> <operator>&lt;</operator> <name>TAB_SIZE</name></expr>;</condition> <incr><expr><name>x</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>XMEMCMP</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>prng_descriptor</name><index>[<expr><name>x</name></expr>]</index></name></expr></argument>, <argument><expr><name>prng</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr>struct <name>ltc_prng_descriptor</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>prng_descriptor</name><index>[<expr><name>x</name></expr>]</index></name><operator>.</operator><name>name</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_MUTEX_UNLOCK</name><argument_list>(<argument><expr><operator>&amp;</operator><name>ltc_prng_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>LTC_MUTEX_UNLOCK</name><argument_list>(<argument><expr><operator>&amp;</operator><name>ltc_prng_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>CRYPT_ERROR</name></expr>;</return>
</block_content>}</block></function>




</unit>
