<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\libtomcrypt-analysis\_cppstats_featurelocations\libtomcrypt\src\stream\sosemanuk\sosemanuk.c">































<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_private.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_SOSEMANUK</name></expr></argument>)</argument_list></call></expr></cpp:if>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>T32</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((x) &amp; (ulong32)0xFFFFFFFF)</cpp:value></cpp:define>

































<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S0</name><parameter_list>(<parameter><type><name>r0</name></type></parameter>, <parameter><type><name>r1</name></type></parameter>, <parameter><type><name>r2</name></type></parameter>, <parameter><type><name>r3</name></type></parameter>, <parameter><type><name>r4</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { r3 ^= r0; r4 = r1; r1 &amp;= r3; r4 ^= r2; r1 ^= r0; r0 |= r3; r0 ^= r4; r4 ^= r3; r3 ^= r2; r2 |= r1; r2 ^= r4; r4 = ~r4; r4 |= r1; r1 ^= r3; r1 ^= r4; r3 |= r0; r1 ^= r3; r4 ^= r3; } while (0)</cpp:value></cpp:define>











<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S1</name><parameter_list>(<parameter><type><name>r0</name></type></parameter>, <parameter><type><name>r1</name></type></parameter>, <parameter><type><name>r2</name></type></parameter>, <parameter><type><name>r3</name></type></parameter>, <parameter><type><name>r4</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { r0 = ~r0; r2 = ~r2; r4 = r0; r0 &amp;= r1; r2 ^= r0; r0 |= r3; r3 ^= r2; r1 ^= r0; r0 ^= r4; r4 |= r1; r1 ^= r3; r2 |= r0; r2 &amp;= r4; r0 ^= r1; r1 &amp;= r2; r1 ^= r0; r0 &amp;= r2; r0 ^= r4; } while (0)</cpp:value></cpp:define>












<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S2</name><parameter_list>(<parameter><type><name>r0</name></type></parameter>, <parameter><type><name>r1</name></type></parameter>, <parameter><type><name>r2</name></type></parameter>, <parameter><type><name>r3</name></type></parameter>, <parameter><type><name>r4</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { r4 = r0; r0 &amp;= r2; r0 ^= r3; r2 ^= r1; r2 ^= r0; r3 |= r4; r3 ^= r1; r4 ^= r2; r1 = r3; r3 |= r4; r3 ^= r0; r0 &amp;= r1; r4 ^= r0; r1 ^= r3; r1 ^= r4; r4 = ~r4; } while (0)</cpp:value></cpp:define>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S3</name><parameter_list>(<parameter><type><name>r0</name></type></parameter>, <parameter><type><name>r1</name></type></parameter>, <parameter><type><name>r2</name></type></parameter>, <parameter><type><name>r3</name></type></parameter>, <parameter><type><name>r4</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { r4 = r0; r0 |= r3; r3 ^= r1; r1 &amp;= r4; r4 ^= r2; r2 ^= r3; r3 &amp;= r0; r4 |= r1; r3 ^= r4; r0 ^= r1; r4 &amp;= r0; r1 ^= r3; r4 ^= r2; r1 |= r0; r1 ^= r2; r0 ^= r3; r2 = r1; r1 |= r3; r1 ^= r0; } while (0)</cpp:value></cpp:define>












<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S4</name><parameter_list>(<parameter><type><name>r0</name></type></parameter>, <parameter><type><name>r1</name></type></parameter>, <parameter><type><name>r2</name></type></parameter>, <parameter><type><name>r3</name></type></parameter>, <parameter><type><name>r4</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { r1 ^= r3; r3 = ~r3; r2 ^= r3; r3 ^= r0; r4 = r1; r1 &amp;= r3; r1 ^= r2; r4 ^= r3; r0 ^= r4; r2 &amp;= r4; r2 ^= r0; r0 &amp;= r1; r3 ^= r0; r4 |= r1; r4 ^= r0; r0 |= r3; r0 ^= r2; r2 &amp;= r3; r0 = ~r0; r4 ^= r2; } while (0)</cpp:value></cpp:define>












<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S5</name><parameter_list>(<parameter><type><name>r0</name></type></parameter>, <parameter><type><name>r1</name></type></parameter>, <parameter><type><name>r2</name></type></parameter>, <parameter><type><name>r3</name></type></parameter>, <parameter><type><name>r4</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { r0 ^= r1; r1 ^= r3; r3 = ~r3; r4 = r1; r1 &amp;= r0; r2 ^= r3; r1 ^= r2; r2 |= r4; r4 ^= r3; r3 &amp;= r1; r3 ^= r0; r4 ^= r1; r4 ^= r2; r2 ^= r0; r0 &amp;= r3; r2 = ~r2; r0 ^= r4; r4 |= r3; r2 ^= r4; } while (0)</cpp:value></cpp:define>












<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S6</name><parameter_list>(<parameter><type><name>r0</name></type></parameter>, <parameter><type><name>r1</name></type></parameter>, <parameter><type><name>r2</name></type></parameter>, <parameter><type><name>r3</name></type></parameter>, <parameter><type><name>r4</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { r2 = ~r2; r4 = r3; r3 &amp;= r0; r0 ^= r4; r3 ^= r2; r2 |= r4; r1 ^= r3; r2 ^= r0; r0 |= r1; r2 ^= r1; r4 ^= r0; r0 |= r3; r0 ^= r2; r4 ^= r3; r4 ^= r0; r3 = ~r3; r2 &amp;= r4; r2 ^= r3; } while (0)</cpp:value></cpp:define>












<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>S7</name><parameter_list>(<parameter><type><name>r0</name></type></parameter>, <parameter><type><name>r1</name></type></parameter>, <parameter><type><name>r2</name></type></parameter>, <parameter><type><name>r3</name></type></parameter>, <parameter><type><name>r4</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { r4 = r1; r1 |= r2; r1 ^= r3; r4 ^= r2; r2 ^= r1; r3 |= r4; r3 &amp;= r0; r4 ^= r2; r3 ^= r1; r1 |= r4; r1 ^= r0; r0 |= r4; r0 ^= r2; r1 ^= r4; r2 ^= r1; r1 &amp;= r0; r1 ^= r4; r2 = ~r2; r2 |= r0; r4 ^= r2; } while (0)</cpp:value></cpp:define>
















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SERPENT_LT</name><parameter_list>(<parameter><type><name>x0</name></type></parameter>, <parameter><type><name>x1</name></type></parameter>, <parameter><type><name>x2</name></type></parameter>, <parameter><type><name>x3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { x0 = ROLc(x0, 13); x2 = ROLc(x2, 3); x1 = x1 ^ x0 ^ x2; x3 = x3 ^ x2 ^ T32(x0 &lt;&lt; 3); x1 = ROLc(x1, 1); x3 = ROLc(x3, 7); x0 = x0 ^ x1 ^ x3; x2 = x2 ^ x3 ^ T32(x1 &lt;&lt; 7); x0 = ROLc(x0, 5); x2 = ROLc(x2, 22); } while (0)</cpp:value></cpp:define>






















<function><type><name>int</name></type> <name>sosemanuk_setup</name><parameter_list>(<parameter><decl><type><name>sosemanuk_state</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>keylen</name></decl></parameter>)</parameter_list>
<block>{<block_content>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SKS</name><parameter_list>(<parameter><type><name>S</name></type></parameter>, <parameter><type><name>o0</name></type></parameter>, <parameter><type><name>o1</name></type></parameter>, <parameter><type><name>o2</name></type></parameter>, <parameter><type><name>o3</name></type></parameter>, <parameter><type><name>d0</name></type></parameter>, <parameter><type><name>d1</name></type></parameter>, <parameter><type><name>d2</name></type></parameter>, <parameter><type><name>d3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { ulong32 r0, r1, r2, r3, r4; r0 = w ##o0; r1 = w ##o1; r2 = w ##o2; r3 = w ##o3; S(r0, r1, r2, r3, r4); st-&gt;kc[i ++] = r ##d0; st-&gt;kc[i ++] = r ##d1; st-&gt;kc[i ++] = r ##d2; st-&gt;kc[i ++] = r ##d3; } while (0)</cpp:value></cpp:define>












<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SKS0</name></cpp:macro> <cpp:value>SKS(S0, 4, 5, 6, 7, 1, 4, 2, 0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SKS1</name></cpp:macro> <cpp:value>SKS(S1, 0, 1, 2, 3, 2, 0, 3, 1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SKS2</name></cpp:macro> <cpp:value>SKS(S2, 4, 5, 6, 7, 2, 3, 1, 4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SKS3</name></cpp:macro> <cpp:value>SKS(S3, 0, 1, 2, 3, 1, 2, 3, 4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SKS4</name></cpp:macro> <cpp:value>SKS(S4, 4, 5, 6, 7, 1, 4, 0, 3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SKS5</name></cpp:macro> <cpp:value>SKS(S5, 0, 1, 2, 3, 1, 3, 0, 2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SKS6</name></cpp:macro> <cpp:value>SKS(S6, 4, 5, 6, 7, 0, 1, 4, 2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SKS7</name></cpp:macro> <cpp:value>SKS(S7, 0, 1, 2, 3, 4, 3, 1, 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WUP</name><parameter_list>(<parameter><type><name>wi</name></type></parameter>, <parameter><type><name>wi5</name></type></parameter>, <parameter><type><name>wi3</name></type></parameter>, <parameter><type><name>wi1</name></type></parameter>, <parameter><type><name>cc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { ulong32 tt = (wi) ^ (wi5) ^ (wi3) ^ (wi1) ^ (0x9E3779B9 ^ (ulong32)(cc)); (wi) = ROLc(tt, 11); } while (0)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WUP0</name><parameter_list>(<parameter><type><name>cc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { WUP(w0, w3, w5, w7, cc); WUP(w1, w4, w6, w0, cc + 1); WUP(w2, w5, w7, w1, cc + 2); WUP(w3, w6, w0, w2, cc + 3); } while (0)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WUP1</name><parameter_list>(<parameter><type><name>cc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { WUP(w4, w7, w1, w3, cc); WUP(w5, w0, w2, w4, cc + 1); WUP(w6, w1, w3, w5, cc + 2); WUP(w7, w2, w4, w6, cc + 3); } while (0)</cpp:value></cpp:define>






<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>wbuf</name><index>[<expr><literal type="number">32</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>w0</name></decl>, <decl><type ref="prev"/><name>w1</name></decl>, <decl><type ref="prev"/><name>w2</name></decl>, <decl><type ref="prev"/><name>w3</name></decl>, <decl><type ref="prev"/><name>w4</name></decl>, <decl><type ref="prev"/><name>w5</name></decl>, <decl><type ref="prev"/><name>w6</name></decl>, <decl><type ref="prev"/><name>w7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>st</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>key</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>keylen</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>keylen</name> <operator>&lt;=</operator> <literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><call><name>XMEMCPY</name><argument_list>(<argument><expr><name>wbuf</name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><name>keylen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>keylen</name> <operator>&lt;</operator> <literal type="number">32</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>wbuf</name><index>[<expr><name>keylen</name></expr>]</index></name> <operator>=</operator> <literal type="number">0x01</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>keylen</name> <operator>&lt;</operator> <literal type="number">31</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>XMEMSET</name><argument_list>(<argument><expr><name>wbuf</name> <operator>+</operator> <name>keylen</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">31</literal> <operator>-</operator> <name>keylen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>LOAD32L</name><argument_list>(<argument><expr><name>w0</name></expr></argument>, <argument><expr><name>wbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32L</name><argument_list>(<argument><expr><name>w1</name></expr></argument>, <argument><expr><name>wbuf</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32L</name><argument_list>(<argument><expr><name>w2</name></expr></argument>, <argument><expr><name>wbuf</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32L</name><argument_list>(<argument><expr><name>w3</name></expr></argument>, <argument><expr><name>wbuf</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32L</name><argument_list>(<argument><expr><name>w4</name></expr></argument>, <argument><expr><name>wbuf</name> <operator>+</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32L</name><argument_list>(<argument><expr><name>w5</name></expr></argument>, <argument><expr><name>wbuf</name> <operator>+</operator> <literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32L</name><argument_list>(<argument><expr><name>w6</name></expr></argument>, <argument><expr><name>wbuf</name> <operator>+</operator> <literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32L</name><argument_list>(<argument><expr><name>w7</name></expr></argument>, <argument><expr><name>wbuf</name> <operator>+</operator> <literal type="number">28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>WUP0</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS3</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP1</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS2</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP0</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS1</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP1</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS0</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP0</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS7</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP1</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS6</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP0</name><argument_list>(<argument><expr><literal type="number">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS5</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP1</name><argument_list>(<argument><expr><literal type="number">28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS4</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP0</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS3</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP1</name><argument_list>(<argument><expr><literal type="number">36</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS2</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP0</name><argument_list>(<argument><expr><literal type="number">40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS1</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP1</name><argument_list>(<argument><expr><literal type="number">44</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS0</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP0</name><argument_list>(<argument><expr><literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS7</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP1</name><argument_list>(<argument><expr><literal type="number">52</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS6</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP0</name><argument_list>(<argument><expr><literal type="number">56</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS5</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP1</name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS4</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP0</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS3</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP1</name><argument_list>(<argument><expr><literal type="number">68</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS2</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP0</name><argument_list>(<argument><expr><literal type="number">72</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS1</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP1</name><argument_list>(<argument><expr><literal type="number">76</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS0</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP0</name><argument_list>(<argument><expr><literal type="number">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS7</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP1</name><argument_list>(<argument><expr><literal type="number">84</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS6</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP0</name><argument_list>(<argument><expr><literal type="number">88</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS5</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP1</name><argument_list>(<argument><expr><literal type="number">92</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS4</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>WUP0</name><argument_list>(<argument><expr><literal type="number">96</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt><expr><name>SKS3</name></expr>;</expr_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SKS</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SKS0</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SKS1</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SKS2</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SKS3</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SKS4</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SKS5</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SKS6</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SKS7</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>WUP</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>WUP0</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>WUP1</name></cpp:undef>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></function>













<function><type><name>int</name></type> <name>sosemanuk_setiv</name><parameter_list>(<parameter><decl><type><name>sosemanuk_state</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>ivlen</name></decl></parameter>)</parameter_list>
<block>{<block_content>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>KA</name><parameter_list>(<parameter><type><name>zc</name></type></parameter>, <parameter><type><name>x0</name></type></parameter>, <parameter><type><name>x1</name></type></parameter>, <parameter><type><name>x2</name></type></parameter>, <parameter><type><name>x3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { x0 ^= st-&gt;kc[(zc)]; x1 ^= st-&gt;kc[(zc) + 1]; x2 ^= st-&gt;kc[(zc) + 2]; x3 ^= st-&gt;kc[(zc) + 3]; } while (0)</cpp:value></cpp:define>













<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FSS</name><parameter_list>(<parameter><type><name>zc</name></type></parameter>, <parameter><type><name>S</name></type></parameter>, <parameter><type><name>i0</name></type></parameter>, <parameter><type><name>i1</name></type></parameter>, <parameter><type><name>i2</name></type></parameter>, <parameter><type><name>i3</name></type></parameter>, <parameter><type><name>i4</name></type></parameter>, <parameter><type><name>o0</name></type></parameter>, <parameter><type><name>o1</name></type></parameter>, <parameter><type><name>o2</name></type></parameter>, <parameter><type><name>o3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { KA(zc, r ##i0, r ##i1, r ##i2, r ##i3); S(r ##i0, r ##i1, r ##i2, r ##i3, r ##i4); SERPENT_LT(r ##o0, r ##o1, r ##o2, r ##o3); } while (0)</cpp:value></cpp:define>









<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FSF</name><parameter_list>(<parameter><type><name>zc</name></type></parameter>, <parameter><type><name>S</name></type></parameter>, <parameter><type><name>i0</name></type></parameter>, <parameter><type><name>i1</name></type></parameter>, <parameter><type><name>i2</name></type></parameter>, <parameter><type><name>i3</name></type></parameter>, <parameter><type><name>i4</name></type></parameter>, <parameter><type><name>o0</name></type></parameter>, <parameter><type><name>o1</name></type></parameter>, <parameter><type><name>o2</name></type></parameter>, <parameter><type><name>o3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { KA(zc, r ##i0, r ##i1, r ##i2, r ##i3); S(r ##i0, r ##i1, r ##i2, r ##i3, r ##i4); SERPENT_LT(r ##o0, r ##o1, r ##o2, r ##o3); KA(zc + 4, r ##o0, r ##o1, r ##o2, r ##o3); } while (0)</cpp:value></cpp:define>






<decl_stmt><decl><type><name>ulong32</name></type> <name>r0</name></decl>, <decl><type ref="prev"/><name>r1</name></decl>, <decl><type ref="prev"/><name>r2</name></decl>, <decl><type ref="prev"/><name>r3</name></decl>, <decl><type ref="prev"/><name>r4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>ivtmp</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>st</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>ivlen</name> <operator>&lt;=</operator> <literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>iv</name> <operator>!=</operator> <name>NULL</name> <operator>||</operator> <name>ivlen</name> <operator>==</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ivlen</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>XMEMCPY</name><argument_list>(<argument><expr><name>ivtmp</name></expr></argument>, <argument><expr><name>iv</name></expr></argument>, <argument><expr><name>ivlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>




<expr_stmt><expr><call><name>LOAD32L</name><argument_list>(<argument><expr><name>r0</name></expr></argument>, <argument><expr><name>ivtmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32L</name><argument_list>(<argument><expr><name>r1</name></expr></argument>, <argument><expr><name>ivtmp</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32L</name><argument_list>(<argument><expr><name>r2</name></expr></argument>, <argument><expr><name>ivtmp</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LOAD32L</name><argument_list>(<argument><expr><name>r3</name></expr></argument>, <argument><expr><name>ivtmp</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>S0</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>S1</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>S2</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>S3</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><name>S4</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><name>S5</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><name>S6</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">28</literal></expr></argument>, <argument><expr><name>S7</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">32</literal></expr></argument>, <argument><expr><name>S0</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">36</literal></expr></argument>, <argument><expr><name>S1</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">40</literal></expr></argument>, <argument><expr><name>S2</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">44</literal></expr></argument>, <argument><expr><name>S3</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s09</name></name> <operator>=</operator> <name>r3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s08</name></name> <operator>=</operator> <name>r1</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s07</name></name> <operator>=</operator> <name>r0</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s06</name></name> <operator>=</operator> <name>r2</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">48</literal></expr></argument>, <argument><expr><name>S4</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">52</literal></expr></argument>, <argument><expr><name>S5</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">56</literal></expr></argument>, <argument><expr><name>S6</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">60</literal></expr></argument>, <argument><expr><name>S7</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">64</literal></expr></argument>, <argument><expr><name>S0</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">68</literal></expr></argument>, <argument><expr><name>S1</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>r1</name></name> <operator>=</operator> <name>r2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s04</name></name> <operator>=</operator> <name>r1</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>r2</name></name> <operator>=</operator> <name>r3</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s05</name></name> <operator>=</operator> <name>r0</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">72</literal></expr></argument>, <argument><expr><name>S2</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">76</literal></expr></argument>, <argument><expr><name>S3</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">80</literal></expr></argument>, <argument><expr><name>S4</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">84</literal></expr></argument>, <argument><expr><name>S5</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSS</name><argument_list>(<argument><expr><literal type="number">88</literal></expr></argument>, <argument><expr><name>S6</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>FSF</name><argument_list>(<argument><expr><literal type="number">92</literal></expr></argument>, <argument><expr><name>S7</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s03</name></name> <operator>=</operator> <name>r0</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s02</name></name> <operator>=</operator> <name>r1</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s01</name></name> <operator>=</operator> <name>r2</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s00</name></name> <operator>=</operator> <name>r3</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>ptr</name></name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>KA</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>FSS</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>FSF</name></cpp:undef>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></function>




<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ulong32</name></type> <name><name>mul_a</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0xE19FCF13</literal></expr>, <expr><literal type="number">0x6B973726</literal></expr>, <expr><literal type="number">0x8A08F835</literal></expr>,
<expr><literal type="number">0xD6876E4C</literal></expr>, <expr><literal type="number">0x3718A15F</literal></expr>, <expr><literal type="number">0xBD10596A</literal></expr>, <expr><literal type="number">0x5C8F9679</literal></expr>,
<expr><literal type="number">0x05A7DC98</literal></expr>, <expr><literal type="number">0xE438138B</literal></expr>, <expr><literal type="number">0x6E30EBBE</literal></expr>, <expr><literal type="number">0x8FAF24AD</literal></expr>,
<expr><literal type="number">0xD320B2D4</literal></expr>, <expr><literal type="number">0x32BF7DC7</literal></expr>, <expr><literal type="number">0xB8B785F2</literal></expr>, <expr><literal type="number">0x59284AE1</literal></expr>,
<expr><literal type="number">0x0AE71199</literal></expr>, <expr><literal type="number">0xEB78DE8A</literal></expr>, <expr><literal type="number">0x617026BF</literal></expr>, <expr><literal type="number">0x80EFE9AC</literal></expr>,
<expr><literal type="number">0xDC607FD5</literal></expr>, <expr><literal type="number">0x3DFFB0C6</literal></expr>, <expr><literal type="number">0xB7F748F3</literal></expr>, <expr><literal type="number">0x566887E0</literal></expr>,
<expr><literal type="number">0x0F40CD01</literal></expr>, <expr><literal type="number">0xEEDF0212</literal></expr>, <expr><literal type="number">0x64D7FA27</literal></expr>, <expr><literal type="number">0x85483534</literal></expr>,
<expr><literal type="number">0xD9C7A34D</literal></expr>, <expr><literal type="number">0x38586C5E</literal></expr>, <expr><literal type="number">0xB250946B</literal></expr>, <expr><literal type="number">0x53CF5B78</literal></expr>,
<expr><literal type="number">0x1467229B</literal></expr>, <expr><literal type="number">0xF5F8ED88</literal></expr>, <expr><literal type="number">0x7FF015BD</literal></expr>, <expr><literal type="number">0x9E6FDAAE</literal></expr>,
<expr><literal type="number">0xC2E04CD7</literal></expr>, <expr><literal type="number">0x237F83C4</literal></expr>, <expr><literal type="number">0xA9777BF1</literal></expr>, <expr><literal type="number">0x48E8B4E2</literal></expr>,
<expr><literal type="number">0x11C0FE03</literal></expr>, <expr><literal type="number">0xF05F3110</literal></expr>, <expr><literal type="number">0x7A57C925</literal></expr>, <expr><literal type="number">0x9BC80636</literal></expr>,
<expr><literal type="number">0xC747904F</literal></expr>, <expr><literal type="number">0x26D85F5C</literal></expr>, <expr><literal type="number">0xACD0A769</literal></expr>, <expr><literal type="number">0x4D4F687A</literal></expr>,
<expr><literal type="number">0x1E803302</literal></expr>, <expr><literal type="number">0xFF1FFC11</literal></expr>, <expr><literal type="number">0x75170424</literal></expr>, <expr><literal type="number">0x9488CB37</literal></expr>,
<expr><literal type="number">0xC8075D4E</literal></expr>, <expr><literal type="number">0x2998925D</literal></expr>, <expr><literal type="number">0xA3906A68</literal></expr>, <expr><literal type="number">0x420FA57B</literal></expr>,
<expr><literal type="number">0x1B27EF9A</literal></expr>, <expr><literal type="number">0xFAB82089</literal></expr>, <expr><literal type="number">0x70B0D8BC</literal></expr>, <expr><literal type="number">0x912F17AF</literal></expr>,
<expr><literal type="number">0xCDA081D6</literal></expr>, <expr><literal type="number">0x2C3F4EC5</literal></expr>, <expr><literal type="number">0xA637B6F0</literal></expr>, <expr><literal type="number">0x47A879E3</literal></expr>,
<expr><literal type="number">0x28CE449F</literal></expr>, <expr><literal type="number">0xC9518B8C</literal></expr>, <expr><literal type="number">0x435973B9</literal></expr>, <expr><literal type="number">0xA2C6BCAA</literal></expr>,
<expr><literal type="number">0xFE492AD3</literal></expr>, <expr><literal type="number">0x1FD6E5C0</literal></expr>, <expr><literal type="number">0x95DE1DF5</literal></expr>, <expr><literal type="number">0x7441D2E6</literal></expr>,
<expr><literal type="number">0x2D699807</literal></expr>, <expr><literal type="number">0xCCF65714</literal></expr>, <expr><literal type="number">0x46FEAF21</literal></expr>, <expr><literal type="number">0xA7616032</literal></expr>,
<expr><literal type="number">0xFBEEF64B</literal></expr>, <expr><literal type="number">0x1A713958</literal></expr>, <expr><literal type="number">0x9079C16D</literal></expr>, <expr><literal type="number">0x71E60E7E</literal></expr>,
<expr><literal type="number">0x22295506</literal></expr>, <expr><literal type="number">0xC3B69A15</literal></expr>, <expr><literal type="number">0x49BE6220</literal></expr>, <expr><literal type="number">0xA821AD33</literal></expr>,
<expr><literal type="number">0xF4AE3B4A</literal></expr>, <expr><literal type="number">0x1531F459</literal></expr>, <expr><literal type="number">0x9F390C6C</literal></expr>, <expr><literal type="number">0x7EA6C37F</literal></expr>,
<expr><literal type="number">0x278E899E</literal></expr>, <expr><literal type="number">0xC611468D</literal></expr>, <expr><literal type="number">0x4C19BEB8</literal></expr>, <expr><literal type="number">0xAD8671AB</literal></expr>,
<expr><literal type="number">0xF109E7D2</literal></expr>, <expr><literal type="number">0x109628C1</literal></expr>, <expr><literal type="number">0x9A9ED0F4</literal></expr>, <expr><literal type="number">0x7B011FE7</literal></expr>,
<expr><literal type="number">0x3CA96604</literal></expr>, <expr><literal type="number">0xDD36A917</literal></expr>, <expr><literal type="number">0x573E5122</literal></expr>, <expr><literal type="number">0xB6A19E31</literal></expr>,
<expr><literal type="number">0xEA2E0848</literal></expr>, <expr><literal type="number">0x0BB1C75B</literal></expr>, <expr><literal type="number">0x81B93F6E</literal></expr>, <expr><literal type="number">0x6026F07D</literal></expr>,
<expr><literal type="number">0x390EBA9C</literal></expr>, <expr><literal type="number">0xD891758F</literal></expr>, <expr><literal type="number">0x52998DBA</literal></expr>, <expr><literal type="number">0xB30642A9</literal></expr>,
<expr><literal type="number">0xEF89D4D0</literal></expr>, <expr><literal type="number">0x0E161BC3</literal></expr>, <expr><literal type="number">0x841EE3F6</literal></expr>, <expr><literal type="number">0x65812CE5</literal></expr>,
<expr><literal type="number">0x364E779D</literal></expr>, <expr><literal type="number">0xD7D1B88E</literal></expr>, <expr><literal type="number">0x5DD940BB</literal></expr>, <expr><literal type="number">0xBC468FA8</literal></expr>,
<expr><literal type="number">0xE0C919D1</literal></expr>, <expr><literal type="number">0x0156D6C2</literal></expr>, <expr><literal type="number">0x8B5E2EF7</literal></expr>, <expr><literal type="number">0x6AC1E1E4</literal></expr>,
<expr><literal type="number">0x33E9AB05</literal></expr>, <expr><literal type="number">0xD2766416</literal></expr>, <expr><literal type="number">0x587E9C23</literal></expr>, <expr><literal type="number">0xB9E15330</literal></expr>,
<expr><literal type="number">0xE56EC549</literal></expr>, <expr><literal type="number">0x04F10A5A</literal></expr>, <expr><literal type="number">0x8EF9F26F</literal></expr>, <expr><literal type="number">0x6F663D7C</literal></expr>,
<expr><literal type="number">0x50358897</literal></expr>, <expr><literal type="number">0xB1AA4784</literal></expr>, <expr><literal type="number">0x3BA2BFB1</literal></expr>, <expr><literal type="number">0xDA3D70A2</literal></expr>,
<expr><literal type="number">0x86B2E6DB</literal></expr>, <expr><literal type="number">0x672D29C8</literal></expr>, <expr><literal type="number">0xED25D1FD</literal></expr>, <expr><literal type="number">0x0CBA1EEE</literal></expr>,
<expr><literal type="number">0x5592540F</literal></expr>, <expr><literal type="number">0xB40D9B1C</literal></expr>, <expr><literal type="number">0x3E056329</literal></expr>, <expr><literal type="number">0xDF9AAC3A</literal></expr>,
<expr><literal type="number">0x83153A43</literal></expr>, <expr><literal type="number">0x628AF550</literal></expr>, <expr><literal type="number">0xE8820D65</literal></expr>, <expr><literal type="number">0x091DC276</literal></expr>,
<expr><literal type="number">0x5AD2990E</literal></expr>, <expr><literal type="number">0xBB4D561D</literal></expr>, <expr><literal type="number">0x3145AE28</literal></expr>, <expr><literal type="number">0xD0DA613B</literal></expr>,
<expr><literal type="number">0x8C55F742</literal></expr>, <expr><literal type="number">0x6DCA3851</literal></expr>, <expr><literal type="number">0xE7C2C064</literal></expr>, <expr><literal type="number">0x065D0F77</literal></expr>,
<expr><literal type="number">0x5F754596</literal></expr>, <expr><literal type="number">0xBEEA8A85</literal></expr>, <expr><literal type="number">0x34E272B0</literal></expr>, <expr><literal type="number">0xD57DBDA3</literal></expr>,
<expr><literal type="number">0x89F22BDA</literal></expr>, <expr><literal type="number">0x686DE4C9</literal></expr>, <expr><literal type="number">0xE2651CFC</literal></expr>, <expr><literal type="number">0x03FAD3EF</literal></expr>,
<expr><literal type="number">0x4452AA0C</literal></expr>, <expr><literal type="number">0xA5CD651F</literal></expr>, <expr><literal type="number">0x2FC59D2A</literal></expr>, <expr><literal type="number">0xCE5A5239</literal></expr>,
<expr><literal type="number">0x92D5C440</literal></expr>, <expr><literal type="number">0x734A0B53</literal></expr>, <expr><literal type="number">0xF942F366</literal></expr>, <expr><literal type="number">0x18DD3C75</literal></expr>,
<expr><literal type="number">0x41F57694</literal></expr>, <expr><literal type="number">0xA06AB987</literal></expr>, <expr><literal type="number">0x2A6241B2</literal></expr>, <expr><literal type="number">0xCBFD8EA1</literal></expr>,
<expr><literal type="number">0x977218D8</literal></expr>, <expr><literal type="number">0x76EDD7CB</literal></expr>, <expr><literal type="number">0xFCE52FFE</literal></expr>, <expr><literal type="number">0x1D7AE0ED</literal></expr>,
<expr><literal type="number">0x4EB5BB95</literal></expr>, <expr><literal type="number">0xAF2A7486</literal></expr>, <expr><literal type="number">0x25228CB3</literal></expr>, <expr><literal type="number">0xC4BD43A0</literal></expr>,
<expr><literal type="number">0x9832D5D9</literal></expr>, <expr><literal type="number">0x79AD1ACA</literal></expr>, <expr><literal type="number">0xF3A5E2FF</literal></expr>, <expr><literal type="number">0x123A2DEC</literal></expr>,
<expr><literal type="number">0x4B12670D</literal></expr>, <expr><literal type="number">0xAA8DA81E</literal></expr>, <expr><literal type="number">0x2085502B</literal></expr>, <expr><literal type="number">0xC11A9F38</literal></expr>,
<expr><literal type="number">0x9D950941</literal></expr>, <expr><literal type="number">0x7C0AC652</literal></expr>, <expr><literal type="number">0xF6023E67</literal></expr>, <expr><literal type="number">0x179DF174</literal></expr>,
<expr><literal type="number">0x78FBCC08</literal></expr>, <expr><literal type="number">0x9964031B</literal></expr>, <expr><literal type="number">0x136CFB2E</literal></expr>, <expr><literal type="number">0xF2F3343D</literal></expr>,
<expr><literal type="number">0xAE7CA244</literal></expr>, <expr><literal type="number">0x4FE36D57</literal></expr>, <expr><literal type="number">0xC5EB9562</literal></expr>, <expr><literal type="number">0x24745A71</literal></expr>,
<expr><literal type="number">0x7D5C1090</literal></expr>, <expr><literal type="number">0x9CC3DF83</literal></expr>, <expr><literal type="number">0x16CB27B6</literal></expr>, <expr><literal type="number">0xF754E8A5</literal></expr>,
<expr><literal type="number">0xABDB7EDC</literal></expr>, <expr><literal type="number">0x4A44B1CF</literal></expr>, <expr><literal type="number">0xC04C49FA</literal></expr>, <expr><literal type="number">0x21D386E9</literal></expr>,
<expr><literal type="number">0x721CDD91</literal></expr>, <expr><literal type="number">0x93831282</literal></expr>, <expr><literal type="number">0x198BEAB7</literal></expr>, <expr><literal type="number">0xF81425A4</literal></expr>,
<expr><literal type="number">0xA49BB3DD</literal></expr>, <expr><literal type="number">0x45047CCE</literal></expr>, <expr><literal type="number">0xCF0C84FB</literal></expr>, <expr><literal type="number">0x2E934BE8</literal></expr>,
<expr><literal type="number">0x77BB0109</literal></expr>, <expr><literal type="number">0x9624CE1A</literal></expr>, <expr><literal type="number">0x1C2C362F</literal></expr>, <expr><literal type="number">0xFDB3F93C</literal></expr>,
<expr><literal type="number">0xA13C6F45</literal></expr>, <expr><literal type="number">0x40A3A056</literal></expr>, <expr><literal type="number">0xCAAB5863</literal></expr>, <expr><literal type="number">0x2B349770</literal></expr>,
<expr><literal type="number">0x6C9CEE93</literal></expr>, <expr><literal type="number">0x8D032180</literal></expr>, <expr><literal type="number">0x070BD9B5</literal></expr>, <expr><literal type="number">0xE69416A6</literal></expr>,
<expr><literal type="number">0xBA1B80DF</literal></expr>, <expr><literal type="number">0x5B844FCC</literal></expr>, <expr><literal type="number">0xD18CB7F9</literal></expr>, <expr><literal type="number">0x301378EA</literal></expr>,
<expr><literal type="number">0x693B320B</literal></expr>, <expr><literal type="number">0x88A4FD18</literal></expr>, <expr><literal type="number">0x02AC052D</literal></expr>, <expr><literal type="number">0xE333CA3E</literal></expr>,
<expr><literal type="number">0xBFBC5C47</literal></expr>, <expr><literal type="number">0x5E239354</literal></expr>, <expr><literal type="number">0xD42B6B61</literal></expr>, <expr><literal type="number">0x35B4A472</literal></expr>,
<expr><literal type="number">0x667BFF0A</literal></expr>, <expr><literal type="number">0x87E43019</literal></expr>, <expr><literal type="number">0x0DECC82C</literal></expr>, <expr><literal type="number">0xEC73073F</literal></expr>,
<expr><literal type="number">0xB0FC9146</literal></expr>, <expr><literal type="number">0x51635E55</literal></expr>, <expr><literal type="number">0xDB6BA660</literal></expr>, <expr><literal type="number">0x3AF46973</literal></expr>,
<expr><literal type="number">0x63DC2392</literal></expr>, <expr><literal type="number">0x8243EC81</literal></expr>, <expr><literal type="number">0x084B14B4</literal></expr>, <expr><literal type="number">0xE9D4DBA7</literal></expr>,
<expr><literal type="number">0xB55B4DDE</literal></expr>, <expr><literal type="number">0x54C482CD</literal></expr>, <expr><literal type="number">0xDECC7AF8</literal></expr>, <expr><literal type="number">0x3F53B5EB</literal></expr>
}</block></expr></init></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ulong32</name></type> <name><name>mul_ia</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="number">0x00000000</literal></expr>, <expr><literal type="number">0x180F40CD</literal></expr>, <expr><literal type="number">0x301E8033</literal></expr>, <expr><literal type="number">0x2811C0FE</literal></expr>,
<expr><literal type="number">0x603CA966</literal></expr>, <expr><literal type="number">0x7833E9AB</literal></expr>, <expr><literal type="number">0x50222955</literal></expr>, <expr><literal type="number">0x482D6998</literal></expr>,
<expr><literal type="number">0xC078FBCC</literal></expr>, <expr><literal type="number">0xD877BB01</literal></expr>, <expr><literal type="number">0xF0667BFF</literal></expr>, <expr><literal type="number">0xE8693B32</literal></expr>,
<expr><literal type="number">0xA04452AA</literal></expr>, <expr><literal type="number">0xB84B1267</literal></expr>, <expr><literal type="number">0x905AD299</literal></expr>, <expr><literal type="number">0x88559254</literal></expr>,
<expr><literal type="number">0x29F05F31</literal></expr>, <expr><literal type="number">0x31FF1FFC</literal></expr>, <expr><literal type="number">0x19EEDF02</literal></expr>, <expr><literal type="number">0x01E19FCF</literal></expr>,
<expr><literal type="number">0x49CCF657</literal></expr>, <expr><literal type="number">0x51C3B69A</literal></expr>, <expr><literal type="number">0x79D27664</literal></expr>, <expr><literal type="number">0x61DD36A9</literal></expr>,
<expr><literal type="number">0xE988A4FD</literal></expr>, <expr><literal type="number">0xF187E430</literal></expr>, <expr><literal type="number">0xD99624CE</literal></expr>, <expr><literal type="number">0xC1996403</literal></expr>,
<expr><literal type="number">0x89B40D9B</literal></expr>, <expr><literal type="number">0x91BB4D56</literal></expr>, <expr><literal type="number">0xB9AA8DA8</literal></expr>, <expr><literal type="number">0xA1A5CD65</literal></expr>,
<expr><literal type="number">0x5249BE62</literal></expr>, <expr><literal type="number">0x4A46FEAF</literal></expr>, <expr><literal type="number">0x62573E51</literal></expr>, <expr><literal type="number">0x7A587E9C</literal></expr>,
<expr><literal type="number">0x32751704</literal></expr>, <expr><literal type="number">0x2A7A57C9</literal></expr>, <expr><literal type="number">0x026B9737</literal></expr>, <expr><literal type="number">0x1A64D7FA</literal></expr>,
<expr><literal type="number">0x923145AE</literal></expr>, <expr><literal type="number">0x8A3E0563</literal></expr>, <expr><literal type="number">0xA22FC59D</literal></expr>, <expr><literal type="number">0xBA208550</literal></expr>,
<expr><literal type="number">0xF20DECC8</literal></expr>, <expr><literal type="number">0xEA02AC05</literal></expr>, <expr><literal type="number">0xC2136CFB</literal></expr>, <expr><literal type="number">0xDA1C2C36</literal></expr>,
<expr><literal type="number">0x7BB9E153</literal></expr>, <expr><literal type="number">0x63B6A19E</literal></expr>, <expr><literal type="number">0x4BA76160</literal></expr>, <expr><literal type="number">0x53A821AD</literal></expr>,
<expr><literal type="number">0x1B854835</literal></expr>, <expr><literal type="number">0x038A08F8</literal></expr>, <expr><literal type="number">0x2B9BC806</literal></expr>, <expr><literal type="number">0x339488CB</literal></expr>,
<expr><literal type="number">0xBBC11A9F</literal></expr>, <expr><literal type="number">0xA3CE5A52</literal></expr>, <expr><literal type="number">0x8BDF9AAC</literal></expr>, <expr><literal type="number">0x93D0DA61</literal></expr>,
<expr><literal type="number">0xDBFDB3F9</literal></expr>, <expr><literal type="number">0xC3F2F334</literal></expr>, <expr><literal type="number">0xEBE333CA</literal></expr>, <expr><literal type="number">0xF3EC7307</literal></expr>,
<expr><literal type="number">0xA492D5C4</literal></expr>, <expr><literal type="number">0xBC9D9509</literal></expr>, <expr><literal type="number">0x948C55F7</literal></expr>, <expr><literal type="number">0x8C83153A</literal></expr>,
<expr><literal type="number">0xC4AE7CA2</literal></expr>, <expr><literal type="number">0xDCA13C6F</literal></expr>, <expr><literal type="number">0xF4B0FC91</literal></expr>, <expr><literal type="number">0xECBFBC5C</literal></expr>,
<expr><literal type="number">0x64EA2E08</literal></expr>, <expr><literal type="number">0x7CE56EC5</literal></expr>, <expr><literal type="number">0x54F4AE3B</literal></expr>, <expr><literal type="number">0x4CFBEEF6</literal></expr>,
<expr><literal type="number">0x04D6876E</literal></expr>, <expr><literal type="number">0x1CD9C7A3</literal></expr>, <expr><literal type="number">0x34C8075D</literal></expr>, <expr><literal type="number">0x2CC74790</literal></expr>,
<expr><literal type="number">0x8D628AF5</literal></expr>, <expr><literal type="number">0x956DCA38</literal></expr>, <expr><literal type="number">0xBD7C0AC6</literal></expr>, <expr><literal type="number">0xA5734A0B</literal></expr>,
<expr><literal type="number">0xED5E2393</literal></expr>, <expr><literal type="number">0xF551635E</literal></expr>, <expr><literal type="number">0xDD40A3A0</literal></expr>, <expr><literal type="number">0xC54FE36D</literal></expr>,
<expr><literal type="number">0x4D1A7139</literal></expr>, <expr><literal type="number">0x551531F4</literal></expr>, <expr><literal type="number">0x7D04F10A</literal></expr>, <expr><literal type="number">0x650BB1C7</literal></expr>,
<expr><literal type="number">0x2D26D85F</literal></expr>, <expr><literal type="number">0x35299892</literal></expr>, <expr><literal type="number">0x1D38586C</literal></expr>, <expr><literal type="number">0x053718A1</literal></expr>,
<expr><literal type="number">0xF6DB6BA6</literal></expr>, <expr><literal type="number">0xEED42B6B</literal></expr>, <expr><literal type="number">0xC6C5EB95</literal></expr>, <expr><literal type="number">0xDECAAB58</literal></expr>,
<expr><literal type="number">0x96E7C2C0</literal></expr>, <expr><literal type="number">0x8EE8820D</literal></expr>, <expr><literal type="number">0xA6F942F3</literal></expr>, <expr><literal type="number">0xBEF6023E</literal></expr>,
<expr><literal type="number">0x36A3906A</literal></expr>, <expr><literal type="number">0x2EACD0A7</literal></expr>, <expr><literal type="number">0x06BD1059</literal></expr>, <expr><literal type="number">0x1EB25094</literal></expr>,
<expr><literal type="number">0x569F390C</literal></expr>, <expr><literal type="number">0x4E9079C1</literal></expr>, <expr><literal type="number">0x6681B93F</literal></expr>, <expr><literal type="number">0x7E8EF9F2</literal></expr>,
<expr><literal type="number">0xDF2B3497</literal></expr>, <expr><literal type="number">0xC724745A</literal></expr>, <expr><literal type="number">0xEF35B4A4</literal></expr>, <expr><literal type="number">0xF73AF469</literal></expr>,
<expr><literal type="number">0xBF179DF1</literal></expr>, <expr><literal type="number">0xA718DD3C</literal></expr>, <expr><literal type="number">0x8F091DC2</literal></expr>, <expr><literal type="number">0x97065D0F</literal></expr>,
<expr><literal type="number">0x1F53CF5B</literal></expr>, <expr><literal type="number">0x075C8F96</literal></expr>, <expr><literal type="number">0x2F4D4F68</literal></expr>, <expr><literal type="number">0x37420FA5</literal></expr>,
<expr><literal type="number">0x7F6F663D</literal></expr>, <expr><literal type="number">0x676026F0</literal></expr>, <expr><literal type="number">0x4F71E60E</literal></expr>, <expr><literal type="number">0x577EA6C3</literal></expr>,
<expr><literal type="number">0xE18D0321</literal></expr>, <expr><literal type="number">0xF98243EC</literal></expr>, <expr><literal type="number">0xD1938312</literal></expr>, <expr><literal type="number">0xC99CC3DF</literal></expr>,
<expr><literal type="number">0x81B1AA47</literal></expr>, <expr><literal type="number">0x99BEEA8A</literal></expr>, <expr><literal type="number">0xB1AF2A74</literal></expr>, <expr><literal type="number">0xA9A06AB9</literal></expr>,
<expr><literal type="number">0x21F5F8ED</literal></expr>, <expr><literal type="number">0x39FAB820</literal></expr>, <expr><literal type="number">0x11EB78DE</literal></expr>, <expr><literal type="number">0x09E43813</literal></expr>,
<expr><literal type="number">0x41C9518B</literal></expr>, <expr><literal type="number">0x59C61146</literal></expr>, <expr><literal type="number">0x71D7D1B8</literal></expr>, <expr><literal type="number">0x69D89175</literal></expr>,
<expr><literal type="number">0xC87D5C10</literal></expr>, <expr><literal type="number">0xD0721CDD</literal></expr>, <expr><literal type="number">0xF863DC23</literal></expr>, <expr><literal type="number">0xE06C9CEE</literal></expr>,
<expr><literal type="number">0xA841F576</literal></expr>, <expr><literal type="number">0xB04EB5BB</literal></expr>, <expr><literal type="number">0x985F7545</literal></expr>, <expr><literal type="number">0x80503588</literal></expr>,
<expr><literal type="number">0x0805A7DC</literal></expr>, <expr><literal type="number">0x100AE711</literal></expr>, <expr><literal type="number">0x381B27EF</literal></expr>, <expr><literal type="number">0x20146722</literal></expr>,
<expr><literal type="number">0x68390EBA</literal></expr>, <expr><literal type="number">0x70364E77</literal></expr>, <expr><literal type="number">0x58278E89</literal></expr>, <expr><literal type="number">0x4028CE44</literal></expr>,
<expr><literal type="number">0xB3C4BD43</literal></expr>, <expr><literal type="number">0xABCBFD8E</literal></expr>, <expr><literal type="number">0x83DA3D70</literal></expr>, <expr><literal type="number">0x9BD57DBD</literal></expr>,
<expr><literal type="number">0xD3F81425</literal></expr>, <expr><literal type="number">0xCBF754E8</literal></expr>, <expr><literal type="number">0xE3E69416</literal></expr>, <expr><literal type="number">0xFBE9D4DB</literal></expr>,
<expr><literal type="number">0x73BC468F</literal></expr>, <expr><literal type="number">0x6BB30642</literal></expr>, <expr><literal type="number">0x43A2C6BC</literal></expr>, <expr><literal type="number">0x5BAD8671</literal></expr>,
<expr><literal type="number">0x1380EFE9</literal></expr>, <expr><literal type="number">0x0B8FAF24</literal></expr>, <expr><literal type="number">0x239E6FDA</literal></expr>, <expr><literal type="number">0x3B912F17</literal></expr>,
<expr><literal type="number">0x9A34E272</literal></expr>, <expr><literal type="number">0x823BA2BF</literal></expr>, <expr><literal type="number">0xAA2A6241</literal></expr>, <expr><literal type="number">0xB225228C</literal></expr>,
<expr><literal type="number">0xFA084B14</literal></expr>, <expr><literal type="number">0xE2070BD9</literal></expr>, <expr><literal type="number">0xCA16CB27</literal></expr>, <expr><literal type="number">0xD2198BEA</literal></expr>,
<expr><literal type="number">0x5A4C19BE</literal></expr>, <expr><literal type="number">0x42435973</literal></expr>, <expr><literal type="number">0x6A52998D</literal></expr>, <expr><literal type="number">0x725DD940</literal></expr>,
<expr><literal type="number">0x3A70B0D8</literal></expr>, <expr><literal type="number">0x227FF015</literal></expr>, <expr><literal type="number">0x0A6E30EB</literal></expr>, <expr><literal type="number">0x12617026</literal></expr>,
<expr><literal type="number">0x451FD6E5</literal></expr>, <expr><literal type="number">0x5D109628</literal></expr>, <expr><literal type="number">0x750156D6</literal></expr>, <expr><literal type="number">0x6D0E161B</literal></expr>,
<expr><literal type="number">0x25237F83</literal></expr>, <expr><literal type="number">0x3D2C3F4E</literal></expr>, <expr><literal type="number">0x153DFFB0</literal></expr>, <expr><literal type="number">0x0D32BF7D</literal></expr>,
<expr><literal type="number">0x85672D29</literal></expr>, <expr><literal type="number">0x9D686DE4</literal></expr>, <expr><literal type="number">0xB579AD1A</literal></expr>, <expr><literal type="number">0xAD76EDD7</literal></expr>,
<expr><literal type="number">0xE55B844F</literal></expr>, <expr><literal type="number">0xFD54C482</literal></expr>, <expr><literal type="number">0xD545047C</literal></expr>, <expr><literal type="number">0xCD4A44B1</literal></expr>,
<expr><literal type="number">0x6CEF89D4</literal></expr>, <expr><literal type="number">0x74E0C919</literal></expr>, <expr><literal type="number">0x5CF109E7</literal></expr>, <expr><literal type="number">0x44FE492A</literal></expr>,
<expr><literal type="number">0x0CD320B2</literal></expr>, <expr><literal type="number">0x14DC607F</literal></expr>, <expr><literal type="number">0x3CCDA081</literal></expr>, <expr><literal type="number">0x24C2E04C</literal></expr>,
<expr><literal type="number">0xAC977218</literal></expr>, <expr><literal type="number">0xB49832D5</literal></expr>, <expr><literal type="number">0x9C89F22B</literal></expr>, <expr><literal type="number">0x8486B2E6</literal></expr>,
<expr><literal type="number">0xCCABDB7E</literal></expr>, <expr><literal type="number">0xD4A49BB3</literal></expr>, <expr><literal type="number">0xFCB55B4D</literal></expr>, <expr><literal type="number">0xE4BA1B80</literal></expr>,
<expr><literal type="number">0x17566887</literal></expr>, <expr><literal type="number">0x0F59284A</literal></expr>, <expr><literal type="number">0x2748E8B4</literal></expr>, <expr><literal type="number">0x3F47A879</literal></expr>,
<expr><literal type="number">0x776AC1E1</literal></expr>, <expr><literal type="number">0x6F65812C</literal></expr>, <expr><literal type="number">0x477441D2</literal></expr>, <expr><literal type="number">0x5F7B011F</literal></expr>,
<expr><literal type="number">0xD72E934B</literal></expr>, <expr><literal type="number">0xCF21D386</literal></expr>, <expr><literal type="number">0xE7301378</literal></expr>, <expr><literal type="number">0xFF3F53B5</literal></expr>,
<expr><literal type="number">0xB7123A2D</literal></expr>, <expr><literal type="number">0xAF1D7AE0</literal></expr>, <expr><literal type="number">0x870CBA1E</literal></expr>, <expr><literal type="number">0x9F03FAD3</literal></expr>,
<expr><literal type="number">0x3EA637B6</literal></expr>, <expr><literal type="number">0x26A9777B</literal></expr>, <expr><literal type="number">0x0EB8B785</literal></expr>, <expr><literal type="number">0x16B7F748</literal></expr>,
<expr><literal type="number">0x5E9A9ED0</literal></expr>, <expr><literal type="number">0x4695DE1D</literal></expr>, <expr><literal type="number">0x6E841EE3</literal></expr>, <expr><literal type="number">0x768B5E2E</literal></expr>,
<expr><literal type="number">0xFEDECC7A</literal></expr>, <expr><literal type="number">0xE6D18CB7</literal></expr>, <expr><literal type="number">0xCEC04C49</literal></expr>, <expr><literal type="number">0xD6CF0C84</literal></expr>,
<expr><literal type="number">0x9EE2651C</literal></expr>, <expr><literal type="number">0x86ED25D1</literal></expr>, <expr><literal type="number">0xAEFCE52F</literal></expr>, <expr><literal type="number">0xB6F3A5E2</literal></expr>
}</block></expr></init></decl>;</decl_stmt>






<function><type><specifier>static</specifier> <name>LTC_INLINE</name> <name>void</name></type> <name>_sosemanuk_internal</name><parameter_list>(<parameter><decl><type><name>sosemanuk_state</name> <modifier>*</modifier></type><name>st</name></decl></parameter>)</parameter_list>
<block>{<block_content>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MUL_A</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(T32((x) &lt;&lt; 8) ^ mul_a[(x) &gt;&gt; 24])</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MUL_G</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((x) &gt;&gt; 8) ^ mul_ia[(x) &amp; 0xFF])</cpp:value></cpp:define>









<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__alpha</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XMUX</name><parameter_list>(<parameter><type><name>c</name></type></parameter>, <parameter><type><name>x</name></type></parameter>, <parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((((signed int)((c) &lt;&lt; 31) &gt;&gt; 31) &amp; (y)) ^ (x))</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XMUX</name><parameter_list>(<parameter><type><name>c</name></type></parameter>, <parameter><type><name>x</name></type></parameter>, <parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((c) &amp; 0x1) ? ((x) ^ (y)) : (x))</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FSM</name><parameter_list>(<parameter><type><name>x0</name></type></parameter>, <parameter><type><name>x1</name></type></parameter>, <parameter><type><name>x2</name></type></parameter>, <parameter><type><name>x3</name></type></parameter>, <parameter><type><name>x4</name></type></parameter>, <parameter><type><name>x5</name></type></parameter>, <parameter><type><name>x6</name></type></parameter>, <parameter><type><name>x7</name></type></parameter>, <parameter><type><name>x8</name></type></parameter>, <parameter><type><name>x9</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { ulong32 tt, or1; tt = XMUX(r1, s ##x1, s ##x8); or1 = r1; r1 = T32(r2 + tt); tt = T32(or1 * 0x54655307); r2 = ROLc(tt, 7); } while (0)</cpp:value></cpp:define>












<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LRU</name><parameter_list>(<parameter><type><name>x0</name></type></parameter>, <parameter><type><name>x1</name></type></parameter>, <parameter><type><name>x2</name></type></parameter>, <parameter><type><name>x3</name></type></parameter>, <parameter><type><name>x4</name></type></parameter>, <parameter><type><name>x5</name></type></parameter>, <parameter><type><name>x6</name></type></parameter>, <parameter><type><name>x7</name></type></parameter>, <parameter><type><name>x8</name></type></parameter>, <parameter><type><name>x9</name></type></parameter>, <parameter><type><name>dd</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { dd = s ##x0; s ##x0 = MUL_A(s ##x0) ^ MUL_G(s ##x3) ^ s ##x9; } while (0)</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CC1</name><parameter_list>(<parameter><type><name>x0</name></type></parameter>, <parameter><type><name>x1</name></type></parameter>, <parameter><type><name>x2</name></type></parameter>, <parameter><type><name>x3</name></type></parameter>, <parameter><type><name>x4</name></type></parameter>, <parameter><type><name>x5</name></type></parameter>, <parameter><type><name>x6</name></type></parameter>, <parameter><type><name>x7</name></type></parameter>, <parameter><type><name>x8</name></type></parameter>, <parameter><type><name>x9</name></type></parameter>, <parameter><type><name>ee</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { ee = T32(s ##x9 + r1) ^ r2; } while (0)</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STEP</name><parameter_list>(<parameter><type><name>x0</name></type></parameter>, <parameter><type><name>x1</name></type></parameter>, <parameter><type><name>x2</name></type></parameter>, <parameter><type><name>x3</name></type></parameter>, <parameter><type><name>x4</name></type></parameter>, <parameter><type><name>x5</name></type></parameter>, <parameter><type><name>x6</name></type></parameter>, <parameter><type><name>x7</name></type></parameter>, <parameter><type><name>x8</name></type></parameter>, <parameter><type><name>x9</name></type></parameter>, <parameter><type><name>dd</name></type></parameter>, <parameter><type><name>ee</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { FSM(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9); LRU(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, dd); CC1(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, ee); } while (0)</cpp:value></cpp:define>











<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRD</name><parameter_list>(<parameter><type><name>S</name></type></parameter>, <parameter><type><name>x0</name></type></parameter>, <parameter><type><name>x1</name></type></parameter>, <parameter><type><name>x2</name></type></parameter>, <parameter><type><name>x3</name></type></parameter>, <parameter><type><name>ooff</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { S(u0, u1, u2, u3, u4); STORE32L(u ##x0 ^ v0, st-&gt;buf + ooff); STORE32L(u ##x1 ^ v1, st-&gt;buf + ooff + 4); STORE32L(u ##x2 ^ v2, st-&gt;buf + ooff + 8); STORE32L(u ##x3 ^ v3, st-&gt;buf + ooff + 12); } while (0)</cpp:value></cpp:define>







<decl_stmt><decl><type><name>ulong32</name></type> <name>s00</name> <init>= <expr><name><name>st</name><operator>-&gt;</operator><name>s00</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>s01</name> <init>= <expr><name><name>st</name><operator>-&gt;</operator><name>s01</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>s02</name> <init>= <expr><name><name>st</name><operator>-&gt;</operator><name>s02</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>s03</name> <init>= <expr><name><name>st</name><operator>-&gt;</operator><name>s03</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>s04</name> <init>= <expr><name><name>st</name><operator>-&gt;</operator><name>s04</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>s05</name> <init>= <expr><name><name>st</name><operator>-&gt;</operator><name>s05</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>s06</name> <init>= <expr><name><name>st</name><operator>-&gt;</operator><name>s06</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>s07</name> <init>= <expr><name><name>st</name><operator>-&gt;</operator><name>s07</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>s08</name> <init>= <expr><name><name>st</name><operator>-&gt;</operator><name>s08</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>s09</name> <init>= <expr><name><name>st</name><operator>-&gt;</operator><name>s09</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>r1</name> <init>= <expr><name><name>st</name><operator>-&gt;</operator><name>r1</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>r2</name> <init>= <expr><name><name>st</name><operator>-&gt;</operator><name>r2</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>u0</name></decl>, <decl><type ref="prev"/><name>u1</name></decl>, <decl><type ref="prev"/><name>u2</name></decl>, <decl><type ref="prev"/><name>u3</name></decl>, <decl><type ref="prev"/><name>u4</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong32</name></type> <name>v0</name></decl>, <decl><type ref="prev"/><name>v1</name></decl>, <decl><type ref="prev"/><name>v2</name></decl>, <decl><type ref="prev"/><name>v3</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><name>v0</name></expr></argument>, <argument><expr><name>u0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><name>v1</name></expr></argument>, <argument><expr><name>u1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><name>v2</name></expr></argument>, <argument><expr><name>u2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><name>v3</name></expr></argument>, <argument><expr><name>u3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRD</name><argument_list>(<argument><expr><name>S2</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><name>v0</name></expr></argument>, <argument><expr><name>u0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><name>v1</name></expr></argument>, <argument><expr><name>u1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><name>v2</name></expr></argument>, <argument><expr><name>u2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><name>v3</name></expr></argument>, <argument><expr><name>u3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRD</name><argument_list>(<argument><expr><name>S2</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><name>v0</name></expr></argument>, <argument><expr><name>u0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><name>v1</name></expr></argument>, <argument><expr><name>u1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><name>v2</name></expr></argument>, <argument><expr><name>u2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><name>v3</name></expr></argument>, <argument><expr><name>u3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRD</name><argument_list>(<argument><expr><name>S2</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><name>v0</name></expr></argument>, <argument><expr><name>u0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><name>v1</name></expr></argument>, <argument><expr><name>u1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><name>v2</name></expr></argument>, <argument><expr><name>u2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><name>v3</name></expr></argument>, <argument><expr><name>u3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRD</name><argument_list>(<argument><expr><name>S2</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><name>v0</name></expr></argument>, <argument><expr><name>u0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><name>v1</name></expr></argument>, <argument><expr><name>u1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><name>v2</name></expr></argument>, <argument><expr><name>u2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>STEP</name><argument_list>(<argument><expr><literal type="number">09</literal></expr></argument>, <argument><expr><literal type="number">00</literal></expr></argument>, <argument><expr><literal type="number">01</literal></expr></argument>, <argument><expr><literal type="number">02</literal></expr></argument>, <argument><expr><literal type="number">03</literal></expr></argument>, <argument><expr><literal type="number">04</literal></expr></argument>, <argument><expr><literal type="number">05</literal></expr></argument>, <argument><expr><literal type="number">06</literal></expr></argument>, <argument><expr><literal type="number">07</literal></expr></argument>, <argument><expr><literal type="number">08</literal></expr></argument>, <argument><expr><name>v3</name></expr></argument>, <argument><expr><name>u3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>SRD</name><argument_list>(<argument><expr><name>S2</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s00</name></name> <operator>=</operator> <name>s00</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s01</name></name> <operator>=</operator> <name>s01</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s02</name></name> <operator>=</operator> <name>s02</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s03</name></name> <operator>=</operator> <name>s03</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s04</name></name> <operator>=</operator> <name>s04</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s05</name></name> <operator>=</operator> <name>s05</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s06</name></name> <operator>=</operator> <name>s06</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s07</name></name> <operator>=</operator> <name>s07</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s08</name></name> <operator>=</operator> <name>s08</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>s09</name></name> <operator>=</operator> <name>s09</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>r1</name></name> <operator>=</operator> <name>r1</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>r2</name></name> <operator>=</operator> <name>r2</name></expr>;</expr_stmt>
</block_content>}</block></function>







<function><type><specifier>static</specifier> <name>LTC_INLINE</name> <name>void</name></type> <name>_xorbuf</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>in1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>in2</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>datalen</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<while>while <condition>(<expr><name>datalen</name> <operator>--</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>out</name> <operator>++</operator> <operator>=</operator> <operator>*</operator><name>in1</name> <operator>++</operator> <operator>^</operator> <operator>*</operator><name>in2</name> <operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></while>
</block_content>}</block></function>













<function><type><name>int</name></type> <name>sosemanuk_crypt</name><parameter_list>(<parameter><decl><type><name>sosemanuk_state</name> <modifier>*</modifier></type><name>st</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>inlen</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>st</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>in</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>out</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>st</name><operator>-&gt;</operator><name>ptr</name></name> <operator>&lt;</operator> <operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>)</argument_list></sizeof><operator>)</operator></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>rlen</name> <init>= <expr><operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>)</argument_list></sizeof><operator>)</operator> <operator>-</operator> <name><name>st</name><operator>-&gt;</operator><name>ptr</name></name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>rlen</name> <operator>&gt;</operator> <name>inlen</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>rlen</name> <operator>=</operator> <name>inlen</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>_xorbuf</name><argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>buf</name></name> <operator>+</operator> <name><name>st</name><operator>-&gt;</operator><name>ptr</name></name></expr></argument>, <argument><expr><name>in</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>rlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>in</name> <operator>+=</operator> <name>rlen</name></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>+=</operator> <name>rlen</name></expr>;</expr_stmt>
<expr_stmt><expr><name>inlen</name> <operator>-=</operator> <name>rlen</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>ptr</name></name> <operator>+=</operator> <name>rlen</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<while>while <condition>(<expr><name>inlen</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>_sosemanuk_internal</name><argument_list>(<argument><expr><name>st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>inlen</name> <operator>&gt;=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>_xorbuf</name><argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>, <argument><expr><name>in</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>in</name> <operator>+=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
<expr_stmt><expr><name>out</name> <operator>+=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
<expr_stmt><expr><name>inlen</name> <operator>-=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>_xorbuf</name><argument_list>(<argument><expr><name><name>st</name><operator>-&gt;</operator><name>buf</name></name></expr></argument>, <argument><expr><name>in</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>inlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>st</name><operator>-&gt;</operator><name>ptr</name></name> <operator>=</operator> <name>inlen</name></expr>;</expr_stmt>
<expr_stmt><expr><name>inlen</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></while>
<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></function>











<function><type><name>int</name></type> <name>sosemanuk_keystream</name><parameter_list>(<parameter><decl><type><name>sosemanuk_state</name> <modifier>*</modifier></type><name>st</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>outlen</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>outlen</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>CRYPT_OK</name></expr>;</return></block_content></block></if></if_stmt> 
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>out</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>XMEMSET</name><argument_list>(<argument><expr><name>out</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>outlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>sosemanuk_crypt</name><argument_list>(<argument><expr><name>st</name></expr></argument>, <argument><expr><name>out</name></expr></argument>, <argument><expr><name>outlen</name></expr></argument>, <argument><expr><name>out</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>







<function><type><name>int</name></type> <name>sosemanuk_done</name><parameter_list>(<parameter><decl><type><name>sosemanuk_state</name> <modifier>*</modifier></type><name>st</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>st</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>zeromem</name><argument_list>(<argument><expr><name>st</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>sosemanuk_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>CRYPT_OK</name></expr>;</return>
</block_content>}</block></function>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




</unit>
