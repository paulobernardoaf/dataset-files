<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="D:\Pesquisa\Projects\libtomcrypt-analysis\_cppstats\libtomcrypt\src\hashes\md5.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tomcrypt_private.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_MD5</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>struct</name> <name>ltc_hash_descriptor</name></name></type> <name>md5_desc</name> <init>=

<expr><block>{

<expr><literal type="string">"md5"</literal></expr>,

<expr><literal type="number">3</literal></expr>,

<expr><literal type="number">16</literal></expr>,

<expr><literal type="number">64</literal></expr>,

<expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">840</literal></expr>, <expr><literal type="number">113549</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">5</literal></expr>, }</block></expr>,

<expr><literal type="number">6</literal></expr>,

<expr><operator>&amp;</operator><name>md5_init</name></expr>,

<expr><operator>&amp;</operator><name>md5_process</name></expr>,

<expr><operator>&amp;</operator><name>md5_done</name></expr>,

<expr><operator>&amp;</operator><name>md5_test</name></expr>,

<expr><name>NULL</name></expr>

}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>F</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(z ^ (x &amp; (y ^ z)))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>G</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(y ^ (z &amp; (y ^ x)))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>H</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(x^y^z)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>I</name><parameter_list>(<parameter><type><name>x</name></type></parameter>,<parameter><type><name>y</name></type></parameter>,<parameter><type><name>z</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(y^(x|(~z)))</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_SMALL_CODE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>,<parameter><type><name>M</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>a = (a + F(b,c,d) + M + t); a = ROL(a, s) + b;</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GG</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>,<parameter><type><name>M</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>a = (a + G(b,c,d) + M + t); a = ROL(a, s) + b;</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HH</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>,<parameter><type><name>M</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>a = (a + H(b,c,d) + M + t); a = ROL(a, s) + b;</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>II</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>,<parameter><type><name>M</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>a = (a + I(b,c,d) + M + t); a = ROL(a, s) + b;</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>Worder</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">5</literal></expr>,<expr><literal type="number">6</literal></expr>,<expr><literal type="number">7</literal></expr>,<expr><literal type="number">8</literal></expr>,<expr><literal type="number">9</literal></expr>,<expr><literal type="number">10</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">12</literal></expr>,<expr><literal type="number">13</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">15</literal></expr>,

<expr><literal type="number">1</literal></expr>,<expr><literal type="number">6</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">0</literal></expr>,<expr><literal type="number">5</literal></expr>,<expr><literal type="number">10</literal></expr>,<expr><literal type="number">15</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">9</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">8</literal></expr>,<expr><literal type="number">13</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">7</literal></expr>,<expr><literal type="number">12</literal></expr>,

<expr><literal type="number">5</literal></expr>,<expr><literal type="number">8</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">7</literal></expr>,<expr><literal type="number">10</literal></expr>,<expr><literal type="number">13</literal></expr>,<expr><literal type="number">0</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">6</literal></expr>,<expr><literal type="number">9</literal></expr>,<expr><literal type="number">12</literal></expr>,<expr><literal type="number">15</literal></expr>,<expr><literal type="number">2</literal></expr>,

<expr><literal type="number">0</literal></expr>,<expr><literal type="number">7</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">5</literal></expr>,<expr><literal type="number">12</literal></expr>,<expr><literal type="number">3</literal></expr>,<expr><literal type="number">10</literal></expr>,<expr><literal type="number">1</literal></expr>,<expr><literal type="number">8</literal></expr>,<expr><literal type="number">15</literal></expr>,<expr><literal type="number">6</literal></expr>,<expr><literal type="number">13</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">2</literal></expr>,<expr><literal type="number">9</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>Rorder</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">7</literal></expr>,<expr><literal type="number">12</literal></expr>,<expr><literal type="number">17</literal></expr>,<expr><literal type="number">22</literal></expr>,<expr><literal type="number">7</literal></expr>,<expr><literal type="number">12</literal></expr>,<expr><literal type="number">17</literal></expr>,<expr><literal type="number">22</literal></expr>,<expr><literal type="number">7</literal></expr>,<expr><literal type="number">12</literal></expr>,<expr><literal type="number">17</literal></expr>,<expr><literal type="number">22</literal></expr>,<expr><literal type="number">7</literal></expr>,<expr><literal type="number">12</literal></expr>,<expr><literal type="number">17</literal></expr>,<expr><literal type="number">22</literal></expr>,

<expr><literal type="number">5</literal></expr>,<expr><literal type="number">9</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">20</literal></expr>,<expr><literal type="number">5</literal></expr>,<expr><literal type="number">9</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">20</literal></expr>,<expr><literal type="number">5</literal></expr>,<expr><literal type="number">9</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">20</literal></expr>,<expr><literal type="number">5</literal></expr>,<expr><literal type="number">9</literal></expr>,<expr><literal type="number">14</literal></expr>,<expr><literal type="number">20</literal></expr>,

<expr><literal type="number">4</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">16</literal></expr>,<expr><literal type="number">23</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">16</literal></expr>,<expr><literal type="number">23</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">16</literal></expr>,<expr><literal type="number">23</literal></expr>,<expr><literal type="number">4</literal></expr>,<expr><literal type="number">11</literal></expr>,<expr><literal type="number">16</literal></expr>,<expr><literal type="number">23</literal></expr>,

<expr><literal type="number">6</literal></expr>,<expr><literal type="number">10</literal></expr>,<expr><literal type="number">15</literal></expr>,<expr><literal type="number">21</literal></expr>,<expr><literal type="number">6</literal></expr>,<expr><literal type="number">10</literal></expr>,<expr><literal type="number">15</literal></expr>,<expr><literal type="number">21</literal></expr>,<expr><literal type="number">6</literal></expr>,<expr><literal type="number">10</literal></expr>,<expr><literal type="number">15</literal></expr>,<expr><literal type="number">21</literal></expr>,<expr><literal type="number">6</literal></expr>,<expr><literal type="number">10</literal></expr>,<expr><literal type="number">15</literal></expr>,<expr><literal type="number">21</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ulong32</name></type> <name><name>Korder</name><index>[<expr><literal type="number">64</literal></expr>]</index></name> <init>= <expr><block>{

<expr><literal type="number">0xd76aa478UL</literal></expr>, <expr><literal type="number">0xe8c7b756UL</literal></expr>, <expr><literal type="number">0x242070dbUL</literal></expr>, <expr><literal type="number">0xc1bdceeeUL</literal></expr>, <expr><literal type="number">0xf57c0fafUL</literal></expr>, <expr><literal type="number">0x4787c62aUL</literal></expr>, <expr><literal type="number">0xa8304613UL</literal></expr>, <expr><literal type="number">0xfd469501UL</literal></expr>,

<expr><literal type="number">0x698098d8UL</literal></expr>, <expr><literal type="number">0x8b44f7afUL</literal></expr>, <expr><literal type="number">0xffff5bb1UL</literal></expr>, <expr><literal type="number">0x895cd7beUL</literal></expr>, <expr><literal type="number">0x6b901122UL</literal></expr>, <expr><literal type="number">0xfd987193UL</literal></expr>, <expr><literal type="number">0xa679438eUL</literal></expr>, <expr><literal type="number">0x49b40821UL</literal></expr>,

<expr><literal type="number">0xf61e2562UL</literal></expr>, <expr><literal type="number">0xc040b340UL</literal></expr>, <expr><literal type="number">0x265e5a51UL</literal></expr>, <expr><literal type="number">0xe9b6c7aaUL</literal></expr>, <expr><literal type="number">0xd62f105dUL</literal></expr>, <expr><literal type="number">0x02441453UL</literal></expr>, <expr><literal type="number">0xd8a1e681UL</literal></expr>, <expr><literal type="number">0xe7d3fbc8UL</literal></expr>,

<expr><literal type="number">0x21e1cde6UL</literal></expr>, <expr><literal type="number">0xc33707d6UL</literal></expr>, <expr><literal type="number">0xf4d50d87UL</literal></expr>, <expr><literal type="number">0x455a14edUL</literal></expr>, <expr><literal type="number">0xa9e3e905UL</literal></expr>, <expr><literal type="number">0xfcefa3f8UL</literal></expr>, <expr><literal type="number">0x676f02d9UL</literal></expr>, <expr><literal type="number">0x8d2a4c8aUL</literal></expr>,

<expr><literal type="number">0xfffa3942UL</literal></expr>, <expr><literal type="number">0x8771f681UL</literal></expr>, <expr><literal type="number">0x6d9d6122UL</literal></expr>, <expr><literal type="number">0xfde5380cUL</literal></expr>, <expr><literal type="number">0xa4beea44UL</literal></expr>, <expr><literal type="number">0x4bdecfa9UL</literal></expr>, <expr><literal type="number">0xf6bb4b60UL</literal></expr>, <expr><literal type="number">0xbebfbc70UL</literal></expr>,

<expr><literal type="number">0x289b7ec6UL</literal></expr>, <expr><literal type="number">0xeaa127faUL</literal></expr>, <expr><literal type="number">0xd4ef3085UL</literal></expr>, <expr><literal type="number">0x04881d05UL</literal></expr>, <expr><literal type="number">0xd9d4d039UL</literal></expr>, <expr><literal type="number">0xe6db99e5UL</literal></expr>, <expr><literal type="number">0x1fa27cf8UL</literal></expr>, <expr><literal type="number">0xc4ac5665UL</literal></expr>,

<expr><literal type="number">0xf4292244UL</literal></expr>, <expr><literal type="number">0x432aff97UL</literal></expr>, <expr><literal type="number">0xab9423a7UL</literal></expr>, <expr><literal type="number">0xfc93a039UL</literal></expr>, <expr><literal type="number">0x655b59c3UL</literal></expr>, <expr><literal type="number">0x8f0ccc92UL</literal></expr>, <expr><literal type="number">0xffeff47dUL</literal></expr>, <expr><literal type="number">0x85845dd1UL</literal></expr>,

<expr><literal type="number">0x6fa87e4fUL</literal></expr>, <expr><literal type="number">0xfe2ce6e0UL</literal></expr>, <expr><literal type="number">0xa3014314UL</literal></expr>, <expr><literal type="number">0x4e0811a1UL</literal></expr>, <expr><literal type="number">0xf7537e82UL</literal></expr>, <expr><literal type="number">0xbd3af235UL</literal></expr>, <expr><literal type="number">0x2ad7d2bbUL</literal></expr>, <expr><literal type="number">0xeb86d391UL</literal></expr>

}</block></expr></init></decl>;</decl_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>FF</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>,<parameter><type><name>M</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>a = (a + F(b,c,d) + M + t); a = ROLc(a, s) + b;</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GG</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>,<parameter><type><name>M</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>a = (a + G(b,c,d) + M + t); a = ROLc(a, s) + b;</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HH</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>,<parameter><type><name>M</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>a = (a + H(b,c,d) + M + t); a = ROLc(a, s) + b;</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>II</name><parameter_list>(<parameter><type><name>a</name></type></parameter>,<parameter><type><name>b</name></type></parameter>,<parameter><type><name>c</name></type></parameter>,<parameter><type><name>d</name></type></parameter>,<parameter><type><name>M</name></type></parameter>,<parameter><type><name>s</name></type></parameter>,<parameter><type><name>t</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>a = (a + I(b,c,d) + M + t); a = ROLc(a, s) + b;</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_CLEAN_STACK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><specifier>static</specifier> <name>int</name></type> <name>_md5_compress</name><argument_list>(<argument><expr><name>hash_state</name> <operator>*</operator><name>md</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>unsigned</name> <name>char</name> <operator>*</operator><name>buf</name></expr></argument>)</argument_list>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

static <name>int</name> <name>md5_compress</name><argument_list>(<argument><expr><name>hash_state</name> <operator>*</operator><name>md</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>unsigned</name> <name>char</name> <operator>*</operator><name>buf</name></expr></argument>)</argument_list>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<block>{<block_content>

<decl_stmt><decl><type><name>ulong32</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name><name>W</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name>a</name></decl>, <decl><type ref="prev"/><name>b</name></decl>, <decl><type ref="prev"/><name>c</name></decl>, <decl><type ref="prev"/><name>d</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_SMALL_CODE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>ulong32</name></type> <name>t</name></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>LOAD32L</name><argument_list>(<argument><expr><name><name>W</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>buf</name> <operator>+</operator> <operator>(</operator><literal type="number">4</literal><operator>*</operator><name>i</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<expr_stmt><expr><name>a</name> <operator>=</operator> <name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>b</name> <operator>=</operator> <name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>c</name> <operator>=</operator> <name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>d</name> <operator>=</operator> <name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_SMALL_CODE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">16</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>FF</name><argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><name>b</name></expr></argument>,<argument><expr><name>c</name></expr></argument>,<argument><expr><name>d</name></expr></argument>,<argument><expr><name><name>W</name><index>[<expr><name><name>Worder</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr></argument>,<argument><expr><name><name>Rorder</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>Korder</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t</name> <operator>=</operator> <name>d</name></expr>;</expr_stmt> <expr_stmt><expr><name>d</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt> <expr_stmt><expr><name>c</name> <operator>=</operator> <name>b</name></expr>;</expr_stmt> <expr_stmt><expr><name>b</name> <operator>=</operator> <name>a</name></expr>;</expr_stmt> <expr_stmt><expr><name>a</name> <operator>=</operator> <name>t</name></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">32</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>GG</name><argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><name>b</name></expr></argument>,<argument><expr><name>c</name></expr></argument>,<argument><expr><name>d</name></expr></argument>,<argument><expr><name><name>W</name><index>[<expr><name><name>Worder</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr></argument>,<argument><expr><name><name>Rorder</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>Korder</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t</name> <operator>=</operator> <name>d</name></expr>;</expr_stmt> <expr_stmt><expr><name>d</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt> <expr_stmt><expr><name>c</name> <operator>=</operator> <name>b</name></expr>;</expr_stmt> <expr_stmt><expr><name>b</name> <operator>=</operator> <name>a</name></expr>;</expr_stmt> <expr_stmt><expr><name>a</name> <operator>=</operator> <name>t</name></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">48</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>HH</name><argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><name>b</name></expr></argument>,<argument><expr><name>c</name></expr></argument>,<argument><expr><name>d</name></expr></argument>,<argument><expr><name><name>W</name><index>[<expr><name><name>Worder</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr></argument>,<argument><expr><name><name>Rorder</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>Korder</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t</name> <operator>=</operator> <name>d</name></expr>;</expr_stmt> <expr_stmt><expr><name>d</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt> <expr_stmt><expr><name>c</name> <operator>=</operator> <name>b</name></expr>;</expr_stmt> <expr_stmt><expr><name>b</name> <operator>=</operator> <name>a</name></expr>;</expr_stmt> <expr_stmt><expr><name>a</name> <operator>=</operator> <name>t</name></expr>;</expr_stmt>

</block_content>}</block></for>

<for>for <control>(<init>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">64</literal></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>II</name><argument_list>(<argument><expr><name>a</name></expr></argument>,<argument><expr><name>b</name></expr></argument>,<argument><expr><name>c</name></expr></argument>,<argument><expr><name>d</name></expr></argument>,<argument><expr><name><name>W</name><index>[<expr><name><name>Worder</name><index>[<expr><name>i</name></expr>]</index></name></expr>]</index></name></expr></argument>,<argument><expr><name><name>Rorder</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>,<argument><expr><name><name>Korder</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t</name> <operator>=</operator> <name>d</name></expr>;</expr_stmt> <expr_stmt><expr><name>d</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt> <expr_stmt><expr><name>c</name> <operator>=</operator> <name>b</name></expr>;</expr_stmt> <expr_stmt><expr><name>b</name> <operator>=</operator> <name>a</name></expr>;</expr_stmt> <expr_stmt><expr><name>a</name> <operator>=</operator> <name>t</name></expr>;</expr_stmt>

</block_content>}</block></for>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<macro><name>FF</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">0</literal>]</argument>,<argument><literal type="number">7</literal></argument>,<argument><literal type="number">0xd76aa478UL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">1</literal>]</argument>,<argument><literal type="number">12</literal></argument>,<argument><literal type="number">0xe8c7b756UL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">2</literal>]</argument>,<argument><literal type="number">17</literal></argument>,<argument><literal type="number">0x242070dbUL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">3</literal>]</argument>,<argument><literal type="number">22</literal></argument>,<argument><literal type="number">0xc1bdceeeUL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">4</literal>]</argument>,<argument><literal type="number">7</literal></argument>,<argument><literal type="number">0xf57c0fafUL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">5</literal>]</argument>,<argument><literal type="number">12</literal></argument>,<argument><literal type="number">0x4787c62aUL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">6</literal>]</argument>,<argument><literal type="number">17</literal></argument>,<argument><literal type="number">0xa8304613UL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">7</literal>]</argument>,<argument><literal type="number">22</literal></argument>,<argument><literal type="number">0xfd469501UL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">8</literal>]</argument>,<argument><literal type="number">7</literal></argument>,<argument><literal type="number">0x698098d8UL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">9</literal>]</argument>,<argument><literal type="number">12</literal></argument>,<argument><literal type="number">0x8b44f7afUL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">10</literal>]</argument>,<argument><literal type="number">17</literal></argument>,<argument><literal type="number">0xffff5bb1UL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">11</literal>]</argument>,<argument><literal type="number">22</literal></argument>,<argument><literal type="number">0x895cd7beUL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">12</literal>]</argument>,<argument><literal type="number">7</literal></argument>,<argument><literal type="number">0x6b901122UL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">13</literal>]</argument>,<argument><literal type="number">12</literal></argument>,<argument><literal type="number">0xfd987193UL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">14</literal>]</argument>,<argument><literal type="number">17</literal></argument>,<argument><literal type="number">0xa679438eUL</literal></argument>)</argument_list></macro>

<macro><name>FF</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">15</literal>]</argument>,<argument><literal type="number">22</literal></argument>,<argument><literal type="number">0x49b40821UL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">1</literal>]</argument>,<argument><literal type="number">5</literal></argument>,<argument><literal type="number">0xf61e2562UL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">6</literal>]</argument>,<argument><literal type="number">9</literal></argument>,<argument><literal type="number">0xc040b340UL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">11</literal>]</argument>,<argument><literal type="number">14</literal></argument>,<argument><literal type="number">0x265e5a51UL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">0</literal>]</argument>,<argument><literal type="number">20</literal></argument>,<argument><literal type="number">0xe9b6c7aaUL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">5</literal>]</argument>,<argument><literal type="number">5</literal></argument>,<argument><literal type="number">0xd62f105dUL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">10</literal>]</argument>,<argument><literal type="number">9</literal></argument>,<argument><literal type="number">0x02441453UL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">15</literal>]</argument>,<argument><literal type="number">14</literal></argument>,<argument><literal type="number">0xd8a1e681UL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">4</literal>]</argument>,<argument><literal type="number">20</literal></argument>,<argument><literal type="number">0xe7d3fbc8UL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">9</literal>]</argument>,<argument><literal type="number">5</literal></argument>,<argument><literal type="number">0x21e1cde6UL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">14</literal>]</argument>,<argument><literal type="number">9</literal></argument>,<argument><literal type="number">0xc33707d6UL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">3</literal>]</argument>,<argument><literal type="number">14</literal></argument>,<argument><literal type="number">0xf4d50d87UL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">8</literal>]</argument>,<argument><literal type="number">20</literal></argument>,<argument><literal type="number">0x455a14edUL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">13</literal>]</argument>,<argument><literal type="number">5</literal></argument>,<argument><literal type="number">0xa9e3e905UL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">2</literal>]</argument>,<argument><literal type="number">9</literal></argument>,<argument><literal type="number">0xfcefa3f8UL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">7</literal>]</argument>,<argument><literal type="number">14</literal></argument>,<argument><literal type="number">0x676f02d9UL</literal></argument>)</argument_list></macro>

<macro><name>GG</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">12</literal>]</argument>,<argument><literal type="number">20</literal></argument>,<argument><literal type="number">0x8d2a4c8aUL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">5</literal>]</argument>,<argument><literal type="number">4</literal></argument>,<argument><literal type="number">0xfffa3942UL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">8</literal>]</argument>,<argument><literal type="number">11</literal></argument>,<argument><literal type="number">0x8771f681UL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">11</literal>]</argument>,<argument><literal type="number">16</literal></argument>,<argument><literal type="number">0x6d9d6122UL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">14</literal>]</argument>,<argument><literal type="number">23</literal></argument>,<argument><literal type="number">0xfde5380cUL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">1</literal>]</argument>,<argument><literal type="number">4</literal></argument>,<argument><literal type="number">0xa4beea44UL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">4</literal>]</argument>,<argument><literal type="number">11</literal></argument>,<argument><literal type="number">0x4bdecfa9UL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">7</literal>]</argument>,<argument><literal type="number">16</literal></argument>,<argument><literal type="number">0xf6bb4b60UL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">10</literal>]</argument>,<argument><literal type="number">23</literal></argument>,<argument><literal type="number">0xbebfbc70UL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">13</literal>]</argument>,<argument><literal type="number">4</literal></argument>,<argument><literal type="number">0x289b7ec6UL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">0</literal>]</argument>,<argument><literal type="number">11</literal></argument>,<argument><literal type="number">0xeaa127faUL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">3</literal>]</argument>,<argument><literal type="number">16</literal></argument>,<argument><literal type="number">0xd4ef3085UL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">6</literal>]</argument>,<argument><literal type="number">23</literal></argument>,<argument><literal type="number">0x04881d05UL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">9</literal>]</argument>,<argument><literal type="number">4</literal></argument>,<argument><literal type="number">0xd9d4d039UL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">12</literal>]</argument>,<argument><literal type="number">11</literal></argument>,<argument><literal type="number">0xe6db99e5UL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">15</literal>]</argument>,<argument><literal type="number">16</literal></argument>,<argument><literal type="number">0x1fa27cf8UL</literal></argument>)</argument_list></macro>

<macro><name>HH</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">2</literal>]</argument>,<argument><literal type="number">23</literal></argument>,<argument><literal type="number">0xc4ac5665UL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">0</literal>]</argument>,<argument><literal type="number">6</literal></argument>,<argument><literal type="number">0xf4292244UL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">7</literal>]</argument>,<argument><literal type="number">10</literal></argument>,<argument><literal type="number">0x432aff97UL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">14</literal>]</argument>,<argument><literal type="number">15</literal></argument>,<argument><literal type="number">0xab9423a7UL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">5</literal>]</argument>,<argument><literal type="number">21</literal></argument>,<argument><literal type="number">0xfc93a039UL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">12</literal>]</argument>,<argument><literal type="number">6</literal></argument>,<argument><literal type="number">0x655b59c3UL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">3</literal>]</argument>,<argument><literal type="number">10</literal></argument>,<argument><literal type="number">0x8f0ccc92UL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">10</literal>]</argument>,<argument><literal type="number">15</literal></argument>,<argument><literal type="number">0xffeff47dUL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">1</literal>]</argument>,<argument><literal type="number">21</literal></argument>,<argument><literal type="number">0x85845dd1UL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">8</literal>]</argument>,<argument><literal type="number">6</literal></argument>,<argument><literal type="number">0x6fa87e4fUL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">15</literal>]</argument>,<argument><literal type="number">10</literal></argument>,<argument><literal type="number">0xfe2ce6e0UL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">6</literal>]</argument>,<argument><literal type="number">15</literal></argument>,<argument><literal type="number">0xa3014314UL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">13</literal>]</argument>,<argument><literal type="number">21</literal></argument>,<argument><literal type="number">0x4e0811a1UL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>W[<literal type="number">4</literal>]</argument>,<argument><literal type="number">6</literal></argument>,<argument><literal type="number">0xf7537e82UL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>c</argument>,<argument>W[<literal type="number">11</literal>]</argument>,<argument><literal type="number">10</literal></argument>,<argument><literal type="number">0xbd3af235UL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>b</argument>,<argument>W[<literal type="number">2</literal>]</argument>,<argument><literal type="number">15</literal></argument>,<argument><literal type="number">0x2ad7d2bbUL</literal></argument>)</argument_list></macro>

<macro><name>II</name><argument_list>(<argument>b</argument>,<argument>c</argument>,<argument>d</argument>,<argument>a</argument>,<argument>W[<literal type="number">9</literal>]</argument>,<argument><literal type="number">21</literal></argument>,<argument><literal type="number">0xeb86d391UL</literal></argument>)</argument_list></macro>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+</operator> <name>a</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <name>b</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>+</operator> <name>c</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>+</operator> <name>d</name></expr>;</expr_stmt>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>

</block_content>}</block></decl></decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_CLEAN_STACK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><specifier>static</specifier> <name>int</name></type> <name>md5_compress</name><parameter_list>(<parameter><decl><type><name>hash_state</name> <modifier>*</modifier></type><name>md</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>err</name></decl>;</decl_stmt>

<expr_stmt><expr><name>err</name> <operator>=</operator> <call><name>_md5_compress</name><argument_list>(<argument><expr><name>md</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>burn_stack</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ulong32</name></expr></argument>)</argument_list></sizeof> <operator>*</operator> <literal type="number">21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>err</name></expr>;</return>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><name>int</name></type> <name>md5_init</name><parameter_list>(<parameter><decl><type><name>hash_state</name> <modifier>*</modifier></type> <name>md</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>md</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x67452301UL</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0xefcdab89UL</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x98badcfeUL</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0x10325476UL</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>curlen</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>length</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>

</block_content>}</block></function>

<macro><name>HASH_PROCESS</name><argument_list>(<argument>md5_process</argument>, <argument>md5_compress</argument>, <argument>md5</argument>, <argument><literal type="number">64</literal></argument>)</argument_list></macro>

<function><type><name>int</name></type> <name>md5_done</name><parameter_list>(<parameter><decl><type><name>hash_state</name> <modifier>*</modifier></type> <name>md</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>

<block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>md</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>LTC_ARGCHK</name><argument_list>(<argument><expr><name>out</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>curlen</name></name> <operator>&gt;=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>buf</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block>{<block_content>

<return>return <expr><name>CRYPT_INVALID_ARG</name></expr>;</return>

</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>length</name></name> <operator>+=</operator> <name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>curlen</name></name> <operator>*</operator> <literal type="number">8</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>buf</name><index>[<expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>curlen</name></name><operator>++</operator></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><literal type="number">0x80</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>curlen</name></name> <operator>&gt;</operator> <literal type="number">56</literal></expr>)</condition> <block>{<block_content>

<while>while <condition>(<expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>curlen</name></name> <operator>&lt;</operator> <literal type="number">64</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>buf</name><index>[<expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>curlen</name></name><operator>++</operator></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>md5_compress</name><argument_list>(<argument><expr><name>md</name></expr></argument>, <argument><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>curlen</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>

<while>while <condition>(<expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>curlen</name></name> <operator>&lt;</operator> <literal type="number">56</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>buf</name><index>[<expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>curlen</name></name><operator>++</operator></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><literal type="number">0</literal></expr>;</expr_stmt>

</block_content>}</block></while>

<expr_stmt><expr><call><name>STORE64L</name><argument_list>(<argument><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>length</name></name></expr></argument>, <argument><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>buf</name></name><operator>+</operator><literal type="number">56</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>md5_compress</name><argument_list>(<argument><expr><name>md</name></expr></argument>, <argument><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>STORE32L</name><argument_list>(<argument><expr><name><name>md</name><operator>-&gt;</operator><name>md5</name><operator>.</operator><name>state</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>out</name><operator>+</operator><operator>(</operator><literal type="number">4</literal><operator>*</operator><name>i</name><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></for>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LTC_CLEAN_STACK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>zeromem</name><argument_list>(<argument><expr><name>md</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>hash_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type> <name>md5_test</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>

<block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LTC_TEST</name></expr></argument>)</argument_list></call></expr></cpp:if>
<return>return <expr><name>CRYPT_NOP</name></expr>;</return>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<struct><specifier>static</specifier> <specifier>const</specifier> struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>msg</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>hash</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

}</block> <decl><name><name>tests</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="string">""</literal></expr>,

<expr><block>{ <expr><literal type="number">0xd4</literal></expr>, <expr><literal type="number">0x1d</literal></expr>, <expr><literal type="number">0x8c</literal></expr>, <expr><literal type="number">0xd9</literal></expr>, <expr><literal type="number">0x8f</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xb2</literal></expr>, <expr><literal type="number">0x04</literal></expr>,

<expr><literal type="number">0xe9</literal></expr>, <expr><literal type="number">0x80</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0xec</literal></expr>, <expr><literal type="number">0xf8</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x7e</literal></expr> }</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"a"</literal></expr>,

<expr><block>{<expr><literal type="number">0x0c</literal></expr>, <expr><literal type="number">0xc1</literal></expr>, <expr><literal type="number">0x75</literal></expr>, <expr><literal type="number">0xb9</literal></expr>, <expr><literal type="number">0xc0</literal></expr>, <expr><literal type="number">0xf1</literal></expr>, <expr><literal type="number">0xb6</literal></expr>, <expr><literal type="number">0xa8</literal></expr>,

<expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0xc3</literal></expr>, <expr><literal type="number">0x99</literal></expr>, <expr><literal type="number">0xe2</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x77</literal></expr>, <expr><literal type="number">0x26</literal></expr>, <expr><literal type="number">0x61</literal></expr> }</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"abc"</literal></expr>,

<expr><block>{ <expr><literal type="number">0x90</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x50</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0x3c</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0xb0</literal></expr>,

<expr><literal type="number">0xd6</literal></expr>, <expr><literal type="number">0x96</literal></expr>, <expr><literal type="number">0x3f</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0x28</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0x7f</literal></expr>, <expr><literal type="number">0x72</literal></expr> }</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"message digest"</literal></expr>,

<expr><block>{ <expr><literal type="number">0xf9</literal></expr>, <expr><literal type="number">0x6b</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0x7c</literal></expr>, <expr><literal type="number">0xb7</literal></expr>, <expr><literal type="number">0x93</literal></expr>, <expr><literal type="number">0x8d</literal></expr>,

<expr><literal type="number">0x52</literal></expr>, <expr><literal type="number">0x5a</literal></expr>, <expr><literal type="number">0x2f</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0xaa</literal></expr>, <expr><literal type="number">0xf1</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0xd0</literal></expr> }</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"abcdefghijklmnopqrstuvwxyz"</literal></expr>,

<expr><block>{ <expr><literal type="number">0xc3</literal></expr>, <expr><literal type="number">0xfc</literal></expr>, <expr><literal type="number">0xd3</literal></expr>, <expr><literal type="number">0xd7</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x92</literal></expr>, <expr><literal type="number">0xe4</literal></expr>, <expr><literal type="number">0x00</literal></expr>,

<expr><literal type="number">0x7d</literal></expr>, <expr><literal type="number">0xfb</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0xca</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0xe1</literal></expr>, <expr><literal type="number">0x3b</literal></expr> }</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"</literal></expr>,

<expr><block>{ <expr><literal type="number">0xd1</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0xab</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0xd2</literal></expr>, <expr><literal type="number">0x77</literal></expr>, <expr><literal type="number">0xd9</literal></expr>, <expr><literal type="number">0xf5</literal></expr>,

<expr><literal type="number">0xa5</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x1c</literal></expr>, <expr><literal type="number">0x2c</literal></expr>, <expr><literal type="number">0x9f</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x9d</literal></expr>, <expr><literal type="number">0x9f</literal></expr> }</block></expr> }</block></expr>,

<expr><block>{ <expr><literal type="string">"12345678901234567890123456789012345678901234567890123456789012345678901234567890"</literal></expr>,

<expr><block>{ <expr><literal type="number">0x57</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0xf4</literal></expr>, <expr><literal type="number">0xa2</literal></expr>, <expr><literal type="number">0x2b</literal></expr>, <expr><literal type="number">0xe3</literal></expr>, <expr><literal type="number">0xc9</literal></expr>, <expr><literal type="number">0x55</literal></expr>,

<expr><literal type="number">0xac</literal></expr>, <expr><literal type="number">0x49</literal></expr>, <expr><literal type="number">0xda</literal></expr>, <expr><literal type="number">0x2e</literal></expr>, <expr><literal type="number">0x21</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0xb6</literal></expr>, <expr><literal type="number">0x7a</literal></expr> }</block></expr> }</block></expr>,

<expr><block>{ <expr><name>NULL</name></expr>, <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr> }</block></expr>

}</block></expr></init></decl>;</struct>

<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>tmp</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>hash_state</name></type> <name>md</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>msg</name> <operator>!=</operator> <name>NULL</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><call><name>md5_init</name><argument_list>(<argument><expr><operator>&amp;</operator><name>md</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>md5_process</name><argument_list>(<argument><expr><operator>&amp;</operator><name>md</name></expr></argument>, <argument><expr><operator>(</operator><name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>msg</name></expr></argument>, <argument><expr><operator>(</operator><name>unsigned</name> <name>long</name><operator>)</operator><call><name>XSTRLEN</name><argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>msg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>md5_done</name><argument_list>(<argument><expr><operator>&amp;</operator><name>md</name></expr></argument>, <argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>compare_testvector</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>hash</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name><name>tests</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>hash</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><literal type="string">"MD5"</literal></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<return>return <expr><name>CRYPT_FAIL_TESTVECTOR</name></expr>;</return>

</block_content>}</block></if></if_stmt>

</block_content>}</block></for>

<return>return <expr><name>CRYPT_OK</name></expr>;</return>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
